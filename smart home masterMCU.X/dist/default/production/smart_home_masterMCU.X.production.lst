

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Mar 06 04:22:52 2024

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1,inline
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1,inline
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1,inline
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1,inline
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1,inline
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1,inline
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1,inline
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1,inline
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1,inline
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1,inline
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	text93,global,reloc=2,class=CODE,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,delta=1
   114                           	psect	text95,global,reloc=2,class=CODE,delta=1
   115                           	psect	text96,global,reloc=2,class=CODE,delta=1
   116                           	psect	text97,global,reloc=2,class=CODE,delta=1
   117                           	psect	text98,global,reloc=2,class=CODE,delta=1
   118                           	psect	text99,global,reloc=2,class=CODE,delta=1
   119                           	psect	text100,global,reloc=2,class=CODE,delta=1,inline
   120                           	psect	text101,global,reloc=2,class=CODE,delta=1,inline
   121                           	psect	text102,global,reloc=2,class=CODE,delta=1,inline
   122                           	psect	text103,global,reloc=2,class=CODE,delta=1
   123                           	psect	text104,global,reloc=2,class=CODE,delta=1,inline
   124                           	psect	text105,global,reloc=2,class=CODE,delta=1,inline
   125                           	psect	text106,global,reloc=2,class=CODE,delta=1,inline
   126                           	psect	text107,global,reloc=2,class=CODE,delta=1
   127                           	psect	text108,global,reloc=2,class=CODE,delta=1
   128                           	psect	text109,global,reloc=2,class=CODE,delta=1
   129                           	psect	text110,global,reloc=2,class=CODE,delta=1
   130                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   131                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   132                           	psect	text112,global,reloc=2,class=CODE,delta=1
   133                           	psect	text113,global,reloc=2,class=CODE,delta=1
   134                           	psect	text114,global,reloc=2,class=CODE,delta=1
   135                           	psect	text115,global,reloc=2,class=CODE,delta=1
   136                           	psect	text116,global,reloc=2,class=CODE,delta=1
   137                           	psect	text117,global,reloc=2,class=CODE,delta=1
   138                           	psect	text118,global,reloc=2,class=CODE,delta=1
   139                           	psect	text119,global,reloc=2,class=CODE,delta=1
   140                           	psect	text120,global,reloc=2,class=CODE,delta=1
   141                           	psect	text121,global,reloc=2,class=CODE,delta=1
   142                           	psect	text122,global,reloc=2,class=CODE,delta=1
   143                           	psect	text123,global,reloc=2,class=CODE,delta=1
   144                           	psect	text124,global,reloc=2,class=CODE,delta=1
   145                           	psect	text125,global,reloc=2,class=CODE,delta=1
   146                           	psect	text126,global,reloc=2,class=CODE,delta=1
   147                           	psect	text127,global,reloc=2,class=CODE,delta=1,inline
   148                           	psect	text128,global,reloc=2,class=CODE,delta=1
   149                           	psect	text129,global,reloc=2,class=CODE,delta=1
   150                           	psect	text130,global,reloc=2,class=CODE,delta=1
   151                           	psect	text131,global,reloc=2,class=CODE,delta=1,inline
   152                           	psect	text132,global,reloc=2,class=CODE,delta=1,inline
   153                           	psect	text133,global,reloc=2,class=CODE,delta=1
   154                           	psect	text134,global,reloc=2,class=CODE,delta=1
   155                           	psect	text135,global,reloc=2,class=CODE,delta=1
   156                           	psect	text136,global,reloc=2,class=CODE,delta=1
   157                           	psect	text137,global,reloc=2,class=CODE,delta=1
   158                           	psect	text138,global,reloc=2,class=CODE,delta=1
   159                           	psect	text139,global,reloc=2,class=CODE,delta=1
   160                           	psect	text140,global,reloc=2,class=CODE,delta=1
   161                           	psect	text141,global,reloc=2,class=CODE,delta=1
   162                           	psect	text142,global,reloc=2,class=CODE,delta=1
   163                           	psect	text143,global,reloc=2,class=CODE,delta=1
   164                           	psect	text144,global,reloc=2,class=CODE,delta=1
   165                           	psect	text145,global,reloc=2,class=CODE,delta=1
   166                           	psect	text146,global,reloc=2,class=CODE,delta=1
   167                           	psect	text147,global,reloc=2,class=CODE,delta=1
   168                           	psect	text148,global,reloc=2,class=CODE,delta=1
   169                           	psect	text149,global,reloc=2,class=CODE,delta=1,inline
   170                           	psect	text150,global,reloc=2,class=CODE,delta=1,inline
   171                           	psect	text151,global,reloc=2,class=CODE,delta=1,inline
   172                           	psect	text152,global,reloc=2,class=CODE,delta=1,inline
   173                           	psect	text153,global,reloc=2,class=CODE,delta=1,inline
   174                           	psect	text154,global,reloc=2,class=CODE,delta=1,inline
   175                           	psect	text155,global,reloc=2,class=CODE,delta=1,inline
   176                           	psect	text156,global,reloc=2,class=CODE,delta=1
   177                           	psect	text157,global,reloc=2,class=CODE,delta=1
   178                           	psect	text158,global,reloc=2,class=CODE,delta=1
   179                           	psect	text159,global,reloc=2,class=CODE,delta=1
   180                           	psect	text160,global,reloc=2,class=CODE,delta=1
   181                           	psect	text161,global,reloc=2,class=CODE,delta=1
   182                           	psect	text162,global,reloc=2,class=CODE,delta=1
   183                           	psect	text163,global,reloc=2,class=CODE,delta=1
   184                           	psect	text164,global,reloc=2,class=CODE,delta=1
   185                           	psect	text165,global,reloc=2,class=CODE,delta=1
   186                           	psect	text166,global,reloc=2,class=CODE,delta=1,inline
   187                           	psect	text167,global,reloc=2,class=CODE,delta=1,inline
   188                           	psect	text168,global,reloc=2,class=CODE,delta=1,inline
   189                           	psect	text169,global,reloc=2,class=CODE,delta=1
   190                           	psect	text170,global,reloc=2,class=CODE,delta=1,inline
   191                           	psect	text171,global,reloc=2,class=CODE,delta=1,inline
   192                           	psect	text172,global,reloc=2,class=CODE,delta=1,inline
   193                           	psect	text173,global,reloc=2,class=CODE,delta=1
   194                           	psect	text174,global,reloc=2,class=CODE,delta=1,group=2
   195                           	psect	text175,global,reloc=2,class=CODE,delta=1,group=2
   196                           	psect	text176,global,reloc=2,class=CODE,delta=1
   197                           	psect	text177,global,reloc=2,class=CODE,delta=1
   198                           	psect	text178,global,reloc=2,class=CODE,delta=1
   199                           	psect	text179,global,reloc=2,class=CODE,delta=1
   200                           	psect	text180,global,reloc=2,class=CODE,delta=1
   201                           	psect	text181,global,reloc=2,class=CODE,delta=1
   202                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   203                           	psect	text182,global,reloc=2,class=CODE,delta=1
   204                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   205                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   206                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   207  0000                     
   208                           ; Generated 23/03/2023 GMT
   209                           ; 
   210                           ; Copyright © 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   211                           ; All rights reserved.
   212                           ; 
   213                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   214                           ; 
   215                           ; Redistribution and use in source and binary forms, with or without modification, are
   216                           ; permitted provided that the following conditions are met:
   217                           ; 
   218                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   219                           ;        conditions and the following disclaimer.
   220                           ; 
   221                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   222                           ;        of conditions and the following disclaimer in the documentation and/or other
   223                           ;        materials provided with the distribution. Publication is not required when
   224                           ;        this file is used in an embedded application.
   225                           ; 
   226                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   227                           ;        software without specific prior written permission.
   228                           ; 
   229                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   230                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   231                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   232                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   233                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   234                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   235                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   236                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   237                           ; 
   238                           ; 
   239                           ; Code-generator required, PIC18F4620 Definitions
   240                           ; 
   241                           ; SFR Addresses
   242  0000                     
   243                           	psect	idataCOMRAM
   244  0062CE                     __pidataCOMRAM:
   245                           	callstack 0
   246                           
   247                           ;initializer for _RB7_Flag
   248  0062CE  01                 	db	1
   249                           
   250                           ;initializer for _RB6_Flag
   251  0062CF  01                 	db	1
   252                           
   253                           ;initializer for _RB5_Flag
   254  0062D0  01                 	db	1
   255                           
   256                           ;initializer for _RB4_Flag
   257  0062D1  01                 	db	1
   258                           
   259                           ;initializer for _n
   260  0062D2  04                 	db	4
   261                           
   262                           ;initializer for _lcd
   263  0062D3  23                 	db	35
   264  0062D4  2B                 	db	43
   265  0062D5  03                 	db	3
   266  0062D6  0B                 	db	11
   267  0062D7  13                 	db	19
   268  0062D8  1B                 	db	27
   269                           
   270                           ;initializer for _year_counter
   271  0062D9  01                 	db	1
   272                           
   273                           ;initializer for _month_counter
   274  0062DA  01                 	db	1
   275                           
   276                           ;initializer for _day_counter
   277  0062DB  01                 	db	1
   278                           
   279                           	psect	idataBANK0
   280  0063EE                     __pidataBANK0:
   281                           	callstack 0
   282                           
   283                           ;initializer for _buzzer
   284  0063EE  33                 	db	51
   285  0063EF  00                 	db	0
   286                           
   287                           	psect	idataBANK1
   288  005974                     __pidataBANK1:
   289                           	callstack 0
   290                           
   291                           ;initializer for _portx
   292  005974  80                 	db	128
   293  005975  0F                 	db	15
   294  005976  81                 	db	129
   295  005977  0F                 	db	15
   296  005978  82                 	db	130
   297  005979  0F                 	db	15
   298  00597A  83                 	db	131
   299  00597B  0F                 	db	15
   300  00597C  84                 	db	132
   301  00597D  0F                 	db	15
   302                           
   303                           ;initializer for _latx
   304  00597E  89                 	db	137
   305  00597F  0F                 	db	15
   306  005980  8A                 	db	138
   307  005981  0F                 	db	15
   308  005982  8B                 	db	139
   309  005983  0F                 	db	15
   310  005984  8C                 	db	140
   311  005985  0F                 	db	15
   312  005986  8D                 	db	141
   313  005987  0F                 	db	15
   314                           
   315                           ;initializer for _trisx
   316  005988  92                 	db	146
   317  005989  0F                 	db	15
   318  00598A  93                 	db	147
   319  00598B  0F                 	db	15
   320  00598C  94                 	db	148
   321  00598D  0F                 	db	15
   322  00598E  95                 	db	149
   323  00598F  0F                 	db	15
   324  005990  96                 	db	150
   325  005991  0F                 	db	15
   326                           
   327                           ;initializer for _uart
   328  005992  2580               	dw	9600
   329  005994  00                 	db	0
   330  005995  00                 	db	0
   331  005996  03                 	db	3
   332  005997  00                 	db	0
   333  005998  00                 	db	0
   334  005999  00                 	db	0
   335  00599A  00                 	db	0
   336  00599B  00                 	db	0
   337  00599C  00                 	db	0
   338  00599D  00                 	db	0
   339  00599E  00                 	db	0
   340  00599F  00                 	db	0
   341  0059A0  00                 	db	0
   342  0059A1  00                 	db	0
   343                           
   344                           ;initializer for _adc
   345  0059A2  70                 	db	low _MY_ADC_ISR
   346  0059A3  60                 	db	high _MY_ADC_ISR
   347  0059A4  00                 	db	0
   348  0059A5  05                 	db	5
   349  0059A6  05                 	db	5
   350  0059A7  00                 	db	0
   351  0059A8  02                 	db	2
   352                           
   353                           ;initializer for _MY_INT2
   354  0059A9  18                 	db	low _APP_INT2_ISR
   355  0059AA  5D                 	db	high _APP_INT2_ISR
   356  0059AB  11                 	db	17
   357  0059AC  01                 	db	1
   358  0059AD  02                 	db	2
   359  0059AE  00                 	db	0
   360                           
   361                           ;initializer for _MY_INT1
   362  0059AF  72                 	db	low _APP_INT1_ISR
   363  0059B0  3D                 	db	high _APP_INT1_ISR
   364  0059B1  09                 	db	9
   365  0059B2  01                 	db	1
   366  0059B3  01                 	db	1
   367  0059B4  00                 	db	0
   368                           
   369                           ;initializer for _MY_INT0
   370  0059B5  4A                 	db	low _APP_INT0_ISR
   371  0059B6  3E                 	db	high _APP_INT0_ISR
   372  0059B7  01                 	db	1
   373  0059B8  01                 	db	1
   374  0059B9  00                 	db	0
   375  0059BA  00                 	db	0
   376                           
   377                           	psect	smallconst
   378  001000                     __psmallconst:
   379                           	callstack 0
   380  001000  00                 	db	0
   381  001001                     _i2c_fsmStateTable:
   382                           	callstack 0
   383  001001  CE                 	db	low _I2C_DO_IDLE
   384  001002  61                 	db	high _I2C_DO_IDLE
   385  001003  A8                 	db	low _I2C_DO_SEND_ADR_READ
   386  001004  60                 	db	high _I2C_DO_SEND_ADR_READ
   387  001005  42                 	db	low _I2C_DO_SEND_ADR_WRITE
   388  001006  61                 	db	high _I2C_DO_SEND_ADR_WRITE
   389  001007  20                 	db	low _I2C_DO_TX
   390  001008  3F                 	db	high _I2C_DO_TX
   391  001009  C4                 	db	low _I2C_DO_RX
   392  00100A  43                 	db	high _I2C_DO_RX
   393  00100B  B8                 	db	low _I2C_DO_RCEN
   394  00100C  61                 	db	high _I2C_DO_RCEN
   395  00100D  90                 	db	low _I2C_DO_TX_EMPTY
   396  00100E  4A                 	db	high _I2C_DO_TX_EMPTY
   397  00100F  8C                 	db	low _I2C_DO_SEND_RESTART_READ
   398  001010  62                 	db	high _I2C_DO_SEND_RESTART_READ
   399  001011  7A                 	db	low _I2C_DO_SEND_RESTART_WRITE
   400  001012  62                 	db	high _I2C_DO_SEND_RESTART_WRITE
   401  001013  68                 	db	low _I2C_DO_SEND_RESTART
   402  001014  62                 	db	high _I2C_DO_SEND_RESTART
   403  001015  56                 	db	low _I2C_DO_SEND_STOP
   404  001016  62                 	db	high _I2C_DO_SEND_STOP
   405  001017  44                 	db	low _I2C_DO_RX_ACK
   406  001018  62                 	db	high _I2C_DO_RX_ACK
   407  001019  32                 	db	low _I2C_DO_RX_NACK_STOP
   408  00101A  62                 	db	high _I2C_DO_RX_NACK_STOP
   409  00101B  20                 	db	low _I2C_DO_RX_NACK_RESTART
   410  00101C  62                 	db	high _I2C_DO_RX_NACK_RESTART
   411  00101D  A2                 	db	low _I2C_DO_RESET
   412  00101E  61                 	db	high _I2C_DO_RESET
   413  00101F  40                 	db	low _I2C_DO_ADDRESS_NACK
   414  001020  51                 	db	high _I2C_DO_ADDRESS_NACK
   415  001021                     __end_of_i2c_fsmStateTable:
   416                           	callstack 0
   417  0000                     _SSPCON2	set	4037
   418  0000                     _SSPCON1	set	4038
   419  0000                     _SSPSTAT	set	4039
   420  0000                     _INTCON2bits	set	4081
   421  0000                     _INTCON3bits	set	4080
   422  0000                     _ADCON1bits	set	4033
   423  0000                     _ADRESH	set	4036
   424  0000                     _ADRESL	set	4035
   425  0000                     _INTCONbits	set	4082
   426  0000                     _TRISD	set	3989
   427  0000                     _TRISC	set	3988
   428  0000                     _TRISB	set	3987
   429  0000                     _TRISE	set	3990
   430  0000                     _SSPSTATbits	set	4039
   431  0000                     _SSPCON2bits	set	4037
   432  0000                     _SSPCON1bits	set	4038
   433  0000                     _TRISCbits	set	3988
   434  0000                     _PORTBbits	set	3969
   435  0000                     _PIE1bits	set	3997
   436  0000                     _PIR1bits	set	3998
   437  0000                     _ADCON2bits	set	4032
   438  0000                     _ADCON0bits	set	4034
   439  0000                     _PORTE	set	3972
   440  0000                     _PORTD	set	3971
   441  0000                     _PORTC	set	3970
   442  0000                     _PORTB	set	3969
   443  0000                     _PORTA	set	3968
   444  0000                     _LATA	set	3977
   445  0000                     _TRISA	set	3986
   446  0000                     _PIR2bits	set	4001
   447  0000                     _RCSTAbits	set	4011
   448  0000                     _LATE	set	3981
   449  0000                     _LATD	set	3980
   450  0000                     _LATC	set	3979
   451  0000                     _LATB	set	3978
   452  0000                     _SPBRGH	set	4016
   453  0000                     _SPBRG	set	4015
   454  0000                     _BAUDCONbits	set	4024
   455  0000                     _RCREG	set	4014
   456  0000                     _TXREG	set	4013
   457  0000                     _TXSTAbits	set	4012
   458  0000                     _SSPBUF	set	4041
   459  0000                     _SSPADD	set	4040
   460  001021                     STR_16:
   461  001021  41                 	db	65	;'A'
   462  001022  4C                 	db	76	;'L'
   463  001023  4C                 	db	76	;'L'
   464  001024  41                 	db	65	;'A'
   465  001025  52                 	db	82	;'R'
   466  001026  4D                 	db	77	;'M'
   467  001027  20                 	db	32
   468  001028  4D                 	db	77	;'M'
   469  001029  4F                 	db	79	;'O'
   470  00102A  44                 	db	68	;'D'
   471  00102B  45                 	db	69	;'E'
   472  00102C  00                 	db	0
   473  00102D                     STR_6:
   474  00102D  43                 	db	67	;'C'
   475  00102E  4C                 	db	76	;'L'
   476  00102F  4F                 	db	79	;'O'
   477  001030  43                 	db	67	;'C'
   478  001031  4B                 	db	75	;'K'
   479  001032  20                 	db	32
   480  001033  4D                 	db	77	;'M'
   481  001034  4F                 	db	79	;'O'
   482  001035  44                 	db	68	;'D'
   483  001036  45                 	db	69	;'E'
   484  001037  00                 	db	0
   485  001038                     STR_7:
   486  001038  6D                 	db	109	;'m'
   487  001039  69                 	db	105	;'i'
   488  00103A  6E                 	db	110	;'n'
   489  00103B  75                 	db	117	;'u'
   490  00103C  74                 	db	116	;'t'
   491  00103D  65                 	db	101	;'e'
   492  00103E  73                 	db	115	;'s'
   493  00103F  3A                 	db	58	;':'
   494  001040  00                 	db	0
   495  001041                     STR_13:
   496  001041  6D                 	db	109	;'m'
   497  001042  6F                 	db	111	;'o'
   498  001043  6E                 	db	110	;'n'
   499  001044  74                 	db	116	;'t'
   500  001045  68                 	db	104	;'h'
   501  001046  3A                 	db	58	;':'
   502  001047  00                 	db	0
   503  001048                     STR_9:
   504  001048  68                 	db	104	;'h'
   505  001049  6F                 	db	111	;'o'
   506  00104A  75                 	db	117	;'u'
   507  00104B  72                 	db	114	;'r'
   508  00104C  73                 	db	115	;'s'
   509  00104D  3A                 	db	58	;':'
   510  00104E  00                 	db	0
   511  00104F                     STR_4:
   512  00104F  54                 	db	84	;'T'
   513  001050  49                 	db	73	;'I'
   514  001051  4D                 	db	77	;'M'
   515  001052  45                 	db	69	;'E'
   516  001053  3A                 	db	58	;':'
   517  001054  00                 	db	0
   518  001055                     STR_5:
   519  001055  44                 	db	68	;'D'
   520  001056  41                 	db	65	;'A'
   521  001057  54                 	db	84	;'T'
   522  001058  45                 	db	69	;'E'
   523  001059  3A                 	db	58	;':'
   524  00105A  00                 	db	0
   525  00105B                     STR_15:
   526  00105B  79                 	db	121	;'y'
   527  00105C  65                 	db	101	;'e'
   528  00105D  61                 	db	97	;'a'
   529  00105E  72                 	db	114	;'r'
   530  00105F  3A                 	db	58	;':'
   531  001060  00                 	db	0
   532  001061                     STR_11:
   533  001061  64                 	db	100	;'d'
   534  001062  61                 	db	97	;'a'
   535  001063  79                 	db	121	;'y'
   536  001064  3A                 	db	58	;':'
   537  001065  00                 	db	0
   538  001066                     STR_1:
   539  001066  25                 	db	37
   540  001067  69                 	db	105	;'i'
   541  001068  00                 	db	0
   542  001069  00                 	db	0	; dummy byte at the end
   543  0000                     
   544                           ; #config settings
   545                           
   546                           	psect	cinit
   547  004B18                     __pcinit:
   548                           	callstack 0
   549  004B18                     start_initialization:
   550                           	callstack 0
   551  004B18                     __initialization:
   552                           	callstack 0
   553                           
   554                           ; Initialize objects allocated to BANK1 (71 bytes)
   555                           ; load TBLPTR registers with __pidataBANK1
   556  004B18  0E74               	movlw	low __pidataBANK1
   557  004B1A  6EF6               	movwf	tblptrl,c
   558  004B1C  0E59               	movlw	high __pidataBANK1
   559  004B1E  6EF7               	movwf	tblptrh,c
   560  004B20  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   561  004B22  6EF8               	movwf	tblptru,c
   562  004B24  EE01  F04E         	lfsr	0,__pdataBANK1
   563  004B28  EE10 F047          	lfsr	1,71
   564  004B2C                     copy_data0:
   565  004B2C  0009               	tblrd		*+
   566  004B2E  CFF5 FFEE          	movff	tablat,postinc0
   567  004B32  50E5               	movf	postdec1,w,c
   568  004B34  50E1               	movf	fsr1l,w,c
   569  004B36  E1FA               	bnz	copy_data0
   570                           
   571                           ; Initialize objects allocated to BANK0 (2 bytes)
   572                           ; load TBLPTR registers with __pidataBANK0
   573  004B38  0EEE               	movlw	low __pidataBANK0
   574  004B3A  6EF6               	movwf	tblptrl,c
   575  004B3C  0E63               	movlw	high __pidataBANK0
   576  004B3E  6EF7               	movwf	tblptrh,c
   577  004B40  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   578  004B42  6EF8               	movwf	tblptru,c
   579  004B44  0009               	tblrd		*+	;fetch initializer
   580  004B46  CFF5 F0FE          	movff	tablat,__pdataBANK0
   581  004B4A  0009               	tblrd		*+	;fetch initializer
   582  004B4C  CFF5 F0FF          	movff	tablat,__pdataBANK0+1
   583                           
   584                           ; Initialize objects allocated to COMRAM (14 bytes)
   585                           ; load TBLPTR registers with __pidataCOMRAM
   586  004B50  0ECE               	movlw	low __pidataCOMRAM
   587  004B52  6EF6               	movwf	tblptrl,c
   588  004B54  0E62               	movlw	high __pidataCOMRAM
   589  004B56  6EF7               	movwf	tblptrh,c
   590  004B58  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   591  004B5A  6EF8               	movwf	tblptru,c
   592  004B5C  EE00  F04B         	lfsr	0,__pdataCOMRAM
   593  004B60  EE10 F00E          	lfsr	1,14
   594  004B64                     copy_data1:
   595  004B64  0009               	tblrd		*+
   596  004B66  CFF5 FFEE          	movff	tablat,postinc0
   597  004B6A  50E5               	movf	postdec1,w,c
   598  004B6C  50E1               	movf	fsr1l,w,c
   599  004B6E  E1FA               	bnz	copy_data1
   600                           
   601                           ; Clear objects allocated to BANK1 (78 bytes)
   602  004B70  EE01  F000         	lfsr	0,__pbssBANK1
   603  004B74  0E4E               	movlw	78
   604  004B76                     clear_0:
   605  004B76  6AEE               	clrf	postinc0,c
   606  004B78  06E8               	decf	wreg,f,c
   607  004B7A  E1FD               	bnz	clear_0
   608                           
   609                           ; Clear objects allocated to BANK0 (54 bytes)
   610  004B7C  EE00  F0C8         	lfsr	0,__pbssBANK0
   611  004B80  0E36               	movlw	54
   612  004B82                     clear_1:
   613  004B82  6AEE               	clrf	postinc0,c
   614  004B84  06E8               	decf	wreg,f,c
   615  004B86  E1FD               	bnz	clear_1
   616                           
   617                           ; Clear objects allocated to COMRAM (26 bytes)
   618  004B88  EE00  F031         	lfsr	0,__pbssCOMRAM
   619  004B8C  0E1A               	movlw	26
   620  004B8E                     clear_2:
   621  004B8E  6AEE               	clrf	postinc0,c
   622  004B90  06E8               	decf	wreg,f,c
   623  004B92  E1FD               	bnz	clear_2
   624  004B94                     end_of_initialization:
   625                           	callstack 0
   626  004B94                     __end_of__initialization:
   627                           	callstack 0
   628  004B94  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   629  004B96  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   630  004B98  0100               	movlb	0
   631  004B9A  EF35  F008         	goto	_main	;jump to C main() function
   632                           
   633                           	psect	bssCOMRAM
   634  000031                     __pbssCOMRAM:
   635                           	callstack 0
   636  000031                     _prec:
   637                           	callstack 0
   638  000031                     	ds	2
   639  000033                     _flags:
   640                           	callstack 0
   641  000033                     	ds	2
   642  000035                     _INT1_InterruptHandler:
   643                           	callstack 0
   644  000035                     	ds	2
   645  000037                     _INT0_InterruptHandler:
   646                           	callstack 0
   647  000037                     	ds	2
   648  000039                     _ADC_InterruptHandler:
   649                           	callstack 0
   650  000039                     	ds	2
   651  00003B                     _option_counter:
   652                           	callstack 0
   653  00003B                     	ds	1
   654  00003C                     	ds	1
   655  00003D                     	ds	1
   656  00003E                     	ds	1
   657  00003F                     	ds	1
   658  000040                     lcd_send_custom_char@counter:
   659                           	callstack 0
   660  000040                     	ds	1
   661  000041                     _RTC1307:
   662                           	callstack 0
   663  000041                     	ds	6
   664  000047                     _adc_value:
   665                           	callstack 0
   666  000047                     	ds	1
   667  000048                     _hours_counter:
   668                           	callstack 0
   669  000048                     	ds	1
   670  000049                     _minutes_counter:
   671                           	callstack 0
   672  000049                     	ds	1
   673  00004A                     lcd_send_number@number:
   674                           	callstack 0
   675  00004A                     	ds	1
   676                           
   677                           	psect	dataCOMRAM
   678  00004B                     __pdataCOMRAM:
   679                           	callstack 0
   680  00004B                     _RB7_Flag:
   681                           	callstack 0
   682  00004B                     	ds	1
   683  00004C                     _RB6_Flag:
   684                           	callstack 0
   685  00004C                     	ds	1
   686  00004D                     _RB5_Flag:
   687                           	callstack 0
   688  00004D                     	ds	1
   689  00004E                     _RB4_Flag:
   690                           	callstack 0
   691  00004E                     	ds	1
   692  00004F                     _n:
   693                           	callstack 0
   694  00004F                     	ds	1
   695  000050                     _lcd:
   696                           	callstack 0
   697  000050                     	ds	6
   698  000056                     _year_counter:
   699                           	callstack 0
   700  000056                     	ds	1
   701  000057                     _month_counter:
   702                           	callstack 0
   703  000057                     	ds	1
   704  000058                     _day_counter:
   705                           	callstack 0
   706  000058                     	ds	1
   707                           
   708                           	psect	bssBANK0
   709  0000C8                     __pbssBANK0:
   710                           	callstack 0
   711  0000C8                     _I2C_Status:
   712                           	callstack 0
   713  0000C8                     	ds	36
   714  0000EC                     _RB6_InterruptHandler_low:
   715                           	callstack 0
   716  0000EC                     	ds	2
   717  0000EE                     _RB6_InterruptHandler_high:
   718                           	callstack 0
   719  0000EE                     	ds	2
   720  0000F0                     _RB5_InterruptHandler_low:
   721                           	callstack 0
   722  0000F0                     	ds	2
   723  0000F2                     _RB5_InterruptHandler_high:
   724                           	callstack 0
   725  0000F2                     	ds	2
   726  0000F4                     _RB4_InterruptHandler_low:
   727                           	callstack 0
   728  0000F4                     	ds	2
   729  0000F6                     _RB4_InterruptHandler_high:
   730                           	callstack 0
   731  0000F6                     	ds	2
   732  0000F8                     _INT2_InterruptHandler:
   733                           	callstack 0
   734  0000F8                     	ds	2
   735  0000FA                     _temp_var:
   736                           	callstack 0
   737  0000FA                     	ds	1
   738  0000FB                     _mode_counter:
   739                           	callstack 0
   740  0000FB                     	ds	1
   741  0000FC                     _seconds_counter:
   742                           	callstack 0
   743  0000FC                     	ds	1
   744  0000FD                     lcd_send_number_pos@number:
   745                           	callstack 0
   746  0000FD                     	ds	1
   747                           
   748                           	psect	dataBANK0
   749  0000FE                     __pdataBANK0:
   750                           	callstack 0
   751  0000FE                     _buzzer:
   752                           	callstack 0
   753  0000FE                     	ds	2
   754                           
   755                           	psect	bssBANK1
   756  000100                     __pbssBANK1:
   757                           	callstack 0
   758  000100                     _ALARM_RTC:
   759                           	callstack 0
   760  000100                     	ds	6
   761  000106                     _RTC1307@RealTimeClockDS1307$F399:
   762                           	callstack 0
   763  000106                     	ds	6
   764  00010C                     	ds	6
   765  000112                     _nout:
   766                           	callstack 0
   767  000112                     	ds	2
   768  000114                     _width:
   769                           	callstack 0
   770  000114                     	ds	2
   771  000116                     _EUSART_OverrunErrorHandler:
   772                           	callstack 0
   773  000116                     	ds	2
   774  000118                     _EUSART_FramingErrorHandler:
   775                           	callstack 0
   776  000118                     	ds	2
   777  00011A                     _EUSART_RxInterruptHandler:
   778                           	callstack 0
   779  00011A                     	ds	2
   780  00011C                     _EUSART_TxInterruptHandler:
   781                           	callstack 0
   782  00011C                     	ds	2
   783  00011E                     _I2C_SlaveWrColInterruptHandler:
   784                           	callstack 0
   785  00011E                     	ds	2
   786  000120                     _I2C_SlaveBusColInterruptHandler:
   787                           	callstack 0
   788  000120                     	ds	2
   789  000122                     _I2C_SlaveAddrInterruptHandler:
   790                           	callstack 0
   791  000122                     	ds	2
   792  000124                     _I2C_SlaveWrInterruptHandler:
   793                           	callstack 0
   794  000124                     	ds	2
   795  000126                     _I2C_SlaveRdInterruptHandler:
   796                           	callstack 0
   797  000126                     	ds	2
   798  000128                     _MSSP_InterruptHandler:
   799                           	callstack 0
   800  000128                     	ds	2
   801  00012A                     _RB7_InterruptHandler_low:
   802                           	callstack 0
   803  00012A                     	ds	2
   804  00012C                     _RB7_InterruptHandler_high:
   805                           	callstack 0
   806  00012C                     	ds	2
   807  00012E                     _dbuf:
   808                           	callstack 0
   809  00012E                     	ds	32
   810                           
   811                           	psect	dataBANK1
   812  00014E                     __pdataBANK1:
   813                           	callstack 0
   814  00014E                     _portx:
   815                           	callstack 0
   816  00014E                     	ds	10
   817  000158                     _latx:
   818                           	callstack 0
   819  000158                     	ds	10
   820  000162                     _trisx:
   821                           	callstack 0
   822  000162                     	ds	10
   823  00016C                     _uart:
   824                           	callstack 0
   825  00016C                     	ds	16
   826  00017C                     _adc:
   827                           	callstack 0
   828  00017C                     	ds	7
   829  000183                     _MY_INT2:
   830                           	callstack 0
   831  000183                     	ds	6
   832  000189                     _MY_INT1:
   833                           	callstack 0
   834  000189                     	ds	6
   835  00018F                     _MY_INT0:
   836                           	callstack 0
   837  00018F                     	ds	6
   838                           
   839                           	psect	cstackBANK1
   840  000195                     __pcstackBANK1:
   841                           	callstack 0
   842  000195                     ?_vfprintf:
   843                           	callstack 0
   844  000195                     vfprintf@fp:
   845                           	callstack 0
   846                           
   847                           ; 2 bytes @ 0x0
   848  000195                     	ds	2
   849  000197                     vfprintf@fmt:
   850                           	callstack 0
   851                           
   852                           ; 2 bytes @ 0x2
   853  000197                     	ds	2
   854  000199                     vfprintf@ap:
   855                           	callstack 0
   856                           
   857                           ; 2 bytes @ 0x4
   858  000199                     	ds	2
   859  00019B                     ?_sprintf:
   860                           	callstack 0
   861  00019B                     sprintf@s:
   862                           	callstack 0
   863                           
   864                           ; 2 bytes @ 0x6
   865  00019B                     	ds	2
   866  00019D                     sprintf@fmt:
   867                           	callstack 0
   868                           
   869                           ; 2 bytes @ 0x8
   870  00019D                     	ds	4
   871  0001A1                     sprintf@ap:
   872                           	callstack 0
   873                           
   874                           ; 2 bytes @ 0xC
   875  0001A1                     	ds	2
   876  0001A3                     sprintf@f:
   877                           	callstack 0
   878                           
   879                           ; 11 bytes @ 0xE
   880  0001A3                     	ds	11
   881  0001AE                     convert_uint8_to_string@str:
   882                           	callstack 0
   883                           
   884                           ; 2 bytes @ 0x19
   885  0001AE                     	ds	2
   886  0001B0                     lcd_send_number_pos@lcd:
   887                           	callstack 0
   888                           
   889                           ; 2 bytes @ 0x1B
   890  0001B0                     	ds	2
   891  0001B2                     lcd_send_number_pos@row:
   892                           	callstack 0
   893                           
   894                           ; 1 bytes @ 0x1D
   895  0001B2                     	ds	1
   896  0001B3                     lcd_send_number_pos@column:
   897                           	callstack 0
   898                           
   899                           ; 1 bytes @ 0x1E
   900  0001B3                     	ds	1
   901  0001B4                     lcd_send_number_pos@num:
   902                           	callstack 0
   903                           
   904                           ; 1 bytes @ 0x1F
   905  0001B4                     	ds	1
   906  0001B5                     lcd_send_number_pos@gpio_ret:
   907                           	callstack 0
   908                           
   909                           ; 1 bytes @ 0x20
   910  0001B5                     	ds	1
   911  0001B6                     lcd_send_number_pos@lcd_ret:
   912                           	callstack 0
   913                           
   914                           ; 1 bytes @ 0x21
   915  0001B6                     	ds	1
   916  0001B7                     ??_main:
   917                           
   918                           ; 1 bytes @ 0x22
   919  0001B7                     	ds	2
   920                           
   921                           	psect	cstackBANK0
   922  000080                     __pcstackBANK0:
   923                           	callstack 0
   924  000080                     ?___aodiv:
   925                           	callstack 0
   926  000080                     ?___aomod:
   927                           	callstack 0
   928  000080                     ___xxtofl@sign:
   929                           	callstack 0
   930  000080                     buzzer_on@buzzer:
   931                           	callstack 0
   932  000080                     buzzer_off@buzzer:
   933                           	callstack 0
   934  000080                     lcd_send_nbits@lcd:
   935                           	callstack 0
   936  000080                     lcd_send_enable@lcd:
   937                           	callstack 0
   938  000080                     ADC_StartConversion_Interrupt@_adc:
   939                           	callstack 0
   940  000080                     gpio_pin_output_low_init@pin:
   941                           	callstack 0
   942  000080                     gpio_pin_input_init@pin:
   943                           	callstack 0
   944  000080                     rd1RegCompleteHandler@ptr:
   945                           	callstack 0
   946  000080                     rd2RegCompleteHandler@ptr:
   947                           	callstack 0
   948  000080                     wr1RegCompleteHandler@ptr:
   949                           	callstack 0
   950  000080                     wr2RegCompleteHandler@ptr:
   951                           	callstack 0
   952  000080                     rdBlkRegCompleteHandler@ptr:
   953                           	callstack 0
   954  000080                     I2C_CallbackReturnReset@funPtr:
   955                           	callstack 0
   956  000080                     memset@k:
   957                           	callstack 0
   958  000080                     fputs@s:
   959                           	callstack 0
   960  000080                     ___aodiv@dividend:
   961                           	callstack 0
   962  000080                     ___aomod@dividend:
   963                           	callstack 0
   964                           
   965                           ; 8 bytes @ 0x0
   966  000080                     	ds	1
   967  000081                     ___xxtofl@exp:
   968                           	callstack 0
   969                           
   970                           ; 1 bytes @ 0x1
   971  000081                     	ds	1
   972  000082                     ??_gpio_pin_output_low_init:
   973  000082                     ??_I2C_DO_TX:
   974  000082                     ??_I2C_DO_RX:
   975  000082                     ??_I2C_DO_TX_EMPTY:
   976  000082                     ??_I2C_DO_ADDRESS_NACK:
   977  000082                     ??_gpio_pin_input_init:
   978  000082                     buzzer_on@gpio_ret:
   979                           	callstack 0
   980  000082                     buzzer_off@gpio_ret:
   981                           	callstack 0
   982  000082                     lcd_send_nbits@data_or_command:
   983                           	callstack 0
   984  000082                     lcd_send_enable@gpio_ret:
   985                           	callstack 0
   986  000082                     ADC_StartConversion_Interrupt@channel:
   987                           	callstack 0
   988  000082                     memset@s:
   989                           	callstack 0
   990  000082                     fputs@fp:
   991                           	callstack 0
   992  000082                     ___xxtofl@arg:
   993                           	callstack 0
   994                           
   995                           ; 4 bytes @ 0x2
   996  000082                     	ds	1
   997  000083                     ??_lcd_send_nbits:
   998  000083                     gpio_pin_output_low_init@gpio_ret:
   999                           	callstack 0
  1000  000083                     gpio_pin_input_init@gpio_ret:
  1001                           	callstack 0
  1002                           
  1003                           ; 1 bytes @ 0x3
  1004  000083                     	ds	1
  1005  000084                     ??_I2C_MasterFsm:
  1006  000084                     gpio_pin_output_low_init@ret:
  1007                           	callstack 0
  1008  000084                     gpio_pin_input_init@ret:
  1009                           	callstack 0
  1010  000084                     fputs@c:
  1011                           	callstack 0
  1012                           
  1013                           ; 1 bytes @ 0x4
  1014  000084                     	ds	1
  1015  000085                     buzzer_init@buzzer:
  1016                           	callstack 0
  1017  000085                     interrupt_INTx_pin_init@_interrupt:
  1018                           	callstack 0
  1019  000085                     fputs@i:
  1020                           	callstack 0
  1021                           
  1022                           ; 2 bytes @ 0x5
  1023  000085                     	ds	1
  1024  000086                     ?___fldiv:
  1025                           	callstack 0
  1026  000086                     I2C_MasterOperation@read:
  1027                           	callstack 0
  1028  000086                     ___fldiv@b:
  1029                           	callstack 0
  1030                           
  1031                           ; 4 bytes @ 0x6
  1032  000086                     	ds	1
  1033  000087                     ?_pad:
  1034                           	callstack 0
  1035  000087                     buzzer_init@gpio_ret:
  1036                           	callstack 0
  1037  000087                     lcd_send_nbits@ret:
  1038                           	callstack 0
  1039  000087                     interrupt_INTx_pin_init@ret:
  1040                           	callstack 0
  1041  000087                     I2C_MasterOperation@returnValue:
  1042                           	callstack 0
  1043  000087                     pad@fp:
  1044                           	callstack 0
  1045                           
  1046                           ; 2 bytes @ 0x7
  1047  000087                     	ds	1
  1048  000088                     lcd_send_nbits@pin_counter:
  1049                           	callstack 0
  1050  000088                     I2C_Read1ByteRegister@address:
  1051                           	callstack 0
  1052  000088                     I2C_Write1ByteRegister@reg:
  1053                           	callstack 0
  1054  000088                     interrupt_INTx_init@_interrupt:
  1055                           	callstack 0
  1056  000088                     ___aodiv@divisor:
  1057                           	callstack 0
  1058  000088                     ___aomod@divisor:
  1059                           	callstack 0
  1060                           
  1061                           ; 8 bytes @ 0x8
  1062  000088                     	ds	1
  1063  000089                     I2C_Read1ByteRegister@returnValue:
  1064                           	callstack 0
  1065  000089                     I2C_Write1ByteRegister@data:
  1066                           	callstack 0
  1067  000089                     lcd_send_command@lcd:
  1068                           	callstack 0
  1069  000089                     lcd_send_char_data@lcd:
  1070                           	callstack 0
  1071  000089                     pad@buf:
  1072                           	callstack 0
  1073                           
  1074                           ; 2 bytes @ 0x9
  1075  000089                     	ds	1
  1076  00008A                     ?_RealTimeClockDS1307_Get_Date_Time:
  1077                           	callstack 0
  1078  00008A                     interrupt_INTx_init@ret:
  1079                           	callstack 0
  1080  00008A                     ___fldiv@a:
  1081                           	callstack 0
  1082                           
  1083                           ; 4 bytes @ 0xA
  1084  00008A                     	ds	1
  1085  00008B                     lcd_send_command@command:
  1086                           	callstack 0
  1087  00008B                     lcd_send_char_data@data:
  1088                           	callstack 0
  1089  00008B                     pad@p:
  1090                           	callstack 0
  1091                           
  1092                           ; 2 bytes @ 0xB
  1093  00008B                     	ds	1
  1094  00008C                     lcd_send_command@gpio_ret:
  1095                           	callstack 0
  1096  00008C                     lcd_send_char_data@gpio_ret:
  1097                           	callstack 0
  1098                           
  1099                           ; 1 bytes @ 0xC
  1100  00008C                     	ds	1
  1101  00008D                     lcd_send_command@lcd_ret:
  1102                           	callstack 0
  1103  00008D                     lcd_send_char_data@lcd_ret:
  1104                           	callstack 0
  1105  00008D                     pad@i:
  1106                           	callstack 0
  1107                           
  1108                           ; 2 bytes @ 0xD
  1109  00008D                     	ds	1
  1110  00008E                     ??___fldiv:
  1111  00008E                     lcd_send_command@ret:
  1112                           	callstack 0
  1113  00008E                     lcd_send_char_data@ret:
  1114                           	callstack 0
  1115                           
  1116                           ; 1 bytes @ 0xE
  1117  00008E                     	ds	1
  1118  00008F                     lcd_init@lcd:
  1119                           	callstack 0
  1120  00008F                     lcd_send_string@lcd:
  1121                           	callstack 0
  1122  00008F                     lcd_set_curser@lcd:
  1123                           	callstack 0
  1124  00008F                     pad@w:
  1125                           	callstack 0
  1126                           
  1127                           ; 2 bytes @ 0xF
  1128  00008F                     	ds	2
  1129  000091                     ??_lcd_init:
  1130  000091                     ?_dtoa:
  1131                           	callstack 0
  1132  000091                     lcd_set_curser@row:
  1133                           	callstack 0
  1134  000091                     lcd_send_string@str:
  1135                           	callstack 0
  1136  000091                     dtoa@fp:
  1137                           	callstack 0
  1138                           
  1139                           ; 2 bytes @ 0x11
  1140  000091                     	ds	1
  1141  000092                     lcd_set_curser@column:
  1142                           	callstack 0
  1143  000092                     ___fldiv@rem:
  1144                           	callstack 0
  1145                           
  1146                           ; 4 bytes @ 0x12
  1147  000092                     	ds	1
  1148  000093                     ??_lcd_set_curser:
  1149  000093                     lcd_init@gpio_ret:
  1150                           	callstack 0
  1151  000093                     lcd_send_string@gpio_ret:
  1152                           	callstack 0
  1153  000093                     dtoa@d:
  1154                           	callstack 0
  1155                           
  1156                           ; 8 bytes @ 0x13
  1157  000093                     	ds	1
  1158  000094                     lcd_init@pins_counter:
  1159                           	callstack 0
  1160  000094                     lcd_send_string@lcd_ret:
  1161                           	callstack 0
  1162                           
  1163                           ; 1 bytes @ 0x14
  1164  000094                     	ds	1
  1165  000095                     lcd_init@lcd_ret:
  1166                           	callstack 0
  1167  000095                     lcd_send_string@ret:
  1168                           	callstack 0
  1169  000095                     lcd_set_curser@gpio_ret:
  1170                           	callstack 0
  1171                           
  1172                           ; 1 bytes @ 0x15
  1173  000095                     	ds	1
  1174  000096                     lcd_set_curser@lcd_ret:
  1175                           	callstack 0
  1176  000096                     ___fldiv@sign:
  1177                           	callstack 0
  1178                           
  1179                           ; 1 bytes @ 0x16
  1180  000096                     	ds	1
  1181  000097                     lcd_send_char_data_pos@lcd:
  1182                           	callstack 0
  1183  000097                     lcd_send_string_pos@lcd:
  1184                           	callstack 0
  1185  000097                     ___fldiv@new_exp:
  1186                           	callstack 0
  1187                           
  1188                           ; 2 bytes @ 0x17
  1189  000097                     	ds	2
  1190  000099                     lcd_send_char_data_pos@row:
  1191                           	callstack 0
  1192  000099                     lcd_send_string_pos@row:
  1193                           	callstack 0
  1194  000099                     ___fldiv@grs:
  1195                           	callstack 0
  1196                           
  1197                           ; 4 bytes @ 0x19
  1198  000099                     	ds	1
  1199  00009A                     lcd_send_char_data_pos@column:
  1200                           	callstack 0
  1201  00009A                     lcd_send_string_pos@column:
  1202                           	callstack 0
  1203                           
  1204                           ; 1 bytes @ 0x1A
  1205  00009A                     	ds	1
  1206  00009B                     ??_dtoa:
  1207  00009B                     lcd_send_char_data_pos@data:
  1208                           	callstack 0
  1209  00009B                     lcd_send_string_pos@str:
  1210                           	callstack 0
  1211                           
  1212                           ; 2 bytes @ 0x1B
  1213  00009B                     	ds	1
  1214  00009C                     lcd_send_char_data_pos@gpio_ret:
  1215                           	callstack 0
  1216                           
  1217                           ; 1 bytes @ 0x1C
  1218  00009C                     	ds	1
  1219  00009D                     lcd_send_char_data_pos@lcd_ret:
  1220                           	callstack 0
  1221  00009D                     lcd_send_string_pos@gpio_ret:
  1222                           	callstack 0
  1223  00009D                     ___fldiv@bexp:
  1224                           	callstack 0
  1225                           
  1226                           ; 1 bytes @ 0x1D
  1227  00009D                     	ds	1
  1228  00009E                     lcd_send_char_data_pos@ret:
  1229                           	callstack 0
  1230  00009E                     lcd_send_string_pos@lcd_ret:
  1231                           	callstack 0
  1232  00009E                     ___fldiv@aexp:
  1233                           	callstack 0
  1234                           
  1235                           ; 1 bytes @ 0x1E
  1236  00009E                     	ds	1
  1237  00009F                     ?___fladd:
  1238                           	callstack 0
  1239  00009F                     ___fladd@b:
  1240                           	callstack 0
  1241                           
  1242                           ; 4 bytes @ 0x1F
  1243  00009F                     	ds	4
  1244  0000A3                     _dtoa$3844:
  1245                           	callstack 0
  1246  0000A3                     ___fladd@a:
  1247                           	callstack 0
  1248                           
  1249                           ; 4 bytes @ 0x23
  1250  0000A3                     	ds	2
  1251  0000A5                     dtoa@p:
  1252                           	callstack 0
  1253                           
  1254                           ; 2 bytes @ 0x25
  1255  0000A5                     	ds	2
  1256  0000A7                     ??___fladd:
  1257  0000A7                     dtoa@w:
  1258                           	callstack 0
  1259                           
  1260                           ; 2 bytes @ 0x27
  1261  0000A7                     	ds	2
  1262  0000A9                     dtoa@s:
  1263                           	callstack 0
  1264                           
  1265                           ; 2 bytes @ 0x29
  1266  0000A9                     	ds	2
  1267  0000AB                     ___fladd@signs:
  1268                           	callstack 0
  1269  0000AB                     dtoa@n:
  1270                           	callstack 0
  1271                           
  1272                           ; 8 bytes @ 0x2B
  1273  0000AB                     	ds	1
  1274  0000AC                     ___fladd@aexp:
  1275                           	callstack 0
  1276                           
  1277                           ; 1 bytes @ 0x2C
  1278  0000AC                     	ds	1
  1279  0000AD                     ___fladd@bexp:
  1280                           	callstack 0
  1281                           
  1282                           ; 1 bytes @ 0x2D
  1283  0000AD                     	ds	1
  1284  0000AE                     ___fladd@grs:
  1285                           	callstack 0
  1286                           
  1287                           ; 1 bytes @ 0x2E
  1288  0000AE                     	ds	1
  1289  0000AF                     EUSART_Baud_Rate_Calculation@_eusart:
  1290                           	callstack 0
  1291                           
  1292                           ; 2 bytes @ 0x2F
  1293  0000AF                     	ds	2
  1294  0000B1                     ??_EUSART_Baud_Rate_Calculation:
  1295                           
  1296                           ; 1 bytes @ 0x31
  1297  0000B1                     	ds	2
  1298  0000B3                     dtoa@i:
  1299                           	callstack 0
  1300  0000B3                     EUSART_Baud_Rate_Calculation@Baud_Rate_Temp:
  1301                           	callstack 0
  1302                           
  1303                           ; 4 bytes @ 0x33
  1304  0000B3                     	ds	2
  1305  0000B5                     ?_vfpfcnvrt:
  1306                           	callstack 0
  1307  0000B5                     vfpfcnvrt@fp:
  1308                           	callstack 0
  1309                           
  1310                           ; 2 bytes @ 0x35
  1311  0000B5                     	ds	2
  1312  0000B7                     vfpfcnvrt@fmt:
  1313                           	callstack 0
  1314  0000B7                     _EUSART_Baud_Rate_Calculation$4290:
  1315                           	callstack 0
  1316                           
  1317                           ; 4 bytes @ 0x37
  1318  0000B7                     	ds	2
  1319  0000B9                     vfpfcnvrt@ap:
  1320                           	callstack 0
  1321                           
  1322                           ; 2 bytes @ 0x39
  1323  0000B9                     	ds	2
  1324  0000BB                     ??_vfpfcnvrt:
  1325  0000BB                     EUSART_ASYNC_Init@_eusart:
  1326                           	callstack 0
  1327                           
  1328                           ; 2 bytes @ 0x3B
  1329  0000BB                     	ds	2
  1330  0000BD                     vfpfcnvrt@ll:
  1331                           	callstack 0
  1332                           
  1333                           ; 8 bytes @ 0x3D
  1334  0000BD                     	ds	8
  1335  0000C5                     vfprintf@cfmt:
  1336                           	callstack 0
  1337                           
  1338                           ; 2 bytes @ 0x45
  1339  0000C5                     	ds	2
  1340  0000C7                     convert_uint8_to_string@value:
  1341                           	callstack 0
  1342                           
  1343                           ; 1 bytes @ 0x47
  1344  0000C7                     	ds	1
  1345                           
  1346                           	psect	cstackCOMRAM
  1347  000001                     __pcstackCOMRAM:
  1348                           	callstack 0
  1349  000001                     ?___awdiv:
  1350                           	callstack 0
  1351  000001                     ?___awmod:
  1352                           	callstack 0
  1353  000001                     RB4_ISR@RB4_Source:
  1354                           	callstack 0
  1355  000001                     RB5_ISR@RB5_Source:
  1356                           	callstack 0
  1357  000001                     RB6_ISR@RB6_Source:
  1358                           	callstack 0
  1359  000001                     RB7_ISR@RB7_Source:
  1360                           	callstack 0
  1361  000001                     EUSART_ASYNC_WriteByteNonBlocking@_data:
  1362                           	callstack 0
  1363  000001                     i2I2C_Open@address:
  1364                           	callstack 0
  1365  000001                     i2I2C_Close@returnValue:
  1366                           	callstack 0
  1367  000001                     i2I2C_MasterSendTxData@data:
  1368                           	callstack 0
  1369  000001                     ADC_GetConversionResult@_adc:
  1370                           	callstack 0
  1371  000001                     ___awdiv@dividend:
  1372                           	callstack 0
  1373  000001                     ___awmod@dividend:
  1374                           	callstack 0
  1375  000001                     i2I2C_SetBuffer@buffer:
  1376                           	callstack 0
  1377  000001                     i2I2C_SetCallback@cb:
  1378                           	callstack 0
  1379                           
  1380                           ; 2 bytes @ 0x0
  1381  000001                     	ds	1
  1382  000002                     i2I2C_Open@returnValue:
  1383                           	callstack 0
  1384                           
  1385                           ; 1 bytes @ 0x1
  1386  000002                     	ds	1
  1387  000003                     ADC_GetConversionResult@conversion_result:
  1388                           	callstack 0
  1389  000003                     ___awdiv@divisor:
  1390                           	callstack 0
  1391  000003                     ___awmod@divisor:
  1392                           	callstack 0
  1393  000003                     i2I2C_SetBuffer@bufferSize:
  1394                           	callstack 0
  1395  000003                     i2I2C_SetCallback@ptr:
  1396                           	callstack 0
  1397                           
  1398                           ; 2 bytes @ 0x2
  1399  000003                     	ds	2
  1400  000005                     ??_ADC_GetConversionResult:
  1401  000005                     ___awdiv@counter:
  1402                           	callstack 0
  1403  000005                     ___awmod@counter:
  1404                           	callstack 0
  1405  000005                     i2I2C_SetCallback@idx:
  1406                           	callstack 0
  1407                           
  1408                           ; 1 bytes @ 0x4
  1409  000005                     	ds	1
  1410  000006                     ___awdiv@sign:
  1411                           	callstack 0
  1412  000006                     ___awmod@sign:
  1413                           	callstack 0
  1414  000006                     i2I2C_SetDataCompleteCallback@cb:
  1415                           	callstack 0
  1416  000006                     i2I2C_SetAddressNackCallback@cb:
  1417                           	callstack 0
  1418                           
  1419                           ; 2 bytes @ 0x5
  1420  000006                     	ds	1
  1421  000007                     ___awdiv@quotient:
  1422                           	callstack 0
  1423                           
  1424                           ; 2 bytes @ 0x6
  1425  000007                     	ds	1
  1426  000008                     i2I2C_SetDataCompleteCallback@ptr:
  1427                           	callstack 0
  1428  000008                     i2I2C_SetAddressNackCallback@ptr:
  1429                           	callstack 0
  1430                           
  1431                           ; 2 bytes @ 0x7
  1432  000008                     	ds	1
  1433  000009                     convert_int_to_BCD@BCD_num:
  1434                           	callstack 0
  1435                           
  1436                           ; 2 bytes @ 0x8
  1437  000009                     	ds	1
  1438  00000A                     i2rd1RegCompleteHandler@ptr:
  1439                           	callstack 0
  1440  00000A                     i2rd2RegCompleteHandler@ptr:
  1441                           	callstack 0
  1442  00000A                     i2wr1RegCompleteHandler@ptr:
  1443                           	callstack 0
  1444  00000A                     i2wr2RegCompleteHandler@ptr:
  1445                           	callstack 0
  1446  00000A                     i2rdBlkRegCompleteHandler@ptr:
  1447                           	callstack 0
  1448  00000A                     
  1449                           ; 2 bytes @ 0x9
  1450  00000A                     	ds	1
  1451  00000B                     convert_int_to_BCD@int_num:
  1452                           	callstack 0
  1453                           
  1454                           ; 1 bytes @ 0xA
  1455  00000B                     	ds	1
  1456  00000C                     ??i2_I2C_DO_TX:
  1457  00000C                     ??i2_I2C_DO_RX:
  1458  00000C                     ??i2_I2C_DO_TX_EMPTY:
  1459  00000C                     ??i2_I2C_DO_ADDRESS_NACK:
  1460  00000C                     convert_int_to_BCD@l_nipple:
  1461                           	callstack 0
  1462                           
  1463                           ; 1 bytes @ 0xB
  1464  00000C                     	ds	1
  1465  00000D                     convert_int_to_BCD@h_nipple:
  1466                           	callstack 0
  1467                           
  1468                           ; 1 bytes @ 0xC
  1469  00000D                     	ds	1
  1470  00000E                     ??i2_I2C_MasterFsm:
  1471                           
  1472                           ; 1 bytes @ 0xD
  1473  00000E                     	ds	2
  1474  000010                     i2I2C_MasterOperation@read:
  1475                           	callstack 0
  1476                           
  1477                           ; 1 bytes @ 0xF
  1478  000010                     	ds	1
  1479  000011                     i2I2C_MasterOperation@returnValue:
  1480                           	callstack 0
  1481                           
  1482                           ; 1 bytes @ 0x10
  1483  000011                     	ds	1
  1484  000012                     i2I2C_Read1ByteRegister@reg:
  1485                           	callstack 0
  1486  000012                     i2I2C_Write1ByteRegister@reg:
  1487                           	callstack 0
  1488                           
  1489                           ; 1 bytes @ 0x11
  1490  000012                     	ds	1
  1491  000013                     i2I2C_Read1ByteRegister@address:
  1492                           	callstack 0
  1493  000013                     i2I2C_Write1ByteRegister@data:
  1494                           	callstack 0
  1495                           
  1496                           ; 1 bytes @ 0x12
  1497  000013                     	ds	1
  1498  000014                     i2I2C_Read1ByteRegister@returnValue:
  1499                           	callstack 0
  1500  000014                     i2I2C_Write1ByteRegister@address:
  1501                           	callstack 0
  1502                           
  1503                           ; 1 bytes @ 0x13
  1504  000014                     	ds	1
  1505  000015                     ?i2_RealTimeClockDS1307_Get_Date_Time:
  1506                           	callstack 0
  1507                           
  1508                           ; 6 bytes @ 0x14
  1509  000015                     	ds	6
  1510  00001B                     ??_InterruptManager:
  1511  00001B                     
  1512                           ; 1 bytes @ 0x1A
  1513  00001B                     	ds	12
  1514  000027                     ??_adc_input_channel_port_configure:
  1515  000027                     ?_strlen:
  1516                           	callstack 0
  1517  000027                     ?___fltol:
  1518                           	callstack 0
  1519  000027                     ?___xxtofl:
  1520                           	callstack 0
  1521  000027                     select_result_format@result_format:
  1522                           	callstack 0
  1523  000027                     configure_voltage_reference@voltage_reference:
  1524                           	callstack 0
  1525  000027                     I2C_Open@address:
  1526                           	callstack 0
  1527  000027                     I2C_Close@returnValue:
  1528                           	callstack 0
  1529  000027                     I2C_MasterSendTxData@data:
  1530                           	callstack 0
  1531  000027                     ___aodiv@counter:
  1532                           	callstack 0
  1533  000027                     ___aomod@counter:
  1534                           	callstack 0
  1535  000027                     convert_BCD_to_int@int_num:
  1536                           	callstack 0
  1537  000027                     ADC_StartConversion@_adc:
  1538                           	callstack 0
  1539  000027                     gpio_pin_direction_init@pin:
  1540                           	callstack 0
  1541  000027                     gpio_pin_logic_write@pin:
  1542                           	callstack 0
  1543  000027                     interrupt_INTx_enable@_interrupt:
  1544                           	callstack 0
  1545  000027                     interrupt_INTx_disable@_interrupt:
  1546                           	callstack 0
  1547  000027                     interrupt_INTx_clear_flag@_interrupt:
  1548                           	callstack 0
  1549  000027                     interrupt_INTx_edge_init@_interrupt:
  1550                           	callstack 0
  1551  000027                     INT0_set_InterruptHandler@InterruptHandler:
  1552                           	callstack 0
  1553  000027                     INT1_set_InterruptHandler@InterruptHandler:
  1554                           	callstack 0
  1555  000027                     INT2_set_InterruptHandler@InterruptHandler:
  1556                           	callstack 0
  1557  000027                     EUSART_ASYNC_TX_Init@_eusart:
  1558                           	callstack 0
  1559  000027                     EUSART_ASYNC_RX_Init@_eusart:
  1560                           	callstack 0
  1561  000027                     I2C_SetBuffer@buffer:
  1562                           	callstack 0
  1563  000027                     I2C_SetCallback@cb:
  1564                           	callstack 0
  1565  000027                     memset@dest:
  1566                           	callstack 0
  1567  000027                     fputc@c:
  1568                           	callstack 0
  1569  000027                     strlen@s:
  1570                           	callstack 0
  1571  000027                     ___fltol@f1:
  1572                           	callstack 0
  1573  000027                     ___xxtofl@val:
  1574                           	callstack 0
  1575                           
  1576                           ; 4 bytes @ 0x26
  1577  000027                     	ds	1
  1578  000028                     I2C_Open@returnValue:
  1579                           	callstack 0
  1580  000028                     ___aodiv@sign:
  1581                           	callstack 0
  1582  000028                     ___aomod@sign:
  1583                           	callstack 0
  1584                           
  1585                           ; 1 bytes @ 0x27
  1586  000028                     	ds	1
  1587  000029                     ??_interrupt_INTx_disable:
  1588  000029                     ??_interrupt_INTx_clear_flag:
  1589  000029                     ??_interrupt_INTx_edge_init:
  1590  000029                     ??_interrupt_INTx_enable:
  1591  000029                     ??_convert_BCD_to_int:
  1592  000029                     ?_abs:
  1593                           	callstack 0
  1594  000029                     ADC_StartConversion@ret:
  1595                           	callstack 0
  1596  000029                     adc_input_channel_port_configure@channel:
  1597                           	callstack 0
  1598  000029                     gpio_pin_direction_init@pin_direction:
  1599                           	callstack 0
  1600  000029                     gpio_pin_logic_write@pin_logic:
  1601                           	callstack 0
  1602  000029                     INT0_set_InterruptHandler@ret:
  1603                           	callstack 0
  1604  000029                     INT1_set_InterruptHandler@ret:
  1605                           	callstack 0
  1606  000029                     INT2_set_InterruptHandler@ret:
  1607                           	callstack 0
  1608  000029                     I2C_SetBuffer@bufferSize:
  1609                           	callstack 0
  1610  000029                     I2C_SetCallback@ptr:
  1611                           	callstack 0
  1612  000029                     memset@c:
  1613                           	callstack 0
  1614  000029                     abs@a:
  1615                           	callstack 0
  1616  000029                     fputc@fp:
  1617                           	callstack 0
  1618  000029                     strlen@a:
  1619                           	callstack 0
  1620  000029                     ___aodiv@quotient:
  1621                           	callstack 0
  1622                           
  1623                           ; 8 bytes @ 0x28
  1624  000029                     	ds	1
  1625  00002A                     ??_gpio_pin_logic_write:
  1626  00002A                     ??_gpio_pin_direction_init:
  1627  00002A                     ADC_Init@_adc:
  1628                           	callstack 0
  1629  00002A                     ADC_SelectChannel@_adc:
  1630                           	callstack 0
  1631  00002A                     INTx_select_InterruptHandler@_interrupt:
  1632                           	callstack 0
  1633                           
  1634                           ; 2 bytes @ 0x29
  1635  00002A                     	ds	1
  1636  00002B                     ??_fputc:
  1637  00002B                     ??_abs:
  1638  00002B                     ??___fltol:
  1639  00002B                     ??___xxtofl:
  1640  00002B                     convert_BCD_to_int@BCD_num:
  1641                           	callstack 0
  1642  00002B                     interrupt_INTx_enable@ret:
  1643                           	callstack 0
  1644  00002B                     interrupt_INTx_disable@ret:
  1645                           	callstack 0
  1646  00002B                     interrupt_INTx_clear_flag@ret:
  1647                           	callstack 0
  1648  00002B                     interrupt_INTx_edge_init@ret:
  1649                           	callstack 0
  1650  00002B                     I2C_SetCallback@idx:
  1651                           	callstack 0
  1652  00002B                     memset@n:
  1653                           	callstack 0
  1654                           
  1655                           ; 2 bytes @ 0x2A
  1656  00002B                     	ds	1
  1657  00002C                     ??_INTx_select_InterruptHandler:
  1658  00002C                     ??_ADC_Init:
  1659  00002C                     convert_BCD_to_int@tens:
  1660                           	callstack 0
  1661  00002C                     ADC_SelectChannel@channel:
  1662                           	callstack 0
  1663  00002C                     I2C_SetDataCompleteCallback@cb:
  1664                           	callstack 0
  1665  00002C                     I2C_SetAddressNackCallback@cb:
  1666                           	callstack 0
  1667                           
  1668                           ; 2 bytes @ 0x2B
  1669  00002C                     	ds	1
  1670  00002D                     ??_memset:
  1671  00002D                     ??_ADC_SelectChannel:
  1672  00002D                     convert_BCD_to_int@ones:
  1673                           	callstack 0
  1674                           
  1675                           ; 1 bytes @ 0x2C
  1676  00002D                     	ds	1
  1677  00002E                     ADC_SelectChannel@ret:
  1678                           	callstack 0
  1679  00002E                     INTx_select_InterruptHandler@ret:
  1680                           	callstack 0
  1681  00002E                     I2C_SetDataCompleteCallback@ptr:
  1682                           	callstack 0
  1683  00002E                     I2C_SetAddressNackCallback@ptr:
  1684                           	callstack 0
  1685                           
  1686                           ; 2 bytes @ 0x2D
  1687  00002E                     	ds	1
  1688  00002F                     ADC_StartConversion_Interrupt@ret:
  1689                           	callstack 0
  1690  00002F                     ___fltol@sign1:
  1691                           	callstack 0
  1692                           
  1693                           ; 1 bytes @ 0x2E
  1694  00002F                     	ds	1
  1695  000030                     ??_pad:
  1696  000030                     gpio_pin_direction_init@ret:
  1697                           	callstack 0
  1698  000030                     gpio_pin_logic_write@ret:
  1699                           	callstack 0
  1700  000030                     I2C_Read1ByteRegister@reg:
  1701                           	callstack 0
  1702  000030                     I2C_Write1ByteRegister@address:
  1703                           	callstack 0
  1704  000030                     ___fltol@exp1:
  1705                           	callstack 0
  1706                           
  1707                           ; 1 bytes @ 0x2F
  1708  000030                     	ds	1
  1709  000031                     
  1710                           ; 1 bytes @ 0x30
  1711 ;;
  1712 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1713 ;;
  1714 ;; *************** function _main *****************
  1715 ;; Defined at:
  1716 ;;		line 96 in file "app.c"
  1717 ;; Parameters:    Size  Location     Type
  1718 ;;		None
  1719 ;; Auto vars:     Size  Location     Type
  1720 ;;		None
  1721 ;; Return value:  Size  Location     Type
  1722 ;;                  1    wreg      void 
  1723 ;; Registers used:
  1724 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  1725 ;; Tracked objects:
  1726 ;;		On entry : 0/0
  1727 ;;		On exit  : 0/0
  1728 ;;		Unchanged: 0/0
  1729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1732 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1733 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1734 ;;Total ram usage:        2 bytes
  1735 ;; Hardware stack levels required when called: 23
  1736 ;; This function calls:
  1737 ;;		_ADC_StartConversion_Interrupt
  1738 ;;		_I2C_Read1ByteRegister
  1739 ;;		_I2C_Write1ByteRegister
  1740 ;;		_RealTimeClockDS1307_Get_Date_Time
  1741 ;;		__Initialize
  1742 ;;		_buzzer_off
  1743 ;;		_buzzer_on
  1744 ;;		_convert_BCD_to_int
  1745 ;;		_lcd_send_char_data_pos
  1746 ;;		_lcd_send_command
  1747 ;;		_lcd_send_number_pos
  1748 ;;		_lcd_send_string_pos
  1749 ;; This function is called by:
  1750 ;;		Startup code after reset
  1751 ;; This function uses a non-reentrant model
  1752 ;;
  1753                           
  1754                           	psect	text0
  1755  00106A                     __ptext0:
  1756                           	callstack 0
  1757  00106A                     _main:
  1758                           	callstack 8
  1759  00106A                     
  1760                           ;app.c: 99:     _Initialize();
  1761  00106A  EC8A  F02A         	call	__Initialize	;wreg free
  1762  00106E                     l13031:
  1763                           
  1764                           ;app.c: 102:     {;app.c: 104:         temp_var=I2C_Read1ByteRegister(0x9A,0x00);
  1765  00106E  0E00               	movlw	0
  1766  001070  6E30               	movwf	I2C_Read1ByteRegister@reg^0,c
  1767  001072  0E9A               	movlw	154
  1768  001074  EC4C  F026         	call	_I2C_Read1ByteRegister
  1769  001078  0100               	movlb	0	; () banked
  1770  00107A  6FFA               	movwf	_temp_var& (0+255),b
  1771  00107C                     
  1772                           ; BSR set to: 0
  1773                           ;app.c: 105:         I2C_Write1ByteRegister(0x70,0x00,temp_var);
  1774  00107C  0E00               	movlw	0
  1775  00107E  6F88               	movwf	I2C_Write1ByteRegister@reg& (0+255),b
  1776  001080  C0FA  F089         	movff	_temp_var,I2C_Write1ByteRegister@data
  1777  001084  0E70               	movlw	112
  1778  001086  EC49  F029         	call	_I2C_Write1ByteRegister
  1779  00108A                     
  1780                           ;app.c: 106:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1781  00108A  0E02               	movlw	2
  1782  00108C  0101               	movlb	1	; () banked
  1783  00108E  6FB8               	movwf	(??_main+1)& (0+255),b
  1784  001090  0E04               	movlw	4
  1785  001092  6FB7               	movwf	??_main& (0+255),b
  1786  001094  0EBA               	movlw	186
  1787  001096                     u11627:
  1788  001096  2EE8               	decfsz	wreg,f,c
  1789  001098  D7FE               	bra	u11627
  1790  00109A  2FB7               	decfsz	??_main& (0+255),f,b
  1791  00109C  D7FC               	bra	u11627
  1792  00109E  2FB8               	decfsz	(??_main+1)& (0+255),f,b
  1793  0010A0  D7FA               	bra	u11627
  1794  0010A2  F000               	nop	
  1795  0010A4                     
  1796                           ;app.c: 107:          ADC_StartConversion_Interrupt(&adc,ADC_CHANNEL_AN0);
  1797  0010A4  0E7C               	movlw	low _adc
  1798  0010A6  0100               	movlb	0	; () banked
  1799  0010A8  6F80               	movwf	ADC_StartConversion_Interrupt@_adc& (0+255),b
  1800  0010AA  0E01               	movlw	high _adc
  1801  0010AC  6F81               	movwf	(ADC_StartConversion_Interrupt@_adc+1)& (0+255),b
  1802  0010AE  0E00               	movlw	0
  1803  0010B0  6F82               	movwf	ADC_StartConversion_Interrupt@channel& (0+255),b
  1804  0010B2  EC81  F02D         	call	_ADC_StartConversion_Interrupt	;wreg free
  1805  0010B6                     
  1806                           ;app.c: 108:             if(option_counter==0){
  1807  0010B6  503B               	movf	_option_counter^0,w,c	;volatile
  1808  0010B8  A4D8               	btfss	status,2,c
  1809  0010BA  EF61  F008         	goto	u11481
  1810  0010BE  EF63  F008         	goto	u11480
  1811  0010C2                     u11481:
  1812  0010C2  EF87  F009         	goto	l13093
  1813  0010C6                     u11480:
  1814  0010C6                     
  1815                           ;app.c: 110:                 RTC1307 = RealTimeClockDS1307_Get_Date_Time();
  1816  0010C6  EC22  F02A         	call	_RealTimeClockDS1307_Get_Date_Time	;wreg free
  1817  0010CA  EE20  F041         	lfsr	2,_RTC1307	;volatile
  1818  0010CE  0E05               	movlw	5
  1819  0010D0                     u11491:
  1820  0010D0  CFEB FFDB          	movff	plusw0,plusw2
  1821  0010D4  06E8               	decf	wreg,f,c
  1822  0010D6  E2FC               	bc	u11491
  1823  0010D8                     
  1824                           ;app.c: 111:                 lcd_send_command(&lcd,0X01);
  1825  0010D8  0E50               	movlw	low _lcd
  1826  0010DA  0100               	movlb	0	; () banked
  1827  0010DC  6F89               	movwf	lcd_send_command@lcd& (0+255),b
  1828  0010DE  0E00               	movlw	high _lcd
  1829  0010E0  6F8A               	movwf	(lcd_send_command@lcd+1)& (0+255),b
  1830  0010E2  0E01               	movlw	1
  1831  0010E4  6F8B               	movwf	lcd_send_command@command& (0+255),b
  1832  0010E6  EC04  F025         	call	_lcd_send_command	;wreg free
  1833  0010EA                     
  1834                           ;app.c: 112:                 lcd_send_string_pos(&lcd,1,1,"TIME:");
  1835  0010EA  0E50               	movlw	low _lcd
  1836  0010EC  0100               	movlb	0	; () banked
  1837  0010EE  6F97               	movwf	lcd_send_string_pos@lcd& (0+255),b
  1838  0010F0  0E00               	movlw	high _lcd
  1839  0010F2  6F98               	movwf	(lcd_send_string_pos@lcd+1)& (0+255),b
  1840  0010F4  0E01               	movlw	1
  1841  0010F6  6F99               	movwf	lcd_send_string_pos@row& (0+255),b
  1842  0010F8  0E01               	movlw	1
  1843  0010FA  6F9A               	movwf	lcd_send_string_pos@column& (0+255),b
  1844  0010FC  0E4F               	movlw	low STR_4
  1845  0010FE  6F9B               	movwf	lcd_send_string_pos@str& (0+255),b
  1846  001100  0E10               	movlw	high STR_4
  1847  001102  6F9C               	movwf	(lcd_send_string_pos@str+1)& (0+255),b
  1848  001104  EC0E  F026         	call	_lcd_send_string_pos	;wreg free
  1849  001108                     
  1850                           ;app.c: 113:                 convert_BCD_to_int(RTC1307._Hours,&hours_counter);
  1851  001108  0E48               	movlw	low _hours_counter
  1852  00110A  6E27               	movwf	convert_BCD_to_int@int_num^0,c
  1853  00110C  0E00               	movlw	high _hours_counter
  1854  00110E  6E28               	movwf	(convert_BCD_to_int@int_num+1)^0,c
  1855  001110  5041               	movf	_RTC1307^0,w,c	;volatile
  1856  001112  ECC6  F017         	call	_convert_BCD_to_int
  1857  001116                     
  1858                           ;app.c: 114:                 lcd_send_number_pos(&lcd,1,7,hours_counter);
  1859  001116  0E50               	movlw	low _lcd
  1860  001118  0101               	movlb	1	; () banked
  1861  00111A  6FB0               	movwf	lcd_send_number_pos@lcd& (0+255),b
  1862  00111C  0E00               	movlw	high _lcd
  1863  00111E  6FB1               	movwf	(lcd_send_number_pos@lcd+1)& (0+255),b
  1864  001120  0E01               	movlw	1
  1865  001122  6FB2               	movwf	lcd_send_number_pos@row& (0+255),b
  1866  001124  0E07               	movlw	7
  1867  001126  6FB3               	movwf	lcd_send_number_pos@column& (0+255),b
  1868  001128  C048  F1B4         	movff	_hours_counter,lcd_send_number_pos@num	;volatile
  1869  00112C  EC25  F02C         	call	_lcd_send_number_pos	;wreg free
  1870  001130                     
  1871                           ;app.c: 115:                 lcd_send_char_data_pos(&lcd,1,9,':');
  1872  001130  0E50               	movlw	low _lcd
  1873  001132  0100               	movlb	0	; () banked
  1874  001134  6F97               	movwf	lcd_send_char_data_pos@lcd& (0+255),b
  1875  001136  0E00               	movlw	high _lcd
  1876  001138  6F98               	movwf	(lcd_send_char_data_pos@lcd+1)& (0+255),b
  1877  00113A  0E01               	movlw	1
  1878  00113C  6F99               	movwf	lcd_send_char_data_pos@row& (0+255),b
  1879  00113E  0E09               	movlw	9
  1880  001140  6F9A               	movwf	lcd_send_char_data_pos@column& (0+255),b
  1881  001142  0E3A               	movlw	58
  1882  001144  6F9B               	movwf	lcd_send_char_data_pos@data& (0+255),b
  1883  001146  EC7F  F027         	call	_lcd_send_char_data_pos	;wreg free
  1884  00114A                     
  1885                           ;app.c: 116:                 convert_BCD_to_int(RTC1307._Minutes,&minutes_counter);
  1886  00114A  0E49               	movlw	low _minutes_counter
  1887  00114C  6E27               	movwf	convert_BCD_to_int@int_num^0,c
  1888  00114E  0E00               	movlw	high _minutes_counter
  1889  001150  6E28               	movwf	(convert_BCD_to_int@int_num+1)^0,c
  1890  001152  5042               	movf	(_RTC1307+1)^0,w,c	;volatile
  1891  001154  ECC6  F017         	call	_convert_BCD_to_int
  1892  001158                     
  1893                           ;app.c: 117:                 lcd_send_number_pos(&lcd,1,10,minutes_counter);
  1894  001158  0E50               	movlw	low _lcd
  1895  00115A  0101               	movlb	1	; () banked
  1896  00115C  6FB0               	movwf	lcd_send_number_pos@lcd& (0+255),b
  1897  00115E  0E00               	movlw	high _lcd
  1898  001160  6FB1               	movwf	(lcd_send_number_pos@lcd+1)& (0+255),b
  1899  001162  0E01               	movlw	1
  1900  001164  6FB2               	movwf	lcd_send_number_pos@row& (0+255),b
  1901  001166  0E0A               	movlw	10
  1902  001168  6FB3               	movwf	lcd_send_number_pos@column& (0+255),b
  1903  00116A  C049  F1B4         	movff	_minutes_counter,lcd_send_number_pos@num	;volatile
  1904  00116E  EC25  F02C         	call	_lcd_send_number_pos	;wreg free
  1905  001172                     
  1906                           ;app.c: 118:                 lcd_send_char_data_pos(&lcd,1,12,':');
  1907  001172  0E50               	movlw	low _lcd
  1908  001174  0100               	movlb	0	; () banked
  1909  001176  6F97               	movwf	lcd_send_char_data_pos@lcd& (0+255),b
  1910  001178  0E00               	movlw	high _lcd
  1911  00117A  6F98               	movwf	(lcd_send_char_data_pos@lcd+1)& (0+255),b
  1912  00117C  0E01               	movlw	1
  1913  00117E  6F99               	movwf	lcd_send_char_data_pos@row& (0+255),b
  1914  001180  0E0C               	movlw	12
  1915  001182  6F9A               	movwf	lcd_send_char_data_pos@column& (0+255),b
  1916  001184  0E3A               	movlw	58
  1917  001186  6F9B               	movwf	lcd_send_char_data_pos@data& (0+255),b
  1918  001188  EC7F  F027         	call	_lcd_send_char_data_pos	;wreg free
  1919  00118C                     
  1920                           ;app.c: 119:                 convert_BCD_to_int(RTC1307._Seconds,&seconds_counter);
  1921  00118C  0EFC               	movlw	low _seconds_counter
  1922  00118E  6E27               	movwf	convert_BCD_to_int@int_num^0,c
  1923  001190  0E00               	movlw	high _seconds_counter
  1924  001192  6E28               	movwf	(convert_BCD_to_int@int_num+1)^0,c
  1925  001194  5043               	movf	(_RTC1307+2)^0,w,c	;volatile
  1926  001196  ECC6  F017         	call	_convert_BCD_to_int
  1927  00119A                     
  1928                           ;app.c: 120:                 lcd_send_number_pos(&lcd,1,13,seconds_counter);
  1929  00119A  0E50               	movlw	low _lcd
  1930  00119C  0101               	movlb	1	; () banked
  1931  00119E  6FB0               	movwf	lcd_send_number_pos@lcd& (0+255),b
  1932  0011A0  0E00               	movlw	high _lcd
  1933  0011A2  6FB1               	movwf	(lcd_send_number_pos@lcd+1)& (0+255),b
  1934  0011A4  0E01               	movlw	1
  1935  0011A6  6FB2               	movwf	lcd_send_number_pos@row& (0+255),b
  1936  0011A8  0E0D               	movlw	13
  1937  0011AA  6FB3               	movwf	lcd_send_number_pos@column& (0+255),b
  1938  0011AC  C0FC  F1B4         	movff	_seconds_counter,lcd_send_number_pos@num	;volatile
  1939  0011B0  EC25  F02C         	call	_lcd_send_number_pos	;wreg free
  1940  0011B4                     
  1941                           ;app.c: 123:                 lcd_send_string_pos(&lcd,2,1,"DATE:");
  1942  0011B4  0E50               	movlw	low _lcd
  1943  0011B6  0100               	movlb	0	; () banked
  1944  0011B8  6F97               	movwf	lcd_send_string_pos@lcd& (0+255),b
  1945  0011BA  0E00               	movlw	high _lcd
  1946  0011BC  6F98               	movwf	(lcd_send_string_pos@lcd+1)& (0+255),b
  1947  0011BE  0E02               	movlw	2
  1948  0011C0  6F99               	movwf	lcd_send_string_pos@row& (0+255),b
  1949  0011C2  0E01               	movlw	1
  1950  0011C4  6F9A               	movwf	lcd_send_string_pos@column& (0+255),b
  1951  0011C6  0E55               	movlw	low STR_5
  1952  0011C8  6F9B               	movwf	lcd_send_string_pos@str& (0+255),b
  1953  0011CA  0E10               	movlw	high STR_5
  1954  0011CC  6F9C               	movwf	(lcd_send_string_pos@str+1)& (0+255),b
  1955  0011CE  EC0E  F026         	call	_lcd_send_string_pos	;wreg free
  1956  0011D2                     
  1957                           ;app.c: 124:                 convert_BCD_to_int(RTC1307._Day,&day_counter);
  1958  0011D2  0E58               	movlw	low _day_counter
  1959  0011D4  6E27               	movwf	convert_BCD_to_int@int_num^0,c
  1960  0011D6  0E00               	movlw	high _day_counter
  1961  0011D8  6E28               	movwf	(convert_BCD_to_int@int_num+1)^0,c
  1962  0011DA  5046               	movf	(_RTC1307+5)^0,w,c	;volatile
  1963  0011DC  ECC6  F017         	call	_convert_BCD_to_int
  1964  0011E0                     
  1965                           ;app.c: 125:                 lcd_send_number_pos(&lcd,2,7,day_counter);
  1966  0011E0  0E50               	movlw	low _lcd
  1967  0011E2  0101               	movlb	1	; () banked
  1968  0011E4  6FB0               	movwf	lcd_send_number_pos@lcd& (0+255),b
  1969  0011E6  0E00               	movlw	high _lcd
  1970  0011E8  6FB1               	movwf	(lcd_send_number_pos@lcd+1)& (0+255),b
  1971  0011EA  0E02               	movlw	2
  1972  0011EC  6FB2               	movwf	lcd_send_number_pos@row& (0+255),b
  1973  0011EE  0E07               	movlw	7
  1974  0011F0  6FB3               	movwf	lcd_send_number_pos@column& (0+255),b
  1975  0011F2  C058  F1B4         	movff	_day_counter,lcd_send_number_pos@num	;volatile
  1976  0011F6  EC25  F02C         	call	_lcd_send_number_pos	;wreg free
  1977  0011FA                     
  1978                           ;app.c: 126:                 lcd_send_char_data_pos(&lcd,2,9,'/');
  1979  0011FA  0E50               	movlw	low _lcd
  1980  0011FC  0100               	movlb	0	; () banked
  1981  0011FE  6F97               	movwf	lcd_send_char_data_pos@lcd& (0+255),b
  1982  001200  0E00               	movlw	high _lcd
  1983  001202  6F98               	movwf	(lcd_send_char_data_pos@lcd+1)& (0+255),b
  1984  001204  0E02               	movlw	2
  1985  001206  6F99               	movwf	lcd_send_char_data_pos@row& (0+255),b
  1986  001208  0E09               	movlw	9
  1987  00120A  6F9A               	movwf	lcd_send_char_data_pos@column& (0+255),b
  1988  00120C  0E2F               	movlw	47
  1989  00120E  6F9B               	movwf	lcd_send_char_data_pos@data& (0+255),b
  1990  001210  EC7F  F027         	call	_lcd_send_char_data_pos	;wreg free
  1991  001214                     
  1992                           ;app.c: 127:                 convert_BCD_to_int(RTC1307._Month,&month_counter);
  1993  001214  0E57               	movlw	low _month_counter
  1994  001216  6E27               	movwf	convert_BCD_to_int@int_num^0,c
  1995  001218  0E00               	movlw	high _month_counter
  1996  00121A  6E28               	movwf	(convert_BCD_to_int@int_num+1)^0,c
  1997  00121C  5045               	movf	(_RTC1307+4)^0,w,c	;volatile
  1998  00121E  ECC6  F017         	call	_convert_BCD_to_int
  1999  001222                     
  2000                           ;app.c: 128:                 lcd_send_number_pos(&lcd,2,10,RTC1307._Month);
  2001  001222  0E50               	movlw	low _lcd
  2002  001224  0101               	movlb	1	; () banked
  2003  001226  6FB0               	movwf	lcd_send_number_pos@lcd& (0+255),b
  2004  001228  0E00               	movlw	high _lcd
  2005  00122A  6FB1               	movwf	(lcd_send_number_pos@lcd+1)& (0+255),b
  2006  00122C  0E02               	movlw	2
  2007  00122E  6FB2               	movwf	lcd_send_number_pos@row& (0+255),b
  2008  001230  0E0A               	movlw	10
  2009  001232  6FB3               	movwf	lcd_send_number_pos@column& (0+255),b
  2010  001234  C045  F1B4         	movff	_RTC1307+4,lcd_send_number_pos@num	;volatile
  2011  001238  EC25  F02C         	call	_lcd_send_number_pos	;wreg free
  2012  00123C                     
  2013                           ;app.c: 129:                 lcd_send_char_data_pos(&lcd,2,12,'/');
  2014  00123C  0E50               	movlw	low _lcd
  2015  00123E  0100               	movlb	0	; () banked
  2016  001240  6F97               	movwf	lcd_send_char_data_pos@lcd& (0+255),b
  2017  001242  0E00               	movlw	high _lcd
  2018  001244  6F98               	movwf	(lcd_send_char_data_pos@lcd+1)& (0+255),b
  2019  001246  0E02               	movlw	2
  2020  001248  6F99               	movwf	lcd_send_char_data_pos@row& (0+255),b
  2021  00124A  0E0C               	movlw	12
  2022  00124C  6F9A               	movwf	lcd_send_char_data_pos@column& (0+255),b
  2023  00124E  0E2F               	movlw	47
  2024  001250  6F9B               	movwf	lcd_send_char_data_pos@data& (0+255),b
  2025  001252  EC7F  F027         	call	_lcd_send_char_data_pos	;wreg free
  2026  001256                     
  2027                           ;app.c: 130:                 convert_BCD_to_int(RTC1307._Year,&year_counter);
  2028  001256  0E56               	movlw	low _year_counter
  2029  001258  6E27               	movwf	convert_BCD_to_int@int_num^0,c
  2030  00125A  0E00               	movlw	high _year_counter
  2031  00125C  6E28               	movwf	(convert_BCD_to_int@int_num+1)^0,c
  2032  00125E  5044               	movf	(_RTC1307+3)^0,w,c	;volatile
  2033  001260  ECC6  F017         	call	_convert_BCD_to_int
  2034  001264                     
  2035                           ;app.c: 131:                 lcd_send_number_pos(&lcd,2,13,year_counter);
  2036  001264  0E50               	movlw	low _lcd
  2037  001266  0101               	movlb	1	; () banked
  2038  001268  6FB0               	movwf	lcd_send_number_pos@lcd& (0+255),b
  2039  00126A  0E00               	movlw	high _lcd
  2040  00126C  6FB1               	movwf	(lcd_send_number_pos@lcd+1)& (0+255),b
  2041  00126E  0E02               	movlw	2
  2042  001270  6FB2               	movwf	lcd_send_number_pos@row& (0+255),b
  2043  001272  0E0D               	movlw	13
  2044  001274  6FB3               	movwf	lcd_send_number_pos@column& (0+255),b
  2045  001276  C056  F1B4         	movff	_year_counter,lcd_send_number_pos@num	;volatile
  2046  00127A  EC25  F02C         	call	_lcd_send_number_pos	;wreg free
  2047  00127E                     
  2048                           ;app.c: 132:                 _delay((unsigned long)((500)*(8000000/4000.0)));
  2049  00127E  0E06               	movlw	6
  2050  001280  0101               	movlb	1	; () banked
  2051  001282  6FB8               	movwf	(??_main+1)& (0+255),b
  2052  001284  0E13               	movlw	19
  2053  001286  6FB7               	movwf	??_main& (0+255),b
  2054  001288  0EAD               	movlw	173
  2055  00128A                     u11637:
  2056  00128A  2EE8               	decfsz	wreg,f,c
  2057  00128C  D7FE               	bra	u11637
  2058  00128E  2FB7               	decfsz	??_main& (0+255),f,b
  2059  001290  D7FC               	bra	u11637
  2060  001292  2FB8               	decfsz	(??_main+1)& (0+255),f,b
  2061  001294  D7FA               	bra	u11637
  2062  001296  D000               	nop2	
  2063  001298                     
  2064                           ;app.c: 133:                 if(minutes_counter==ALARM_RTC._Minutes && hours_counter==AL
      +                          ARM_RTC._Hours){
  2065  001298  5049               	movf	_minutes_counter^0,w,c	;volatile
  2066  00129A  0101               	movlb	1	; () banked
  2067  00129C  1901               	xorwf	(_ALARM_RTC+1)& (0+255),w,b	;volatile
  2068  00129E  A4D8               	btfss	status,2,c
  2069  0012A0  EF54  F009         	goto	u11501
  2070  0012A4  EF56  F009         	goto	u11500
  2071  0012A8                     u11501:
  2072  0012A8  EF87  F009         	goto	l13093
  2073  0012AC                     u11500:
  2074  0012AC                     
  2075                           ; BSR set to: 1
  2076  0012AC  5048               	movf	_hours_counter^0,w,c	;volatile
  2077  0012AE  1900               	xorwf	_ALARM_RTC& (0+255),w,b	;volatile
  2078  0012B0  A4D8               	btfss	status,2,c
  2079  0012B2  EF5D  F009         	goto	u11511
  2080  0012B6  EF5F  F009         	goto	u11510
  2081  0012BA                     u11511:
  2082  0012BA  EF87  F009         	goto	l13093
  2083  0012BE                     u11510:
  2084  0012BE                     
  2085                           ; BSR set to: 1
  2086                           ;app.c: 134:                     buzzer_on(&buzzer);
  2087  0012BE  0EFE               	movlw	low _buzzer
  2088  0012C0  0100               	movlb	0	; () banked
  2089  0012C2  6F80               	movwf	buzzer_on@buzzer& (0+255),b
  2090  0012C4  0E00               	movlw	high _buzzer
  2091  0012C6  6F81               	movwf	(buzzer_on@buzzer+1)& (0+255),b
  2092  0012C8  EC4F  F02B         	call	_buzzer_on	;wreg free
  2093  0012CC                     
  2094                           ;app.c: 135:                     _delay((unsigned long)((500)*(8000000/4000.0)));
  2095  0012CC  0E06               	movlw	6
  2096  0012CE  0101               	movlb	1	; () banked
  2097  0012D0  6FB8               	movwf	(??_main+1)& (0+255),b
  2098  0012D2  0E13               	movlw	19
  2099  0012D4  6FB7               	movwf	??_main& (0+255),b
  2100  0012D6  0EAD               	movlw	173
  2101  0012D8                     u11647:
  2102  0012D8  2EE8               	decfsz	wreg,f,c
  2103  0012DA  D7FE               	bra	u11647
  2104  0012DC  2FB7               	decfsz	??_main& (0+255),f,b
  2105  0012DE  D7FC               	bra	u11647
  2106  0012E0  2FB8               	decfsz	(??_main+1)& (0+255),f,b
  2107  0012E2  D7FA               	bra	u11647
  2108  0012E4  D000               	nop2	
  2109  0012E6                     
  2110                           ;app.c: 136:                     buzzer_off(&buzzer);
  2111  0012E6  0EFE               	movlw	low _buzzer
  2112  0012E8  0100               	movlb	0	; () banked
  2113  0012EA  6F80               	movwf	buzzer_off@buzzer& (0+255),b
  2114  0012EC  0E00               	movlw	high _buzzer
  2115  0012EE  6F81               	movwf	(buzzer_off@buzzer+1)& (0+255),b
  2116  0012F0  EC7B  F02B         	call	_buzzer_off	;wreg free
  2117                           
  2118                           ;app.c: 137:                     _delay((unsigned long)((500)*(8000000/4000.0)));
  2119  0012F4  0E06               	movlw	6
  2120  0012F6  0101               	movlb	1	; () banked
  2121  0012F8  6FB8               	movwf	(??_main+1)& (0+255),b
  2122  0012FA  0E13               	movlw	19
  2123  0012FC  6FB7               	movwf	??_main& (0+255),b
  2124  0012FE  0EAD               	movlw	173
  2125  001300                     u11657:
  2126  001300  2EE8               	decfsz	wreg,f,c
  2127  001302  D7FE               	bra	u11657
  2128  001304  2FB7               	decfsz	??_main& (0+255),f,b
  2129  001306  D7FC               	bra	u11657
  2130  001308  2FB8               	decfsz	(??_main+1)& (0+255),f,b
  2131  00130A  D7FA               	bra	u11657
  2132  00130C  D000               	nop2	
  2133  00130E                     l13093:
  2134                           
  2135                           ;app.c: 141:             if(mode_counter==0){
  2136  00130E  0100               	movlb	0	; () banked
  2137  001310  51FB               	movf	_mode_counter& (0+255),w,b	;volatile
  2138  001312  A4D8               	btfss	status,2,c
  2139  001314  EF8E  F009         	goto	u11521
  2140  001318  EF90  F009         	goto	u11520
  2141  00131C                     u11521:
  2142  00131C  EFD4  F00A         	goto	l13155
  2143  001320                     u11520:
  2144  001320                     
  2145                           ; BSR set to: 0
  2146                           ;app.c: 142:                 if(option_counter==1){
  2147  001320  043B               	decf	_option_counter^0,w,c	;volatile
  2148  001322  A4D8               	btfss	status,2,c
  2149  001324  EF96  F009         	goto	u11531
  2150  001328  EF98  F009         	goto	u11530
  2151  00132C                     u11531:
  2152  00132C  EFDA  F009         	goto	l13107
  2153  001330                     u11530:
  2154  001330                     
  2155                           ; BSR set to: 0
  2156                           ;app.c: 144:                     lcd_send_command(&lcd,0X01);
  2157  001330  0E50               	movlw	low _lcd
  2158  001332  6F89               	movwf	lcd_send_command@lcd& (0+255),b
  2159  001334  0E00               	movlw	high _lcd
  2160  001336  6F8A               	movwf	(lcd_send_command@lcd+1)& (0+255),b
  2161  001338  0E01               	movlw	1
  2162  00133A  6F8B               	movwf	lcd_send_command@command& (0+255),b
  2163  00133C  EC04  F025         	call	_lcd_send_command	;wreg free
  2164  001340                     
  2165                           ;app.c: 145:                     lcd_send_string_pos(&lcd,1,1,"CLOCK MODE");
  2166  001340  0E50               	movlw	low _lcd
  2167  001342  0100               	movlb	0	; () banked
  2168  001344  6F97               	movwf	lcd_send_string_pos@lcd& (0+255),b
  2169  001346  0E00               	movlw	high _lcd
  2170  001348  6F98               	movwf	(lcd_send_string_pos@lcd+1)& (0+255),b
  2171  00134A  0E01               	movlw	1
  2172  00134C  6F99               	movwf	lcd_send_string_pos@row& (0+255),b
  2173  00134E  0E01               	movlw	1
  2174  001350  6F9A               	movwf	lcd_send_string_pos@column& (0+255),b
  2175  001352  0E2D               	movlw	low STR_6
  2176  001354  6F9B               	movwf	lcd_send_string_pos@str& (0+255),b
  2177  001356  0E10               	movlw	high STR_6
  2178  001358  6F9C               	movwf	(lcd_send_string_pos@str+1)& (0+255),b
  2179  00135A  EC0E  F026         	call	_lcd_send_string_pos	;wreg free
  2180  00135E                     
  2181                           ;app.c: 146:                     lcd_send_string_pos(&lcd,2,1,"minutes:");
  2182  00135E  0E50               	movlw	low _lcd
  2183  001360  0100               	movlb	0	; () banked
  2184  001362  6F97               	movwf	lcd_send_string_pos@lcd& (0+255),b
  2185  001364  0E00               	movlw	high _lcd
  2186  001366  6F98               	movwf	(lcd_send_string_pos@lcd+1)& (0+255),b
  2187  001368  0E02               	movlw	2
  2188  00136A  6F99               	movwf	lcd_send_string_pos@row& (0+255),b
  2189  00136C  0E01               	movlw	1
  2190  00136E  6F9A               	movwf	lcd_send_string_pos@column& (0+255),b
  2191  001370  0E38               	movlw	low STR_7
  2192  001372  6F9B               	movwf	lcd_send_string_pos@str& (0+255),b
  2193  001374  0E10               	movlw	high STR_7
  2194  001376  6F9C               	movwf	(lcd_send_string_pos@str+1)& (0+255),b
  2195  001378  EC0E  F026         	call	_lcd_send_string_pos	;wreg free
  2196  00137C                     l13103:
  2197                           
  2198                           ;app.c: 147:                     lcd_send_number_pos(&lcd,2,10,minutes_counter);
  2199  00137C  0E50               	movlw	low _lcd
  2200  00137E  0101               	movlb	1	; () banked
  2201  001380  6FB0               	movwf	lcd_send_number_pos@lcd& (0+255),b
  2202  001382  0E00               	movlw	high _lcd
  2203  001384  6FB1               	movwf	(lcd_send_number_pos@lcd+1)& (0+255),b
  2204  001386  0E02               	movlw	2
  2205  001388  6FB2               	movwf	lcd_send_number_pos@row& (0+255),b
  2206  00138A  0E0A               	movlw	10
  2207  00138C  6FB3               	movwf	lcd_send_number_pos@column& (0+255),b
  2208  00138E  C049  F1B4         	movff	_minutes_counter,lcd_send_number_pos@num	;volatile
  2209  001392  EC25  F02C         	call	_lcd_send_number_pos	;wreg free
  2210  001396                     l13105:
  2211                           
  2212                           ;app.c: 148:                     _delay((unsigned long)((500)*(8000000/4000.0)));
  2213  001396  0E06               	movlw	6
  2214  001398  0101               	movlb	1	; () banked
  2215  00139A  6FB8               	movwf	(??_main+1)& (0+255),b
  2216  00139C  0E13               	movlw	19
  2217  00139E  6FB7               	movwf	??_main& (0+255),b
  2218  0013A0  0EAD               	movlw	173
  2219  0013A2                     u11667:
  2220  0013A2  2EE8               	decfsz	wreg,f,c
  2221  0013A4  D7FE               	bra	u11667
  2222  0013A6  2FB7               	decfsz	??_main& (0+255),f,b
  2223  0013A8  D7FC               	bra	u11667
  2224  0013AA  2FB8               	decfsz	(??_main+1)& (0+255),f,b
  2225  0013AC  D7FA               	bra	u11667
  2226  0013AE  D000               	nop2	
  2227                           
  2228                           ;app.c: 150:                 }
  2229  0013B0  EF37  F008         	goto	l13031
  2230  0013B4                     l13107:
  2231                           
  2232                           ; BSR set to: 0
  2233  0013B4  0E02               	movlw	2
  2234  0013B6  183B               	xorwf	_option_counter^0,w,c	;volatile
  2235  0013B8  A4D8               	btfss	status,2,c
  2236  0013BA  EFE1  F009         	goto	u11541
  2237  0013BE  EFE3  F009         	goto	u11540
  2238  0013C2                     u11541:
  2239  0013C2  EF18  F00A         	goto	l13119
  2240  0013C6                     u11540:
  2241  0013C6                     
  2242                           ; BSR set to: 0
  2243                           ;app.c: 153:                     lcd_send_command(&lcd,0X01);
  2244  0013C6  0E50               	movlw	low _lcd
  2245  0013C8  6F89               	movwf	lcd_send_command@lcd& (0+255),b
  2246  0013CA  0E00               	movlw	high _lcd
  2247  0013CC  6F8A               	movwf	(lcd_send_command@lcd+1)& (0+255),b
  2248  0013CE  0E01               	movlw	1
  2249  0013D0  6F8B               	movwf	lcd_send_command@command& (0+255),b
  2250  0013D2  EC04  F025         	call	_lcd_send_command	;wreg free
  2251  0013D6                     
  2252                           ;app.c: 154:                     lcd_send_string_pos(&lcd,1,1,"CLOCK MODE");
  2253  0013D6  0E50               	movlw	low _lcd
  2254  0013D8  0100               	movlb	0	; () banked
  2255  0013DA  6F97               	movwf	lcd_send_string_pos@lcd& (0+255),b
  2256  0013DC  0E00               	movlw	high _lcd
  2257  0013DE  6F98               	movwf	(lcd_send_string_pos@lcd+1)& (0+255),b
  2258  0013E0  0E01               	movlw	1
  2259  0013E2  6F99               	movwf	lcd_send_string_pos@row& (0+255),b
  2260  0013E4  0E01               	movlw	1
  2261  0013E6  6F9A               	movwf	lcd_send_string_pos@column& (0+255),b
  2262  0013E8  0E2D               	movlw	low STR_6
  2263  0013EA  6F9B               	movwf	lcd_send_string_pos@str& (0+255),b
  2264  0013EC  0E10               	movlw	high STR_6
  2265  0013EE  6F9C               	movwf	(lcd_send_string_pos@str+1)& (0+255),b
  2266  0013F0  EC0E  F026         	call	_lcd_send_string_pos	;wreg free
  2267  0013F4                     
  2268                           ;app.c: 155:                     lcd_send_string_pos(&lcd,2,1,"hours:");
  2269  0013F4  0E50               	movlw	low _lcd
  2270  0013F6  0100               	movlb	0	; () banked
  2271  0013F8  6F97               	movwf	lcd_send_string_pos@lcd& (0+255),b
  2272  0013FA  0E00               	movlw	high _lcd
  2273  0013FC  6F98               	movwf	(lcd_send_string_pos@lcd+1)& (0+255),b
  2274  0013FE  0E02               	movlw	2
  2275  001400  6F99               	movwf	lcd_send_string_pos@row& (0+255),b
  2276  001402  0E01               	movlw	1
  2277  001404  6F9A               	movwf	lcd_send_string_pos@column& (0+255),b
  2278  001406  0E48               	movlw	low STR_9
  2279  001408  6F9B               	movwf	lcd_send_string_pos@str& (0+255),b
  2280  00140A  0E10               	movlw	high STR_9
  2281  00140C  6F9C               	movwf	(lcd_send_string_pos@str+1)& (0+255),b
  2282  00140E  EC0E  F026         	call	_lcd_send_string_pos	;wreg free
  2283  001412                     l13115:
  2284                           
  2285                           ;app.c: 156:                     lcd_send_number_pos(&lcd,2,8,hours_counter);
  2286  001412  0E50               	movlw	low _lcd
  2287  001414  0101               	movlb	1	; () banked
  2288  001416  6FB0               	movwf	lcd_send_number_pos@lcd& (0+255),b
  2289  001418  0E00               	movlw	high _lcd
  2290  00141A  6FB1               	movwf	(lcd_send_number_pos@lcd+1)& (0+255),b
  2291  00141C  0E02               	movlw	2
  2292  00141E  6FB2               	movwf	lcd_send_number_pos@row& (0+255),b
  2293  001420  0E08               	movlw	8
  2294  001422  6FB3               	movwf	lcd_send_number_pos@column& (0+255),b
  2295  001424  C048  F1B4         	movff	_hours_counter,lcd_send_number_pos@num	;volatile
  2296  001428  EC25  F02C         	call	_lcd_send_number_pos	;wreg free
  2297  00142C  EFCB  F009         	goto	l13105
  2298  001430                     l13119:
  2299                           
  2300                           ; BSR set to: 0
  2301  001430  0E03               	movlw	3
  2302  001432  183B               	xorwf	_option_counter^0,w,c	;volatile
  2303  001434  A4D8               	btfss	status,2,c
  2304  001436  EF1F  F00A         	goto	u11551
  2305  00143A  EF21  F00A         	goto	u11550
  2306  00143E                     u11551:
  2307  00143E  EF56  F00A         	goto	l13131
  2308  001442                     u11550:
  2309  001442                     
  2310                           ; BSR set to: 0
  2311                           ;app.c: 161:                     lcd_send_command(&lcd,0X01);
  2312  001442  0E50               	movlw	low _lcd
  2313  001444  6F89               	movwf	lcd_send_command@lcd& (0+255),b
  2314  001446  0E00               	movlw	high _lcd
  2315  001448  6F8A               	movwf	(lcd_send_command@lcd+1)& (0+255),b
  2316  00144A  0E01               	movlw	1
  2317  00144C  6F8B               	movwf	lcd_send_command@command& (0+255),b
  2318  00144E  EC04  F025         	call	_lcd_send_command	;wreg free
  2319  001452                     
  2320                           ;app.c: 162:                     lcd_send_string_pos(&lcd,1,1,"CLOCK MODE");
  2321  001452  0E50               	movlw	low _lcd
  2322  001454  0100               	movlb	0	; () banked
  2323  001456  6F97               	movwf	lcd_send_string_pos@lcd& (0+255),b
  2324  001458  0E00               	movlw	high _lcd
  2325  00145A  6F98               	movwf	(lcd_send_string_pos@lcd+1)& (0+255),b
  2326  00145C  0E01               	movlw	1
  2327  00145E  6F99               	movwf	lcd_send_string_pos@row& (0+255),b
  2328  001460  0E01               	movlw	1
  2329  001462  6F9A               	movwf	lcd_send_string_pos@column& (0+255),b
  2330  001464  0E2D               	movlw	low STR_6
  2331  001466  6F9B               	movwf	lcd_send_string_pos@str& (0+255),b
  2332  001468  0E10               	movlw	high STR_6
  2333  00146A  6F9C               	movwf	(lcd_send_string_pos@str+1)& (0+255),b
  2334  00146C  EC0E  F026         	call	_lcd_send_string_pos	;wreg free
  2335  001470                     
  2336                           ;app.c: 163:                     lcd_send_string_pos(&lcd,2,1,"day:");
  2337  001470  0E50               	movlw	low _lcd
  2338  001472  0100               	movlb	0	; () banked
  2339  001474  6F97               	movwf	lcd_send_string_pos@lcd& (0+255),b
  2340  001476  0E00               	movlw	high _lcd
  2341  001478  6F98               	movwf	(lcd_send_string_pos@lcd+1)& (0+255),b
  2342  00147A  0E02               	movlw	2
  2343  00147C  6F99               	movwf	lcd_send_string_pos@row& (0+255),b
  2344  00147E  0E01               	movlw	1
  2345  001480  6F9A               	movwf	lcd_send_string_pos@column& (0+255),b
  2346  001482  0E61               	movlw	low STR_11
  2347  001484  6F9B               	movwf	lcd_send_string_pos@str& (0+255),b
  2348  001486  0E10               	movlw	high STR_11
  2349  001488  6F9C               	movwf	(lcd_send_string_pos@str+1)& (0+255),b
  2350  00148A  EC0E  F026         	call	_lcd_send_string_pos	;wreg free
  2351  00148E                     l13127:
  2352                           
  2353                           ;app.c: 164:                     lcd_send_number_pos(&lcd,2,6,day_counter);
  2354  00148E  0E50               	movlw	low _lcd
  2355  001490  0101               	movlb	1	; () banked
  2356  001492  6FB0               	movwf	lcd_send_number_pos@lcd& (0+255),b
  2357  001494  0E00               	movlw	high _lcd
  2358  001496  6FB1               	movwf	(lcd_send_number_pos@lcd+1)& (0+255),b
  2359  001498  0E02               	movlw	2
  2360  00149A  6FB2               	movwf	lcd_send_number_pos@row& (0+255),b
  2361  00149C  0E06               	movlw	6
  2362  00149E  6FB3               	movwf	lcd_send_number_pos@column& (0+255),b
  2363  0014A0  C058  F1B4         	movff	_day_counter,lcd_send_number_pos@num	;volatile
  2364  0014A4  EC25  F02C         	call	_lcd_send_number_pos	;wreg free
  2365  0014A8  EFCB  F009         	goto	l13105
  2366  0014AC                     l13131:
  2367                           
  2368                           ; BSR set to: 0
  2369  0014AC  0E04               	movlw	4
  2370  0014AE  183B               	xorwf	_option_counter^0,w,c	;volatile
  2371  0014B0  A4D8               	btfss	status,2,c
  2372  0014B2  EF5D  F00A         	goto	u11561
  2373  0014B6  EF5F  F00A         	goto	u11560
  2374  0014BA                     u11561:
  2375  0014BA  EF94  F00A         	goto	l13143
  2376  0014BE                     u11560:
  2377  0014BE                     
  2378                           ; BSR set to: 0
  2379                           ;app.c: 169:                     lcd_send_command(&lcd,0X01);
  2380  0014BE  0E50               	movlw	low _lcd
  2381  0014C0  6F89               	movwf	lcd_send_command@lcd& (0+255),b
  2382  0014C2  0E00               	movlw	high _lcd
  2383  0014C4  6F8A               	movwf	(lcd_send_command@lcd+1)& (0+255),b
  2384  0014C6  0E01               	movlw	1
  2385  0014C8  6F8B               	movwf	lcd_send_command@command& (0+255),b
  2386  0014CA  EC04  F025         	call	_lcd_send_command	;wreg free
  2387  0014CE                     
  2388                           ;app.c: 170:                     lcd_send_string_pos(&lcd,1,1,"CLOCK MODE");
  2389  0014CE  0E50               	movlw	low _lcd
  2390  0014D0  0100               	movlb	0	; () banked
  2391  0014D2  6F97               	movwf	lcd_send_string_pos@lcd& (0+255),b
  2392  0014D4  0E00               	movlw	high _lcd
  2393  0014D6  6F98               	movwf	(lcd_send_string_pos@lcd+1)& (0+255),b
  2394  0014D8  0E01               	movlw	1
  2395  0014DA  6F99               	movwf	lcd_send_string_pos@row& (0+255),b
  2396  0014DC  0E01               	movlw	1
  2397  0014DE  6F9A               	movwf	lcd_send_string_pos@column& (0+255),b
  2398  0014E0  0E2D               	movlw	low STR_6
  2399  0014E2  6F9B               	movwf	lcd_send_string_pos@str& (0+255),b
  2400  0014E4  0E10               	movlw	high STR_6
  2401  0014E6  6F9C               	movwf	(lcd_send_string_pos@str+1)& (0+255),b
  2402  0014E8  EC0E  F026         	call	_lcd_send_string_pos	;wreg free
  2403  0014EC                     
  2404                           ;app.c: 171:                     lcd_send_string_pos(&lcd,2,1,"month:");
  2405  0014EC  0E50               	movlw	low _lcd
  2406  0014EE  0100               	movlb	0	; () banked
  2407  0014F0  6F97               	movwf	lcd_send_string_pos@lcd& (0+255),b
  2408  0014F2  0E00               	movlw	high _lcd
  2409  0014F4  6F98               	movwf	(lcd_send_string_pos@lcd+1)& (0+255),b
  2410  0014F6  0E02               	movlw	2
  2411  0014F8  6F99               	movwf	lcd_send_string_pos@row& (0+255),b
  2412  0014FA  0E01               	movlw	1
  2413  0014FC  6F9A               	movwf	lcd_send_string_pos@column& (0+255),b
  2414  0014FE  0E41               	movlw	low STR_13
  2415  001500  6F9B               	movwf	lcd_send_string_pos@str& (0+255),b
  2416  001502  0E10               	movlw	high STR_13
  2417  001504  6F9C               	movwf	(lcd_send_string_pos@str+1)& (0+255),b
  2418  001506  EC0E  F026         	call	_lcd_send_string_pos	;wreg free
  2419  00150A                     
  2420                           ;app.c: 172:                     lcd_send_number_pos(&lcd,2,8,month_counter);
  2421  00150A  0E50               	movlw	low _lcd
  2422  00150C  0101               	movlb	1	; () banked
  2423  00150E  6FB0               	movwf	lcd_send_number_pos@lcd& (0+255),b
  2424  001510  0E00               	movlw	high _lcd
  2425  001512  6FB1               	movwf	(lcd_send_number_pos@lcd+1)& (0+255),b
  2426  001514  0E02               	movlw	2
  2427  001516  6FB2               	movwf	lcd_send_number_pos@row& (0+255),b
  2428  001518  0E08               	movlw	8
  2429  00151A  6FB3               	movwf	lcd_send_number_pos@column& (0+255),b
  2430  00151C  C057  F1B4         	movff	_month_counter,lcd_send_number_pos@num	;volatile
  2431  001520  EC25  F02C         	call	_lcd_send_number_pos	;wreg free
  2432  001524  EFCB  F009         	goto	l13105
  2433  001528                     l13143:
  2434                           
  2435                           ; BSR set to: 0
  2436  001528  0E05               	movlw	5
  2437  00152A  183B               	xorwf	_option_counter^0,w,c	;volatile
  2438  00152C  A4D8               	btfss	status,2,c
  2439  00152E  EF9B  F00A         	goto	u11571
  2440  001532  EF9D  F00A         	goto	u11570
  2441  001536                     u11571:
  2442  001536  EFD2  F00A         	goto	l1529
  2443  00153A                     u11570:
  2444  00153A                     
  2445                           ; BSR set to: 0
  2446                           ;app.c: 177:                     lcd_send_command(&lcd,0X01);
  2447  00153A  0E50               	movlw	low _lcd
  2448  00153C  6F89               	movwf	lcd_send_command@lcd& (0+255),b
  2449  00153E  0E00               	movlw	high _lcd
  2450  001540  6F8A               	movwf	(lcd_send_command@lcd+1)& (0+255),b
  2451  001542  0E01               	movlw	1
  2452  001544  6F8B               	movwf	lcd_send_command@command& (0+255),b
  2453  001546  EC04  F025         	call	_lcd_send_command	;wreg free
  2454  00154A                     
  2455                           ;app.c: 178:                     lcd_send_string_pos(&lcd,1,1,"CLOCK MODE");
  2456  00154A  0E50               	movlw	low _lcd
  2457  00154C  0100               	movlb	0	; () banked
  2458  00154E  6F97               	movwf	lcd_send_string_pos@lcd& (0+255),b
  2459  001550  0E00               	movlw	high _lcd
  2460  001552  6F98               	movwf	(lcd_send_string_pos@lcd+1)& (0+255),b
  2461  001554  0E01               	movlw	1
  2462  001556  6F99               	movwf	lcd_send_string_pos@row& (0+255),b
  2463  001558  0E01               	movlw	1
  2464  00155A  6F9A               	movwf	lcd_send_string_pos@column& (0+255),b
  2465  00155C  0E2D               	movlw	low STR_6
  2466  00155E  6F9B               	movwf	lcd_send_string_pos@str& (0+255),b
  2467  001560  0E10               	movlw	high STR_6
  2468  001562  6F9C               	movwf	(lcd_send_string_pos@str+1)& (0+255),b
  2469  001564  EC0E  F026         	call	_lcd_send_string_pos	;wreg free
  2470  001568                     
  2471                           ;app.c: 179:                     lcd_send_string_pos(&lcd,2,1,"year:");
  2472  001568  0E50               	movlw	low _lcd
  2473  00156A  0100               	movlb	0	; () banked
  2474  00156C  6F97               	movwf	lcd_send_string_pos@lcd& (0+255),b
  2475  00156E  0E00               	movlw	high _lcd
  2476  001570  6F98               	movwf	(lcd_send_string_pos@lcd+1)& (0+255),b
  2477  001572  0E02               	movlw	2
  2478  001574  6F99               	movwf	lcd_send_string_pos@row& (0+255),b
  2479  001576  0E01               	movlw	1
  2480  001578  6F9A               	movwf	lcd_send_string_pos@column& (0+255),b
  2481  00157A  0E5B               	movlw	low STR_15
  2482  00157C  6F9B               	movwf	lcd_send_string_pos@str& (0+255),b
  2483  00157E  0E10               	movlw	high STR_15
  2484  001580  6F9C               	movwf	(lcd_send_string_pos@str+1)& (0+255),b
  2485  001582  EC0E  F026         	call	_lcd_send_string_pos	;wreg free
  2486  001586                     
  2487                           ;app.c: 180:                     lcd_send_number_pos(&lcd,2,7,year_counter);
  2488  001586  0E50               	movlw	low _lcd
  2489  001588  0101               	movlb	1	; () banked
  2490  00158A  6FB0               	movwf	lcd_send_number_pos@lcd& (0+255),b
  2491  00158C  0E00               	movlw	high _lcd
  2492  00158E  6FB1               	movwf	(lcd_send_number_pos@lcd+1)& (0+255),b
  2493  001590  0E02               	movlw	2
  2494  001592  6FB2               	movwf	lcd_send_number_pos@row& (0+255),b
  2495  001594  0E07               	movlw	7
  2496  001596  6FB3               	movwf	lcd_send_number_pos@column& (0+255),b
  2497  001598  C056  F1B4         	movff	_year_counter,lcd_send_number_pos@num	;volatile
  2498  00159C  EC25  F02C         	call	_lcd_send_number_pos	;wreg free
  2499  0015A0  EFCB  F009         	goto	l13105
  2500  0015A4                     l1529:
  2501                           
  2502                           ; BSR set to: 0
  2503  0015A4  EF37  F008         	goto	l13031
  2504  0015A8                     l13155:
  2505                           
  2506                           ; BSR set to: 0
  2507  0015A8  05FB               	decf	_mode_counter& (0+255),w,b	;volatile
  2508  0015AA  A4D8               	btfss	status,2,c
  2509  0015AC  EFDA  F00A         	goto	u11581
  2510  0015B0  EFDC  F00A         	goto	u11580
  2511  0015B4                     u11581:
  2512  0015B4  EF37  F008         	goto	l13031
  2513  0015B8                     u11580:
  2514  0015B8                     
  2515                           ; BSR set to: 0
  2516                           ;app.c: 185:                 if(option_counter==1){
  2517  0015B8  043B               	decf	_option_counter^0,w,c	;volatile
  2518  0015BA  A4D8               	btfss	status,2,c
  2519  0015BC  EFE2  F00A         	goto	u11591
  2520  0015C0  EFE4  F00A         	goto	u11590
  2521  0015C4                     u11591:
  2522  0015C4  EF0C  F00B         	goto	l13169
  2523  0015C8                     u11590:
  2524  0015C8                     
  2525                           ; BSR set to: 0
  2526                           ;app.c: 187:                     lcd_send_command(&lcd,0X01);
  2527  0015C8  0E50               	movlw	low _lcd
  2528  0015CA  6F89               	movwf	lcd_send_command@lcd& (0+255),b
  2529  0015CC  0E00               	movlw	high _lcd
  2530  0015CE  6F8A               	movwf	(lcd_send_command@lcd+1)& (0+255),b
  2531  0015D0  0E01               	movlw	1
  2532  0015D2  6F8B               	movwf	lcd_send_command@command& (0+255),b
  2533  0015D4  EC04  F025         	call	_lcd_send_command	;wreg free
  2534  0015D8                     
  2535                           ;app.c: 188:                     lcd_send_string_pos(&lcd,1,1,"ALLARM MODE");
  2536  0015D8  0E50               	movlw	low _lcd
  2537  0015DA  0100               	movlb	0	; () banked
  2538  0015DC  6F97               	movwf	lcd_send_string_pos@lcd& (0+255),b
  2539  0015DE  0E00               	movlw	high _lcd
  2540  0015E0  6F98               	movwf	(lcd_send_string_pos@lcd+1)& (0+255),b
  2541  0015E2  0E01               	movlw	1
  2542  0015E4  6F99               	movwf	lcd_send_string_pos@row& (0+255),b
  2543  0015E6  0E01               	movlw	1
  2544  0015E8  6F9A               	movwf	lcd_send_string_pos@column& (0+255),b
  2545  0015EA  0E21               	movlw	low STR_16
  2546  0015EC  6F9B               	movwf	lcd_send_string_pos@str& (0+255),b
  2547  0015EE  0E10               	movlw	high STR_16
  2548  0015F0  6F9C               	movwf	(lcd_send_string_pos@str+1)& (0+255),b
  2549  0015F2  EC0E  F026         	call	_lcd_send_string_pos	;wreg free
  2550  0015F6                     
  2551                           ;app.c: 189:                     lcd_send_string_pos(&lcd,2,1,"minutes:");
  2552  0015F6  0E50               	movlw	low _lcd
  2553  0015F8  0100               	movlb	0	; () banked
  2554  0015FA  6F97               	movwf	lcd_send_string_pos@lcd& (0+255),b
  2555  0015FC  0E00               	movlw	high _lcd
  2556  0015FE  6F98               	movwf	(lcd_send_string_pos@lcd+1)& (0+255),b
  2557  001600  0E02               	movlw	2
  2558  001602  6F99               	movwf	lcd_send_string_pos@row& (0+255),b
  2559  001604  0E01               	movlw	1
  2560  001606  6F9A               	movwf	lcd_send_string_pos@column& (0+255),b
  2561  001608  0E38               	movlw	low STR_7
  2562  00160A  6F9B               	movwf	lcd_send_string_pos@str& (0+255),b
  2563  00160C  0E10               	movlw	high STR_7
  2564  00160E  6F9C               	movwf	(lcd_send_string_pos@str+1)& (0+255),b
  2565  001610  EC0E  F026         	call	_lcd_send_string_pos	;wreg free
  2566  001614  EFBE  F009         	goto	l13103
  2567  001618                     l13169:
  2568                           
  2569                           ; BSR set to: 0
  2570  001618  0E02               	movlw	2
  2571  00161A  183B               	xorwf	_option_counter^0,w,c	;volatile
  2572  00161C  A4D8               	btfss	status,2,c
  2573  00161E  EF13  F00B         	goto	u11601
  2574  001622  EF15  F00B         	goto	u11600
  2575  001626                     u11601:
  2576  001626  EF3D  F00B         	goto	l13181
  2577  00162A                     u11600:
  2578  00162A                     
  2579                           ; BSR set to: 0
  2580                           ;app.c: 195:                     lcd_send_command(&lcd,0X01);
  2581  00162A  0E50               	movlw	low _lcd
  2582  00162C  6F89               	movwf	lcd_send_command@lcd& (0+255),b
  2583  00162E  0E00               	movlw	high _lcd
  2584  001630  6F8A               	movwf	(lcd_send_command@lcd+1)& (0+255),b
  2585  001632  0E01               	movlw	1
  2586  001634  6F8B               	movwf	lcd_send_command@command& (0+255),b
  2587  001636  EC04  F025         	call	_lcd_send_command	;wreg free
  2588  00163A                     
  2589                           ;app.c: 196:                     lcd_send_string_pos(&lcd,1,1,"ALLARM MODE");
  2590  00163A  0E50               	movlw	low _lcd
  2591  00163C  0100               	movlb	0	; () banked
  2592  00163E  6F97               	movwf	lcd_send_string_pos@lcd& (0+255),b
  2593  001640  0E00               	movlw	high _lcd
  2594  001642  6F98               	movwf	(lcd_send_string_pos@lcd+1)& (0+255),b
  2595  001644  0E01               	movlw	1
  2596  001646  6F99               	movwf	lcd_send_string_pos@row& (0+255),b
  2597  001648  0E01               	movlw	1
  2598  00164A  6F9A               	movwf	lcd_send_string_pos@column& (0+255),b
  2599  00164C  0E21               	movlw	low STR_16
  2600  00164E  6F9B               	movwf	lcd_send_string_pos@str& (0+255),b
  2601  001650  0E10               	movlw	high STR_16
  2602  001652  6F9C               	movwf	(lcd_send_string_pos@str+1)& (0+255),b
  2603  001654  EC0E  F026         	call	_lcd_send_string_pos	;wreg free
  2604  001658                     
  2605                           ;app.c: 197:                     lcd_send_string_pos(&lcd,2,1,"hours:");
  2606  001658  0E50               	movlw	low _lcd
  2607  00165A  0100               	movlb	0	; () banked
  2608  00165C  6F97               	movwf	lcd_send_string_pos@lcd& (0+255),b
  2609  00165E  0E00               	movlw	high _lcd
  2610  001660  6F98               	movwf	(lcd_send_string_pos@lcd+1)& (0+255),b
  2611  001662  0E02               	movlw	2
  2612  001664  6F99               	movwf	lcd_send_string_pos@row& (0+255),b
  2613  001666  0E01               	movlw	1
  2614  001668  6F9A               	movwf	lcd_send_string_pos@column& (0+255),b
  2615  00166A  0E48               	movlw	low STR_9
  2616  00166C  6F9B               	movwf	lcd_send_string_pos@str& (0+255),b
  2617  00166E  0E10               	movlw	high STR_9
  2618  001670  6F9C               	movwf	(lcd_send_string_pos@str+1)& (0+255),b
  2619  001672  EC0E  F026         	call	_lcd_send_string_pos	;wreg free
  2620  001676  EF09  F00A         	goto	l13115
  2621  00167A                     l13181:
  2622                           
  2623                           ; BSR set to: 0
  2624  00167A  0E03               	movlw	3
  2625  00167C  183B               	xorwf	_option_counter^0,w,c	;volatile
  2626  00167E  A4D8               	btfss	status,2,c
  2627  001680  EF44  F00B         	goto	u11611
  2628  001684  EF46  F00B         	goto	u11610
  2629  001688                     u11611:
  2630  001688  EFD2  F00A         	goto	l1529
  2631  00168C                     u11610:
  2632  00168C                     
  2633                           ; BSR set to: 0
  2634                           ;app.c: 203:                     lcd_send_command(&lcd,0X01);
  2635  00168C  0E50               	movlw	low _lcd
  2636  00168E  6F89               	movwf	lcd_send_command@lcd& (0+255),b
  2637  001690  0E00               	movlw	high _lcd
  2638  001692  6F8A               	movwf	(lcd_send_command@lcd+1)& (0+255),b
  2639  001694  0E01               	movlw	1
  2640  001696  6F8B               	movwf	lcd_send_command@command& (0+255),b
  2641  001698  EC04  F025         	call	_lcd_send_command	;wreg free
  2642  00169C                     
  2643                           ;app.c: 204:                     lcd_send_string_pos(&lcd,1,1,"ALLARM MODE");
  2644  00169C  0E50               	movlw	low _lcd
  2645  00169E  0100               	movlb	0	; () banked
  2646  0016A0  6F97               	movwf	lcd_send_string_pos@lcd& (0+255),b
  2647  0016A2  0E00               	movlw	high _lcd
  2648  0016A4  6F98               	movwf	(lcd_send_string_pos@lcd+1)& (0+255),b
  2649  0016A6  0E01               	movlw	1
  2650  0016A8  6F99               	movwf	lcd_send_string_pos@row& (0+255),b
  2651  0016AA  0E01               	movlw	1
  2652  0016AC  6F9A               	movwf	lcd_send_string_pos@column& (0+255),b
  2653  0016AE  0E21               	movlw	low STR_16
  2654  0016B0  6F9B               	movwf	lcd_send_string_pos@str& (0+255),b
  2655  0016B2  0E10               	movlw	high STR_16
  2656  0016B4  6F9C               	movwf	(lcd_send_string_pos@str+1)& (0+255),b
  2657  0016B6  EC0E  F026         	call	_lcd_send_string_pos	;wreg free
  2658  0016BA                     
  2659                           ;app.c: 205:                     lcd_send_string_pos(&lcd,2,1,"day:");
  2660  0016BA  0E50               	movlw	low _lcd
  2661  0016BC  0100               	movlb	0	; () banked
  2662  0016BE  6F97               	movwf	lcd_send_string_pos@lcd& (0+255),b
  2663  0016C0  0E00               	movlw	high _lcd
  2664  0016C2  6F98               	movwf	(lcd_send_string_pos@lcd+1)& (0+255),b
  2665  0016C4  0E02               	movlw	2
  2666  0016C6  6F99               	movwf	lcd_send_string_pos@row& (0+255),b
  2667  0016C8  0E01               	movlw	1
  2668  0016CA  6F9A               	movwf	lcd_send_string_pos@column& (0+255),b
  2669  0016CC  0E61               	movlw	low STR_11
  2670  0016CE  6F9B               	movwf	lcd_send_string_pos@str& (0+255),b
  2671  0016D0  0E10               	movlw	high STR_11
  2672  0016D2  6F9C               	movwf	(lcd_send_string_pos@str+1)& (0+255),b
  2673  0016D4  EC0E  F026         	call	_lcd_send_string_pos	;wreg free
  2674  0016D8  EF47  F00A         	goto	l13127
  2675  0016DC  EF07  F000         	goto	start
  2676  0016E0                     __end_of_main:
  2677                           	callstack 0
  2678                           
  2679 ;; *************** function _lcd_send_number_pos *****************
  2680 ;; Defined at:
  2681 ;;		line 289 in file "ECUAL/LCD/lcd.c"
  2682 ;; Parameters:    Size  Location     Type
  2683 ;;  lcd             2   27[BANK1 ] PTR struct .
  2684 ;;		 -> lcd(6), 
  2685 ;;  row             1   29[BANK1 ] unsigned char 
  2686 ;;  column          1   30[BANK1 ] unsigned char 
  2687 ;;  num             1   31[BANK1 ] unsigned char 
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;  ret             1    0        unsigned char 
  2690 ;;  lcd_ret         1   33[BANK1 ] unsigned char 
  2691 ;;  gpio_ret        1   32[BANK1 ] unsigned char 
  2692 ;; Return value:  Size  Location     Type
  2693 ;;                  1    wreg      unsigned char 
  2694 ;; Registers used:
  2695 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2696 ;; Tracked objects:
  2697 ;;		On entry : 0/0
  2698 ;;		On exit  : 0/0
  2699 ;;		Unchanged: 0/0
  2700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2701 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2702 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2704 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2705 ;;Total ram usage:        7 bytes
  2706 ;; Hardware stack levels used: 1
  2707 ;; Hardware stack levels required when called: 22
  2708 ;; This function calls:
  2709 ;;		_convert_uint8_to_string
  2710 ;;		_lcd_send_string_pos
  2711 ;; This function is called by:
  2712 ;;		_main
  2713 ;; This function uses a non-reentrant model
  2714 ;;
  2715                           
  2716                           	psect	text1
  2717  00584A                     __ptext1:
  2718                           	callstack 0
  2719  00584A                     _lcd_send_number_pos:
  2720                           	callstack 8
  2721  00584A                     
  2722                           ;ECUAL/LCD/lcd.c: 295:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  2723  00584A  0E00               	movlw	0
  2724  00584C  0101               	movlb	1	; () banked
  2725  00584E  6FB5               	movwf	lcd_send_number_pos@gpio_ret& (0+255),b
  2726                           
  2727                           ;ECUAL/LCD/lcd.c: 296:     Std_ReturnType lcd_ret=(Std_ReturnType)0x00;
  2728  005850  0E00               	movlw	0
  2729  005852  6FB6               	movwf	lcd_send_number_pos@lcd_ret& (0+255),b
  2730  005854                     
  2731                           ; BSR set to: 1
  2732                           ;ECUAL/LCD/lcd.c: 297:     if(((void*)0)==lcd){
  2733  005854  51B0               	movf	lcd_send_number_pos@lcd& (0+255),w,b
  2734  005856  11B1               	iorwf	(lcd_send_number_pos@lcd+1)& (0+255),w,b
  2735  005858  A4D8               	btfss	status,2,c
  2736  00585A  EF31  F02C         	goto	u10641
  2737  00585E  EF33  F02C         	goto	u10640
  2738  005862                     u10641:
  2739  005862  EF35  F02C         	goto	l12559
  2740  005866                     u10640:
  2741  005866                     
  2742                           ; BSR set to: 1
  2743                           ;ECUAL/LCD/lcd.c: 299:     }
  2744  005866  EF4B  F02C         	goto	l125
  2745  00586A                     l12559:
  2746                           
  2747                           ; BSR set to: 1
  2748                           ;ECUAL/LCD/lcd.c: 301:         convert_uint8_to_string(num,number);
  2749  00586A  0EFD               	movlw	low lcd_send_number_pos@number
  2750  00586C  6FAE               	movwf	convert_uint8_to_string@str& (0+255),b
  2751  00586E  0E00               	movlw	high lcd_send_number_pos@number
  2752  005870  6FAF               	movwf	(convert_uint8_to_string@str+1)& (0+255),b
  2753  005872  51B4               	movf	lcd_send_number_pos@num& (0+255),w,b
  2754  005874  ECA7  F02B         	call	_convert_uint8_to_string
  2755  005878                     
  2756                           ;ECUAL/LCD/lcd.c: 302:         lcd_send_string_pos(lcd,row,column,number);
  2757  005878  C1B0  F097         	movff	lcd_send_number_pos@lcd,lcd_send_string_pos@lcd
  2758  00587C  C1B1  F098         	movff	lcd_send_number_pos@lcd+1,lcd_send_string_pos@lcd+1
  2759  005880  C1B2  F099         	movff	lcd_send_number_pos@row,lcd_send_string_pos@row
  2760  005884  C1B3  F09A         	movff	lcd_send_number_pos@column,lcd_send_string_pos@column
  2761  005888  0EFD               	movlw	low lcd_send_number_pos@number
  2762  00588A  0100               	movlb	0	; () banked
  2763  00588C  6F9B               	movwf	lcd_send_string_pos@str& (0+255),b
  2764  00588E  0E00               	movlw	high lcd_send_number_pos@number
  2765  005890  6F9C               	movwf	(lcd_send_string_pos@str+1)& (0+255),b
  2766  005892  EC0E  F026         	call	_lcd_send_string_pos	;wreg free
  2767  005896                     l125:
  2768  005896  0012               	return		;funcret
  2769  005898                     __end_of_lcd_send_number_pos:
  2770                           	callstack 0
  2771                           
  2772 ;; *************** function _lcd_send_string_pos *****************
  2773 ;; Defined at:
  2774 ;;		line 206 in file "ECUAL/LCD/lcd.c"
  2775 ;; Parameters:    Size  Location     Type
  2776 ;;  lcd             2   23[BANK0 ] PTR struct .
  2777 ;;		 -> lcd(6), 
  2778 ;;  row             1   25[BANK0 ] unsigned char 
  2779 ;;  column          1   26[BANK0 ] unsigned char 
  2780 ;;  str             2   27[BANK0 ] PTR unsigned char 
  2781 ;;		 -> STR_21(5), STR_20(12), STR_19(7), STR_18(12), 
  2782 ;;		 -> STR_17(9), STR_16(12), STR_15(6), STR_14(11), 
  2783 ;;		 -> STR_13(7), STR_12(11), STR_11(5), STR_10(11), 
  2784 ;;		 -> STR_9(7), STR_8(11), STR_7(9), STR_6(11), 
  2785 ;;		 -> STR_5(6), STR_4(6), lcd_send_number_pos@number(1), 
  2786 ;; Auto vars:     Size  Location     Type
  2787 ;;  ret             1    0        unsigned char 
  2788 ;;  lcd_ret         1   30[BANK0 ] unsigned char 
  2789 ;;  gpio_ret        1   29[BANK0 ] unsigned char 
  2790 ;; Return value:  Size  Location     Type
  2791 ;;                  1    wreg      unsigned char 
  2792 ;; Registers used:
  2793 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2794 ;; Tracked objects:
  2795 ;;		On entry : 0/0
  2796 ;;		On exit  : 0/0
  2797 ;;		Unchanged: 0/0
  2798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2799 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2800 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2802 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2803 ;;Total ram usage:        8 bytes
  2804 ;; Hardware stack levels used: 1
  2805 ;; Hardware stack levels required when called: 17
  2806 ;; This function calls:
  2807 ;;		_lcd_send_string
  2808 ;;		_lcd_set_curser
  2809 ;; This function is called by:
  2810 ;;		_lcd_send_number_pos
  2811 ;;		_main
  2812 ;; This function uses a non-reentrant model
  2813 ;;
  2814                           
  2815                           	psect	text2
  2816  004C1C                     __ptext2:
  2817                           	callstack 0
  2818  004C1C                     _lcd_send_string_pos:
  2819                           	callstack 13
  2820  004C1C                     
  2821                           ;ECUAL/LCD/lcd.c: 209:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  2822  004C1C  0E00               	movlw	0
  2823  004C1E  0100               	movlb	0	; () banked
  2824  004C20  6F9D               	movwf	lcd_send_string_pos@gpio_ret& (0+255),b
  2825                           
  2826                           ;ECUAL/LCD/lcd.c: 210:     Std_ReturnType lcd_ret=(Std_ReturnType)0x00;
  2827  004C22  0E00               	movlw	0
  2828  004C24  6F9E               	movwf	lcd_send_string_pos@lcd_ret& (0+255),b
  2829  004C26                     
  2830                           ; BSR set to: 0
  2831                           ;ECUAL/LCD/lcd.c: 211:     if(((void*)0)==lcd || ((void*)0)==str || row>4 || column>40){
  2832  004C26  5197               	movf	lcd_send_string_pos@lcd& (0+255),w,b
  2833  004C28  1198               	iorwf	(lcd_send_string_pos@lcd+1)& (0+255),w,b
  2834  004C2A  B4D8               	btfsc	status,2,c
  2835  004C2C  EF1A  F026         	goto	u10451
  2836  004C30  EF1C  F026         	goto	u10450
  2837  004C34                     u10451:
  2838  004C34  EF35  F026         	goto	l12405
  2839  004C38                     u10450:
  2840  004C38                     
  2841                           ; BSR set to: 0
  2842  004C38  519B               	movf	lcd_send_string_pos@str& (0+255),w,b
  2843  004C3A  119C               	iorwf	(lcd_send_string_pos@str+1)& (0+255),w,b
  2844  004C3C  B4D8               	btfsc	status,2,c
  2845  004C3E  EF23  F026         	goto	u10461
  2846  004C42  EF25  F026         	goto	u10460
  2847  004C46                     u10461:
  2848  004C46  EF35  F026         	goto	l12405
  2849  004C4A                     u10460:
  2850  004C4A                     
  2851                           ; BSR set to: 0
  2852  004C4A  0E05               	movlw	5
  2853  004C4C  6199               	cpfslt	lcd_send_string_pos@row& (0+255),b
  2854  004C4E  EF2B  F026         	goto	u10471
  2855  004C52  EF2D  F026         	goto	u10470
  2856  004C56                     u10471:
  2857  004C56  EF35  F026         	goto	l12405
  2858  004C5A                     u10470:
  2859  004C5A                     
  2860                           ; BSR set to: 0
  2861  004C5A  0E28               	movlw	40
  2862  004C5C  659A               	cpfsgt	lcd_send_string_pos@column& (0+255),b
  2863  004C5E  EF33  F026         	goto	u10481
  2864  004C62  EF35  F026         	goto	u10480
  2865  004C66                     u10481:
  2866  004C66  EF37  F026         	goto	l12407
  2867  004C6A                     u10480:
  2868  004C6A                     l12405:
  2869                           
  2870                           ; BSR set to: 0
  2871                           ;ECUAL/LCD/lcd.c: 213:     }
  2872  004C6A  EF4B  F026         	goto	l92
  2873  004C6E                     l12407:
  2874                           
  2875                           ; BSR set to: 0
  2876  004C6E  C097  F08F         	movff	lcd_send_string_pos@lcd,lcd_set_curser@lcd
  2877  004C72  C098  F090         	movff	lcd_send_string_pos@lcd+1,lcd_set_curser@lcd+1
  2878  004C76  C099  F091         	movff	lcd_send_string_pos@row,lcd_set_curser@row
  2879  004C7A  C09A  F092         	movff	lcd_send_string_pos@column,lcd_set_curser@column
  2880  004C7E  ECED  F029         	call	_lcd_set_curser	;wreg free
  2881  004C82  C097  F08F         	movff	lcd_send_string_pos@lcd,lcd_send_string@lcd
  2882  004C86  C098  F090         	movff	lcd_send_string_pos@lcd+1,lcd_send_string@lcd+1
  2883  004C8A  C09B  F091         	movff	lcd_send_string_pos@str,lcd_send_string@str
  2884  004C8E  C09C  F092         	movff	lcd_send_string_pos@str+1,lcd_send_string@str+1
  2885  004C92  ECEB  F022         	call	_lcd_send_string	;wreg free
  2886  004C96                     l92:
  2887  004C96  0012               	return		;funcret
  2888  004C98                     __end_of_lcd_send_string_pos:
  2889                           	callstack 0
  2890                           
  2891 ;; *************** function _lcd_send_string *****************
  2892 ;; Defined at:
  2893 ;;		line 177 in file "ECUAL/LCD/lcd.c"
  2894 ;; Parameters:    Size  Location     Type
  2895 ;;  lcd             2   15[BANK0 ] PTR struct .
  2896 ;;		 -> lcd(6), 
  2897 ;;  str             2   17[BANK0 ] PTR unsigned char 
  2898 ;;		 -> STR_21(5), STR_20(12), STR_19(7), STR_18(12), 
  2899 ;;		 -> STR_17(9), STR_16(12), STR_15(6), STR_14(11), 
  2900 ;;		 -> STR_13(7), STR_12(11), STR_11(5), STR_10(11), 
  2901 ;;		 -> STR_9(7), STR_8(11), STR_7(9), STR_6(11), 
  2902 ;;		 -> STR_5(6), STR_4(6), lcd_send_number_pos@number(1), lcd_send_number@number(1), 
  2903 ;; Auto vars:     Size  Location     Type
  2904 ;;  ret             1   21[BANK0 ] unsigned char 
  2905 ;;  lcd_ret         1   20[BANK0 ] unsigned char 
  2906 ;;  gpio_ret        1   19[BANK0 ] unsigned char 
  2907 ;; Return value:  Size  Location     Type
  2908 ;;                  1    wreg      unsigned char 
  2909 ;; Registers used:
  2910 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2911 ;; Tracked objects:
  2912 ;;		On entry : 0/0
  2913 ;;		On exit  : 0/0
  2914 ;;		Unchanged: 0/0
  2915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2916 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2917 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2919 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2920 ;;Total ram usage:        7 bytes
  2921 ;; Hardware stack levels used: 1
  2922 ;; Hardware stack levels required when called: 16
  2923 ;; This function calls:
  2924 ;;		_lcd_send_char_data
  2925 ;; This function is called by:
  2926 ;;		_lcd_send_string_pos
  2927 ;;		_lcd_send_number
  2928 ;; This function uses a non-reentrant model
  2929 ;;
  2930                           
  2931                           	psect	text3
  2932  0045D6                     __ptext3:
  2933                           	callstack 0
  2934  0045D6                     _lcd_send_string:
  2935                           	callstack 13
  2936  0045D6                     
  2937                           ;ECUAL/LCD/lcd.c: 180:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  2938  0045D6  0E00               	movlw	0
  2939  0045D8  0100               	movlb	0	; () banked
  2940  0045DA  6F93               	movwf	lcd_send_string@gpio_ret& (0+255),b
  2941                           
  2942                           ;ECUAL/LCD/lcd.c: 181:     Std_ReturnType lcd_ret=(Std_ReturnType)0x00;
  2943  0045DC  0E00               	movlw	0
  2944  0045DE  6F94               	movwf	lcd_send_string@lcd_ret& (0+255),b
  2945  0045E0                     
  2946                           ; BSR set to: 0
  2947                           ;ECUAL/LCD/lcd.c: 182:     if(((void*)0)==lcd || ((void*)0)==str){
  2948  0045E0  518F               	movf	lcd_send_string@lcd& (0+255),w,b
  2949  0045E2  1190               	iorwf	(lcd_send_string@lcd+1)& (0+255),w,b
  2950  0045E4  B4D8               	btfsc	status,2,c
  2951  0045E6  EFF7  F022         	goto	u10141
  2952  0045EA  EFF9  F022         	goto	u10140
  2953  0045EE                     u10141:
  2954  0045EE  EF02  F023         	goto	l11993
  2955  0045F2                     u10140:
  2956  0045F2                     
  2957                           ; BSR set to: 0
  2958  0045F2  5191               	movf	lcd_send_string@str& (0+255),w,b
  2959  0045F4  1192               	iorwf	(lcd_send_string@str+1)& (0+255),w,b
  2960  0045F6  A4D8               	btfss	status,2,c
  2961  0045F8  EF00  F023         	goto	u10151
  2962  0045FC  EF02  F023         	goto	u10150
  2963  004600                     u10151:
  2964  004600  EF22  F023         	goto	l11999
  2965  004604                     u10150:
  2966  004604                     l11993:
  2967                           
  2968                           ; BSR set to: 0
  2969                           ;ECUAL/LCD/lcd.c: 183:         ret=(Std_ReturnType)0x00;
  2970  004604  0E00               	movlw	0
  2971  004606  6F95               	movwf	lcd_send_string@ret& (0+255),b
  2972                           
  2973                           ;ECUAL/LCD/lcd.c: 184:     }
  2974  004608  EF3E  F023         	goto	l81
  2975  00460C                     l11995:
  2976  00460C  C08F  F089         	movff	lcd_send_string@lcd,lcd_send_char_data@lcd
  2977  004610  C090  F08A         	movff	lcd_send_string@lcd+1,lcd_send_char_data@lcd+1
  2978  004614  C091  FFF6         	movff	lcd_send_string@str,tblptrl
  2979  004618  C092  FFF7         	movff	lcd_send_string@str+1,tblptrh
  2980  00461C  0E00               	movlw	low (__smallconst shr (0+16))
  2981  00461E  6EF8               	movwf	tblptru,c
  2982  004620  0E0F               	movlw	(high __ramtop+-1)
  2983  004622  64F7               	cpfsgt	tblptrh,c
  2984  004624  D003               	bra	u10167
  2985  004626  0008               	tblrd		*
  2986  004628  50F5               	movf	tablat,w,c
  2987  00462A  D005               	bra	u10160
  2988  00462C                     u10167:
  2989  00462C  CFF6 FFE9          	movff	tblptrl,fsr0l
  2990  004630  CFF7 FFEA          	movff	tblptrh,fsr0h
  2991  004634  50EF               	movf	indf0,w,c
  2992  004636                     u10160:
  2993  004636  0100               	movlb	0	; () banked
  2994  004638  6F8B               	movwf	lcd_send_char_data@data& (0+255),b
  2995  00463A  ECC0  F024         	call	_lcd_send_char_data	;wreg free
  2996  00463E  0100               	movlb	0	; () banked
  2997  004640  4B91               	infsnz	lcd_send_string@str& (0+255),f,b
  2998  004642  2B92               	incf	(lcd_send_string@str+1)& (0+255),f,b
  2999  004644                     l11999:
  3000                           
  3001                           ; BSR set to: 0
  3002                           ;ECUAL/LCD/lcd.c: 186:         while(*str){
  3003  004644  C091  FFF6         	movff	lcd_send_string@str,tblptrl
  3004  004648  C092  FFF7         	movff	lcd_send_string@str+1,tblptrh
  3005  00464C  0E00               	movlw	low (__smallconst shr (0+16))
  3006  00464E  6EF8               	movwf	tblptru,c
  3007  004650  0E0F               	movlw	(high __ramtop+-1)
  3008  004652  64F7               	cpfsgt	tblptrh,c
  3009  004654  D003               	bra	u10177
  3010  004656  0008               	tblrd		*
  3011  004658  50F5               	movf	tablat,w,c
  3012  00465A  D005               	bra	u10170
  3013  00465C                     u10177:
  3014  00465C  CFF6 FFE9          	movff	tblptrl,fsr0l
  3015  004660  CFF7 FFEA          	movff	tblptrh,fsr0h
  3016  004664  50EF               	movf	indf0,w,c
  3017  004666                     u10170:
  3018  004666  0900               	iorlw	0
  3019  004668  A4D8               	btfss	status,2,c
  3020  00466A  EF39  F023         	goto	u10181
  3021  00466E  EF3B  F023         	goto	u10180
  3022  004672                     u10181:
  3023  004672  EF06  F023         	goto	l11995
  3024  004676                     u10180:
  3025  004676                     
  3026                           ;ECUAL/LCD/lcd.c: 190:         ret=(Std_ReturnType)0x01;
  3027  004676  0E01               	movlw	1
  3028  004678  0100               	movlb	0	; () banked
  3029  00467A  6F95               	movwf	lcd_send_string@ret& (0+255),b
  3030  00467C                     l81:
  3031                           
  3032                           ; BSR set to: 0
  3033                           ;ECUAL/LCD/lcd.c: 193:     return ret;
  3034  00467C  5195               	movf	lcd_send_string@ret& (0+255),w,b
  3035  00467E                     
  3036                           ; BSR set to: 0
  3037  00467E  0012               	return		;funcret
  3038  004680                     __end_of_lcd_send_string:
  3039                           	callstack 0
  3040                           
  3041 ;; *************** function _convert_uint8_to_string *****************
  3042 ;; Defined at:
  3043 ;;		line 316 in file "ECUAL/LCD/lcd.c"
  3044 ;; Parameters:    Size  Location     Type
  3045 ;;  value           1    wreg     unsigned char 
  3046 ;;  str             2   25[BANK1 ] PTR unsigned char 
  3047 ;;		 -> lcd_send_number_pos@number(1), 
  3048 ;; Auto vars:     Size  Location     Type
  3049 ;;  value           1   71[BANK0 ] unsigned char 
  3050 ;;  ret             1    0        unsigned char 
  3051 ;; Return value:  Size  Location     Type
  3052 ;;                  1    wreg      unsigned char 
  3053 ;; Registers used:
  3054 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3055 ;; Tracked objects:
  3056 ;;		On entry : 0/0
  3057 ;;		On exit  : 0/0
  3058 ;;		Unchanged: 0/0
  3059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3060 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3061 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3063 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3064 ;;Total ram usage:        3 bytes
  3065 ;; Hardware stack levels used: 1
  3066 ;; Hardware stack levels required when called: 21
  3067 ;; This function calls:
  3068 ;;		_memset
  3069 ;;		_sprintf
  3070 ;; This function is called by:
  3071 ;;		_lcd_send_number_pos
  3072 ;; This function uses a non-reentrant model
  3073 ;;
  3074                           
  3075                           	psect	text4
  3076  00574E                     __ptext4:
  3077                           	callstack 0
  3078  00574E                     _convert_uint8_to_string:
  3079                           	callstack 8
  3080                           
  3081                           ; BSR set to: 0
  3082                           ;incstack = 0
  3083                           ;convert_uint8_to_string@value stored from wreg
  3084  00574E  0100               	movlb	0	; () banked
  3085  005750  6FC7               	movwf	convert_uint8_to_string@value& (0+255),b
  3086  005752                     
  3087                           ;ECUAL/LCD/lcd.c: 318:     if(((void*)0) == str){
  3088  005752  0101               	movlb	1	; () banked
  3089  005754  51AE               	movf	convert_uint8_to_string@str& (0+255),w,b
  3090  005756  11AF               	iorwf	(convert_uint8_to_string@str+1)& (0+255),w,b
  3091  005758  A4D8               	btfss	status,2,c
  3092  00575A  EFB1  F02B         	goto	u10491
  3093  00575E  EFB3  F02B         	goto	u10490
  3094  005762                     u10491:
  3095  005762  EFB5  F02B         	goto	l12421
  3096  005766                     u10490:
  3097  005766                     
  3098                           ; BSR set to: 1
  3099                           ;ECUAL/LCD/lcd.c: 320:     }
  3100  005766  EFD1  F02B         	goto	l130
  3101  00576A                     l12421:
  3102                           
  3103                           ; BSR set to: 1
  3104                           ;ECUAL/LCD/lcd.c: 322:         memset((char *)str, '\0', 4);
  3105  00576A  C1AE  F027         	movff	convert_uint8_to_string@str,memset@dest
  3106  00576E  C1AF  F028         	movff	convert_uint8_to_string@str+1,memset@dest+1
  3107  005772  0E00               	movlw	0
  3108  005774  6E2A               	movwf	(memset@c+1)^0,c
  3109  005776  0E00               	movlw	0
  3110  005778  6E29               	movwf	memset@c^0,c
  3111  00577A  0E00               	movlw	0
  3112  00577C  6E2C               	movwf	(memset@n+1)^0,c
  3113  00577E  0E04               	movlw	4
  3114  005780  6E2B               	movwf	memset@n^0,c
  3115  005782  EC54  F019         	call	_memset	;wreg free
  3116  005786                     
  3117                           ;ECUAL/LCD/lcd.c: 323:         sprintf(str, "%i", value);
  3118  005786  C1AE  F19B         	movff	convert_uint8_to_string@str,sprintf@s
  3119  00578A  C1AF  F19C         	movff	convert_uint8_to_string@str+1,sprintf@s+1
  3120  00578E  0E66               	movlw	low STR_1
  3121  005790  0101               	movlb	1	; () banked
  3122  005792  6F9D               	movwf	sprintf@fmt& (0+255),b
  3123  005794  0E10               	movlw	high STR_1
  3124  005796  6F9E               	movwf	(sprintf@fmt+1)& (0+255),b
  3125  005798  C0C7  F19F         	movff	convert_uint8_to_string@value,?_sprintf+4
  3126  00579C  6BA0               	clrf	(?_sprintf+5)& (0+255),b
  3127  00579E  ECFC  F02B         	call	_sprintf	;wreg free
  3128  0057A2                     l130:
  3129  0057A2  0012               	return		;funcret
  3130  0057A4                     __end_of_convert_uint8_to_string:
  3131                           	callstack 0
  3132                           
  3133 ;; *************** function _sprintf *****************
  3134 ;; Defined at:
  3135 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  3136 ;; Parameters:    Size  Location     Type
  3137 ;;  s               2    6[BANK1 ] PTR unsigned char 
  3138 ;;		 -> convert_uint16_to_string@Temp_String(6), lcd_send_number_pos@number(1), 
  3139 ;;  fmt             2    8[BANK1 ] PTR const unsigned char 
  3140 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  3141 ;; Auto vars:     Size  Location     Type
  3142 ;;  f              11   14[BANK1 ] struct _IO_FILE
  3143 ;;  ap              2   12[BANK1 ] PTR void [1]
  3144 ;;		 -> ?_sprintf(2), 
  3145 ;;  ret             2    0        int 
  3146 ;; Return value:  Size  Location     Type
  3147 ;;                  2    6[BANK1 ] int 
  3148 ;; Registers used:
  3149 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3150 ;; Tracked objects:
  3151 ;;		On entry : 0/0
  3152 ;;		On exit  : 0/0
  3153 ;;		Unchanged: 0/0
  3154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3155 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3156 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3158 ;;      Totals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3159 ;;Total ram usage:       19 bytes
  3160 ;; Hardware stack levels used: 1
  3161 ;; Hardware stack levels required when called: 20
  3162 ;; This function calls:
  3163 ;;		_vfprintf
  3164 ;; This function is called by:
  3165 ;;		_convert_uint8_to_string
  3166 ;;		_convert_uint16_to_string
  3167 ;;		_convert_uint32_to_string
  3168 ;; This function uses a non-reentrant model
  3169 ;;
  3170                           
  3171                           	psect	text5
  3172  0057F8                     __ptext5:
  3173                           	callstack 0
  3174  0057F8                     _sprintf:
  3175                           	callstack 8
  3176  0057F8  0E9F               	movlw	low (?_sprintf+4)
  3177  0057FA  0101               	movlb	1	; () banked
  3178  0057FC  6FA1               	movwf	sprintf@ap& (0+255),b
  3179  0057FE  0E01               	movlw	high (?_sprintf+4)
  3180  005800  6FA2               	movwf	(sprintf@ap+1)& (0+255),b
  3181  005802  C19B  F1A3         	movff	sprintf@s,sprintf@f
  3182  005806  C19C  F1A4         	movff	sprintf@s+1,sprintf@f+1
  3183  00580A                     
  3184                           ; BSR set to: 1
  3185  00580A  0E00               	movlw	0
  3186  00580C  6FA7               	movwf	(sprintf@f+4)& (0+255),b
  3187  00580E  0E00               	movlw	0
  3188  005810  6FA6               	movwf	(sprintf@f+3)& (0+255),b
  3189  005812                     
  3190                           ; BSR set to: 1
  3191  005812  0E00               	movlw	0
  3192  005814  6FAD               	movwf	(sprintf@f+10)& (0+255),b
  3193  005816  0E00               	movlw	0
  3194  005818  6FAC               	movwf	(sprintf@f+9)& (0+255),b
  3195  00581A                     
  3196                           ; BSR set to: 1
  3197  00581A  0EA3               	movlw	low sprintf@f
  3198  00581C  6F95               	movwf	vfprintf@fp& (0+255),b
  3199  00581E  0E01               	movlw	high sprintf@f
  3200  005820  6F96               	movwf	(vfprintf@fp+1)& (0+255),b
  3201  005822  C19D  F197         	movff	sprintf@fmt,vfprintf@fmt
  3202  005826  C19E  F198         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3203  00582A  0EA1               	movlw	low sprintf@ap
  3204  00582C  6F99               	movwf	vfprintf@ap& (0+255),b
  3205  00582E  0E01               	movlw	high sprintf@ap
  3206  005830  6F9A               	movwf	(vfprintf@ap+1)& (0+255),b
  3207  005832  ECB7  F029         	call	_vfprintf	;wreg free
  3208  005836  0101               	movlb	1	; () banked
  3209  005838  51A6               	movf	(sprintf@f+3)& (0+255),w,b
  3210  00583A  259B               	addwf	sprintf@s& (0+255),w,b
  3211  00583C  6ED9               	movwf	fsr2l,c
  3212  00583E  51A7               	movf	(sprintf@f+4)& (0+255),w,b
  3213  005840  219C               	addwfc	(sprintf@s+1)& (0+255),w,b
  3214  005842  6EDA               	movwf	fsr2h,c
  3215  005844  0E00               	movlw	0
  3216  005846  6EDF               	movwf	indf2,c
  3217  005848                     
  3218                           ; BSR set to: 1
  3219  005848  0012               	return		;funcret
  3220  00584A                     __end_of_sprintf:
  3221                           	callstack 0
  3222                           
  3223 ;; *************** function _vfprintf *****************
  3224 ;; Defined at:
  3225 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  3226 ;; Parameters:    Size  Location     Type
  3227 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
  3228 ;;		 -> sprintf@f(11), 
  3229 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  3230 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  3231 ;;  ap              2    4[BANK1 ] PTR PTR void 
  3232 ;;		 -> sprintf@ap(2), 
  3233 ;; Auto vars:     Size  Location     Type
  3234 ;;  cfmt            2   69[BANK0 ] PTR unsigned char 
  3235 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  3236 ;; Return value:  Size  Location     Type
  3237 ;;                  2    0[BANK1 ] int 
  3238 ;; Registers used:
  3239 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3240 ;; Tracked objects:
  3241 ;;		On entry : 0/0
  3242 ;;		On exit  : 0/0
  3243 ;;		Unchanged: 0/0
  3244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3245 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3246 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3248 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3249 ;;Total ram usage:        8 bytes
  3250 ;; Hardware stack levels used: 1
  3251 ;; Hardware stack levels required when called: 19
  3252 ;; This function calls:
  3253 ;;		_vfpfcnvrt
  3254 ;; This function is called by:
  3255 ;;		_sprintf
  3256 ;; This function uses a non-reentrant model
  3257 ;;
  3258                           
  3259                           	psect	text6
  3260  00536E                     __ptext6:
  3261                           	callstack 0
  3262  00536E                     _vfprintf:
  3263                           	callstack 8
  3264  00536E                     
  3265                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3266  00536E  C197  F0C5         	movff	vfprintf@fmt,vfprintf@cfmt
  3267  005372  C198  F0C6         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3268  005376                     
  3269                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3270  005376  0E00               	movlw	0
  3271  005378  0101               	movlb	1	; () banked
  3272  00537A  6F13               	movwf	(_nout+1)& (0+255),b
  3273  00537C  0E00               	movlw	0
  3274  00537E  6F12               	movwf	_nout& (0+255),b
  3275                           
  3276                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3277  005380  EFD9  F029         	goto	l11931
  3278  005384                     l11929:
  3279                           
  3280                           ; BSR set to: 1
  3281                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3282  005384  C195  F0B5         	movff	vfprintf@fp,vfpfcnvrt@fp
  3283  005388  C196  F0B6         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3284  00538C  0EC5               	movlw	low vfprintf@cfmt
  3285  00538E  0100               	movlb	0	; () banked
  3286  005390  6FB7               	movwf	vfpfcnvrt@fmt& (0+255),b
  3287  005392  0E00               	movlw	high vfprintf@cfmt
  3288  005394  6FB8               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  3289  005396  C199  F0B9         	movff	vfprintf@ap,vfpfcnvrt@ap
  3290  00539A  C19A  F0BA         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3291  00539E  EC3E  F015         	call	_vfpfcnvrt	;wreg free
  3292  0053A2  0100               	movlb	0	; () banked
  3293  0053A4  51B5               	movf	?_vfpfcnvrt& (0+255),w,b
  3294  0053A6  0101               	movlb	1	; () banked
  3295  0053A8  2712               	addwf	_nout& (0+255),f,b
  3296  0053AA  0100               	movlb	0	; () banked
  3297  0053AC  51B6               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  3298  0053AE  0101               	movlb	1	; () banked
  3299  0053B0  2313               	addwfc	(_nout+1)& (0+255),f,b
  3300  0053B2                     l11931:
  3301                           
  3302                           ; BSR set to: 1
  3303                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3304  0053B2  C0C5  FFF6         	movff	vfprintf@cfmt,tblptrl
  3305  0053B6  C0C6  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3306  0053BA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3307  0053BA  6AF8               	clrf	tblptru,c
  3308  0053BC                     	endif
  3309  0053BC                     	if	0	;tblptru may be non-zero
  3310  0053BC                     	endif
  3311  0053BC  0008               	tblrd		*
  3312  0053BE  50F5               	movf	tablat,w,c
  3313  0053C0  0900               	iorlw	0
  3314  0053C2  A4D8               	btfss	status,2,c
  3315  0053C4  EFE6  F029         	goto	u10091
  3316  0053C8  EFE8  F029         	goto	u10090
  3317  0053CC                     u10091:
  3318  0053CC  EFC2  F029         	goto	l11929
  3319  0053D0                     u10090:
  3320  0053D0                     
  3321                           ; BSR set to: 1
  3322                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3323  0053D0  C112  F195         	movff	_nout,?_vfprintf
  3324  0053D4  C113  F196         	movff	_nout+1,?_vfprintf+1
  3325  0053D8                     
  3326                           ; BSR set to: 1
  3327  0053D8  0012               	return		;funcret
  3328  0053DA                     __end_of_vfprintf:
  3329                           	callstack 0
  3330                           
  3331 ;; *************** function _vfpfcnvrt *****************
  3332 ;; Defined at:
  3333 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;  fp              2   53[BANK0 ] PTR struct _IO_FILE
  3336 ;;		 -> sprintf@f(11), 
  3337 ;;  fmt             2   55[BANK0 ] PTR PTR unsigned char 
  3338 ;;		 -> vfprintf@cfmt(2), 
  3339 ;;  ap              2   57[BANK0 ] PTR PTR void 
  3340 ;;		 -> sprintf@ap(2), 
  3341 ;; Auto vars:     Size  Location     Type
  3342 ;;  ll              8   61[BANK0 ] long long 
  3343 ;;  llu             8    0        unsigned long long 
  3344 ;;  f               4    0        unsigned long long 
  3345 ;;  vp              3    0        PTR void 
  3346 ;;  ct              3    0        unsigned char [3]
  3347 ;;  cp              3    0        PTR unsigned char 
  3348 ;;  i               2    0        int 
  3349 ;;  done            2    0        int 
  3350 ;;  c               1    0        unsigned char 
  3351 ;; Return value:  Size  Location     Type
  3352 ;;                  2   53[BANK0 ] int 
  3353 ;; Registers used:
  3354 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3355 ;; Tracked objects:
  3356 ;;		On entry : 0/0
  3357 ;;		On exit  : 0/0
  3358 ;;		Unchanged: 0/0
  3359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3360 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3361 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3362 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3363 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3364 ;;Total ram usage:       16 bytes
  3365 ;; Hardware stack levels used: 1
  3366 ;; Hardware stack levels required when called: 18
  3367 ;; This function calls:
  3368 ;;		_dtoa
  3369 ;;		_fputc
  3370 ;; This function is called by:
  3371 ;;		_vfprintf
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374                           
  3375                           	psect	text7
  3376  002A7C                     __ptext7:
  3377                           	callstack 0
  3378  002A7C                     _vfpfcnvrt:
  3379                           	callstack 8
  3380  002A7C                     
  3381                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3382  002A7C  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3383  002A80  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3384  002A84  CFDE FFF6          	movff	postinc2,tblptrl
  3385  002A88  CFDD FFF7          	movff	postdec2,tblptrh
  3386  002A8C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3387  002A8C  6AF8               	clrf	tblptru,c
  3388  002A8E                     	endif
  3389  002A8E                     	if	0	;tblptru may be non-zero
  3390  002A8E                     	endif
  3391  002A8E  0008               	tblrd		*
  3392  002A90  50F5               	movf	tablat,w,c
  3393  002A92  0A25               	xorlw	37
  3394  002A94  A4D8               	btfss	status,2,c
  3395  002A96  EF4F  F015         	goto	u9221
  3396  002A9A  EF51  F015         	goto	u9220
  3397  002A9E                     u9221:
  3398  002A9E  EF03  F016         	goto	l11357
  3399  002AA2                     u9220:
  3400  002AA2                     
  3401                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3402  002AA2  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3403  002AA6  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3404  002AAA  2ADE               	incf	postinc2,f,c
  3405  002AAC  0E00               	movlw	0
  3406  002AAE  22DD               	addwfc	postdec2,f,c
  3407  002AB0                     
  3408                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3409  002AB0  0E00               	movlw	0
  3410  002AB2  0101               	movlb	1	; () banked
  3411  002AB4  6F15               	movwf	(_width+1)& (0+255),b
  3412  002AB6  0E00               	movlw	0
  3413  002AB8  6F14               	movwf	_width& (0+255),b
  3414  002ABA  C114  F033         	movff	_width,_flags
  3415  002ABE  C115  F034         	movff	_width+1,_flags+1
  3416  002AC2                     
  3417                           ; BSR set to: 1
  3418                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3419  002AC2  6831               	setf	_prec^0,c
  3420  002AC4  6832               	setf	(_prec+1)^0,c
  3421  002AC6                     
  3422                           ; BSR set to: 1
  3423                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3424  002AC6  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3425  002ACA  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3426  002ACE  CFDE FFF6          	movff	postinc2,tblptrl
  3427  002AD2  CFDD FFF7          	movff	postdec2,tblptrh
  3428  002AD6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3429  002AD6  6AF8               	clrf	tblptru,c
  3430  002AD8                     	endif
  3431  002AD8                     	if	0	;tblptru may be non-zero
  3432  002AD8                     	endif
  3433  002AD8  0008               	tblrd		*
  3434  002ADA  50F5               	movf	tablat,w,c
  3435  002ADC  0A64               	xorlw	100
  3436  002ADE  B4D8               	btfsc	status,2,c
  3437  002AE0  EF74  F015         	goto	u9231
  3438  002AE4  EF76  F015         	goto	u9230
  3439  002AE8                     u9231:
  3440  002AE8  EF89  F015         	goto	l11335
  3441  002AEC                     u9230:
  3442  002AEC                     
  3443                           ; BSR set to: 1
  3444  002AEC  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3445  002AF0  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3446  002AF4  CFDE FFF6          	movff	postinc2,tblptrl
  3447  002AF8  CFDD FFF7          	movff	postdec2,tblptrh
  3448  002AFC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3449  002AFC  6AF8               	clrf	tblptru,c
  3450  002AFE                     	endif
  3451  002AFE                     	if	0	;tblptru may be non-zero
  3452  002AFE                     	endif
  3453  002AFE  0008               	tblrd		*
  3454  002B00  50F5               	movf	tablat,w,c
  3455  002B02  0A69               	xorlw	105
  3456  002B04  A4D8               	btfss	status,2,c
  3457  002B06  EF87  F015         	goto	u9241
  3458  002B0A  EF89  F015         	goto	u9240
  3459  002B0E                     u9241:
  3460  002B0E  EFCA  F015         	goto	l11341
  3461  002B12                     u9240:
  3462  002B12                     l11335:
  3463                           
  3464                           ; BSR set to: 1
  3465                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3466  002B12  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3467  002B16  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3468  002B1A  2ADE               	incf	postinc2,f,c
  3469  002B1C  0E00               	movlw	0
  3470  002B1E  22DD               	addwfc	postdec2,f,c
  3471                           
  3472                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3473  002B20  C0B9  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3474  002B24  C0BA  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3475  002B28  CFDF F0BB          	movff	indf2,??_vfpfcnvrt
  3476  002B2C  0E02               	movlw	2
  3477  002B2E  26DE               	addwf	postinc2,f,c
  3478  002B30  CFDF F0BC          	movff	indf2,??_vfpfcnvrt+1
  3479  002B34  0E00               	movlw	0
  3480  002B36  22DD               	addwfc	postdec2,f,c
  3481  002B38  C0BB  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3482  002B3C  C0BC  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3483  002B40  CFDE F0BD          	movff	postinc2,vfpfcnvrt@ll
  3484  002B44  CFDD F0BE          	movff	postdec2,vfpfcnvrt@ll+1
  3485  002B48  0100               	movlb	0	; () banked
  3486  002B4A  0E00               	movlw	0
  3487  002B4C  BFBE               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  3488  002B4E  0EFF               	movlw	-1
  3489  002B50  6FBF               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  3490  002B52  6FC0               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  3491  002B54  6FC1               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  3492  002B56  6FC2               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  3493  002B58  6FC3               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  3494  002B5A  6FC4               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  3495  002B5C                     
  3496                           ; BSR set to: 0
  3497                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3498  002B5C  C0B5  F091         	movff	vfpfcnvrt@fp,dtoa@fp
  3499  002B60  C0B6  F092         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3500  002B64  C0BD  F093         	movff	vfpfcnvrt@ll,dtoa@d
  3501  002B68  C0BE  F094         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3502  002B6C  C0BF  F095         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3503  002B70  C0C0  F096         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3504  002B74  C0C1  F097         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3505  002B78  C0C2  F098         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3506  002B7C  C0C3  F099         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3507  002B80  C0C4  F09A         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3508  002B84  ECCC  F013         	call	_dtoa	;wreg free
  3509  002B88  C091  F0B5         	movff	?_dtoa,?_vfpfcnvrt
  3510  002B8C  C092  F0B6         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3511  002B90  EF1F  F016         	goto	l2300
  3512  002B94                     l11341:
  3513                           
  3514                           ; BSR set to: 1
  3515                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3516  002B94  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3517  002B98  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3518  002B9C  CFDE FFF6          	movff	postinc2,tblptrl
  3519  002BA0  CFDD FFF7          	movff	postdec2,tblptrh
  3520  002BA4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3521  002BA4  6AF8               	clrf	tblptru,c
  3522  002BA6                     	endif
  3523  002BA6                     	if	0	;tblptru may be non-zero
  3524  002BA6                     	endif
  3525  002BA6  0008               	tblrd		*
  3526  002BA8  50F5               	movf	tablat,w,c
  3527  002BAA  0A25               	xorlw	37
  3528  002BAC  A4D8               	btfss	status,2,c
  3529  002BAE  EFDB  F015         	goto	u9251
  3530  002BB2  EFDD  F015         	goto	u9250
  3531  002BB6                     u9251:
  3532  002BB6  EFF5  F015         	goto	l11351
  3533  002BBA                     u9250:
  3534  002BBA                     
  3535                           ; BSR set to: 1
  3536                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3537  002BBA  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3538  002BBE  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3539  002BC2  2ADE               	incf	postinc2,f,c
  3540  002BC4  0E00               	movlw	0
  3541  002BC6  22DD               	addwfc	postdec2,f,c
  3542  002BC8                     
  3543                           ; BSR set to: 1
  3544                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3545  002BC8  0E00               	movlw	0
  3546  002BCA  6E28               	movwf	(fputc@c+1)^0,c
  3547  002BCC  0E25               	movlw	37
  3548  002BCE  6E27               	movwf	fputc@c^0,c
  3549  002BD0  C0B5  F029         	movff	vfpfcnvrt@fp,fputc@fp
  3550  002BD4  C0B6  F02A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3551  002BD8  ECF8  F01F         	call	_fputc	;wreg free
  3552  002BDC                     l11347:
  3553                           
  3554                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3555  002BDC  0E00               	movlw	0
  3556  002BDE  0100               	movlb	0	; () banked
  3557  002BE0  6FB6               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3558  002BE2  0E01               	movlw	1
  3559  002BE4  6FB5               	movwf	?_vfpfcnvrt& (0+255),b
  3560  002BE6  EF1F  F016         	goto	l2300
  3561  002BEA                     l11351:
  3562                           
  3563                           ; BSR set to: 1
  3564                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3565  002BEA  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3566  002BEE  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3567  002BF2  2ADE               	incf	postinc2,f,c
  3568  002BF4  0E00               	movlw	0
  3569  002BF6  22DD               	addwfc	postdec2,f,c
  3570  002BF8                     
  3571                           ; BSR set to: 1
  3572                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3573  002BF8  0E00               	movlw	0
  3574  002BFA  0100               	movlb	0	; () banked
  3575  002BFC  6FB6               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3576  002BFE  0E00               	movlw	0
  3577  002C00  6FB5               	movwf	?_vfpfcnvrt& (0+255),b
  3578  002C02  EF1F  F016         	goto	l2300
  3579  002C06                     l11357:
  3580                           
  3581                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3582  002C06  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3583  002C0A  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3584  002C0E  CFDE FFF6          	movff	postinc2,tblptrl
  3585  002C12  CFDD FFF7          	movff	postdec2,tblptrh
  3586  002C16                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3587  002C16  6AF8               	clrf	tblptru,c
  3588  002C18                     	endif
  3589  002C18                     	if	0	;tblptru may be non-zero
  3590  002C18                     	endif
  3591  002C18  0008               	tblrd		*
  3592  002C1A  50F5               	movf	tablat,w,c
  3593  002C1C  6E27               	movwf	fputc@c^0,c
  3594  002C1E  6A28               	clrf	(fputc@c+1)^0,c
  3595  002C20  C0B5  F029         	movff	vfpfcnvrt@fp,fputc@fp
  3596  002C24  C0B6  F02A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3597  002C28  ECF8  F01F         	call	_fputc	;wreg free
  3598  002C2C                     
  3599                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3600  002C2C  C0B7  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3601  002C30  C0B8  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3602  002C34  2ADE               	incf	postinc2,f,c
  3603  002C36  0E00               	movlw	0
  3604  002C38  22DD               	addwfc	postdec2,f,c
  3605  002C3A  EFEE  F015         	goto	l11347
  3606  002C3E                     l2300:
  3607  002C3E  0012               	return		;funcret
  3608  002C40                     __end_of_vfpfcnvrt:
  3609                           	callstack 0
  3610                           
  3611 ;; *************** function _dtoa *****************
  3612 ;; Defined at:
  3613 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  3614 ;; Parameters:    Size  Location     Type
  3615 ;;  fp              2   17[BANK0 ] PTR struct _IO_FILE
  3616 ;;		 -> sprintf@f(11), 
  3617 ;;  d               8   19[BANK0 ] long long 
  3618 ;; Auto vars:     Size  Location     Type
  3619 ;;  n               8   43[BANK0 ] long long 
  3620 ;;  i               2   51[BANK0 ] int 
  3621 ;;  s               2   41[BANK0 ] int 
  3622 ;;  w               2   39[BANK0 ] int 
  3623 ;;  p               2   37[BANK0 ] int 
  3624 ;; Return value:  Size  Location     Type
  3625 ;;                  2   17[BANK0 ] int 
  3626 ;; Registers used:
  3627 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3628 ;; Tracked objects:
  3629 ;;		On entry : 0/0
  3630 ;;		On exit  : 0/0
  3631 ;;		Unchanged: 0/0
  3632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3633 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3634 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3635 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3636 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3637 ;;Total ram usage:       36 bytes
  3638 ;; Hardware stack levels used: 1
  3639 ;; Hardware stack levels required when called: 17
  3640 ;; This function calls:
  3641 ;;		___aodiv
  3642 ;;		___aomod
  3643 ;;		_abs
  3644 ;;		_pad
  3645 ;; This function is called by:
  3646 ;;		_vfpfcnvrt
  3647 ;; This function uses a non-reentrant model
  3648 ;;
  3649                           
  3650                           	psect	text8
  3651  002798                     __ptext8:
  3652                           	callstack 0
  3653  002798                     _dtoa:
  3654                           	callstack 8
  3655  002798                     
  3656                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  3657  002798  C093  F0AB         	movff	dtoa@d,dtoa@n
  3658  00279C  C094  F0AC         	movff	dtoa@d+1,dtoa@n+1
  3659  0027A0  C095  F0AD         	movff	dtoa@d+2,dtoa@n+2
  3660  0027A4  C096  F0AE         	movff	dtoa@d+3,dtoa@n+3
  3661  0027A8  C097  F0AF         	movff	dtoa@d+4,dtoa@n+4
  3662  0027AC  C098  F0B0         	movff	dtoa@d+5,dtoa@n+5
  3663  0027B0  C099  F0B1         	movff	dtoa@d+6,dtoa@n+6
  3664  0027B4  C09A  F0B2         	movff	dtoa@d+7,dtoa@n+7
  3665  0027B8                     
  3666                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  3667  0027B8  0100               	movlb	0	; () banked
  3668  0027BA  BFB2               	btfsc	(dtoa@n+7)& (0+255),7,b
  3669  0027BC  EFE2  F013         	goto	u8961
  3670  0027C0  EFE5  F013         	goto	u8960
  3671  0027C4                     u8961:
  3672  0027C4  0E01               	movlw	1
  3673  0027C6  EFE6  F013         	goto	u8970
  3674  0027CA                     u8960:
  3675  0027CA  0E00               	movlw	0
  3676  0027CC                     u8970:
  3677  0027CC  6FA9               	movwf	dtoa@s& (0+255),b
  3678  0027CE  6BAA               	clrf	(dtoa@s+1)& (0+255),b
  3679                           
  3680                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  3681  0027D0  51A9               	movf	dtoa@s& (0+255),w,b
  3682  0027D2  11AA               	iorwf	(dtoa@s+1)& (0+255),w,b
  3683  0027D4  B4D8               	btfsc	status,2,c
  3684  0027D6  EFEF  F013         	goto	u8981
  3685  0027DA  EFF1  F013         	goto	u8980
  3686  0027DE                     u8981:
  3687  0027DE  EF01  F014         	goto	l11181
  3688  0027E2                     u8980:
  3689  0027E2                     
  3690                           ; BSR set to: 0
  3691                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  3692  0027E2  1FB2               	comf	(dtoa@n+7)& (0+255),f,b
  3693  0027E4  1FB1               	comf	(dtoa@n+6)& (0+255),f,b
  3694  0027E6  1FB0               	comf	(dtoa@n+5)& (0+255),f,b
  3695  0027E8  1FAF               	comf	(dtoa@n+4)& (0+255),f,b
  3696  0027EA  1FAE               	comf	(dtoa@n+3)& (0+255),f,b
  3697  0027EC  1FAD               	comf	(dtoa@n+2)& (0+255),f,b
  3698  0027EE  1FAC               	comf	(dtoa@n+1)& (0+255),f,b
  3699  0027F0  6DAB               	negf	dtoa@n& (0+255),b
  3700  0027F2  0E00               	movlw	0
  3701  0027F4  23AC               	addwfc	(dtoa@n+1)& (0+255),f,b
  3702  0027F6  23AD               	addwfc	(dtoa@n+2)& (0+255),f,b
  3703  0027F8  23AE               	addwfc	(dtoa@n+3)& (0+255),f,b
  3704  0027FA  23AF               	addwfc	(dtoa@n+4)& (0+255),f,b
  3705  0027FC  23B0               	addwfc	(dtoa@n+5)& (0+255),f,b
  3706  0027FE  23B1               	addwfc	(dtoa@n+6)& (0+255),f,b
  3707  002800  23B2               	addwfc	(dtoa@n+7)& (0+255),f,b
  3708  002802                     l11181:
  3709                           
  3710                           ; BSR set to: 0
  3711                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  3712  002802  BE32               	btfsc	(_prec+1)^0,7,c
  3713  002804  EF06  F014         	goto	u8991
  3714  002808  EF08  F014         	goto	u8990
  3715  00280C                     u8991:
  3716  00280C  EF09  F014         	goto	l11185
  3717  002810                     u8990:
  3718  002810                     
  3719                           ; BSR set to: 0
  3720                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  3721  002810  9233               	bcf	_flags^0,1,c
  3722  002812                     l11185:
  3723                           
  3724                           ; BSR set to: 0
  3725                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  3726  002812  BE32               	btfsc	(_prec+1)^0,7,c
  3727  002814  EF16  F014         	goto	u9000
  3728  002818  5032               	movf	(_prec+1)^0,w,c
  3729  00281A  E106               	bnz	u9001
  3730  00281C  0431               	decf	_prec^0,w,c
  3731  00281E  B0D8               	btfsc	status,0,c
  3732  002820  EF14  F014         	goto	u9001
  3733  002824  EF16  F014         	goto	u9000
  3734  002828                     u9001:
  3735  002828  EF1C  F014         	goto	l2273
  3736  00282C                     u9000:
  3737  00282C                     
  3738                           ; BSR set to: 0
  3739  00282C  0E00               	movlw	0
  3740  00282E  6FA6               	movwf	(dtoa@p+1)& (0+255),b
  3741  002830  0E01               	movlw	1
  3742  002832  6FA5               	movwf	dtoa@p& (0+255),b
  3743  002834  EF20  F014         	goto	l2275
  3744  002838                     l2273:
  3745                           
  3746                           ; BSR set to: 0
  3747  002838  C031  F0A5         	movff	_prec,dtoa@p
  3748  00283C  C032  F0A6         	movff	_prec+1,dtoa@p+1
  3749  002840                     l2275:
  3750                           
  3751                           ; BSR set to: 0
  3752                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  3753  002840  C114  F0A7         	movff	_width,dtoa@w
  3754  002844  C115  F0A8         	movff	_width+1,dtoa@w+1
  3755  002848                     
  3756                           ; BSR set to: 0
  3757                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  3758  002848  51A9               	movf	dtoa@s& (0+255),w,b
  3759  00284A  11AA               	iorwf	(dtoa@s+1)& (0+255),w,b
  3760  00284C  A4D8               	btfss	status,2,c
  3761  00284E  EF2B  F014         	goto	u9011
  3762  002852  EF2D  F014         	goto	u9010
  3763  002856                     u9011:
  3764  002856  EF34  F014         	goto	l11193
  3765  00285A                     u9010:
  3766  00285A                     
  3767                           ; BSR set to: 0
  3768  00285A  A433               	btfss	_flags^0,2,c
  3769  00285C  EF32  F014         	goto	u9021
  3770  002860  EF34  F014         	goto	u9020
  3771  002864                     u9021:
  3772  002864  EF37  F014         	goto	l11195
  3773  002868                     u9020:
  3774  002868                     l11193:
  3775                           
  3776                           ; BSR set to: 0
  3777                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 306:         --w;
  3778  002868  07A7               	decf	dtoa@w& (0+255),f,b
  3779  00286A  A0D8               	btfss	status,0,c
  3780  00286C  07A8               	decf	(dtoa@w+1)& (0+255),f,b
  3781  00286E                     l11195:
  3782                           
  3783                           ; BSR set to: 0
  3784                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  3785  00286E  0E00               	movlw	0
  3786  002870  6FB4               	movwf	(dtoa@i+1)& (0+255),b
  3787  002872  0E1F               	movlw	31
  3788  002874  6FB3               	movwf	dtoa@i& (0+255),b
  3789  002876                     
  3790                           ; BSR set to: 0
  3791                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  3792  002876  0E00               	movlw	0
  3793  002878  0101               	movlb	1	; () banked
  3794  00287A  6F4D               	movwf	(_dbuf+31)& (0+255),b
  3795                           
  3796                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3797  00287C  EFBD  F014         	goto	l11209
  3798  002880                     l11199:
  3799                           
  3800                           ; BSR set to: 0
  3801                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 313:         --i;
  3802  002880  07B3               	decf	dtoa@i& (0+255),f,b
  3803  002882  A0D8               	btfss	status,0,c
  3804  002884  07B4               	decf	(dtoa@i+1)& (0+255),f,b
  3805  002886                     
  3806                           ; BSR set to: 0
  3807                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3808  002886  0E2E               	movlw	low _dbuf
  3809  002888  25B3               	addwf	dtoa@i& (0+255),w,b
  3810  00288A  6ED9               	movwf	fsr2l,c
  3811  00288C  0E01               	movlw	high _dbuf
  3812  00288E  21B4               	addwfc	(dtoa@i+1)& (0+255),w,b
  3813  002890  6EDA               	movwf	fsr2h,c
  3814  002892  C0AB  F080         	movff	dtoa@n,___aomod@dividend
  3815  002896  C0AC  F081         	movff	dtoa@n+1,___aomod@dividend+1
  3816  00289A  C0AD  F082         	movff	dtoa@n+2,___aomod@dividend+2
  3817  00289E  C0AE  F083         	movff	dtoa@n+3,___aomod@dividend+3
  3818  0028A2  C0AF  F084         	movff	dtoa@n+4,___aomod@dividend+4
  3819  0028A6  C0B0  F085         	movff	dtoa@n+5,___aomod@dividend+5
  3820  0028AA  C0B1  F086         	movff	dtoa@n+6,___aomod@dividend+6
  3821  0028AE  C0B2  F087         	movff	dtoa@n+7,___aomod@dividend+7
  3822  0028B2  0E0A               	movlw	10
  3823  0028B4  6F88               	movwf	___aomod@divisor& (0+255),b
  3824  0028B6  0E00               	movlw	0
  3825  0028B8  6F89               	movwf	(___aomod@divisor+1)& (0+255),b
  3826  0028BA  0E00               	movlw	0
  3827  0028BC  6F8A               	movwf	(___aomod@divisor+2)& (0+255),b
  3828  0028BE  0E00               	movlw	0
  3829  0028C0  6F8B               	movwf	(___aomod@divisor+3)& (0+255),b
  3830  0028C2  0E00               	movlw	0
  3831  0028C4  6F8C               	movwf	(___aomod@divisor+4)& (0+255),b
  3832  0028C6  0E00               	movlw	0
  3833  0028C8  6F8D               	movwf	(___aomod@divisor+5)& (0+255),b
  3834  0028CA  0E00               	movlw	0
  3835  0028CC  6F8E               	movwf	(___aomod@divisor+6)& (0+255),b
  3836  0028CE  0E00               	movlw	0
  3837  0028D0  6F8F               	movwf	(___aomod@divisor+7)& (0+255),b
  3838  0028D2  EC10  F01A         	call	___aomod	;wreg free
  3839  0028D6  C080  F09B         	movff	?___aomod,??_dtoa
  3840  0028DA  C081  F09C         	movff	?___aomod+1,??_dtoa+1
  3841  0028DE  C082  F09D         	movff	?___aomod+2,??_dtoa+2
  3842  0028E2  C083  F09E         	movff	?___aomod+3,??_dtoa+3
  3843  0028E6  C084  F09F         	movff	?___aomod+4,??_dtoa+4
  3844  0028EA  C085  F0A0         	movff	?___aomod+5,??_dtoa+5
  3845  0028EE  C086  F0A1         	movff	?___aomod+6,??_dtoa+6
  3846  0028F2  C087  F0A2         	movff	?___aomod+7,??_dtoa+7
  3847  0028F6  C09B  F029         	movff	??_dtoa,abs@a
  3848  0028FA  C09D  F02A         	movff	??_dtoa+2,abs@a+1
  3849  0028FE  EC23  F02D         	call	_abs	;wreg free
  3850  002902  5029               	movf	?_abs^0,w,c
  3851  002904  0F30               	addlw	48
  3852  002906  6EDF               	movwf	indf2,c
  3853  002908                     
  3854                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 315:         --p;
  3855  002908  0100               	movlb	0	; () banked
  3856  00290A  07A5               	decf	dtoa@p& (0+255),f,b
  3857  00290C  A0D8               	btfss	status,0,c
  3858  00290E  07A6               	decf	(dtoa@p+1)& (0+255),f,b
  3859  002910                     
  3860                           ; BSR set to: 0
  3861                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 316:         --w;
  3862  002910  07A7               	decf	dtoa@w& (0+255),f,b
  3863  002912  A0D8               	btfss	status,0,c
  3864  002914  07A8               	decf	(dtoa@w+1)& (0+255),f,b
  3865  002916                     
  3866                           ; BSR set to: 0
  3867                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  3868  002916  C0AB  F080         	movff	dtoa@n,___aodiv@dividend
  3869  00291A  C0AC  F081         	movff	dtoa@n+1,___aodiv@dividend+1
  3870  00291E  C0AD  F082         	movff	dtoa@n+2,___aodiv@dividend+2
  3871  002922  C0AE  F083         	movff	dtoa@n+3,___aodiv@dividend+3
  3872  002926  C0AF  F084         	movff	dtoa@n+4,___aodiv@dividend+4
  3873  00292A  C0B0  F085         	movff	dtoa@n+5,___aodiv@dividend+5
  3874  00292E  C0B1  F086         	movff	dtoa@n+6,___aodiv@dividend+6
  3875  002932  C0B2  F087         	movff	dtoa@n+7,___aodiv@dividend+7
  3876  002936  0E0A               	movlw	10
  3877  002938  6F88               	movwf	___aodiv@divisor& (0+255),b
  3878  00293A  0E00               	movlw	0
  3879  00293C  6F89               	movwf	(___aodiv@divisor+1)& (0+255),b
  3880  00293E  0E00               	movlw	0
  3881  002940  6F8A               	movwf	(___aodiv@divisor+2)& (0+255),b
  3882  002942  0E00               	movlw	0
  3883  002944  6F8B               	movwf	(___aodiv@divisor+3)& (0+255),b
  3884  002946  0E00               	movlw	0
  3885  002948  6F8C               	movwf	(___aodiv@divisor+4)& (0+255),b
  3886  00294A  0E00               	movlw	0
  3887  00294C  6F8D               	movwf	(___aodiv@divisor+5)& (0+255),b
  3888  00294E  0E00               	movlw	0
  3889  002950  6F8E               	movwf	(___aodiv@divisor+6)& (0+255),b
  3890  002952  0E00               	movlw	0
  3891  002954  6F8F               	movwf	(___aodiv@divisor+7)& (0+255),b
  3892  002956  EC8F  F018         	call	___aodiv	;wreg free
  3893  00295A  C080  F0AB         	movff	?___aodiv,dtoa@n
  3894  00295E  C081  F0AC         	movff	?___aodiv+1,dtoa@n+1
  3895  002962  C082  F0AD         	movff	?___aodiv+2,dtoa@n+2
  3896  002966  C083  F0AE         	movff	?___aodiv+3,dtoa@n+3
  3897  00296A  C084  F0AF         	movff	?___aodiv+4,dtoa@n+4
  3898  00296E  C085  F0B0         	movff	?___aodiv+5,dtoa@n+5
  3899  002972  C086  F0B1         	movff	?___aodiv+6,dtoa@n+6
  3900  002976  C087  F0B2         	movff	?___aodiv+7,dtoa@n+7
  3901  00297A                     l11209:
  3902                           
  3903                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3904  00297A  0100               	movlb	0	; () banked
  3905  00297C  BFB4               	btfsc	(dtoa@i+1)& (0+255),7,b
  3906  00297E  EFC9  F014         	goto	u9031
  3907  002982  51B4               	movf	(dtoa@i+1)& (0+255),w,b
  3908  002984  E108               	bnz	u9030
  3909  002986  05B3               	decf	dtoa@i& (0+255),w,b
  3910  002988  A0D8               	btfss	status,0,c
  3911  00298A  EFC9  F014         	goto	u9031
  3912  00298E  EFCB  F014         	goto	u9030
  3913  002992                     u9031:
  3914  002992  EFFB  F014         	goto	l11219
  3915  002996                     u9030:
  3916  002996                     
  3917                           ; BSR set to: 0
  3918  002996  51AB               	movf	dtoa@n& (0+255),w,b
  3919  002998  11AC               	iorwf	(dtoa@n+1)& (0+255),w,b
  3920  00299A  11AD               	iorwf	(dtoa@n+2)& (0+255),w,b
  3921  00299C  11AE               	iorwf	(dtoa@n+3)& (0+255),w,b
  3922  00299E  11AF               	iorwf	(dtoa@n+4)& (0+255),w,b
  3923  0029A0  11B0               	iorwf	(dtoa@n+5)& (0+255),w,b
  3924  0029A2  11B1               	iorwf	(dtoa@n+6)& (0+255),w,b
  3925  0029A4  11B2               	iorwf	(dtoa@n+7)& (0+255),w,b
  3926  0029A6  A4D8               	btfss	status,2,c
  3927  0029A8  EFD8  F014         	goto	u9041
  3928  0029AC  EFDA  F014         	goto	u9040
  3929  0029B0                     u9041:
  3930  0029B0  EF40  F014         	goto	l11199
  3931  0029B4                     u9040:
  3932  0029B4                     
  3933                           ; BSR set to: 0
  3934  0029B4  BFA6               	btfsc	(dtoa@p+1)& (0+255),7,b
  3935  0029B6  EFE7  F014         	goto	u9050
  3936  0029BA  51A6               	movf	(dtoa@p+1)& (0+255),w,b
  3937  0029BC  E106               	bnz	u9051
  3938  0029BE  05A5               	decf	dtoa@p& (0+255),w,b
  3939  0029C0  B0D8               	btfsc	status,0,c
  3940  0029C2  EFE5  F014         	goto	u9051
  3941  0029C6  EFE7  F014         	goto	u9050
  3942  0029CA                     u9051:
  3943  0029CA  EF40  F014         	goto	l11199
  3944  0029CE                     u9050:
  3945  0029CE                     
  3946                           ; BSR set to: 0
  3947  0029CE  BFA8               	btfsc	(dtoa@w+1)& (0+255),7,b
  3948  0029D0  EFF2  F014         	goto	u9061
  3949  0029D4  51A8               	movf	(dtoa@w+1)& (0+255),w,b
  3950  0029D6  E108               	bnz	u9060
  3951  0029D8  05A7               	decf	dtoa@w& (0+255),w,b
  3952  0029DA  A0D8               	btfss	status,0,c
  3953  0029DC  EFF2  F014         	goto	u9061
  3954  0029E0  EFF4  F014         	goto	u9060
  3955  0029E4                     u9061:
  3956  0029E4  EFFB  F014         	goto	l11219
  3957  0029E8                     u9060:
  3958  0029E8                     
  3959                           ; BSR set to: 0
  3960  0029E8  B233               	btfsc	_flags^0,1,c
  3961  0029EA  EFF9  F014         	goto	u9071
  3962  0029EE  EFFB  F014         	goto	u9070
  3963  0029F2                     u9071:
  3964  0029F2  EF40  F014         	goto	l11199
  3965  0029F6                     u9070:
  3966  0029F6                     l11219:
  3967                           
  3968                           ; BSR set to: 0
  3969                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  3970  0029F6  51A9               	movf	dtoa@s& (0+255),w,b
  3971  0029F8  11AA               	iorwf	(dtoa@s+1)& (0+255),w,b
  3972  0029FA  A4D8               	btfss	status,2,c
  3973  0029FC  EF02  F015         	goto	u9081
  3974  002A00  EF04  F015         	goto	u9080
  3975  002A04                     u9081:
  3976  002A04  EF0B  F015         	goto	l11223
  3977  002A08                     u9080:
  3978  002A08                     
  3979                           ; BSR set to: 0
  3980  002A08  A433               	btfss	_flags^0,2,c
  3981  002A0A  EF09  F015         	goto	u9091
  3982  002A0E  EF0B  F015         	goto	u9090
  3983  002A12                     u9091:
  3984  002A12  EF29  F015         	goto	l11233
  3985  002A16                     u9090:
  3986  002A16                     l11223:
  3987                           
  3988                           ; BSR set to: 0
  3989                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 322:         --i;
  3990  002A16  07B3               	decf	dtoa@i& (0+255),f,b
  3991  002A18  A0D8               	btfss	status,0,c
  3992  002A1A  07B4               	decf	(dtoa@i+1)& (0+255),f,b
  3993  002A1C                     
  3994                           ; BSR set to: 0
  3995                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  3996  002A1C  51A9               	movf	dtoa@s& (0+255),w,b
  3997  002A1E  11AA               	iorwf	(dtoa@s+1)& (0+255),w,b
  3998  002A20  A4D8               	btfss	status,2,c
  3999  002A22  EF15  F015         	goto	u9101
  4000  002A26  EF17  F015         	goto	u9100
  4001  002A2A                     u9101:
  4002  002A2A  EF1D  F015         	goto	l11229
  4003  002A2E                     u9100:
  4004  002A2E                     
  4005                           ; BSR set to: 0
  4006  002A2E  0E00               	movlw	0
  4007  002A30  6FA4               	movwf	(_dtoa$3844+1)& (0+255),b
  4008  002A32  0E2B               	movlw	43
  4009  002A34  6FA3               	movwf	_dtoa$3844& (0+255),b
  4010  002A36  EF21  F015         	goto	l11231
  4011  002A3A                     l11229:
  4012                           
  4013                           ; BSR set to: 0
  4014  002A3A  0E00               	movlw	0
  4015  002A3C  6FA4               	movwf	(_dtoa$3844+1)& (0+255),b
  4016  002A3E  0E2D               	movlw	45
  4017  002A40  6FA3               	movwf	_dtoa$3844& (0+255),b
  4018  002A42                     l11231:
  4019                           
  4020                           ; BSR set to: 0
  4021  002A42  0E2E               	movlw	low _dbuf
  4022  002A44  25B3               	addwf	dtoa@i& (0+255),w,b
  4023  002A46  6ED9               	movwf	fsr2l,c
  4024  002A48  0E01               	movlw	high _dbuf
  4025  002A4A  21B4               	addwfc	(dtoa@i+1)& (0+255),w,b
  4026  002A4C  6EDA               	movwf	fsr2h,c
  4027  002A4E  C0A3  FFDF         	movff	_dtoa$3844,indf2
  4028  002A52                     l11233:
  4029                           
  4030                           ; BSR set to: 0
  4031                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  4032  002A52  C091  F087         	movff	dtoa@fp,pad@fp
  4033  002A56  C092  F088         	movff	dtoa@fp+1,pad@fp+1
  4034  002A5A  0E2E               	movlw	low _dbuf
  4035  002A5C  25B3               	addwf	dtoa@i& (0+255),w,b
  4036  002A5E  6F89               	movwf	pad@buf& (0+255),b
  4037  002A60  0E01               	movlw	high _dbuf
  4038  002A62  21B4               	addwfc	(dtoa@i+1)& (0+255),w,b
  4039  002A64  6F8A               	movwf	(pad@buf+1)& (0+255),b
  4040  002A66  C0A7  F08B         	movff	dtoa@w,pad@p
  4041  002A6A  C0A8  F08C         	movff	dtoa@w+1,pad@p+1
  4042  002A6E  EC5D  F020         	call	_pad	;wreg free
  4043  002A72  C087  F091         	movff	?_pad,?_dtoa
  4044  002A76  C088  F092         	movff	?_pad+1,?_dtoa+1
  4045  002A7A  0012               	return		;funcret
  4046  002A7C                     __end_of_dtoa:
  4047                           	callstack 0
  4048                           
  4049 ;; *************** function _pad *****************
  4050 ;; Defined at:
  4051 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  4052 ;; Parameters:    Size  Location     Type
  4053 ;;  fp              2    7[BANK0 ] PTR struct _IO_FILE
  4054 ;;		 -> sprintf@f(11), 
  4055 ;;  buf             2    9[BANK0 ] PTR unsigned char 
  4056 ;;		 -> dbuf(32), 
  4057 ;;  p               2   11[BANK0 ] int 
  4058 ;; Auto vars:     Size  Location     Type
  4059 ;;  w               2   15[BANK0 ] int 
  4060 ;;  i               2   13[BANK0 ] int 
  4061 ;; Return value:  Size  Location     Type
  4062 ;;                  2    7[BANK0 ] int 
  4063 ;; Registers used:
  4064 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4065 ;; Tracked objects:
  4066 ;;		On entry : 0/0
  4067 ;;		On exit  : 0/0
  4068 ;;		Unchanged: 0/0
  4069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4070 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4071 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4072 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4073 ;;      Totals:         1      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4074 ;;Total ram usage:       11 bytes
  4075 ;; Hardware stack levels used: 1
  4076 ;; Hardware stack levels required when called: 16
  4077 ;; This function calls:
  4078 ;;		_fputc
  4079 ;;		_fputs
  4080 ;;		_strlen
  4081 ;; This function is called by:
  4082 ;;		_dtoa
  4083 ;; This function uses a non-reentrant model
  4084 ;;
  4085                           
  4086                           	psect	text9
  4087  0040BA                     __ptext9:
  4088                           	callstack 0
  4089  0040BA                     _pad:
  4090                           	callstack 8
  4091  0040BA                     
  4092                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4093  0040BA  A033               	btfss	_flags^0,0,c
  4094  0040BC  EF62  F020         	goto	u8801
  4095  0040C0  EF64  F020         	goto	u8800
  4096  0040C4                     u8801:
  4097  0040C4  EF6E  F020         	goto	l11103
  4098  0040C8                     u8800:
  4099  0040C8                     
  4100                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4101  0040C8  C089  F080         	movff	pad@buf,fputs@s
  4102  0040CC  C08A  F081         	movff	pad@buf+1,fputs@s+1
  4103  0040D0  C087  F082         	movff	pad@fp,fputs@fp
  4104  0040D4  C088  F083         	movff	pad@fp+1,fputs@fp+1
  4105  0040D8  EC72  F02C         	call	_fputs	;wreg free
  4106  0040DC                     l11103:
  4107                           
  4108                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4109  0040DC  0100               	movlb	0	; () banked
  4110  0040DE  BF8C               	btfsc	(pad@p+1)& (0+255),7,b
  4111  0040E0  EF74  F020         	goto	u8811
  4112  0040E4  EF76  F020         	goto	u8810
  4113  0040E8                     u8811:
  4114  0040E8  EF7C  F020         	goto	l11107
  4115  0040EC                     u8810:
  4116  0040EC                     
  4117                           ; BSR set to: 0
  4118  0040EC  C08B  F08F         	movff	pad@p,pad@w
  4119  0040F0  C08C  F090         	movff	pad@p+1,pad@w+1
  4120  0040F4  EF80  F020         	goto	l2262
  4121  0040F8                     l11107:
  4122                           
  4123                           ; BSR set to: 0
  4124  0040F8  0E00               	movlw	0
  4125  0040FA  6F90               	movwf	(pad@w+1)& (0+255),b
  4126  0040FC  0E00               	movlw	0
  4127  0040FE  6F8F               	movwf	pad@w& (0+255),b
  4128  004100                     l2262:
  4129                           
  4130                           ; BSR set to: 0
  4131                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4132  004100  0E00               	movlw	0
  4133  004102  6F8E               	movwf	(pad@i+1)& (0+255),b
  4134  004104  0E00               	movlw	0
  4135  004106  6F8D               	movwf	pad@i& (0+255),b
  4136                           
  4137                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4138  004108  EF93  F020         	goto	l11113
  4139  00410C                     l11109:
  4140                           
  4141                           ; BSR set to: 0
  4142                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4143  00410C  0E00               	movlw	0
  4144  00410E  6E28               	movwf	(fputc@c+1)^0,c
  4145  004110  0E20               	movlw	32
  4146  004112  6E27               	movwf	fputc@c^0,c
  4147  004114  C087  F029         	movff	pad@fp,fputc@fp
  4148  004118  C088  F02A         	movff	pad@fp+1,fputc@fp+1
  4149  00411C  ECF8  F01F         	call	_fputc	;wreg free
  4150  004120                     
  4151                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4152  004120  0100               	movlb	0	; () banked
  4153  004122  4B8D               	infsnz	pad@i& (0+255),f,b
  4154  004124  2B8E               	incf	(pad@i+1)& (0+255),f,b
  4155  004126                     l11113:
  4156                           
  4157                           ; BSR set to: 0
  4158                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4159  004126  518F               	movf	pad@w& (0+255),w,b
  4160  004128  5D8D               	subwf	pad@i& (0+255),w,b
  4161  00412A  518E               	movf	(pad@i+1)& (0+255),w,b
  4162  00412C  0A80               	xorlw	128
  4163  00412E  6E30               	movwf	??_pad^0,c
  4164  004130  5190               	movf	(pad@w+1)& (0+255),w,b
  4165  004132  0A80               	xorlw	128
  4166  004134  5830               	subwfb	??_pad^0,w,c
  4167  004136  A0D8               	btfss	status,0,c
  4168  004138  EFA0  F020         	goto	u8821
  4169  00413C  EFA2  F020         	goto	u8820
  4170  004140                     u8821:
  4171  004140  EF86  F020         	goto	l11109
  4172  004144                     u8820:
  4173  004144                     
  4174                           ; BSR set to: 0
  4175                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4176  004144  B033               	btfsc	_flags^0,0,c
  4177  004146  EFA7  F020         	goto	u8831
  4178  00414A  EFA9  F020         	goto	u8830
  4179  00414E                     u8831:
  4180  00414E  EFB3  F020         	goto	l11117
  4181  004152                     u8830:
  4182  004152                     
  4183                           ; BSR set to: 0
  4184                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4185  004152  C089  F080         	movff	pad@buf,fputs@s
  4186  004156  C08A  F081         	movff	pad@buf+1,fputs@s+1
  4187  00415A  C087  F082         	movff	pad@fp,fputs@fp
  4188  00415E  C088  F083         	movff	pad@fp+1,fputs@fp+1
  4189  004162  EC72  F02C         	call	_fputs	;wreg free
  4190  004166                     l11117:
  4191                           
  4192                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4193  004166  C089  F027         	movff	pad@buf,strlen@s
  4194  00416A  C08A  F028         	movff	pad@buf+1,strlen@s+1
  4195  00416E  ECBB  F02D         	call	_strlen	;wreg free
  4196  004172  0100               	movlb	0	; () banked
  4197  004174  518F               	movf	pad@w& (0+255),w,b
  4198  004176  2427               	addwf	?_strlen^0,w,c
  4199  004178  6F87               	movwf	?_pad& (0+255),b
  4200  00417A  5190               	movf	(pad@w+1)& (0+255),w,b
  4201  00417C  2028               	addwfc	(?_strlen+1)^0,w,c
  4202  00417E  6F88               	movwf	(?_pad+1)& (0+255),b
  4203  004180                     
  4204                           ; BSR set to: 0
  4205  004180  0012               	return		;funcret
  4206  004182                     __end_of_pad:
  4207                           	callstack 0
  4208                           
  4209 ;; *************** function _strlen *****************
  4210 ;; Defined at:
  4211 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  4212 ;; Parameters:    Size  Location     Type
  4213 ;;  s               2   38[COMRAM] PTR const unsigned char 
  4214 ;;		 -> dbuf(32), 
  4215 ;; Auto vars:     Size  Location     Type
  4216 ;;  a               2   40[COMRAM] PTR const unsigned char 
  4217 ;;		 -> dbuf(32), 
  4218 ;; Return value:  Size  Location     Type
  4219 ;;                  2   38[COMRAM] unsigned int 
  4220 ;; Registers used:
  4221 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4222 ;; Tracked objects:
  4223 ;;		On entry : 0/0
  4224 ;;		On exit  : 0/0
  4225 ;;		Unchanged: 0/0
  4226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4227 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4228 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4230 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4231 ;;Total ram usage:        4 bytes
  4232 ;; Hardware stack levels used: 1
  4233 ;; Hardware stack levels required when called: 13
  4234 ;; This function calls:
  4235 ;;		Nothing
  4236 ;; This function is called by:
  4237 ;;		_pad
  4238 ;; This function uses a non-reentrant model
  4239 ;;
  4240                           
  4241                           	psect	text10
  4242  005B76                     __ptext10:
  4243                           	callstack 0
  4244  005B76                     _strlen:
  4245                           	callstack 10
  4246  005B76  C027  F029         	movff	strlen@s,strlen@a
  4247  005B7A  C028  F02A         	movff	strlen@s+1,strlen@a+1
  4248  005B7E  EFC3  F02D         	goto	l10847
  4249  005B82                     l10845:
  4250  005B82  4A27               	infsnz	strlen@s^0,f,c
  4251  005B84  2A28               	incf	(strlen@s+1)^0,f,c
  4252  005B86                     l10847:
  4253  005B86  C027  FFD9         	movff	strlen@s,fsr2l
  4254  005B8A  C028  FFDA         	movff	strlen@s+1,fsr2h
  4255  005B8E  50DF               	movf	indf2,w,c
  4256  005B90  A4D8               	btfss	status,2,c
  4257  005B92  EFCD  F02D         	goto	u8561
  4258  005B96  EFCF  F02D         	goto	u8560
  4259  005B9A                     u8561:
  4260  005B9A  EFC1  F02D         	goto	l10845
  4261  005B9E                     u8560:
  4262  005B9E  5029               	movf	strlen@a^0,w,c
  4263  005BA0  5C27               	subwf	strlen@s^0,w,c
  4264  005BA2  6E27               	movwf	?_strlen^0,c
  4265  005BA4  502A               	movf	(strlen@a+1)^0,w,c
  4266  005BA6  5828               	subwfb	(strlen@s+1)^0,w,c
  4267  005BA8  6E28               	movwf	(?_strlen+1)^0,c
  4268  005BAA  0012               	return		;funcret
  4269  005BAC                     __end_of_strlen:
  4270                           	callstack 0
  4271                           
  4272 ;; *************** function _fputs *****************
  4273 ;; Defined at:
  4274 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  4275 ;; Parameters:    Size  Location     Type
  4276 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  4277 ;;		 -> dbuf(32), 
  4278 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  4279 ;;		 -> sprintf@f(11), 
  4280 ;; Auto vars:     Size  Location     Type
  4281 ;;  i               2    5[BANK0 ] int 
  4282 ;;  c               1    4[BANK0 ] unsigned char 
  4283 ;; Return value:  Size  Location     Type
  4284 ;;                  2    0[BANK0 ] int 
  4285 ;; Registers used:
  4286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4287 ;; Tracked objects:
  4288 ;;		On entry : 0/0
  4289 ;;		On exit  : 0/0
  4290 ;;		Unchanged: 0/0
  4291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4292 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4293 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4295 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4296 ;;Total ram usage:        7 bytes
  4297 ;; Hardware stack levels used: 1
  4298 ;; Hardware stack levels required when called: 15
  4299 ;; This function calls:
  4300 ;;		_fputc
  4301 ;; This function is called by:
  4302 ;;		_pad
  4303 ;; This function uses a non-reentrant model
  4304 ;;
  4305                           
  4306                           	psect	text11
  4307  0058E4                     __ptext11:
  4308                           	callstack 0
  4309  0058E4                     _fputs:
  4310                           	callstack 8
  4311  0058E4  0E00               	movlw	0
  4312  0058E6  0100               	movlb	0	; () banked
  4313  0058E8  6F86               	movwf	(fputs@i+1)& (0+255),b
  4314  0058EA  0E00               	movlw	0
  4315  0058EC  6F85               	movwf	fputs@i& (0+255),b
  4316  0058EE  EF85  F02C         	goto	l10841
  4317  0058F2                     l10837:
  4318                           
  4319                           ; BSR set to: 0
  4320  0058F2  C084  F027         	movff	fputs@c,fputc@c
  4321  0058F6  6A28               	clrf	(fputc@c+1)^0,c
  4322  0058F8  C082  F029         	movff	fputs@fp,fputc@fp
  4323  0058FC  C083  F02A         	movff	fputs@fp+1,fputc@fp+1
  4324  005900  ECF8  F01F         	call	_fputc	;wreg free
  4325  005904  0100               	movlb	0	; () banked
  4326  005906  4B85               	infsnz	fputs@i& (0+255),f,b
  4327  005908  2B86               	incf	(fputs@i+1)& (0+255),f,b
  4328  00590A                     l10841:
  4329                           
  4330                           ; BSR set to: 0
  4331  00590A  5185               	movf	fputs@i& (0+255),w,b
  4332  00590C  2580               	addwf	fputs@s& (0+255),w,b
  4333  00590E  6ED9               	movwf	fsr2l,c
  4334  005910  5186               	movf	(fputs@i+1)& (0+255),w,b
  4335  005912  2181               	addwfc	(fputs@s+1)& (0+255),w,b
  4336  005914  6EDA               	movwf	fsr2h,c
  4337  005916  50DF               	movf	indf2,w,c
  4338  005918  6F84               	movwf	fputs@c& (0+255),b
  4339  00591A  5184               	movf	fputs@c& (0+255),w,b
  4340  00591C  A4D8               	btfss	status,2,c
  4341  00591E  EF93  F02C         	goto	u8551
  4342  005922  EF95  F02C         	goto	u8550
  4343  005926                     u8551:
  4344  005926  EF79  F02C         	goto	l10837
  4345  00592A                     u8550:
  4346  00592A                     
  4347                           ; BSR set to: 0
  4348  00592A  0012               	return		;funcret
  4349  00592C                     __end_of_fputs:
  4350                           	callstack 0
  4351                           
  4352 ;; *************** function _fputc *****************
  4353 ;; Defined at:
  4354 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  4355 ;; Parameters:    Size  Location     Type
  4356 ;;  c               2   38[COMRAM] int 
  4357 ;;  fp              2   40[COMRAM] PTR struct _IO_FILE
  4358 ;;		 -> sprintf@f(11), 
  4359 ;; Auto vars:     Size  Location     Type
  4360 ;;		None
  4361 ;; Return value:  Size  Location     Type
  4362 ;;                  2   38[COMRAM] int 
  4363 ;; Registers used:
  4364 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4365 ;; Tracked objects:
  4366 ;;		On entry : 0/0
  4367 ;;		On exit  : 0/0
  4368 ;;		Unchanged: 0/0
  4369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4370 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4372 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4373 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4374 ;;Total ram usage:        9 bytes
  4375 ;; Hardware stack levels used: 1
  4376 ;; Hardware stack levels required when called: 14
  4377 ;; This function calls:
  4378 ;;		_putch
  4379 ;; This function is called by:
  4380 ;;		_pad
  4381 ;;		_vfpfcnvrt
  4382 ;;		_fputs
  4383 ;; This function uses a non-reentrant model
  4384 ;;
  4385                           
  4386                           	psect	text12
  4387  003FF0                     __ptext12:
  4388                           	callstack 0
  4389  003FF0                     _fputc:
  4390                           	callstack 11
  4391  003FF0  5029               	movf	fputc@fp^0,w,c
  4392  003FF2  102A               	iorwf	(fputc@fp+1)^0,w,c
  4393  003FF4  B4D8               	btfsc	status,2,c
  4394  003FF6  EFFF  F01F         	goto	u8431
  4395  003FFA  EF01  F020         	goto	u8430
  4396  003FFE                     u8431:
  4397  003FFE  EF0A  F020         	goto	l10595
  4398  004002                     u8430:
  4399  004002  5029               	movf	fputc@fp^0,w,c
  4400  004004  102A               	iorwf	(fputc@fp+1)^0,w,c
  4401  004006  A4D8               	btfss	status,2,c
  4402  004008  EF08  F020         	goto	u8441
  4403  00400C  EF0A  F020         	goto	u8440
  4404  004010                     u8441:
  4405  004010  EF0F  F020         	goto	l10597
  4406  004014                     u8440:
  4407  004014                     l10595:
  4408  004014  5027               	movf	fputc@c^0,w,c
  4409  004016  ECF8  F031         	call	_putch
  4410  00401A  EF5C  F020         	goto	l2326
  4411  00401E                     l10597:
  4412  00401E  EE20 F009          	lfsr	2,9
  4413  004022  5029               	movf	fputc@fp^0,w,c
  4414  004024  26D9               	addwf	fsr2l,f,c
  4415  004026  502A               	movf	(fputc@fp+1)^0,w,c
  4416  004028  22DA               	addwfc	fsr2h,f,c
  4417  00402A  50DE               	movf	postinc2,w,c
  4418  00402C  10DE               	iorwf	postinc2,w,c
  4419  00402E  B4D8               	btfsc	status,2,c
  4420  004030  EF1C  F020         	goto	u8451
  4421  004034  EF1E  F020         	goto	u8450
  4422  004038                     u8451:
  4423  004038  EF39  F020         	goto	l10601
  4424  00403C                     u8450:
  4425  00403C  EE20 F009          	lfsr	2,9
  4426  004040  5029               	movf	fputc@fp^0,w,c
  4427  004042  26D9               	addwf	fsr2l,f,c
  4428  004044  502A               	movf	(fputc@fp+1)^0,w,c
  4429  004046  22DA               	addwfc	fsr2h,f,c
  4430  004048  EE10 F003          	lfsr	1,3
  4431  00404C  5029               	movf	fputc@fp^0,w,c
  4432  00404E  26E1               	addwf	fsr1l,f,c
  4433  004050  502A               	movf	(fputc@fp+1)^0,w,c
  4434  004052  22E2               	addwfc	fsr1h,f,c
  4435  004054  50DE               	movf	postinc2,w,c
  4436  004056  5CE6               	subwf	postinc1,w,c
  4437  004058  50E6               	movf	postinc1,w,c
  4438  00405A  0A80               	xorlw	128
  4439  00405C  6E2F               	movwf	(??_fputc+4)^0,c
  4440  00405E  50DE               	movf	postinc2,w,c
  4441  004060  0A80               	xorlw	128
  4442  004062  582F               	subwfb	(??_fputc+4)^0,w,c
  4443  004064  B0D8               	btfsc	status,0,c
  4444  004066  EF37  F020         	goto	u8461
  4445  00406A  EF39  F020         	goto	u8460
  4446  00406E                     u8461:
  4447  00406E  EF5C  F020         	goto	l2326
  4448  004072                     u8460:
  4449  004072                     l10601:
  4450  004072  EE20 F003          	lfsr	2,3
  4451  004076  5029               	movf	fputc@fp^0,w,c
  4452  004078  26D9               	addwf	fsr2l,f,c
  4453  00407A  502A               	movf	(fputc@fp+1)^0,w,c
  4454  00407C  22DA               	addwfc	fsr2h,f,c
  4455  00407E  CFDE F02B          	movff	postinc2,??_fputc
  4456  004082  CFDD F02C          	movff	postdec2,??_fputc+1
  4457  004086  C029  FFD9         	movff	fputc@fp,fsr2l
  4458  00408A  C02A  FFDA         	movff	fputc@fp+1,fsr2h
  4459  00408E  CFDE F02D          	movff	postinc2,??_fputc+2
  4460  004092  CFDD F02E          	movff	postdec2,??_fputc+3
  4461  004096  502B               	movf	??_fputc^0,w,c
  4462  004098  242D               	addwf	(??_fputc+2)^0,w,c
  4463  00409A  6ED9               	movwf	fsr2l,c
  4464  00409C  502C               	movf	(??_fputc+1)^0,w,c
  4465  00409E  202E               	addwfc	(??_fputc+3)^0,w,c
  4466  0040A0  6EDA               	movwf	fsr2h,c
  4467  0040A2  C027  FFDF         	movff	fputc@c,indf2
  4468  0040A6  EE20 F003          	lfsr	2,3
  4469  0040AA  5029               	movf	fputc@fp^0,w,c
  4470  0040AC  26D9               	addwf	fsr2l,f,c
  4471  0040AE  502A               	movf	(fputc@fp+1)^0,w,c
  4472  0040B0  22DA               	addwfc	fsr2h,f,c
  4473  0040B2  2ADE               	incf	postinc2,f,c
  4474  0040B4  0E00               	movlw	0
  4475  0040B6  22DD               	addwfc	postdec2,f,c
  4476  0040B8                     l2326:
  4477  0040B8  0012               	return		;funcret
  4478  0040BA                     __end_of_fputc:
  4479                           	callstack 0
  4480                           
  4481 ;; *************** function _putch *****************
  4482 ;; Defined at:
  4483 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  4484 ;; Parameters:    Size  Location     Type
  4485 ;;  c               1    wreg     unsigned char 
  4486 ;; Auto vars:     Size  Location     Type
  4487 ;;  c               1    0[COMRAM] unsigned char 
  4488 ;; Return value:  Size  Location     Type
  4489 ;;                  1    wreg      void 
  4490 ;; Registers used:
  4491 ;;		wreg
  4492 ;; Tracked objects:
  4493 ;;		On entry : 0/0
  4494 ;;		On exit  : 0/0
  4495 ;;		Unchanged: 0/0
  4496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4501 ;;Total ram usage:        0 bytes
  4502 ;; Hardware stack levels used: 1
  4503 ;; Hardware stack levels required when called: 13
  4504 ;; This function calls:
  4505 ;;		Nothing
  4506 ;; This function is called by:
  4507 ;;		_fputc
  4508 ;; This function uses a non-reentrant model
  4509 ;;
  4510                           
  4511                           	psect	text13
  4512  0063F0                     __ptext13:
  4513                           	callstack 0
  4514  0063F0                     _putch:
  4515                           	callstack 11
  4516  0063F0  0012               	return		;funcret
  4517  0063F2                     __end_of_putch:
  4518                           	callstack 0
  4519                           
  4520 ;; *************** function _abs *****************
  4521 ;; Defined at:
  4522 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\abs.c"
  4523 ;; Parameters:    Size  Location     Type
  4524 ;;  a               2   40[COMRAM] int 
  4525 ;; Auto vars:     Size  Location     Type
  4526 ;;		None
  4527 ;; Return value:  Size  Location     Type
  4528 ;;                  2   40[COMRAM] int 
  4529 ;; Registers used:
  4530 ;;		wreg, status,2, status,0
  4531 ;; Tracked objects:
  4532 ;;		On entry : 0/0
  4533 ;;		On exit  : 0/0
  4534 ;;		Unchanged: 0/0
  4535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4536 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4538 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4539 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4540 ;;Total ram usage:        4 bytes
  4541 ;; Hardware stack levels used: 1
  4542 ;; Hardware stack levels required when called: 13
  4543 ;; This function calls:
  4544 ;;		Nothing
  4545 ;; This function is called by:
  4546 ;;		_dtoa
  4547 ;; This function uses a non-reentrant model
  4548 ;;
  4549                           
  4550                           	psect	text14
  4551  005A46                     __ptext14:
  4552                           	callstack 0
  4553  005A46                     _abs:
  4554                           	callstack 11
  4555  005A46  BE2A               	btfsc	(abs@a+1)^0,7,c
  4556  005A48  EF30  F02D         	goto	u8840
  4557  005A4C  502A               	movf	(abs@a+1)^0,w,c
  4558  005A4E  E106               	bnz	u8841
  4559  005A50  0429               	decf	abs@a^0,w,c
  4560  005A52  B0D8               	btfsc	status,0,c
  4561  005A54  EF2E  F02D         	goto	u8841
  4562  005A58  EF30  F02D         	goto	u8840
  4563  005A5C                     u8841:
  4564  005A5C  EF3E  F02D         	goto	l2311
  4565  005A60                     u8840:
  4566  005A60  C029  F02B         	movff	abs@a,??_abs
  4567  005A64  C02A  F02C         	movff	abs@a+1,??_abs+1
  4568  005A68  1E2B               	comf	??_abs^0,f,c
  4569  005A6A  1E2C               	comf	(??_abs+1)^0,f,c
  4570  005A6C  4A2B               	infsnz	??_abs^0,f,c
  4571  005A6E  2A2C               	incf	(??_abs+1)^0,f,c
  4572  005A70  C02B  F029         	movff	??_abs,?_abs
  4573  005A74  C02C  F02A         	movff	??_abs+1,?_abs+1
  4574  005A78  EF42  F02D         	goto	l2314
  4575  005A7C                     l2311:
  4576  005A7C  C029  F029         	movff	abs@a,?_abs
  4577  005A80  C02A  F02A         	movff	abs@a+1,?_abs+1
  4578  005A84                     l2314:
  4579  005A84  0012               	return		;funcret
  4580  005A86                     __end_of_abs:
  4581                           	callstack 0
  4582                           
  4583 ;; *************** function ___aomod *****************
  4584 ;; Defined at:
  4585 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aomod.c"
  4586 ;; Parameters:    Size  Location     Type
  4587 ;;  dividend        8    0[BANK0 ] long long 
  4588 ;;  divisor         8    8[BANK0 ] long long 
  4589 ;; Auto vars:     Size  Location     Type
  4590 ;;  sign            1   39[COMRAM] unsigned char 
  4591 ;;  counter         1   38[COMRAM] unsigned char 
  4592 ;; Return value:  Size  Location     Type
  4593 ;;                  8    0[BANK0 ] long long 
  4594 ;; Registers used:
  4595 ;;		wreg, status,2, status,0
  4596 ;; Tracked objects:
  4597 ;;		On entry : 0/0
  4598 ;;		On exit  : 0/0
  4599 ;;		Unchanged: 0/0
  4600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4601 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4602 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4604 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4605 ;;Total ram usage:       18 bytes
  4606 ;; Hardware stack levels used: 1
  4607 ;; Hardware stack levels required when called: 13
  4608 ;; This function calls:
  4609 ;;		Nothing
  4610 ;; This function is called by:
  4611 ;;		_dtoa
  4612 ;; This function uses a non-reentrant model
  4613 ;;
  4614                           
  4615                           	psect	text15
  4616  003420                     __ptext15:
  4617                           	callstack 0
  4618  003420                     ___aomod:
  4619                           	callstack 11
  4620  003420  0E00               	movlw	0
  4621  003422  6E28               	movwf	___aomod@sign^0,c
  4622  003424  0100               	movlb	0	; () banked
  4623  003426  BF87               	btfsc	(___aomod@dividend+7)& (0+255),7,b
  4624  003428  EF1A  F01A         	goto	u8740
  4625  00342C  EF18  F01A         	goto	u8741
  4626  003430                     u8741:
  4627  003430  EF2C  F01A         	goto	l11071
  4628  003434                     u8740:
  4629  003434                     
  4630                           ; BSR set to: 0
  4631  003434  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
  4632  003436  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
  4633  003438  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
  4634  00343A  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
  4635  00343C  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
  4636  00343E  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
  4637  003440  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
  4638  003442  6D80               	negf	___aomod@dividend& (0+255),b
  4639  003444  0E00               	movlw	0
  4640  003446  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  4641  003448  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  4642  00344A  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  4643  00344C  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  4644  00344E  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  4645  003450  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  4646  003452  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  4647  003454                     
  4648                           ; BSR set to: 0
  4649  003454  0E01               	movlw	1
  4650  003456  6E28               	movwf	___aomod@sign^0,c
  4651  003458                     l11071:
  4652                           
  4653                           ; BSR set to: 0
  4654  003458  BF8F               	btfsc	(___aomod@divisor+7)& (0+255),7,b
  4655  00345A  EF33  F01A         	goto	u8750
  4656  00345E  EF31  F01A         	goto	u8751
  4657  003462                     u8751:
  4658  003462  EF43  F01A         	goto	l11075
  4659  003466                     u8750:
  4660  003466                     
  4661                           ; BSR set to: 0
  4662  003466  1F8F               	comf	(___aomod@divisor+7)& (0+255),f,b
  4663  003468  1F8E               	comf	(___aomod@divisor+6)& (0+255),f,b
  4664  00346A  1F8D               	comf	(___aomod@divisor+5)& (0+255),f,b
  4665  00346C  1F8C               	comf	(___aomod@divisor+4)& (0+255),f,b
  4666  00346E  1F8B               	comf	(___aomod@divisor+3)& (0+255),f,b
  4667  003470  1F8A               	comf	(___aomod@divisor+2)& (0+255),f,b
  4668  003472  1F89               	comf	(___aomod@divisor+1)& (0+255),f,b
  4669  003474  6D88               	negf	___aomod@divisor& (0+255),b
  4670  003476  0E00               	movlw	0
  4671  003478  2389               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  4672  00347A  238A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  4673  00347C  238B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  4674  00347E  238C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  4675  003480  238D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  4676  003482  238E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  4677  003484  238F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  4678  003486                     l11075:
  4679                           
  4680                           ; BSR set to: 0
  4681  003486  5188               	movf	___aomod@divisor& (0+255),w,b
  4682  003488  1189               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  4683  00348A  118A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  4684  00348C  118B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  4685  00348E  118C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  4686  003490  118D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  4687  003492  118E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  4688  003494  118F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  4689  003496  B4D8               	btfsc	status,2,c
  4690  003498  EF50  F01A         	goto	u8761
  4691  00349C  EF52  F01A         	goto	u8760
  4692  0034A0                     u8761:
  4693  0034A0  EF9A  F01A         	goto	l11091
  4694  0034A4                     u8760:
  4695  0034A4                     
  4696                           ; BSR set to: 0
  4697  0034A4  0E01               	movlw	1
  4698  0034A6  6E27               	movwf	___aomod@counter^0,c
  4699  0034A8  EF60  F01A         	goto	l11081
  4700  0034AC                     l11079:
  4701                           
  4702                           ; BSR set to: 0
  4703  0034AC  90D8               	bcf	status,0,c
  4704  0034AE  3788               	rlcf	___aomod@divisor& (0+255),f,b
  4705  0034B0  3789               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  4706  0034B2  378A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  4707  0034B4  378B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  4708  0034B6  378C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  4709  0034B8  378D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  4710  0034BA  378E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  4711  0034BC  378F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  4712  0034BE  2A27               	incf	___aomod@counter^0,f,c
  4713  0034C0                     l11081:
  4714                           
  4715                           ; BSR set to: 0
  4716  0034C0  AF8F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  4717  0034C2  EF65  F01A         	goto	u8771
  4718  0034C6  EF67  F01A         	goto	u8770
  4719  0034CA                     u8771:
  4720  0034CA  EF56  F01A         	goto	l11079
  4721  0034CE                     u8770:
  4722  0034CE                     l11083:
  4723                           
  4724                           ; BSR set to: 0
  4725  0034CE  5188               	movf	___aomod@divisor& (0+255),w,b
  4726  0034D0  5D80               	subwf	___aomod@dividend& (0+255),w,b
  4727  0034D2  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
  4728  0034D4  5981               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  4729  0034D6  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
  4730  0034D8  5982               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  4731  0034DA  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
  4732  0034DC  5983               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  4733  0034DE  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
  4734  0034E0  5984               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  4735  0034E2  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
  4736  0034E4  5985               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  4737  0034E6  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
  4738  0034E8  5986               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  4739  0034EA  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
  4740  0034EC  5987               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  4741  0034EE  A0D8               	btfss	status,0,c
  4742  0034F0  EF7C  F01A         	goto	u8781
  4743  0034F4  EF7E  F01A         	goto	u8780
  4744  0034F8                     u8781:
  4745  0034F8  EF8E  F01A         	goto	l11087
  4746  0034FC                     u8780:
  4747  0034FC                     
  4748                           ; BSR set to: 0
  4749  0034FC  5188               	movf	___aomod@divisor& (0+255),w,b
  4750  0034FE  5F80               	subwf	___aomod@dividend& (0+255),f,b
  4751  003500  5189               	movf	(___aomod@divisor+1)& (0+255),w,b
  4752  003502  5B81               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  4753  003504  518A               	movf	(___aomod@divisor+2)& (0+255),w,b
  4754  003506  5B82               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  4755  003508  518B               	movf	(___aomod@divisor+3)& (0+255),w,b
  4756  00350A  5B83               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  4757  00350C  518C               	movf	(___aomod@divisor+4)& (0+255),w,b
  4758  00350E  5B84               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  4759  003510  518D               	movf	(___aomod@divisor+5)& (0+255),w,b
  4760  003512  5B85               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  4761  003514  518E               	movf	(___aomod@divisor+6)& (0+255),w,b
  4762  003516  5B86               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  4763  003518  518F               	movf	(___aomod@divisor+7)& (0+255),w,b
  4764  00351A  5B87               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  4765  00351C                     l11087:
  4766                           
  4767                           ; BSR set to: 0
  4768  00351C  90D8               	bcf	status,0,c
  4769  00351E  338F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  4770  003520  338E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  4771  003522  338D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  4772  003524  338C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  4773  003526  338B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  4774  003528  338A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  4775  00352A  3389               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  4776  00352C  3388               	rrcf	___aomod@divisor& (0+255),f,b
  4777  00352E                     
  4778                           ; BSR set to: 0
  4779  00352E  2E27               	decfsz	___aomod@counter^0,f,c
  4780  003530  EF67  F01A         	goto	l11083
  4781  003534                     l11091:
  4782                           
  4783                           ; BSR set to: 0
  4784  003534  5028               	movf	___aomod@sign^0,w,c
  4785  003536  B4D8               	btfsc	status,2,c
  4786  003538  EFA0  F01A         	goto	u8791
  4787  00353C  EFA2  F01A         	goto	u8790
  4788  003540                     u8791:
  4789  003540  EFB2  F01A         	goto	l11095
  4790  003544                     u8790:
  4791  003544                     
  4792                           ; BSR set to: 0
  4793  003544  1F87               	comf	(___aomod@dividend+7)& (0+255),f,b
  4794  003546  1F86               	comf	(___aomod@dividend+6)& (0+255),f,b
  4795  003548  1F85               	comf	(___aomod@dividend+5)& (0+255),f,b
  4796  00354A  1F84               	comf	(___aomod@dividend+4)& (0+255),f,b
  4797  00354C  1F83               	comf	(___aomod@dividend+3)& (0+255),f,b
  4798  00354E  1F82               	comf	(___aomod@dividend+2)& (0+255),f,b
  4799  003550  1F81               	comf	(___aomod@dividend+1)& (0+255),f,b
  4800  003552  6D80               	negf	___aomod@dividend& (0+255),b
  4801  003554  0E00               	movlw	0
  4802  003556  2381               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  4803  003558  2382               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  4804  00355A  2383               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  4805  00355C  2384               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  4806  00355E  2385               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  4807  003560  2386               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  4808  003562  2387               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  4809  003564                     l11095:
  4810                           
  4811                           ; BSR set to: 0
  4812  003564  C080  F080         	movff	___aomod@dividend,?___aomod
  4813  003568  C081  F081         	movff	___aomod@dividend+1,?___aomod+1
  4814  00356C  C082  F082         	movff	___aomod@dividend+2,?___aomod+2
  4815  003570  C083  F083         	movff	___aomod@dividend+3,?___aomod+3
  4816  003574  C084  F084         	movff	___aomod@dividend+4,?___aomod+4
  4817  003578  C085  F085         	movff	___aomod@dividend+5,?___aomod+5
  4818  00357C  C086  F086         	movff	___aomod@dividend+6,?___aomod+6
  4819  003580  C087  F087         	movff	___aomod@dividend+7,?___aomod+7
  4820  003584                     
  4821                           ; BSR set to: 0
  4822  003584  0012               	return		;funcret
  4823  003586                     __end_of___aomod:
  4824                           	callstack 0
  4825                           
  4826 ;; *************** function ___aodiv *****************
  4827 ;; Defined at:
  4828 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aodiv.c"
  4829 ;; Parameters:    Size  Location     Type
  4830 ;;  dividend        8    0[BANK0 ] long long 
  4831 ;;  divisor         8    8[BANK0 ] long long 
  4832 ;; Auto vars:     Size  Location     Type
  4833 ;;  quotient        8   40[COMRAM] long long 
  4834 ;;  sign            1   39[COMRAM] unsigned char 
  4835 ;;  counter         1   38[COMRAM] unsigned char 
  4836 ;; Return value:  Size  Location     Type
  4837 ;;                  8    0[BANK0 ] long long 
  4838 ;; Registers used:
  4839 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4840 ;; Tracked objects:
  4841 ;;		On entry : 0/0
  4842 ;;		On exit  : 0/0
  4843 ;;		Unchanged: 0/0
  4844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4845 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4846 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4848 ;;      Totals:        10      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4849 ;;Total ram usage:       26 bytes
  4850 ;; Hardware stack levels used: 1
  4851 ;; Hardware stack levels required when called: 13
  4852 ;; This function calls:
  4853 ;;		Nothing
  4854 ;; This function is called by:
  4855 ;;		_dtoa
  4856 ;; This function uses a non-reentrant model
  4857 ;;
  4858                           
  4859                           	psect	text16
  4860  00311E                     __ptext16:
  4861                           	callstack 0
  4862  00311E                     ___aodiv:
  4863                           	callstack 11
  4864  00311E  0E00               	movlw	0
  4865  003120  6E28               	movwf	___aodiv@sign^0,c
  4866  003122  0100               	movlb	0	; () banked
  4867  003124  BF8F               	btfsc	(___aodiv@divisor+7)& (0+255),7,b
  4868  003126  EF99  F018         	goto	u8670
  4869  00312A  EF97  F018         	goto	u8671
  4870  00312E                     u8671:
  4871  00312E  EFAB  F018         	goto	l11027
  4872  003132                     u8670:
  4873  003132                     
  4874                           ; BSR set to: 0
  4875  003132  1F8F               	comf	(___aodiv@divisor+7)& (0+255),f,b
  4876  003134  1F8E               	comf	(___aodiv@divisor+6)& (0+255),f,b
  4877  003136  1F8D               	comf	(___aodiv@divisor+5)& (0+255),f,b
  4878  003138  1F8C               	comf	(___aodiv@divisor+4)& (0+255),f,b
  4879  00313A  1F8B               	comf	(___aodiv@divisor+3)& (0+255),f,b
  4880  00313C  1F8A               	comf	(___aodiv@divisor+2)& (0+255),f,b
  4881  00313E  1F89               	comf	(___aodiv@divisor+1)& (0+255),f,b
  4882  003140  6D88               	negf	___aodiv@divisor& (0+255),b
  4883  003142  0E00               	movlw	0
  4884  003144  2389               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  4885  003146  238A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  4886  003148  238B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  4887  00314A  238C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  4888  00314C  238D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  4889  00314E  238E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  4890  003150  238F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  4891  003152                     
  4892                           ; BSR set to: 0
  4893  003152  0E01               	movlw	1
  4894  003154  6E28               	movwf	___aodiv@sign^0,c
  4895  003156                     l11027:
  4896                           
  4897                           ; BSR set to: 0
  4898  003156  BF87               	btfsc	(___aodiv@dividend+7)& (0+255),7,b
  4899  003158  EFB2  F018         	goto	u8680
  4900  00315C  EFB0  F018         	goto	u8681
  4901  003160                     u8681:
  4902  003160  EFC4  F018         	goto	l11033
  4903  003164                     u8680:
  4904  003164                     
  4905                           ; BSR set to: 0
  4906  003164  1F87               	comf	(___aodiv@dividend+7)& (0+255),f,b
  4907  003166  1F86               	comf	(___aodiv@dividend+6)& (0+255),f,b
  4908  003168  1F85               	comf	(___aodiv@dividend+5)& (0+255),f,b
  4909  00316A  1F84               	comf	(___aodiv@dividend+4)& (0+255),f,b
  4910  00316C  1F83               	comf	(___aodiv@dividend+3)& (0+255),f,b
  4911  00316E  1F82               	comf	(___aodiv@dividend+2)& (0+255),f,b
  4912  003170  1F81               	comf	(___aodiv@dividend+1)& (0+255),f,b
  4913  003172  6D80               	negf	___aodiv@dividend& (0+255),b
  4914  003174  0E00               	movlw	0
  4915  003176  2381               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  4916  003178  2382               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  4917  00317A  2383               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  4918  00317C  2384               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  4919  00317E  2385               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  4920  003180  2386               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  4921  003182  2387               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  4922  003184                     
  4923                           ; BSR set to: 0
  4924  003184  0E01               	movlw	1
  4925  003186  1A28               	xorwf	___aodiv@sign^0,f,c
  4926  003188                     l11033:
  4927                           
  4928                           ; BSR set to: 0
  4929  003188  EE20  F029         	lfsr	2,___aodiv@quotient
  4930  00318C  0E07               	movlw	7
  4931  00318E                     u8691:
  4932  00318E  6ADE               	clrf	postinc2,c
  4933  003190  06E8               	decf	wreg,f,c
  4934  003192  E2FD               	bc	u8691
  4935  003194                     
  4936                           ; BSR set to: 0
  4937  003194  5188               	movf	___aodiv@divisor& (0+255),w,b
  4938  003196  1189               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  4939  003198  118A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  4940  00319A  118B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  4941  00319C  118C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  4942  00319E  118D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  4943  0031A0  118E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  4944  0031A2  118F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  4945  0031A4  B4D8               	btfsc	status,2,c
  4946  0031A6  EFD7  F018         	goto	u8701
  4947  0031AA  EFD9  F018         	goto	u8700
  4948  0031AE                     u8701:
  4949  0031AE  EF2B  F019         	goto	l11055
  4950  0031B2                     u8700:
  4951  0031B2                     
  4952                           ; BSR set to: 0
  4953  0031B2  0E01               	movlw	1
  4954  0031B4  6E27               	movwf	___aodiv@counter^0,c
  4955  0031B6  EFE7  F018         	goto	l11041
  4956  0031BA                     l11039:
  4957                           
  4958                           ; BSR set to: 0
  4959  0031BA  90D8               	bcf	status,0,c
  4960  0031BC  3788               	rlcf	___aodiv@divisor& (0+255),f,b
  4961  0031BE  3789               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  4962  0031C0  378A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  4963  0031C2  378B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  4964  0031C4  378C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  4965  0031C6  378D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  4966  0031C8  378E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  4967  0031CA  378F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  4968  0031CC  2A27               	incf	___aodiv@counter^0,f,c
  4969  0031CE                     l11041:
  4970                           
  4971                           ; BSR set to: 0
  4972  0031CE  AF8F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  4973  0031D0  EFEC  F018         	goto	u8711
  4974  0031D4  EFEE  F018         	goto	u8710
  4975  0031D8                     u8711:
  4976  0031D8  EFDD  F018         	goto	l11039
  4977  0031DC                     u8710:
  4978  0031DC                     l11043:
  4979                           
  4980                           ; BSR set to: 0
  4981  0031DC  90D8               	bcf	status,0,c
  4982  0031DE  3629               	rlcf	___aodiv@quotient^0,f,c
  4983  0031E0  362A               	rlcf	(___aodiv@quotient+1)^0,f,c
  4984  0031E2  362B               	rlcf	(___aodiv@quotient+2)^0,f,c
  4985  0031E4  362C               	rlcf	(___aodiv@quotient+3)^0,f,c
  4986  0031E6  362D               	rlcf	(___aodiv@quotient+4)^0,f,c
  4987  0031E8  362E               	rlcf	(___aodiv@quotient+5)^0,f,c
  4988  0031EA  362F               	rlcf	(___aodiv@quotient+6)^0,f,c
  4989  0031EC  3630               	rlcf	(___aodiv@quotient+7)^0,f,c
  4990  0031EE                     
  4991                           ; BSR set to: 0
  4992  0031EE  5188               	movf	___aodiv@divisor& (0+255),w,b
  4993  0031F0  5D80               	subwf	___aodiv@dividend& (0+255),w,b
  4994  0031F2  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
  4995  0031F4  5981               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  4996  0031F6  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  4997  0031F8  5982               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  4998  0031FA  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  4999  0031FC  5983               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  5000  0031FE  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  5001  003200  5984               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  5002  003202  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  5003  003204  5985               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  5004  003206  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  5005  003208  5986               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  5006  00320A  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  5007  00320C  5987               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  5008  00320E  A0D8               	btfss	status,0,c
  5009  003210  EF0C  F019         	goto	u8721
  5010  003214  EF0E  F019         	goto	u8720
  5011  003218                     u8721:
  5012  003218  EF1F  F019         	goto	l11051
  5013  00321C                     u8720:
  5014  00321C                     
  5015                           ; BSR set to: 0
  5016  00321C  5188               	movf	___aodiv@divisor& (0+255),w,b
  5017  00321E  5F80               	subwf	___aodiv@dividend& (0+255),f,b
  5018  003220  5189               	movf	(___aodiv@divisor+1)& (0+255),w,b
  5019  003222  5B81               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
  5020  003224  518A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  5021  003226  5B82               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
  5022  003228  518B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  5023  00322A  5B83               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
  5024  00322C  518C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  5025  00322E  5B84               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
  5026  003230  518D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  5027  003232  5B85               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
  5028  003234  518E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  5029  003236  5B86               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
  5030  003238  518F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  5031  00323A  5B87               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
  5032  00323C                     
  5033                           ; BSR set to: 0
  5034  00323C  8029               	bsf	___aodiv@quotient^0,0,c
  5035  00323E                     l11051:
  5036                           
  5037                           ; BSR set to: 0
  5038  00323E  90D8               	bcf	status,0,c
  5039  003240  338F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
  5040  003242  338E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
  5041  003244  338D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
  5042  003246  338C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
  5043  003248  338B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
  5044  00324A  338A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
  5045  00324C  3389               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
  5046  00324E  3388               	rrcf	___aodiv@divisor& (0+255),f,b
  5047  003250                     
  5048                           ; BSR set to: 0
  5049  003250  2E27               	decfsz	___aodiv@counter^0,f,c
  5050  003252  EFEE  F018         	goto	l11043
  5051  003256                     l11055:
  5052                           
  5053                           ; BSR set to: 0
  5054  003256  5028               	movf	___aodiv@sign^0,w,c
  5055  003258  B4D8               	btfsc	status,2,c
  5056  00325A  EF31  F019         	goto	u8731
  5057  00325E  EF33  F019         	goto	u8730
  5058  003262                     u8731:
  5059  003262  EF43  F019         	goto	l11059
  5060  003266                     u8730:
  5061  003266                     
  5062                           ; BSR set to: 0
  5063  003266  1E30               	comf	(___aodiv@quotient+7)^0,f,c
  5064  003268  1E2F               	comf	(___aodiv@quotient+6)^0,f,c
  5065  00326A  1E2E               	comf	(___aodiv@quotient+5)^0,f,c
  5066  00326C  1E2D               	comf	(___aodiv@quotient+4)^0,f,c
  5067  00326E  1E2C               	comf	(___aodiv@quotient+3)^0,f,c
  5068  003270  1E2B               	comf	(___aodiv@quotient+2)^0,f,c
  5069  003272  1E2A               	comf	(___aodiv@quotient+1)^0,f,c
  5070  003274  6C29               	negf	___aodiv@quotient^0,c
  5071  003276  0E00               	movlw	0
  5072  003278  222A               	addwfc	(___aodiv@quotient+1)^0,f,c
  5073  00327A  222B               	addwfc	(___aodiv@quotient+2)^0,f,c
  5074  00327C  222C               	addwfc	(___aodiv@quotient+3)^0,f,c
  5075  00327E  222D               	addwfc	(___aodiv@quotient+4)^0,f,c
  5076  003280  222E               	addwfc	(___aodiv@quotient+5)^0,f,c
  5077  003282  222F               	addwfc	(___aodiv@quotient+6)^0,f,c
  5078  003284  2230               	addwfc	(___aodiv@quotient+7)^0,f,c
  5079  003286                     l11059:
  5080                           
  5081                           ; BSR set to: 0
  5082  003286  C029  F080         	movff	___aodiv@quotient,?___aodiv
  5083  00328A  C02A  F081         	movff	___aodiv@quotient+1,?___aodiv+1
  5084  00328E  C02B  F082         	movff	___aodiv@quotient+2,?___aodiv+2
  5085  003292  C02C  F083         	movff	___aodiv@quotient+3,?___aodiv+3
  5086  003296  C02D  F084         	movff	___aodiv@quotient+4,?___aodiv+4
  5087  00329A  C02E  F085         	movff	___aodiv@quotient+5,?___aodiv+5
  5088  00329E  C02F  F086         	movff	___aodiv@quotient+6,?___aodiv+6
  5089  0032A2  C030  F087         	movff	___aodiv@quotient+7,?___aodiv+7
  5090  0032A6                     
  5091                           ; BSR set to: 0
  5092  0032A6  0012               	return		;funcret
  5093  0032A8                     __end_of___aodiv:
  5094                           	callstack 0
  5095                           
  5096 ;; *************** function _memset *****************
  5097 ;; Defined at:
  5098 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\memset.c"
  5099 ;; Parameters:    Size  Location     Type
  5100 ;;  dest            2   38[COMRAM] PTR void 
  5101 ;;		 -> lcd_send_number_pos@number(1), lcd_send_number@number(1), 
  5102 ;;  c               2   40[COMRAM] int 
  5103 ;;  n               2   42[COMRAM] unsigned int 
  5104 ;; Auto vars:     Size  Location     Type
  5105 ;;  s               2    2[BANK0 ] PTR unsigned char 
  5106 ;;		 -> lcd_send_number_pos@number(1), lcd_send_number@number(1), 
  5107 ;;  k               2    0[BANK0 ] unsigned int 
  5108 ;; Return value:  Size  Location     Type
  5109 ;;                  2   38[COMRAM] PTR void 
  5110 ;; Registers used:
  5111 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5112 ;; Tracked objects:
  5113 ;;		On entry : 0/0
  5114 ;;		On exit  : 0/0
  5115 ;;		Unchanged: 0/0
  5116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5117 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5118 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5119 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5120 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5121 ;;Total ram usage:       12 bytes
  5122 ;; Hardware stack levels used: 1
  5123 ;; Hardware stack levels required when called: 13
  5124 ;; This function calls:
  5125 ;;		Nothing
  5126 ;; This function is called by:
  5127 ;;		_convert_uint8_to_string
  5128 ;;		_convert_uint16_to_string
  5129 ;;		_convert_uint32_to_string
  5130 ;; This function uses a non-reentrant model
  5131 ;;
  5132                           
  5133                           	psect	text17
  5134  0032A8                     __ptext17:
  5135                           	callstack 0
  5136  0032A8                     _memset:
  5137                           	callstack 15
  5138  0032A8  C027  F082         	movff	memset@dest,memset@s
  5139  0032AC  C028  F083         	movff	memset@dest+1,memset@s+1
  5140  0032B0  502B               	movf	memset@n^0,w,c
  5141  0032B2  102C               	iorwf	(memset@n+1)^0,w,c
  5142  0032B4  A4D8               	btfss	status,2,c
  5143  0032B6  EF5F  F019         	goto	u10191
  5144  0032BA  EF61  F019         	goto	u10190
  5145  0032BE                     u10191:
  5146  0032BE  EF63  F019         	goto	l12009
  5147  0032C2                     u10190:
  5148  0032C2  EF0F  F01A         	goto	l2222
  5149  0032C6                     l12009:
  5150  0032C6  C082  FFD9         	movff	memset@s,fsr2l
  5151  0032CA  C083  FFDA         	movff	memset@s+1,fsr2h
  5152  0032CE  C029  FFDF         	movff	memset@c,indf2
  5153  0032D2  502B               	movf	memset@n^0,w,c
  5154  0032D4  0100               	movlb	0	; () banked
  5155  0032D6  2582               	addwf	memset@s& (0+255),w,b
  5156  0032D8  6E2D               	movwf	??_memset^0,c
  5157  0032DA  502C               	movf	(memset@n+1)^0,w,c
  5158  0032DC  2183               	addwfc	(memset@s+1)& (0+255),w,b
  5159  0032DE  6E2E               	movwf	(??_memset+1)^0,c
  5160  0032E0  0EFF               	movlw	255
  5161  0032E2  242D               	addwf	??_memset^0,w,c
  5162  0032E4  6ED9               	movwf	fsr2l,c
  5163  0032E6  0EFF               	movlw	255
  5164  0032E8  202E               	addwfc	(??_memset+1)^0,w,c
  5165  0032EA  6EDA               	movwf	fsr2h,c
  5166  0032EC  C029  FFDF         	movff	memset@c,indf2
  5167  0032F0  502C               	movf	(memset@n+1)^0,w,c
  5168  0032F2  E107               	bnz	u10201
  5169  0032F4  0E03               	movlw	3
  5170  0032F6  5C2B               	subwf	memset@n^0,w,c
  5171  0032F8  B0D8               	btfsc	status,0,c
  5172  0032FA  EF81  F019         	goto	u10201
  5173  0032FE  EF83  F019         	goto	u10200
  5174  003302                     u10201:
  5175  003302  EF85  F019         	goto	l12015
  5176  003306                     u10200:
  5177  003306  EF0F  F01A         	goto	l2222
  5178  00330A                     l12015:
  5179                           
  5180                           ; BSR set to: 0
  5181  00330A  EE20 F001          	lfsr	2,1
  5182  00330E  5182               	movf	memset@s& (0+255),w,b
  5183  003310  26D9               	addwf	fsr2l,f,c
  5184  003312  5183               	movf	(memset@s+1)& (0+255),w,b
  5185  003314  22DA               	addwfc	fsr2h,f,c
  5186  003316  C029  FFDF         	movff	memset@c,indf2
  5187  00331A  EE20 F002          	lfsr	2,2
  5188  00331E  5182               	movf	memset@s& (0+255),w,b
  5189  003320  26D9               	addwf	fsr2l,f,c
  5190  003322  5183               	movf	(memset@s+1)& (0+255),w,b
  5191  003324  22DA               	addwfc	fsr2h,f,c
  5192  003326  C029  FFDF         	movff	memset@c,indf2
  5193  00332A  502B               	movf	memset@n^0,w,c
  5194  00332C  2582               	addwf	memset@s& (0+255),w,b
  5195  00332E  6E2D               	movwf	??_memset^0,c
  5196  003330  502C               	movf	(memset@n+1)^0,w,c
  5197  003332  2183               	addwfc	(memset@s+1)& (0+255),w,b
  5198  003334  6E2E               	movwf	(??_memset+1)^0,c
  5199  003336  0EFE               	movlw	254
  5200  003338  242D               	addwf	??_memset^0,w,c
  5201  00333A  6ED9               	movwf	fsr2l,c
  5202  00333C  0EFF               	movlw	255
  5203  00333E  202E               	addwfc	(??_memset+1)^0,w,c
  5204  003340  6EDA               	movwf	fsr2h,c
  5205  003342  C029  FFDF         	movff	memset@c,indf2
  5206  003346  502B               	movf	memset@n^0,w,c
  5207  003348  2582               	addwf	memset@s& (0+255),w,b
  5208  00334A  6E2D               	movwf	??_memset^0,c
  5209  00334C  502C               	movf	(memset@n+1)^0,w,c
  5210  00334E  2183               	addwfc	(memset@s+1)& (0+255),w,b
  5211  003350  6E2E               	movwf	(??_memset+1)^0,c
  5212  003352  0EFD               	movlw	253
  5213  003354  242D               	addwf	??_memset^0,w,c
  5214  003356  6ED9               	movwf	fsr2l,c
  5215  003358  0EFF               	movlw	255
  5216  00335A  202E               	addwfc	(??_memset+1)^0,w,c
  5217  00335C  6EDA               	movwf	fsr2h,c
  5218  00335E  C029  FFDF         	movff	memset@c,indf2
  5219  003362                     
  5220                           ; BSR set to: 0
  5221  003362  502C               	movf	(memset@n+1)^0,w,c
  5222  003364  E107               	bnz	u10211
  5223  003366  0E07               	movlw	7
  5224  003368  5C2B               	subwf	memset@n^0,w,c
  5225  00336A  B0D8               	btfsc	status,0,c
  5226  00336C  EFBA  F019         	goto	u10211
  5227  003370  EFBC  F019         	goto	u10210
  5228  003374                     u10211:
  5229  003374  EFBE  F019         	goto	l12021
  5230  003378                     u10210:
  5231  003378  EF0F  F01A         	goto	l2222
  5232  00337C                     l12021:
  5233                           
  5234                           ; BSR set to: 0
  5235  00337C  EE20 F003          	lfsr	2,3
  5236  003380  5182               	movf	memset@s& (0+255),w,b
  5237  003382  26D9               	addwf	fsr2l,f,c
  5238  003384  5183               	movf	(memset@s+1)& (0+255),w,b
  5239  003386  22DA               	addwfc	fsr2h,f,c
  5240  003388  C029  FFDF         	movff	memset@c,indf2
  5241  00338C  502B               	movf	memset@n^0,w,c
  5242  00338E  2582               	addwf	memset@s& (0+255),w,b
  5243  003390  6E2D               	movwf	??_memset^0,c
  5244  003392  502C               	movf	(memset@n+1)^0,w,c
  5245  003394  2183               	addwfc	(memset@s+1)& (0+255),w,b
  5246  003396  6E2E               	movwf	(??_memset+1)^0,c
  5247  003398  0EFC               	movlw	252
  5248  00339A  242D               	addwf	??_memset^0,w,c
  5249  00339C  6ED9               	movwf	fsr2l,c
  5250  00339E  0EFF               	movlw	255
  5251  0033A0  202E               	addwfc	(??_memset+1)^0,w,c
  5252  0033A2  6EDA               	movwf	fsr2h,c
  5253  0033A4  C029  FFDF         	movff	memset@c,indf2
  5254  0033A8                     
  5255                           ; BSR set to: 0
  5256  0033A8  502C               	movf	(memset@n+1)^0,w,c
  5257  0033AA  E107               	bnz	u10221
  5258  0033AC  0E09               	movlw	9
  5259  0033AE  5C2B               	subwf	memset@n^0,w,c
  5260  0033B0  B0D8               	btfsc	status,0,c
  5261  0033B2  EFDD  F019         	goto	u10221
  5262  0033B6  EFDF  F019         	goto	u10220
  5263  0033BA                     u10221:
  5264  0033BA  EFE1  F019         	goto	l12027
  5265  0033BE                     u10220:
  5266  0033BE  EF0F  F01A         	goto	l2222
  5267  0033C2                     l12027:
  5268                           
  5269                           ; BSR set to: 0
  5270  0033C2  C082  F02D         	movff	memset@s,??_memset
  5271  0033C6  C083  F02E         	movff	memset@s+1,??_memset+1
  5272  0033CA  1E2D               	comf	??_memset^0,f,c
  5273  0033CC  1E2E               	comf	(??_memset+1)^0,f,c
  5274  0033CE  4A2D               	infsnz	??_memset^0,f,c
  5275  0033D0  2A2E               	incf	(??_memset+1)^0,f,c
  5276  0033D2  0E03               	movlw	3
  5277  0033D4  142D               	andwf	??_memset^0,w,c
  5278  0033D6  6F80               	movwf	memset@k& (0+255),b
  5279  0033D8  6B81               	clrf	(memset@k+1)& (0+255),b
  5280  0033DA  5180               	movf	memset@k& (0+255),w,b
  5281  0033DC  2782               	addwf	memset@s& (0+255),f,b
  5282  0033DE  5181               	movf	(memset@k+1)& (0+255),w,b
  5283  0033E0  2383               	addwfc	(memset@s+1)& (0+255),f,b
  5284  0033E2  5180               	movf	memset@k& (0+255),w,b
  5285  0033E4  5E2B               	subwf	memset@n^0,f,c
  5286  0033E6  5181               	movf	(memset@k+1)& (0+255),w,b
  5287  0033E8  5A2C               	subwfb	(memset@n+1)^0,f,c
  5288  0033EA  0EFC               	movlw	252
  5289  0033EC  162B               	andwf	memset@n^0,f,c
  5290  0033EE  0EFF               	movlw	255
  5291  0033F0  162C               	andwf	(memset@n+1)^0,f,c
  5292  0033F2  EF06  F01A         	goto	l12035
  5293  0033F6                     l12029:
  5294                           
  5295                           ; BSR set to: 0
  5296  0033F6  C082  FFD9         	movff	memset@s,fsr2l
  5297  0033FA  C083  FFDA         	movff	memset@s+1,fsr2h
  5298  0033FE  C029  FFDF         	movff	memset@c,indf2
  5299  003402                     
  5300                           ; BSR set to: 0
  5301  003402  062B               	decf	memset@n^0,f,c
  5302  003404  A0D8               	btfss	status,0,c
  5303  003406  062C               	decf	(memset@n+1)^0,f,c
  5304  003408                     
  5305                           ; BSR set to: 0
  5306  003408  4B82               	infsnz	memset@s& (0+255),f,b
  5307  00340A  2B83               	incf	(memset@s+1)& (0+255),f,b
  5308  00340C                     l12035:
  5309                           
  5310                           ; BSR set to: 0
  5311  00340C  502B               	movf	memset@n^0,w,c
  5312  00340E  102C               	iorwf	(memset@n+1)^0,w,c
  5313  003410  A4D8               	btfss	status,2,c
  5314  003412  EF0D  F01A         	goto	u10231
  5315  003416  EF0F  F01A         	goto	u10230
  5316  00341A                     u10231:
  5317  00341A  EFFB  F019         	goto	l12029
  5318  00341E                     u10230:
  5319  00341E                     l2222:
  5320  00341E  0012               	return		;funcret
  5321  003420                     __end_of_memset:
  5322                           	callstack 0
  5323                           
  5324 ;; *************** function _lcd_send_char_data_pos *****************
  5325 ;; Defined at:
  5326 ;;		line 151 in file "ECUAL/LCD/lcd.c"
  5327 ;; Parameters:    Size  Location     Type
  5328 ;;  lcd             2   23[BANK0 ] PTR struct .
  5329 ;;		 -> lcd(6), 
  5330 ;;  row             1   25[BANK0 ] unsigned char 
  5331 ;;  column          1   26[BANK0 ] unsigned char 
  5332 ;;  data            1   27[BANK0 ] unsigned char 
  5333 ;; Auto vars:     Size  Location     Type
  5334 ;;  ret             1   30[BANK0 ] unsigned char 
  5335 ;;  lcd_ret         1   29[BANK0 ] unsigned char 
  5336 ;;  gpio_ret        1   28[BANK0 ] unsigned char 
  5337 ;; Return value:  Size  Location     Type
  5338 ;;                  1    wreg      unsigned char 
  5339 ;; Registers used:
  5340 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5341 ;; Tracked objects:
  5342 ;;		On entry : 0/0
  5343 ;;		On exit  : 0/0
  5344 ;;		Unchanged: 0/0
  5345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5346 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5347 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5349 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5350 ;;Total ram usage:        8 bytes
  5351 ;; Hardware stack levels used: 1
  5352 ;; Hardware stack levels required when called: 17
  5353 ;; This function calls:
  5354 ;;		_lcd_send_char_data
  5355 ;;		_lcd_set_curser
  5356 ;; This function is called by:
  5357 ;;		_main
  5358 ;;		_lcd_send_custom_char
  5359 ;; This function uses a non-reentrant model
  5360 ;;
  5361                           
  5362                           	psect	text18
  5363  004EFE                     __ptext18:
  5364                           	callstack 0
  5365  004EFE                     _lcd_send_char_data_pos:
  5366                           	callstack 13
  5367  004EFE                     
  5368                           ;ECUAL/LCD/lcd.c: 154:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  5369  004EFE  0E00               	movlw	0
  5370  004F00  0100               	movlb	0	; () banked
  5371  004F02  6F9C               	movwf	lcd_send_char_data_pos@gpio_ret& (0+255),b
  5372                           
  5373                           ;ECUAL/LCD/lcd.c: 155:     Std_ReturnType lcd_ret=(Std_ReturnType)0x00;
  5374  004F04  0E00               	movlw	0
  5375  004F06  6F9D               	movwf	lcd_send_char_data_pos@lcd_ret& (0+255),b
  5376  004F08                     
  5377                           ; BSR set to: 0
  5378                           ;ECUAL/LCD/lcd.c: 156:     if(((void*)0)==lcd || row>4 || column>20){
  5379  004F08  5197               	movf	lcd_send_char_data_pos@lcd& (0+255),w,b
  5380  004F0A  1198               	iorwf	(lcd_send_char_data_pos@lcd+1)& (0+255),w,b
  5381  004F0C  B4D8               	btfsc	status,2,c
  5382  004F0E  EF8B  F027         	goto	u10611
  5383  004F12  EF8D  F027         	goto	u10610
  5384  004F16                     u10611:
  5385  004F16  EF9D  F027         	goto	l12543
  5386  004F1A                     u10610:
  5387  004F1A                     
  5388                           ; BSR set to: 0
  5389  004F1A  0E05               	movlw	5
  5390  004F1C  6199               	cpfslt	lcd_send_char_data_pos@row& (0+255),b
  5391  004F1E  EF93  F027         	goto	u10621
  5392  004F22  EF95  F027         	goto	u10620
  5393  004F26                     u10621:
  5394  004F26  EF9D  F027         	goto	l12543
  5395  004F2A                     u10620:
  5396  004F2A                     
  5397                           ; BSR set to: 0
  5398  004F2A  0E14               	movlw	20
  5399  004F2C  659A               	cpfsgt	lcd_send_char_data_pos@column& (0+255),b
  5400  004F2E  EF9B  F027         	goto	u10631
  5401  004F32  EF9D  F027         	goto	u10630
  5402  004F36                     u10631:
  5403  004F36  EFA1  F027         	goto	l12545
  5404  004F3A                     u10630:
  5405  004F3A                     l12543:
  5406                           
  5407                           ; BSR set to: 0
  5408                           ;ECUAL/LCD/lcd.c: 157:         ret=(Std_ReturnType)0x00;
  5409  004F3A  0E00               	movlw	0
  5410  004F3C  6F9E               	movwf	lcd_send_char_data_pos@ret& (0+255),b
  5411                           
  5412                           ;ECUAL/LCD/lcd.c: 158:     }
  5413  004F3E  EFB9  F027         	goto	l12549
  5414  004F42                     l12545:
  5415                           
  5416                           ; BSR set to: 0
  5417                           ;ECUAL/LCD/lcd.c: 160:         lcd_ret=lcd_set_curser(lcd, row, column);
  5418  004F42  C097  F08F         	movff	lcd_send_char_data_pos@lcd,lcd_set_curser@lcd
  5419  004F46  C098  F090         	movff	lcd_send_char_data_pos@lcd+1,lcd_set_curser@lcd+1
  5420  004F4A  C099  F091         	movff	lcd_send_char_data_pos@row,lcd_set_curser@row
  5421  004F4E  C09A  F092         	movff	lcd_send_char_data_pos@column,lcd_set_curser@column
  5422  004F52  ECED  F029         	call	_lcd_set_curser	;wreg free
  5423  004F56  0100               	movlb	0	; () banked
  5424  004F58  6F9D               	movwf	lcd_send_char_data_pos@lcd_ret& (0+255),b
  5425                           
  5426                           ;ECUAL/LCD/lcd.c: 161:         lcd_ret=lcd_send_char_data(lcd, data);
  5427  004F5A  C097  F089         	movff	lcd_send_char_data_pos@lcd,lcd_send_char_data@lcd
  5428  004F5E  C098  F08A         	movff	lcd_send_char_data_pos@lcd+1,lcd_send_char_data@lcd+1
  5429  004F62  C09B  F08B         	movff	lcd_send_char_data_pos@data,lcd_send_char_data@data
  5430  004F66  ECC0  F024         	call	_lcd_send_char_data	;wreg free
  5431  004F6A  0100               	movlb	0	; () banked
  5432  004F6C  6F9D               	movwf	lcd_send_char_data_pos@lcd_ret& (0+255),b
  5433  004F6E                     
  5434                           ; BSR set to: 0
  5435                           ;ECUAL/LCD/lcd.c: 162:         ret=(Std_ReturnType)0x01;
  5436  004F6E  0E01               	movlw	1
  5437  004F70  6F9E               	movwf	lcd_send_char_data_pos@ret& (0+255),b
  5438  004F72                     l12549:
  5439                           
  5440                           ; BSR set to: 0
  5441                           ;ECUAL/LCD/lcd.c: 165:     return ret;
  5442  004F72  519E               	movf	lcd_send_char_data_pos@ret& (0+255),w,b
  5443  004F74                     
  5444                           ; BSR set to: 0
  5445  004F74  0012               	return		;funcret
  5446  004F76                     __end_of_lcd_send_char_data_pos:
  5447                           	callstack 0
  5448                           
  5449 ;; *************** function _lcd_set_curser *****************
  5450 ;; Defined at:
  5451 ;;		line 400 in file "ECUAL/LCD/lcd.c"
  5452 ;; Parameters:    Size  Location     Type
  5453 ;;  lcd             2   15[BANK0 ] PTR struct .
  5454 ;;		 -> lcd(6), 
  5455 ;;  row             1   17[BANK0 ] unsigned char 
  5456 ;;  column          1   18[BANK0 ] unsigned char 
  5457 ;; Auto vars:     Size  Location     Type
  5458 ;;  ret             1    0        unsigned char 
  5459 ;;  lcd_ret         1   22[BANK0 ] unsigned char 
  5460 ;;  gpio_ret        1   21[BANK0 ] unsigned char 
  5461 ;; Return value:  Size  Location     Type
  5462 ;;                  1    wreg      unsigned char 
  5463 ;; Registers used:
  5464 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5465 ;; Tracked objects:
  5466 ;;		On entry : 0/0
  5467 ;;		On exit  : 0/0
  5468 ;;		Unchanged: 0/0
  5469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5470 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5471 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5472 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5473 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5474 ;;Total ram usage:        8 bytes
  5475 ;; Hardware stack levels used: 1
  5476 ;; Hardware stack levels required when called: 16
  5477 ;; This function calls:
  5478 ;;		_lcd_send_command
  5479 ;; This function is called by:
  5480 ;;		_lcd_send_char_data_pos
  5481 ;;		_lcd_send_string_pos
  5482 ;; This function uses a non-reentrant model
  5483 ;;
  5484                           
  5485                           	psect	text19
  5486  0053DA                     __ptext19:
  5487                           	callstack 0
  5488  0053DA                     _lcd_set_curser:
  5489                           	callstack 13
  5490  0053DA                     
  5491                           ;ECUAL/LCD/lcd.c: 403:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  5492  0053DA  0E00               	movlw	0
  5493  0053DC  0100               	movlb	0	; () banked
  5494  0053DE  6F95               	movwf	lcd_set_curser@gpio_ret& (0+255),b
  5495                           
  5496                           ;ECUAL/LCD/lcd.c: 404:     Std_ReturnType lcd_ret=(Std_ReturnType)0x00;
  5497  0053E0  0E00               	movlw	0
  5498  0053E2  6F96               	movwf	lcd_set_curser@lcd_ret& (0+255),b
  5499  0053E4                     
  5500                           ; BSR set to: 0
  5501                           ;ECUAL/LCD/lcd.c: 405:  column--;
  5502  0053E4  0792               	decf	lcd_set_curser@column& (0+255),f,b
  5503                           
  5504                           ;ECUAL/LCD/lcd.c: 407:     switch(row){
  5505  0053E6  EF0B  F02A         	goto	l11977
  5506  0053EA                     l11971:
  5507                           
  5508                           ; BSR set to: 0
  5509  0053EA  C08F  F089         	movff	lcd_set_curser@lcd,lcd_send_command@lcd
  5510  0053EE  C090  F08A         	movff	lcd_set_curser@lcd+1,lcd_send_command@lcd+1
  5511  0053F2  5192               	movf	lcd_set_curser@column& (0+255),w,b
  5512  0053F4  0F80               	addlw	128
  5513  0053F6  6F8B               	movwf	lcd_send_command@command& (0+255),b
  5514  0053F8  EC04  F025         	call	_lcd_send_command	;wreg free
  5515  0053FC  EF20  F02A         	goto	l11979
  5516  005400                     l11973:
  5517                           
  5518                           ; BSR set to: 0
  5519  005400  C08F  F089         	movff	lcd_set_curser@lcd,lcd_send_command@lcd
  5520  005404  C090  F08A         	movff	lcd_set_curser@lcd+1,lcd_send_command@lcd+1
  5521  005408  5192               	movf	lcd_set_curser@column& (0+255),w,b
  5522  00540A  0FC0               	addlw	192
  5523  00540C  6F8B               	movwf	lcd_send_command@command& (0+255),b
  5524  00540E  EC04  F025         	call	_lcd_send_command	;wreg free
  5525  005412  EF20  F02A         	goto	l11979
  5526  005416                     l11977:
  5527                           
  5528                           ; BSR set to: 0
  5529  005416  5191               	movf	lcd_set_curser@row& (0+255),w,b
  5530  005418  6F93               	movwf	??_lcd_set_curser& (0+255),b
  5531  00541A  6B94               	clrf	(??_lcd_set_curser+1)& (0+255),b
  5532                           
  5533                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5534                           ; Switch size 1, requested type "simple"
  5535                           ; Number of cases is 1, Range of values is 0 to 0
  5536                           ; switch strategies available:
  5537                           ; Name         Instructions Cycles
  5538                           ; simple_byte            4     3 (average)
  5539                           ;	Chosen strategy is simple_byte
  5540  00541C  5194               	movf	(??_lcd_set_curser+1)& (0+255),w,b
  5541  00541E  0A00               	xorlw	0	; case 0
  5542  005420  B4D8               	btfsc	status,2,c
  5543  005422  EF15  F02A         	goto	l13643
  5544  005426  EF20  F02A         	goto	l11979
  5545  00542A                     l13643:
  5546                           
  5547                           ; BSR set to: 0
  5548                           ; Switch size 1, requested type "simple"
  5549                           ; Number of cases is 2, Range of values is 1 to 2
  5550                           ; switch strategies available:
  5551                           ; Name         Instructions Cycles
  5552                           ; simple_byte            7     4 (average)
  5553                           ;	Chosen strategy is simple_byte
  5554  00542A  5193               	movf	??_lcd_set_curser& (0+255),w,b
  5555  00542C  0A01               	xorlw	1	; case 1
  5556  00542E  B4D8               	btfsc	status,2,c
  5557  005430  EFF5  F029         	goto	l11971
  5558  005434  0A03               	xorlw	3	; case 2
  5559  005436  B4D8               	btfsc	status,2,c
  5560  005438  EF00  F02A         	goto	l11973
  5561  00543C  EF20  F02A         	goto	l11979
  5562  005440                     l11979:
  5563                           
  5564                           ;ECUAL/LCD/lcd.c: 421:     return ret;
  5565  005440  0E00               	movlw	0
  5566  005442  0012               	return		;funcret
  5567  005444                     __end_of_lcd_set_curser:
  5568                           	callstack 0
  5569                           
  5570 ;; *************** function _lcd_send_char_data *****************
  5571 ;; Defined at:
  5572 ;;		line 115 in file "ECUAL/LCD/lcd.c"
  5573 ;; Parameters:    Size  Location     Type
  5574 ;;  lcd             2    9[BANK0 ] PTR struct .
  5575 ;;		 -> lcd(6), 
  5576 ;;  data            1   11[BANK0 ] unsigned char 
  5577 ;; Auto vars:     Size  Location     Type
  5578 ;;  ret             1   14[BANK0 ] unsigned char 
  5579 ;;  lcd_ret         1   13[BANK0 ] unsigned char 
  5580 ;;  gpio_ret        1   12[BANK0 ] unsigned char 
  5581 ;; Return value:  Size  Location     Type
  5582 ;;                  1    wreg      unsigned char 
  5583 ;; Registers used:
  5584 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5585 ;; Tracked objects:
  5586 ;;		On entry : 0/0
  5587 ;;		On exit  : 0/0
  5588 ;;		Unchanged: 0/0
  5589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5590 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5591 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5593 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5594 ;;Total ram usage:        6 bytes
  5595 ;; Hardware stack levels used: 1
  5596 ;; Hardware stack levels required when called: 15
  5597 ;; This function calls:
  5598 ;;		_gpio_pin_logic_write
  5599 ;;		_lcd_send_enable
  5600 ;;		_lcd_send_nbits
  5601 ;; This function is called by:
  5602 ;;		_lcd_send_char_data_pos
  5603 ;;		_lcd_send_string
  5604 ;;		_lcd_send_custom_char
  5605 ;; This function uses a non-reentrant model
  5606 ;;
  5607                           
  5608                           	psect	text20
  5609  004980                     __ptext20:
  5610                           	callstack 0
  5611  004980                     _lcd_send_char_data:
  5612                           	callstack 13
  5613  004980                     
  5614                           ;ECUAL/LCD/lcd.c: 118:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  5615  004980  0E00               	movlw	0
  5616  004982  0100               	movlb	0	; () banked
  5617  004984  6F8C               	movwf	lcd_send_char_data@gpio_ret& (0+255),b
  5618                           
  5619                           ;ECUAL/LCD/lcd.c: 119:     Std_ReturnType lcd_ret=(Std_ReturnType)0x00;
  5620  004986  0E00               	movlw	0
  5621  004988  6F8D               	movwf	lcd_send_char_data@lcd_ret& (0+255),b
  5622  00498A                     
  5623                           ; BSR set to: 0
  5624                           ;ECUAL/LCD/lcd.c: 120:     if(((void*)0)==lcd){
  5625  00498A  5189               	movf	lcd_send_char_data@lcd& (0+255),w,b
  5626  00498C  118A               	iorwf	(lcd_send_char_data@lcd+1)& (0+255),w,b
  5627  00498E  A4D8               	btfss	status,2,c
  5628  004990  EFCC  F024         	goto	u9281
  5629  004994  EFCE  F024         	goto	u9280
  5630  004998                     u9281:
  5631  004998  EFD2  F024         	goto	l11439
  5632  00499C                     u9280:
  5633  00499C                     
  5634                           ; BSR set to: 0
  5635                           ;ECUAL/LCD/lcd.c: 121:         ret=(Std_ReturnType)0x00;
  5636  00499C  0E00               	movlw	0
  5637  00499E  6F8E               	movwf	lcd_send_char_data@ret& (0+255),b
  5638                           
  5639                           ;ECUAL/LCD/lcd.c: 122:     }
  5640  0049A0  EF02  F025         	goto	l11443
  5641  0049A4                     l11439:
  5642                           
  5643                           ; BSR set to: 0
  5644  0049A4  C089  F027         	movff	lcd_send_char_data@lcd,gpio_pin_logic_write@pin
  5645  0049A8  C08A  F028         	movff	lcd_send_char_data@lcd+1,gpio_pin_logic_write@pin+1
  5646  0049AC  0E01               	movlw	1
  5647  0049AE  6E29               	movwf	gpio_pin_logic_write@pin_logic^0,c
  5648  0049B0  EC71  F01B         	call	_gpio_pin_logic_write	;wreg free
  5649                           
  5650                           ;ECUAL/LCD/lcd.c: 126:         lcd_ret=lcd_send_nbits(lcd,data>>4);
  5651  0049B4  C089  F080         	movff	lcd_send_char_data@lcd,lcd_send_nbits@lcd
  5652  0049B8  C08A  F081         	movff	lcd_send_char_data@lcd+1,lcd_send_nbits@lcd+1
  5653  0049BC  0100               	movlb	0	; () banked
  5654  0049BE  398B               	swapf	lcd_send_char_data@data& (0+255),w,b
  5655  0049C0  0B0F               	andlw	15
  5656  0049C2  6F82               	movwf	lcd_send_nbits@data_or_command& (0+255),b
  5657  0049C4  ECF0  F02A         	call	_lcd_send_nbits	;wreg free
  5658  0049C8  0100               	movlb	0	; () banked
  5659  0049CA  6F8D               	movwf	lcd_send_char_data@lcd_ret& (0+255),b
  5660                           
  5661                           ;ECUAL/LCD/lcd.c: 127:         lcd_ret=lcd_send_enable(lcd);
  5662  0049CC  C089  F080         	movff	lcd_send_char_data@lcd,lcd_send_enable@lcd
  5663  0049D0  C08A  F081         	movff	lcd_send_char_data@lcd+1,lcd_send_enable@lcd+1
  5664  0049D4  EC63  F02D         	call	_lcd_send_enable	;wreg free
  5665  0049D8  0100               	movlb	0	; () banked
  5666  0049DA  6F8D               	movwf	lcd_send_char_data@lcd_ret& (0+255),b
  5667                           
  5668                           ;ECUAL/LCD/lcd.c: 128:         lcd_ret=lcd_send_nbits(lcd,data);
  5669  0049DC  C089  F080         	movff	lcd_send_char_data@lcd,lcd_send_nbits@lcd
  5670  0049E0  C08A  F081         	movff	lcd_send_char_data@lcd+1,lcd_send_nbits@lcd+1
  5671  0049E4  C08B  F082         	movff	lcd_send_char_data@data,lcd_send_nbits@data_or_command
  5672  0049E8  ECF0  F02A         	call	_lcd_send_nbits	;wreg free
  5673  0049EC  0100               	movlb	0	; () banked
  5674  0049EE  6F8D               	movwf	lcd_send_char_data@lcd_ret& (0+255),b
  5675                           
  5676                           ;ECUAL/LCD/lcd.c: 129:         lcd_ret=lcd_send_enable(lcd);
  5677  0049F0  C089  F080         	movff	lcd_send_char_data@lcd,lcd_send_enable@lcd
  5678  0049F4  C08A  F081         	movff	lcd_send_char_data@lcd+1,lcd_send_enable@lcd+1
  5679  0049F8  EC63  F02D         	call	_lcd_send_enable	;wreg free
  5680  0049FC  0100               	movlb	0	; () banked
  5681  0049FE  6F8D               	movwf	lcd_send_char_data@lcd_ret& (0+255),b
  5682  004A00                     
  5683                           ; BSR set to: 0
  5684                           ;ECUAL/LCD/lcd.c: 136:         ret=(Std_ReturnType)0x01;
  5685  004A00  0E01               	movlw	1
  5686  004A02  6F8E               	movwf	lcd_send_char_data@ret& (0+255),b
  5687  004A04                     l11443:
  5688                           
  5689                           ; BSR set to: 0
  5690                           ;ECUAL/LCD/lcd.c: 139:     return ret;
  5691  004A04  518E               	movf	lcd_send_char_data@ret& (0+255),w,b
  5692  004A06                     
  5693                           ; BSR set to: 0
  5694  004A06  0012               	return		;funcret
  5695  004A08                     __end_of_lcd_send_char_data:
  5696                           	callstack 0
  5697                           
  5698 ;; *************** function _convert_BCD_to_int *****************
  5699 ;; Defined at:
  5700 ;;		line 21 in file "ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c"
  5701 ;; Parameters:    Size  Location     Type
  5702 ;;  BCD_num         1    wreg     unsigned char 
  5703 ;;  int_num         2   38[COMRAM] PTR unsigned char 
  5704 ;;		 -> seconds_counter(1), year_counter(1), month_counter(1), day_counter(1), 
  5705 ;;		 -> hours_counter(1), minutes_counter(1), 
  5706 ;; Auto vars:     Size  Location     Type
  5707 ;;  BCD_num         1   42[COMRAM] unsigned char 
  5708 ;;  ones            1   44[COMRAM] unsigned char 
  5709 ;;  tens            1   43[COMRAM] unsigned char 
  5710 ;; Return value:  Size  Location     Type
  5711 ;;                  1    wreg      void 
  5712 ;; Registers used:
  5713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5714 ;; Tracked objects:
  5715 ;;		On entry : 0/0
  5716 ;;		On exit  : 0/0
  5717 ;;		Unchanged: 0/0
  5718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5719 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5720 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5721 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5722 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5723 ;;Total ram usage:        7 bytes
  5724 ;; Hardware stack levels used: 1
  5725 ;; Hardware stack levels required when called: 13
  5726 ;; This function calls:
  5727 ;;		Nothing
  5728 ;; This function is called by:
  5729 ;;		_main
  5730 ;; This function uses a non-reentrant model
  5731 ;;
  5732                           
  5733                           	psect	text21
  5734  002F8C                     __ptext21:
  5735                           	callstack 0
  5736  002F8C                     _convert_BCD_to_int:
  5737                           	callstack 17
  5738                           
  5739                           ; BSR set to: 0
  5740                           ;incstack = 0
  5741                           ;convert_BCD_to_int@BCD_num stored from wreg
  5742  002F8C  6E2B               	movwf	convert_BCD_to_int@BCD_num^0,c
  5743  002F8E                     
  5744                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 22:     uint8 tens,ones;;ECUAL/RealTim
      +                          eClockDS1307/RealTimeClockDS1307.c: 23:     switch(BCD_num&0x0f){
  5745  002F8E  EFF1  F017         	goto	l9089
  5746  002F92                     l9067:
  5747  002F92  0E00               	movlw	0
  5748  002F94  6E2D               	movwf	convert_BCD_to_int@ones^0,c
  5749  002F96  EF4F  F018         	goto	l9113
  5750  002F9A                     l9069:
  5751  002F9A  0E01               	movlw	1
  5752  002F9C  6E2D               	movwf	convert_BCD_to_int@ones^0,c
  5753  002F9E  EF4F  F018         	goto	l9113
  5754  002FA2                     l9071:
  5755  002FA2  0E02               	movlw	2
  5756  002FA4  6E2D               	movwf	convert_BCD_to_int@ones^0,c
  5757  002FA6  EF4F  F018         	goto	l9113
  5758  002FAA                     l9073:
  5759  002FAA  0E03               	movlw	3
  5760  002FAC  6E2D               	movwf	convert_BCD_to_int@ones^0,c
  5761  002FAE  EF4F  F018         	goto	l9113
  5762  002FB2                     l9075:
  5763  002FB2  0E04               	movlw	4
  5764  002FB4  6E2D               	movwf	convert_BCD_to_int@ones^0,c
  5765  002FB6  EF4F  F018         	goto	l9113
  5766  002FBA                     l9077:
  5767  002FBA  0E05               	movlw	5
  5768  002FBC  6E2D               	movwf	convert_BCD_to_int@ones^0,c
  5769  002FBE  EF4F  F018         	goto	l9113
  5770  002FC2                     l9079:
  5771  002FC2  0E06               	movlw	6
  5772  002FC4  6E2D               	movwf	convert_BCD_to_int@ones^0,c
  5773  002FC6  EF4F  F018         	goto	l9113
  5774  002FCA                     l9081:
  5775  002FCA  0E07               	movlw	7
  5776  002FCC  6E2D               	movwf	convert_BCD_to_int@ones^0,c
  5777  002FCE  EF4F  F018         	goto	l9113
  5778  002FD2                     l9083:
  5779  002FD2  0E08               	movlw	8
  5780  002FD4  6E2D               	movwf	convert_BCD_to_int@ones^0,c
  5781  002FD6  EF4F  F018         	goto	l9113
  5782  002FDA                     l9085:
  5783  002FDA  0E09               	movlw	9
  5784  002FDC  6E2D               	movwf	convert_BCD_to_int@ones^0,c
  5785  002FDE  EF4F  F018         	goto	l9113
  5786  002FE2                     l9089:
  5787  002FE2  502B               	movf	convert_BCD_to_int@BCD_num^0,w,c
  5788  002FE4  0B0F               	andlw	15
  5789  002FE6  6E29               	movwf	??_convert_BCD_to_int^0,c
  5790  002FE8  6A2A               	clrf	(??_convert_BCD_to_int+1)^0,c
  5791                           
  5792                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5793                           ; Switch size 1, requested type "simple"
  5794                           ; Number of cases is 1, Range of values is 0 to 0
  5795                           ; switch strategies available:
  5796                           ; Name         Instructions Cycles
  5797                           ; simple_byte            4     3 (average)
  5798                           ;	Chosen strategy is simple_byte
  5799  002FEA  502A               	movf	(??_convert_BCD_to_int+1)^0,w,c
  5800  002FEC  0A00               	xorlw	0	; case 0
  5801  002FEE  B4D8               	btfsc	status,2,c
  5802  002FF0  EFFC  F017         	goto	l13645
  5803  002FF4  EF4F  F018         	goto	l9113
  5804  002FF8                     l13645:
  5805                           
  5806                           ; Switch size 1, requested type "simple"
  5807                           ; Number of cases is 10, Range of values is 0 to 9
  5808                           ; switch strategies available:
  5809                           ; Name         Instructions Cycles
  5810                           ; simple_byte           31    16 (average)
  5811                           ;	Chosen strategy is simple_byte
  5812  002FF8  5029               	movf	??_convert_BCD_to_int^0,w,c
  5813  002FFA  0A00               	xorlw	0	; case 0
  5814  002FFC  B4D8               	btfsc	status,2,c
  5815  002FFE  EFC9  F017         	goto	l9067
  5816  003002  0A01               	xorlw	1	; case 1
  5817  003004  B4D8               	btfsc	status,2,c
  5818  003006  EFCD  F017         	goto	l9069
  5819  00300A  0A03               	xorlw	3	; case 2
  5820  00300C  B4D8               	btfsc	status,2,c
  5821  00300E  EFD1  F017         	goto	l9071
  5822  003012  0A01               	xorlw	1	; case 3
  5823  003014  B4D8               	btfsc	status,2,c
  5824  003016  EFD5  F017         	goto	l9073
  5825  00301A  0A07               	xorlw	7	; case 4
  5826  00301C  B4D8               	btfsc	status,2,c
  5827  00301E  EFD9  F017         	goto	l9075
  5828  003022  0A01               	xorlw	1	; case 5
  5829  003024  B4D8               	btfsc	status,2,c
  5830  003026  EFDD  F017         	goto	l9077
  5831  00302A  0A03               	xorlw	3	; case 6
  5832  00302C  B4D8               	btfsc	status,2,c
  5833  00302E  EFE1  F017         	goto	l9079
  5834  003032  0A01               	xorlw	1	; case 7
  5835  003034  B4D8               	btfsc	status,2,c
  5836  003036  EFE5  F017         	goto	l9081
  5837  00303A  0A0F               	xorlw	15	; case 8
  5838  00303C  B4D8               	btfsc	status,2,c
  5839  00303E  EFE9  F017         	goto	l9083
  5840  003042  0A01               	xorlw	1	; case 9
  5841  003044  B4D8               	btfsc	status,2,c
  5842  003046  EFED  F017         	goto	l9085
  5843  00304A  EF4F  F018         	goto	l9113
  5844  00304E                     l9091:
  5845  00304E  0E00               	movlw	0
  5846  003050  6E2C               	movwf	convert_BCD_to_int@tens^0,c
  5847  003052  EF85  F018         	goto	l9115
  5848  003056                     l9093:
  5849  003056  0E01               	movlw	1
  5850  003058  6E2C               	movwf	convert_BCD_to_int@tens^0,c
  5851  00305A  EF85  F018         	goto	l9115
  5852  00305E                     l9095:
  5853  00305E  0E02               	movlw	2
  5854  003060  6E2C               	movwf	convert_BCD_to_int@tens^0,c
  5855  003062  EF85  F018         	goto	l9115
  5856  003066                     l9097:
  5857  003066  0E03               	movlw	3
  5858  003068  6E2C               	movwf	convert_BCD_to_int@tens^0,c
  5859  00306A  EF85  F018         	goto	l9115
  5860  00306E                     l9099:
  5861  00306E  0E04               	movlw	4
  5862  003070  6E2C               	movwf	convert_BCD_to_int@tens^0,c
  5863  003072  EF85  F018         	goto	l9115
  5864  003076                     l9101:
  5865  003076  0E05               	movlw	5
  5866  003078  6E2C               	movwf	convert_BCD_to_int@tens^0,c
  5867  00307A  EF85  F018         	goto	l9115
  5868  00307E                     l9103:
  5869  00307E  0E06               	movlw	6
  5870  003080  6E2C               	movwf	convert_BCD_to_int@tens^0,c
  5871  003082  EF85  F018         	goto	l9115
  5872  003086                     l9105:
  5873  003086  0E07               	movlw	7
  5874  003088  6E2C               	movwf	convert_BCD_to_int@tens^0,c
  5875  00308A  EF85  F018         	goto	l9115
  5876  00308E                     l9107:
  5877  00308E  0E08               	movlw	8
  5878  003090  6E2C               	movwf	convert_BCD_to_int@tens^0,c
  5879  003092  EF85  F018         	goto	l9115
  5880  003096                     l9109:
  5881  003096  0E09               	movlw	9
  5882  003098  6E2C               	movwf	convert_BCD_to_int@tens^0,c
  5883  00309A  EF85  F018         	goto	l9115
  5884  00309E                     l9113:
  5885  00309E  382B               	swapf	convert_BCD_to_int@BCD_num^0,w,c
  5886  0030A0  0B0F               	andlw	15
  5887  0030A2  6E29               	movwf	??_convert_BCD_to_int^0,c
  5888  0030A4  6A2A               	clrf	(??_convert_BCD_to_int+1)^0,c
  5889                           
  5890                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5891                           ; Switch size 1, requested type "simple"
  5892                           ; Number of cases is 1, Range of values is 0 to 0
  5893                           ; switch strategies available:
  5894                           ; Name         Instructions Cycles
  5895                           ; simple_byte            4     3 (average)
  5896                           ;	Chosen strategy is simple_byte
  5897  0030A6  502A               	movf	(??_convert_BCD_to_int+1)^0,w,c
  5898  0030A8  0A00               	xorlw	0	; case 0
  5899  0030AA  B4D8               	btfsc	status,2,c
  5900  0030AC  EF5A  F018         	goto	l13647
  5901  0030B0  EF85  F018         	goto	l9115
  5902  0030B4                     l13647:
  5903                           
  5904                           ; Switch size 1, requested type "simple"
  5905                           ; Number of cases is 10, Range of values is 0 to 9
  5906                           ; switch strategies available:
  5907                           ; Name         Instructions Cycles
  5908                           ; simple_byte           31    16 (average)
  5909                           ;	Chosen strategy is simple_byte
  5910  0030B4  5029               	movf	??_convert_BCD_to_int^0,w,c
  5911  0030B6  0A00               	xorlw	0	; case 0
  5912  0030B8  B4D8               	btfsc	status,2,c
  5913  0030BA  EF27  F018         	goto	l9091
  5914  0030BE  0A01               	xorlw	1	; case 1
  5915  0030C0  B4D8               	btfsc	status,2,c
  5916  0030C2  EF2B  F018         	goto	l9093
  5917  0030C6  0A03               	xorlw	3	; case 2
  5918  0030C8  B4D8               	btfsc	status,2,c
  5919  0030CA  EF2F  F018         	goto	l9095
  5920  0030CE  0A01               	xorlw	1	; case 3
  5921  0030D0  B4D8               	btfsc	status,2,c
  5922  0030D2  EF33  F018         	goto	l9097
  5923  0030D6  0A07               	xorlw	7	; case 4
  5924  0030D8  B4D8               	btfsc	status,2,c
  5925  0030DA  EF37  F018         	goto	l9099
  5926  0030DE  0A01               	xorlw	1	; case 5
  5927  0030E0  B4D8               	btfsc	status,2,c
  5928  0030E2  EF3B  F018         	goto	l9101
  5929  0030E6  0A03               	xorlw	3	; case 6
  5930  0030E8  B4D8               	btfsc	status,2,c
  5931  0030EA  EF3F  F018         	goto	l9103
  5932  0030EE  0A01               	xorlw	1	; case 7
  5933  0030F0  B4D8               	btfsc	status,2,c
  5934  0030F2  EF43  F018         	goto	l9105
  5935  0030F6  0A0F               	xorlw	15	; case 8
  5936  0030F8  B4D8               	btfsc	status,2,c
  5937  0030FA  EF47  F018         	goto	l9107
  5938  0030FE  0A01               	xorlw	1	; case 9
  5939  003100  B4D8               	btfsc	status,2,c
  5940  003102  EF4B  F018         	goto	l9109
  5941  003106  EF85  F018         	goto	l9115
  5942  00310A                     l9115:
  5943                           
  5944                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 47:     *int_num=tens*10+ones;
  5945  00310A  502C               	movf	convert_BCD_to_int@tens^0,w,c
  5946  00310C  0D0A               	mullw	10
  5947  00310E  50F3               	movf	243,w,c
  5948  003110  242D               	addwf	convert_BCD_to_int@ones^0,w,c
  5949  003112  C027  FFD9         	movff	convert_BCD_to_int@int_num,fsr2l
  5950  003116  C028  FFDA         	movff	convert_BCD_to_int@int_num+1,fsr2h
  5951  00311A  6EDF               	movwf	indf2,c
  5952  00311C  0012               	return		;funcret
  5953  00311E                     __end_of_convert_BCD_to_int:
  5954                           	callstack 0
  5955                           
  5956 ;; *************** function _buzzer_on *****************
  5957 ;; Defined at:
  5958 ;;		line 41 in file "ECUAL/buzzer/buzzer.c"
  5959 ;; Parameters:    Size  Location     Type
  5960 ;;  buzzer          2    0[BANK0 ] PTR struct .
  5961 ;;		 -> buzzer(2), 
  5962 ;; Auto vars:     Size  Location     Type
  5963 ;;  ret             1    0        unsigned char 
  5964 ;;  gpio_ret        1    2[BANK0 ] unsigned char 
  5965 ;; Return value:  Size  Location     Type
  5966 ;;                  1    wreg      unsigned char 
  5967 ;; Registers used:
  5968 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5969 ;; Tracked objects:
  5970 ;;		On entry : 0/0
  5971 ;;		On exit  : 0/0
  5972 ;;		Unchanged: 0/0
  5973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5974 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5975 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5977 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5978 ;;Total ram usage:        3 bytes
  5979 ;; Hardware stack levels used: 1
  5980 ;; Hardware stack levels required when called: 14
  5981 ;; This function calls:
  5982 ;;		_gpio_pin_logic_write
  5983 ;; This function is called by:
  5984 ;;		_main
  5985 ;; This function uses a non-reentrant model
  5986 ;;
  5987                           
  5988                           	psect	text22
  5989  00569E                     __ptext22:
  5990                           	callstack 0
  5991  00569E                     _buzzer_on:
  5992                           	callstack 16
  5993  00569E                     
  5994                           ;ECUAL/buzzer/buzzer.c: 44:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  5995  00569E  0E00               	movlw	0
  5996  0056A0  0100               	movlb	0	; () banked
  5997  0056A2  6F82               	movwf	buzzer_on@gpio_ret& (0+255),b
  5998  0056A4                     
  5999                           ; BSR set to: 0
  6000                           ;ECUAL/buzzer/buzzer.c: 45:     if(((void*)0)==buzzer){
  6001  0056A4  5180               	movf	buzzer_on@buzzer& (0+255),w,b
  6002  0056A6  1181               	iorwf	(buzzer_on@buzzer+1)& (0+255),w,b
  6003  0056A8  A4D8               	btfss	status,2,c
  6004  0056AA  EF59  F02B         	goto	u10571
  6005  0056AE  EF5B  F02B         	goto	u10570
  6006  0056B2                     u10571:
  6007  0056B2  EF5D  F02B         	goto	l12513
  6008  0056B6                     u10570:
  6009  0056B6                     
  6010                           ; BSR set to: 0
  6011                           ;ECUAL/buzzer/buzzer.c: 47:     }
  6012  0056B6  EF7A  F02B         	goto	l16
  6013  0056BA                     l12513:
  6014                           
  6015                           ; BSR set to: 0
  6016  0056BA  C080  F027         	movff	buzzer_on@buzzer,gpio_pin_logic_write@pin
  6017  0056BE  C081  F028         	movff	buzzer_on@buzzer+1,gpio_pin_logic_write@pin+1
  6018  0056C2  0E01               	movlw	1
  6019  0056C4  6E29               	movwf	gpio_pin_logic_write@pin_logic^0,c
  6020  0056C6  EC71  F01B         	call	_gpio_pin_logic_write	;wreg free
  6021  0056CA                     
  6022                           ;ECUAL/buzzer/buzzer.c: 50:         buzzer->buzzer_state=buzzer->buzzer_pin.logic;
  6023  0056CA  0100               	movlb	0	; () banked
  6024  0056CC  EE20 F001          	lfsr	2,1
  6025  0056D0  5180               	movf	buzzer_on@buzzer& (0+255),w,b
  6026  0056D2  26D9               	addwf	fsr2l,f,c
  6027  0056D4  5181               	movf	(buzzer_on@buzzer+1)& (0+255),w,b
  6028  0056D6  22DA               	addwfc	fsr2h,f,c
  6029  0056D8  C080  FFE1         	movff	buzzer_on@buzzer,fsr1l
  6030  0056DC  C081  FFE2         	movff	buzzer_on@buzzer+1,fsr1h
  6031  0056E0  BEE7               	btfsc	indf1,7,c
  6032  0056E2  EF75  F02B         	goto	u10581
  6033  0056E6  EF78  F02B         	goto	u10580
  6034  0056EA                     u10581:
  6035  0056EA  0E01               	movlw	1
  6036  0056EC  EF79  F02B         	goto	u10586
  6037  0056F0                     u10580:
  6038  0056F0  0E00               	movlw	0
  6039  0056F2                     u10586:
  6040  0056F2  6EDF               	movwf	indf2,c
  6041  0056F4                     l16:
  6042                           
  6043                           ; BSR set to: 0
  6044  0056F4  0012               	return		;funcret
  6045  0056F6                     __end_of_buzzer_on:
  6046                           	callstack 0
  6047                           
  6048 ;; *************** function _buzzer_off *****************
  6049 ;; Defined at:
  6050 ;;		line 65 in file "ECUAL/buzzer/buzzer.c"
  6051 ;; Parameters:    Size  Location     Type
  6052 ;;  buzzer          2    0[BANK0 ] PTR struct .
  6053 ;;		 -> buzzer(2), 
  6054 ;; Auto vars:     Size  Location     Type
  6055 ;;  ret             1    0        unsigned char 
  6056 ;;  gpio_ret        1    2[BANK0 ] unsigned char 
  6057 ;; Return value:  Size  Location     Type
  6058 ;;                  1    wreg      unsigned char 
  6059 ;; Registers used:
  6060 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6061 ;; Tracked objects:
  6062 ;;		On entry : 0/0
  6063 ;;		On exit  : 0/0
  6064 ;;		Unchanged: 0/0
  6065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6066 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6067 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6069 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6070 ;;Total ram usage:        3 bytes
  6071 ;; Hardware stack levels used: 1
  6072 ;; Hardware stack levels required when called: 14
  6073 ;; This function calls:
  6074 ;;		_gpio_pin_logic_write
  6075 ;; This function is called by:
  6076 ;;		_main
  6077 ;; This function uses a non-reentrant model
  6078 ;;
  6079                           
  6080                           	psect	text23
  6081  0056F6                     __ptext23:
  6082                           	callstack 0
  6083  0056F6                     _buzzer_off:
  6084                           	callstack 16
  6085  0056F6                     
  6086                           ;ECUAL/buzzer/buzzer.c: 68:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  6087  0056F6  0E00               	movlw	0
  6088  0056F8  0100               	movlb	0	; () banked
  6089  0056FA  6F82               	movwf	buzzer_off@gpio_ret& (0+255),b
  6090  0056FC                     
  6091                           ; BSR set to: 0
  6092                           ;ECUAL/buzzer/buzzer.c: 69:     if(((void*)0)==buzzer){
  6093  0056FC  5180               	movf	buzzer_off@buzzer& (0+255),w,b
  6094  0056FE  1181               	iorwf	(buzzer_off@buzzer+1)& (0+255),w,b
  6095  005700  A4D8               	btfss	status,2,c
  6096  005702  EF85  F02B         	goto	u10591
  6097  005706  EF87  F02B         	goto	u10590
  6098  00570A                     u10591:
  6099  00570A  EF89  F02B         	goto	l12527
  6100  00570E                     u10590:
  6101  00570E                     
  6102                           ; BSR set to: 0
  6103                           ;ECUAL/buzzer/buzzer.c: 71:     }
  6104  00570E  EFA6  F02B         	goto	l21
  6105  005712                     l12527:
  6106                           
  6107                           ; BSR set to: 0
  6108  005712  C080  F027         	movff	buzzer_off@buzzer,gpio_pin_logic_write@pin
  6109  005716  C081  F028         	movff	buzzer_off@buzzer+1,gpio_pin_logic_write@pin+1
  6110  00571A  0E00               	movlw	0
  6111  00571C  6E29               	movwf	gpio_pin_logic_write@pin_logic^0,c
  6112  00571E  EC71  F01B         	call	_gpio_pin_logic_write	;wreg free
  6113  005722                     
  6114                           ;ECUAL/buzzer/buzzer.c: 74:         buzzer->buzzer_state=buzzer->buzzer_pin.logic;
  6115  005722  0100               	movlb	0	; () banked
  6116  005724  EE20 F001          	lfsr	2,1
  6117  005728  5180               	movf	buzzer_off@buzzer& (0+255),w,b
  6118  00572A  26D9               	addwf	fsr2l,f,c
  6119  00572C  5181               	movf	(buzzer_off@buzzer+1)& (0+255),w,b
  6120  00572E  22DA               	addwfc	fsr2h,f,c
  6121  005730  C080  FFE1         	movff	buzzer_off@buzzer,fsr1l
  6122  005734  C081  FFE2         	movff	buzzer_off@buzzer+1,fsr1h
  6123  005738  BEE7               	btfsc	indf1,7,c
  6124  00573A  EFA1  F02B         	goto	u10601
  6125  00573E  EFA4  F02B         	goto	u10600
  6126  005742                     u10601:
  6127  005742  0E01               	movlw	1
  6128  005744  EFA5  F02B         	goto	u10606
  6129  005748                     u10600:
  6130  005748  0E00               	movlw	0
  6131  00574A                     u10606:
  6132  00574A  6EDF               	movwf	indf2,c
  6133  00574C                     l21:
  6134                           
  6135                           ; BSR set to: 0
  6136  00574C  0012               	return		;funcret
  6137  00574E                     __end_of_buzzer_off:
  6138                           	callstack 0
  6139                           
  6140 ;; *************** function __Initialize *****************
  6141 ;; Defined at:
  6142 ;;		line 59 in file "mcc_generated_files/init.c"
  6143 ;; Parameters:    Size  Location     Type
  6144 ;;		None
  6145 ;; Auto vars:     Size  Location     Type
  6146 ;;		None
  6147 ;; Return value:  Size  Location     Type
  6148 ;;                  1    wreg      void 
  6149 ;; Registers used:
  6150 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6151 ;; Tracked objects:
  6152 ;;		On entry : 0/0
  6153 ;;		On exit  : 0/0
  6154 ;;		Unchanged: 0/0
  6155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6160 ;;Total ram usage:        0 bytes
  6161 ;; Hardware stack levels used: 1
  6162 ;; Hardware stack levels required when called: 17
  6163 ;; This function calls:
  6164 ;;		_ADC_Init
  6165 ;;		_EUSART_ASYNC_Init
  6166 ;;		_I2C_Initialize
  6167 ;;		_buzzer_init
  6168 ;;		_interrupt_INTx_init
  6169 ;;		_lcd_init
  6170 ;; This function is called by:
  6171 ;;		_main
  6172 ;; This function uses a non-reentrant model
  6173 ;;
  6174                           
  6175                           	psect	text24
  6176  005514                     __ptext24:
  6177                           	callstack 0
  6178  005514                     __Initialize:
  6179                           	callstack 13
  6180  005514                     
  6181                           ;mcc_generated_files/init.c: 61:     I2C_Initialize();
  6182  005514  ECF2  F030         	call	_I2C_Initialize	;wreg free
  6183  005518                     
  6184                           ;mcc_generated_files/init.c: 62:     lcd_init(&lcd);
  6185  005518  0E50               	movlw	low _lcd
  6186  00551A  0100               	movlb	0	; () banked
  6187  00551C  6F8F               	movwf	lcd_init@lcd& (0+255),b
  6188  00551E  0E00               	movlw	high _lcd
  6189  005520  6F90               	movwf	(lcd_init@lcd+1)& (0+255),b
  6190  005522  ECC3  F01A         	call	_lcd_init	;wreg free
  6191  005526                     
  6192                           ;mcc_generated_files/init.c: 63:     interrupt_INTx_init(&MY_INT0);
  6193  005526  0E8F               	movlw	low _MY_INT0
  6194  005528  0100               	movlb	0	; () banked
  6195  00552A  6F88               	movwf	interrupt_INTx_init@_interrupt& (0+255),b
  6196  00552C  0E01               	movlw	high _MY_INT0
  6197  00552E  6F89               	movwf	(interrupt_INTx_init@_interrupt+1)& (0+255),b
  6198  005530  ECC8  F026         	call	_interrupt_INTx_init	;wreg free
  6199  005534                     
  6200                           ;mcc_generated_files/init.c: 64:     interrupt_INTx_init(&MY_INT1);
  6201  005534  0E89               	movlw	low _MY_INT1
  6202  005536  0100               	movlb	0	; () banked
  6203  005538  6F88               	movwf	interrupt_INTx_init@_interrupt& (0+255),b
  6204  00553A  0E01               	movlw	high _MY_INT1
  6205  00553C  6F89               	movwf	(interrupt_INTx_init@_interrupt+1)& (0+255),b
  6206  00553E  ECC8  F026         	call	_interrupt_INTx_init	;wreg free
  6207  005542                     
  6208                           ;mcc_generated_files/init.c: 65:     interrupt_INTx_init(&MY_INT2);
  6209  005542  0E83               	movlw	low _MY_INT2
  6210  005544  0100               	movlb	0	; () banked
  6211  005546  6F88               	movwf	interrupt_INTx_init@_interrupt& (0+255),b
  6212  005548  0E01               	movlw	high _MY_INT2
  6213  00554A  6F89               	movwf	(interrupt_INTx_init@_interrupt+1)& (0+255),b
  6214  00554C  ECC8  F026         	call	_interrupt_INTx_init	;wreg free
  6215  005550                     
  6216                           ;mcc_generated_files/init.c: 66:     buzzer_init(&buzzer);
  6217  005550  0EFE               	movlw	low _buzzer
  6218  005552  0100               	movlb	0	; () banked
  6219  005554  6F85               	movwf	buzzer_init@buzzer& (0+255),b
  6220  005556  0E00               	movlw	high _buzzer
  6221  005558  6F86               	movwf	(buzzer_init@buzzer+1)& (0+255),b
  6222  00555A  ECD2  F02B         	call	_buzzer_init	;wreg free
  6223  00555E                     
  6224                           ;mcc_generated_files/init.c: 67:     ADC_Init(&adc);
  6225  00555E  0E7C               	movlw	low _adc
  6226  005560  6E2A               	movwf	ADC_Init@_adc^0,c
  6227  005562  0E01               	movlw	high _adc
  6228  005564  6E2B               	movwf	(ADC_Init@_adc+1)^0,c
  6229  005566  ECDC  F01D         	call	_ADC_Init	;wreg free
  6230  00556A                     
  6231                           ;mcc_generated_files/init.c: 68:     EUSART_ASYNC_Init(&uart);
  6232  00556A  0E6C               	movlw	low _uart
  6233  00556C  0100               	movlb	0	; () banked
  6234  00556E  6FBB               	movwf	EUSART_ASYNC_Init@_eusart& (0+255),b
  6235  005570  0E01               	movlw	high _uart
  6236  005572  6FBC               	movwf	(EUSART_ASYNC_Init@_eusart+1)& (0+255),b
  6237  005574  ECDE  F02C         	call	_EUSART_ASYNC_Init	;wreg free
  6238  005578  0012               	return		;funcret
  6239  00557A                     __end_of__Initialize:
  6240                           	callstack 0
  6241                           
  6242 ;; *************** function _lcd_init *****************
  6243 ;; Defined at:
  6244 ;;		line 30 in file "ECUAL/LCD/lcd.c"
  6245 ;; Parameters:    Size  Location     Type
  6246 ;;  lcd             2   15[BANK0 ] PTR struct .
  6247 ;;		 -> lcd(6), 
  6248 ;; Auto vars:     Size  Location     Type
  6249 ;;  lcd_ret         1   21[BANK0 ] unsigned char 
  6250 ;;  pins_counter    1   20[BANK0 ] unsigned char 
  6251 ;;  gpio_ret        1   19[BANK0 ] unsigned char 
  6252 ;;  ret             1    0        unsigned char 
  6253 ;; Return value:  Size  Location     Type
  6254 ;;                  1    wreg      unsigned char 
  6255 ;; Registers used:
  6256 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6257 ;; Tracked objects:
  6258 ;;		On entry : 0/0
  6259 ;;		On exit  : 0/0
  6260 ;;		Unchanged: 0/0
  6261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6262 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6263 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6264 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6265 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6266 ;;Total ram usage:        7 bytes
  6267 ;; Hardware stack levels used: 1
  6268 ;; Hardware stack levels required when called: 16
  6269 ;; This function calls:
  6270 ;;		_gpio_pin_output_low_init
  6271 ;;		_lcd_send_command
  6272 ;; This function is called by:
  6273 ;;		__Initialize
  6274 ;; This function uses a non-reentrant model
  6275 ;;
  6276                           
  6277                           	psect	text25
  6278  003586                     __ptext25:
  6279                           	callstack 0
  6280  003586                     _lcd_init:
  6281                           	callstack 13
  6282  003586                     
  6283                           ;ECUAL/LCD/lcd.c: 33:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  6284  003586  0E00               	movlw	0
  6285  003588  0100               	movlb	0	; () banked
  6286  00358A  6F93               	movwf	lcd_init@gpio_ret& (0+255),b
  6287                           
  6288                           ;ECUAL/LCD/lcd.c: 34:     Std_ReturnType lcd_ret=(Std_ReturnType)0x00;
  6289  00358C  0E00               	movlw	0
  6290  00358E  6F95               	movwf	lcd_init@lcd_ret& (0+255),b
  6291  003590                     
  6292                           ; BSR set to: 0
  6293                           ;ECUAL/LCD/lcd.c: 35:     uint8 pins_counter;;ECUAL/LCD/lcd.c: 36:     if(((void*)0)==lc
      +                          d){
  6294  003590  518F               	movf	lcd_init@lcd& (0+255),w,b
  6295  003592  1190               	iorwf	(lcd_init@lcd+1)& (0+255),w,b
  6296  003594  A4D8               	btfss	status,2,c
  6297  003596  EFCF  F01A         	goto	u10431
  6298  00359A  EFD1  F01A         	goto	u10430
  6299  00359E                     u10431:
  6300  00359E  EFD3  F01A         	goto	l12359
  6301  0035A2                     u10430:
  6302  0035A2                     
  6303                           ; BSR set to: 0
  6304                           ;ECUAL/LCD/lcd.c: 38:     }
  6305  0035A2  EF70  F01B         	goto	l58
  6306  0035A6                     l12359:
  6307                           
  6308                           ; BSR set to: 0
  6309                           ;ECUAL/LCD/lcd.c: 40:         gpio_ret=gpio_pin_output_low_init(&(lcd->lcd_en));
  6310  0035A6  0E01               	movlw	1
  6311  0035A8  258F               	addwf	lcd_init@lcd& (0+255),w,b
  6312  0035AA  6F80               	movwf	gpio_pin_output_low_init@pin& (0+255),b
  6313  0035AC  0E00               	movlw	0
  6314  0035AE  2190               	addwfc	(lcd_init@lcd+1)& (0+255),w,b
  6315  0035B0  6F81               	movwf	(gpio_pin_output_low_init@pin+1)& (0+255),b
  6316  0035B2  EC67  F028         	call	_gpio_pin_output_low_init	;wreg free
  6317  0035B6  0100               	movlb	0	; () banked
  6318  0035B8  6F93               	movwf	lcd_init@gpio_ret& (0+255),b
  6319                           
  6320                           ;ECUAL/LCD/lcd.c: 41:         gpio_ret=gpio_pin_output_low_init(&(lcd->lcd_rs));
  6321  0035BA  C08F  F080         	movff	lcd_init@lcd,gpio_pin_output_low_init@pin
  6322  0035BE  C090  F081         	movff	lcd_init@lcd+1,gpio_pin_output_low_init@pin+1
  6323  0035C2  EC67  F028         	call	_gpio_pin_output_low_init	;wreg free
  6324  0035C6  0100               	movlb	0	; () banked
  6325  0035C8  6F93               	movwf	lcd_init@gpio_ret& (0+255),b
  6326  0035CA                     
  6327                           ; BSR set to: 0
  6328                           ;ECUAL/LCD/lcd.c: 42:         for(pins_counter=0;pins_counter<n;pins_counter++){
  6329  0035CA  0E00               	movlw	0
  6330  0035CC  6F94               	movwf	lcd_init@pins_counter& (0+255),b
  6331  0035CE  EFF9  F01A         	goto	l12367
  6332  0035D2                     l12363:
  6333                           
  6334                           ; BSR set to: 0
  6335  0035D2  5194               	movf	lcd_init@pins_counter& (0+255),w,b
  6336  0035D4  258F               	addwf	lcd_init@lcd& (0+255),w,b
  6337  0035D6  6F91               	movwf	??_lcd_init& (0+255),b
  6338  0035D8  0E00               	movlw	0
  6339  0035DA  2190               	addwfc	(lcd_init@lcd+1)& (0+255),w,b
  6340  0035DC  6F92               	movwf	(??_lcd_init+1)& (0+255),b
  6341  0035DE  0E02               	movlw	2
  6342  0035E0  2591               	addwf	??_lcd_init& (0+255),w,b
  6343  0035E2  6F80               	movwf	gpio_pin_output_low_init@pin& (0+255),b
  6344  0035E4  0E00               	movlw	0
  6345  0035E6  2192               	addwfc	(??_lcd_init+1)& (0+255),w,b
  6346  0035E8  6F81               	movwf	(gpio_pin_output_low_init@pin+1)& (0+255),b
  6347  0035EA  EC67  F028         	call	_gpio_pin_output_low_init	;wreg free
  6348  0035EE                     
  6349                           ;ECUAL/LCD/lcd.c: 44:         }
  6350  0035EE  0100               	movlb	0	; () banked
  6351  0035F0  2B94               	incf	lcd_init@pins_counter& (0+255),f,b
  6352  0035F2                     l12367:
  6353                           
  6354                           ; BSR set to: 0
  6355  0035F2  0E03               	movlw	3
  6356  0035F4  6594               	cpfsgt	lcd_init@pins_counter& (0+255),b
  6357  0035F6  EFFF  F01A         	goto	u10441
  6358  0035FA  EF01  F01B         	goto	u10440
  6359  0035FE                     u10441:
  6360  0035FE  EFE9  F01A         	goto	l12363
  6361  003602                     u10440:
  6362  003602                     
  6363                           ; BSR set to: 0
  6364                           ;ECUAL/LCD/lcd.c: 45:         _delay((unsigned long)((20)*(8000000/4000.0)));
  6365  003602  0E34               	movlw	52
  6366  003604  0100               	movlb	0	; () banked
  6367  003606  6F91               	movwf	??_lcd_init& (0+255),b
  6368  003608  0EF1               	movlw	241
  6369  00360A                     u11677:
  6370  00360A  2EE8               	decfsz	wreg,f,c
  6371  00360C  D7FE               	bra	u11677
  6372  00360E  2F91               	decfsz	??_lcd_init& (0+255),f,b
  6373  003610  D7FC               	bra	u11677
  6374  003612  D000               	nop2	
  6375  003614  C08F  F089         	movff	lcd_init@lcd,lcd_send_command@lcd
  6376  003618  C090  F08A         	movff	lcd_init@lcd+1,lcd_send_command@lcd+1
  6377  00361C  0E38               	movlw	56
  6378  00361E  0100               	movlb	0	; () banked
  6379  003620  6F8B               	movwf	lcd_send_command@command& (0+255),b
  6380  003622  EC04  F025         	call	_lcd_send_command	;wreg free
  6381  003626                     
  6382                           ;ECUAL/LCD/lcd.c: 47:         _delay((unsigned long)((5)*(8000000/4000.0)));
  6383  003626  0E0D               	movlw	13
  6384  003628  0100               	movlb	0	; () banked
  6385  00362A  6F91               	movwf	??_lcd_init& (0+255),b
  6386  00362C  0EFB               	movlw	251
  6387  00362E                     u11687:
  6388  00362E  2EE8               	decfsz	wreg,f,c
  6389  003630  D7FE               	bra	u11687
  6390  003632  2F91               	decfsz	??_lcd_init& (0+255),f,b
  6391  003634  D7FC               	bra	u11687
  6392  003636  D000               	nop2	
  6393  003638  C08F  F089         	movff	lcd_init@lcd,lcd_send_command@lcd
  6394  00363C  C090  F08A         	movff	lcd_init@lcd+1,lcd_send_command@lcd+1
  6395  003640  0E38               	movlw	56
  6396  003642  0100               	movlb	0	; () banked
  6397  003644  6F8B               	movwf	lcd_send_command@command& (0+255),b
  6398  003646  EC04  F025         	call	_lcd_send_command	;wreg free
  6399  00364A                     
  6400                           ;ECUAL/LCD/lcd.c: 49:         _delay((unsigned long)((150)*(8000000/4000.0)));
  6401  00364A  0E02               	movlw	2
  6402  00364C  0100               	movlb	0	; () banked
  6403  00364E  6F92               	movwf	(??_lcd_init+1)& (0+255),b
  6404  003650  0E86               	movlw	134
  6405  003652  6F91               	movwf	??_lcd_init& (0+255),b
  6406  003654  0E99               	movlw	153
  6407  003656                     u11697:
  6408  003656  2EE8               	decfsz	wreg,f,c
  6409  003658  D7FE               	bra	u11697
  6410  00365A  2F91               	decfsz	??_lcd_init& (0+255),f,b
  6411  00365C  D7FC               	bra	u11697
  6412  00365E  2F92               	decfsz	(??_lcd_init+1)& (0+255),f,b
  6413  003660  D7FA               	bra	u11697
  6414  003662  C08F  F089         	movff	lcd_init@lcd,lcd_send_command@lcd
  6415  003666  C090  F08A         	movff	lcd_init@lcd+1,lcd_send_command@lcd+1
  6416  00366A  0E38               	movlw	56
  6417  00366C  0100               	movlb	0	; () banked
  6418  00366E  6F8B               	movwf	lcd_send_command@command& (0+255),b
  6419  003670  EC04  F025         	call	_lcd_send_command	;wreg free
  6420  003674  C08F  F089         	movff	lcd_init@lcd,lcd_send_command@lcd
  6421  003678  C090  F08A         	movff	lcd_init@lcd+1,lcd_send_command@lcd+1
  6422  00367C  0E01               	movlw	1
  6423  00367E  0100               	movlb	0	; () banked
  6424  003680  6F8B               	movwf	lcd_send_command@command& (0+255),b
  6425  003682  EC04  F025         	call	_lcd_send_command	;wreg free
  6426  003686  C08F  F089         	movff	lcd_init@lcd,lcd_send_command@lcd
  6427  00368A  C090  F08A         	movff	lcd_init@lcd+1,lcd_send_command@lcd+1
  6428  00368E  0E02               	movlw	2
  6429  003690  0100               	movlb	0	; () banked
  6430  003692  6F8B               	movwf	lcd_send_command@command& (0+255),b
  6431  003694  EC04  F025         	call	_lcd_send_command	;wreg free
  6432  003698  C08F  F089         	movff	lcd_init@lcd,lcd_send_command@lcd
  6433  00369C  C090  F08A         	movff	lcd_init@lcd+1,lcd_send_command@lcd+1
  6434  0036A0  0E06               	movlw	6
  6435  0036A2  0100               	movlb	0	; () banked
  6436  0036A4  6F8B               	movwf	lcd_send_command@command& (0+255),b
  6437  0036A6  EC04  F025         	call	_lcd_send_command	;wreg free
  6438  0036AA  C08F  F089         	movff	lcd_init@lcd,lcd_send_command@lcd
  6439  0036AE  C090  F08A         	movff	lcd_init@lcd+1,lcd_send_command@lcd+1
  6440  0036B2  0E0C               	movlw	12
  6441  0036B4  0100               	movlb	0	; () banked
  6442  0036B6  6F8B               	movwf	lcd_send_command@command& (0+255),b
  6443  0036B8  EC04  F025         	call	_lcd_send_command	;wreg free
  6444  0036BC  C08F  F089         	movff	lcd_init@lcd,lcd_send_command@lcd
  6445  0036C0  C090  F08A         	movff	lcd_init@lcd+1,lcd_send_command@lcd+1
  6446  0036C4  0E80               	movlw	128
  6447  0036C6  0100               	movlb	0	; () banked
  6448  0036C8  6F8B               	movwf	lcd_send_command@command& (0+255),b
  6449  0036CA  EC04  F025         	call	_lcd_send_command	;wreg free
  6450  0036CE  C08F  F089         	movff	lcd_init@lcd,lcd_send_command@lcd
  6451  0036D2  C090  F08A         	movff	lcd_init@lcd+1,lcd_send_command@lcd+1
  6452  0036D6  0E28               	movlw	40
  6453  0036D8  0100               	movlb	0	; () banked
  6454  0036DA  6F8B               	movwf	lcd_send_command@command& (0+255),b
  6455  0036DC  EC04  F025         	call	_lcd_send_command	;wreg free
  6456  0036E0                     l58:
  6457  0036E0  0012               	return		;funcret
  6458  0036E2                     __end_of_lcd_init:
  6459                           	callstack 0
  6460                           
  6461 ;; *************** function _lcd_send_command *****************
  6462 ;; Defined at:
  6463 ;;		line 78 in file "ECUAL/LCD/lcd.c"
  6464 ;; Parameters:    Size  Location     Type
  6465 ;;  lcd             2    9[BANK0 ] PTR struct .
  6466 ;;		 -> lcd(6), 
  6467 ;;  command         1   11[BANK0 ] unsigned char 
  6468 ;; Auto vars:     Size  Location     Type
  6469 ;;  ret             1   14[BANK0 ] unsigned char 
  6470 ;;  lcd_ret         1   13[BANK0 ] unsigned char 
  6471 ;;  gpio_ret        1   12[BANK0 ] unsigned char 
  6472 ;; Return value:  Size  Location     Type
  6473 ;;                  1    wreg      unsigned char 
  6474 ;; Registers used:
  6475 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6476 ;; Tracked objects:
  6477 ;;		On entry : 0/0
  6478 ;;		On exit  : 0/0
  6479 ;;		Unchanged: 0/0
  6480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6481 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6482 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6484 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6485 ;;Total ram usage:        6 bytes
  6486 ;; Hardware stack levels used: 1
  6487 ;; Hardware stack levels required when called: 15
  6488 ;; This function calls:
  6489 ;;		_gpio_pin_logic_write
  6490 ;;		_lcd_send_enable
  6491 ;;		_lcd_send_nbits
  6492 ;; This function is called by:
  6493 ;;		_lcd_init
  6494 ;;		_lcd_set_curser
  6495 ;;		_main
  6496 ;;		_lcd_send_custom_char
  6497 ;; This function uses a non-reentrant model
  6498 ;;
  6499                           
  6500                           	psect	text26
  6501  004A08                     __ptext26:
  6502                           	callstack 0
  6503  004A08                     _lcd_send_command:
  6504                           	callstack 13
  6505  004A08                     
  6506                           ;ECUAL/LCD/lcd.c: 81:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  6507  004A08  0E00               	movlw	0
  6508  004A0A  0100               	movlb	0	; () banked
  6509  004A0C  6F8C               	movwf	lcd_send_command@gpio_ret& (0+255),b
  6510                           
  6511                           ;ECUAL/LCD/lcd.c: 82:     Std_ReturnType lcd_ret=(Std_ReturnType)0x00;
  6512  004A0E  0E00               	movlw	0
  6513  004A10  6F8D               	movwf	lcd_send_command@lcd_ret& (0+255),b
  6514  004A12                     
  6515                           ; BSR set to: 0
  6516                           ;ECUAL/LCD/lcd.c: 83:     if(((void*)0)==lcd){
  6517  004A12  5189               	movf	lcd_send_command@lcd& (0+255),w,b
  6518  004A14  118A               	iorwf	(lcd_send_command@lcd+1)& (0+255),w,b
  6519  004A16  A4D8               	btfss	status,2,c
  6520  004A18  EF10  F025         	goto	u9271
  6521  004A1C  EF12  F025         	goto	u9270
  6522  004A20                     u9271:
  6523  004A20  EF16  F025         	goto	l11425
  6524  004A24                     u9270:
  6525  004A24                     
  6526                           ; BSR set to: 0
  6527                           ;ECUAL/LCD/lcd.c: 84:         ret=(Std_ReturnType)0x00;
  6528  004A24  0E00               	movlw	0
  6529  004A26  6F8E               	movwf	lcd_send_command@ret& (0+255),b
  6530                           
  6531                           ;ECUAL/LCD/lcd.c: 85:     }
  6532  004A28  EF46  F025         	goto	l11429
  6533  004A2C                     l11425:
  6534                           
  6535                           ; BSR set to: 0
  6536  004A2C  C089  F027         	movff	lcd_send_command@lcd,gpio_pin_logic_write@pin
  6537  004A30  C08A  F028         	movff	lcd_send_command@lcd+1,gpio_pin_logic_write@pin+1
  6538  004A34  0E00               	movlw	0
  6539  004A36  6E29               	movwf	gpio_pin_logic_write@pin_logic^0,c
  6540  004A38  EC71  F01B         	call	_gpio_pin_logic_write	;wreg free
  6541                           
  6542                           ;ECUAL/LCD/lcd.c: 89:         lcd_ret=lcd_send_nbits(lcd,command>>4);
  6543  004A3C  C089  F080         	movff	lcd_send_command@lcd,lcd_send_nbits@lcd
  6544  004A40  C08A  F081         	movff	lcd_send_command@lcd+1,lcd_send_nbits@lcd+1
  6545  004A44  0100               	movlb	0	; () banked
  6546  004A46  398B               	swapf	lcd_send_command@command& (0+255),w,b
  6547  004A48  0B0F               	andlw	15
  6548  004A4A  6F82               	movwf	lcd_send_nbits@data_or_command& (0+255),b
  6549  004A4C  ECF0  F02A         	call	_lcd_send_nbits	;wreg free
  6550  004A50  0100               	movlb	0	; () banked
  6551  004A52  6F8D               	movwf	lcd_send_command@lcd_ret& (0+255),b
  6552                           
  6553                           ;ECUAL/LCD/lcd.c: 90:         lcd_ret=lcd_send_enable(lcd);
  6554  004A54  C089  F080         	movff	lcd_send_command@lcd,lcd_send_enable@lcd
  6555  004A58  C08A  F081         	movff	lcd_send_command@lcd+1,lcd_send_enable@lcd+1
  6556  004A5C  EC63  F02D         	call	_lcd_send_enable	;wreg free
  6557  004A60  0100               	movlb	0	; () banked
  6558  004A62  6F8D               	movwf	lcd_send_command@lcd_ret& (0+255),b
  6559                           
  6560                           ;ECUAL/LCD/lcd.c: 91:         lcd_ret=lcd_send_nbits(lcd,command);
  6561  004A64  C089  F080         	movff	lcd_send_command@lcd,lcd_send_nbits@lcd
  6562  004A68  C08A  F081         	movff	lcd_send_command@lcd+1,lcd_send_nbits@lcd+1
  6563  004A6C  C08B  F082         	movff	lcd_send_command@command,lcd_send_nbits@data_or_command
  6564  004A70  ECF0  F02A         	call	_lcd_send_nbits	;wreg free
  6565  004A74  0100               	movlb	0	; () banked
  6566  004A76  6F8D               	movwf	lcd_send_command@lcd_ret& (0+255),b
  6567                           
  6568                           ;ECUAL/LCD/lcd.c: 92:         lcd_ret=lcd_send_enable(lcd);
  6569  004A78  C089  F080         	movff	lcd_send_command@lcd,lcd_send_enable@lcd
  6570  004A7C  C08A  F081         	movff	lcd_send_command@lcd+1,lcd_send_enable@lcd+1
  6571  004A80  EC63  F02D         	call	_lcd_send_enable	;wreg free
  6572  004A84  0100               	movlb	0	; () banked
  6573  004A86  6F8D               	movwf	lcd_send_command@lcd_ret& (0+255),b
  6574  004A88                     
  6575                           ; BSR set to: 0
  6576                           ;ECUAL/LCD/lcd.c: 100:         ret=(Std_ReturnType)0x01;
  6577  004A88  0E01               	movlw	1
  6578  004A8A  6F8E               	movwf	lcd_send_command@ret& (0+255),b
  6579  004A8C                     l11429:
  6580                           
  6581                           ; BSR set to: 0
  6582                           ;ECUAL/LCD/lcd.c: 103:     return ret;
  6583  004A8C  518E               	movf	lcd_send_command@ret& (0+255),w,b
  6584  004A8E                     
  6585                           ; BSR set to: 0
  6586  004A8E  0012               	return		;funcret
  6587  004A90                     __end_of_lcd_send_command:
  6588                           	callstack 0
  6589                           
  6590 ;; *************** function _lcd_send_nbits *****************
  6591 ;; Defined at:
  6592 ;;		line 376 in file "ECUAL/LCD/lcd.c"
  6593 ;; Parameters:    Size  Location     Type
  6594 ;;  lcd             2    0[BANK0 ] PTR struct .
  6595 ;;		 -> lcd(6), 
  6596 ;;  data_or_comm    1    2[BANK0 ] unsigned char 
  6597 ;; Auto vars:     Size  Location     Type
  6598 ;;  pin_counter     1    8[BANK0 ] unsigned char 
  6599 ;;  ret             1    7[BANK0 ] unsigned char 
  6600 ;;  gpio_ret        1    0        unsigned char 
  6601 ;; Return value:  Size  Location     Type
  6602 ;;                  1    wreg      unsigned char 
  6603 ;; Registers used:
  6604 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6605 ;; Tracked objects:
  6606 ;;		On entry : 0/0
  6607 ;;		On exit  : 0/0
  6608 ;;		Unchanged: 0/0
  6609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6610 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6611 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6612 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6613 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6614 ;;Total ram usage:        9 bytes
  6615 ;; Hardware stack levels used: 1
  6616 ;; Hardware stack levels required when called: 14
  6617 ;; This function calls:
  6618 ;;		_gpio_pin_logic_write
  6619 ;; This function is called by:
  6620 ;;		_lcd_send_command
  6621 ;;		_lcd_send_char_data
  6622 ;; This function uses a non-reentrant model
  6623 ;;
  6624                           
  6625                           	psect	text27
  6626  0055E0                     __ptext27:
  6627                           	callstack 0
  6628  0055E0                     _lcd_send_nbits:
  6629                           	callstack 13
  6630  0055E0                     
  6631                           ;ECUAL/LCD/lcd.c: 378:     uint8 pin_counter;;ECUAL/LCD/lcd.c: 379:     Std_ReturnType r
      +                          et=(Std_ReturnType)0x00;
  6632  0055E0  0E00               	movlw	0
  6633  0055E2  0100               	movlb	0	; () banked
  6634  0055E4  6F87               	movwf	lcd_send_nbits@ret& (0+255),b
  6635                           
  6636                           ;ECUAL/LCD/lcd.c: 381:     for(pin_counter=0;pin_counter<n;pin_counter++){
  6637  0055E6  0E00               	movlw	0
  6638  0055E8  6F88               	movwf	lcd_send_nbits@pin_counter& (0+255),b
  6639  0055EA  EF17  F02B         	goto	l11265
  6640  0055EE                     l11261:
  6641                           
  6642                           ; BSR set to: 0
  6643  0055EE  5188               	movf	lcd_send_nbits@pin_counter& (0+255),w,b
  6644  0055F0  2580               	addwf	lcd_send_nbits@lcd& (0+255),w,b
  6645  0055F2  6F83               	movwf	??_lcd_send_nbits& (0+255),b
  6646  0055F4  0E00               	movlw	0
  6647  0055F6  2181               	addwfc	(lcd_send_nbits@lcd+1)& (0+255),w,b
  6648  0055F8  6F84               	movwf	(??_lcd_send_nbits+1)& (0+255),b
  6649  0055FA  0E02               	movlw	2
  6650  0055FC  2583               	addwf	??_lcd_send_nbits& (0+255),w,b
  6651  0055FE  6E27               	movwf	gpio_pin_logic_write@pin^0,c
  6652  005600  0E00               	movlw	0
  6653  005602  2184               	addwfc	(??_lcd_send_nbits+1)& (0+255),w,b
  6654  005604  6E28               	movwf	(gpio_pin_logic_write@pin+1)^0,c
  6655  005606  C088  F085         	movff	lcd_send_nbits@pin_counter,??_lcd_send_nbits+2
  6656  00560A  C082  F086         	movff	lcd_send_nbits@data_or_command,??_lcd_send_nbits+3
  6657  00560E  2B85               	incf	(??_lcd_send_nbits+2)& (0+255),f,b
  6658  005610  EF0C  F02B         	goto	u9134
  6659  005614                     u9135:
  6660  005614  90D8               	bcf	status,0,c
  6661  005616  3386               	rrcf	(??_lcd_send_nbits+3)& (0+255),f,b
  6662  005618                     u9134:
  6663  005618  2F85               	decfsz	(??_lcd_send_nbits+2)& (0+255),f,b
  6664  00561A  EF0A  F02B         	goto	u9135
  6665  00561E  0100               	movlb	0	; () banked
  6666  005620  5186               	movf	(??_lcd_send_nbits+3)& (0+255),w,b
  6667  005622  0B01               	andlw	1
  6668  005624  6E29               	movwf	gpio_pin_logic_write@pin_logic^0,c
  6669  005626  EC71  F01B         	call	_gpio_pin_logic_write	;wreg free
  6670  00562A                     
  6671                           ;ECUAL/LCD/lcd.c: 383:     }
  6672  00562A  0100               	movlb	0	; () banked
  6673  00562C  2B88               	incf	lcd_send_nbits@pin_counter& (0+255),f,b
  6674  00562E                     l11265:
  6675                           
  6676                           ; BSR set to: 0
  6677  00562E  0E03               	movlw	3
  6678  005630  6588               	cpfsgt	lcd_send_nbits@pin_counter& (0+255),b
  6679  005632  EF1D  F02B         	goto	u9141
  6680  005636  EF1F  F02B         	goto	u9140
  6681  00563A                     u9141:
  6682  00563A  EFF7  F02A         	goto	l11261
  6683  00563E                     u9140:
  6684  00563E                     
  6685                           ; BSR set to: 0
  6686                           ;ECUAL/LCD/lcd.c: 385:     return ret;
  6687  00563E  5187               	movf	lcd_send_nbits@ret& (0+255),w,b
  6688  005640                     
  6689                           ; BSR set to: 0
  6690  005640  0012               	return		;funcret
  6691  005642                     __end_of_lcd_send_nbits:
  6692                           	callstack 0
  6693                           
  6694 ;; *************** function _lcd_send_enable *****************
  6695 ;; Defined at:
  6696 ;;		line 388 in file "ECUAL/LCD/lcd.c"
  6697 ;; Parameters:    Size  Location     Type
  6698 ;;  lcd             2    0[BANK0 ] PTR struct .
  6699 ;;		 -> lcd(6), 
  6700 ;; Auto vars:     Size  Location     Type
  6701 ;;  ret             1    0        unsigned char 
  6702 ;;  gpio_ret        1    2[BANK0 ] unsigned char 
  6703 ;; Return value:  Size  Location     Type
  6704 ;;                  1    wreg      unsigned char 
  6705 ;; Registers used:
  6706 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6707 ;; Tracked objects:
  6708 ;;		On entry : 0/0
  6709 ;;		On exit  : 0/0
  6710 ;;		Unchanged: 0/0
  6711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6712 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6713 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6715 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6716 ;;Total ram usage:        3 bytes
  6717 ;; Hardware stack levels used: 1
  6718 ;; Hardware stack levels required when called: 14
  6719 ;; This function calls:
  6720 ;;		_gpio_pin_logic_write
  6721 ;; This function is called by:
  6722 ;;		_lcd_send_command
  6723 ;;		_lcd_send_char_data
  6724 ;; This function uses a non-reentrant model
  6725 ;;
  6726                           
  6727                           	psect	text28
  6728  005AC6                     __ptext28:
  6729                           	callstack 0
  6730  005AC6                     _lcd_send_enable:
  6731                           	callstack 13
  6732  005AC6                     
  6733                           ;ECUAL/LCD/lcd.c: 391:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  6734  005AC6  0E00               	movlw	0
  6735  005AC8  0100               	movlb	0	; () banked
  6736  005ACA  6F82               	movwf	lcd_send_enable@gpio_ret& (0+255),b
  6737  005ACC                     
  6738                           ; BSR set to: 0
  6739  005ACC  0E01               	movlw	1
  6740  005ACE  2580               	addwf	lcd_send_enable@lcd& (0+255),w,b
  6741  005AD0  6E27               	movwf	gpio_pin_logic_write@pin^0,c
  6742  005AD2  0E00               	movlw	0
  6743  005AD4  2181               	addwfc	(lcd_send_enable@lcd+1)& (0+255),w,b
  6744  005AD6  6E28               	movwf	(gpio_pin_logic_write@pin+1)^0,c
  6745  005AD8  0E01               	movlw	1
  6746  005ADA  6E29               	movwf	gpio_pin_logic_write@pin_logic^0,c
  6747  005ADC  EC71  F01B         	call	_gpio_pin_logic_write	;wreg free
  6748  005AE0                     
  6749                           ;ECUAL/LCD/lcd.c: 393:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  6750  005AE0  0E03               	movlw	3
  6751  005AE2                     u11707:
  6752  005AE2  2EE8               	decfsz	wreg,f,c
  6753  005AE4  D7FE               	bra	u11707
  6754  005AE6  F000               	nop	
  6755  005AE8  0E01               	movlw	1
  6756  005AEA  0100               	movlb	0	; () banked
  6757  005AEC  2580               	addwf	lcd_send_enable@lcd& (0+255),w,b
  6758  005AEE  6E27               	movwf	gpio_pin_logic_write@pin^0,c
  6759  005AF0  0E00               	movlw	0
  6760  005AF2  2181               	addwfc	(lcd_send_enable@lcd+1)& (0+255),w,b
  6761  005AF4  6E28               	movwf	(gpio_pin_logic_write@pin+1)^0,c
  6762  005AF6  0E00               	movlw	0
  6763  005AF8  6E29               	movwf	gpio_pin_logic_write@pin_logic^0,c
  6764  005AFA  EC71  F01B         	call	_gpio_pin_logic_write	;wreg free
  6765  005AFE                     
  6766                           ;ECUAL/LCD/lcd.c: 396:     return ret;
  6767  005AFE  0E00               	movlw	0
  6768  005B00  0012               	return		;funcret
  6769  005B02                     __end_of_lcd_send_enable:
  6770                           	callstack 0
  6771                           
  6772 ;; *************** function _interrupt_INTx_init *****************
  6773 ;; Defined at:
  6774 ;;		line 57 in file "MCAL/INTERRUPT/mcal_external_interrupt.c"
  6775 ;; Parameters:    Size  Location     Type
  6776 ;;  _interrupt      2    8[BANK0 ] PTR struct .
  6777 ;;		 -> MY_INT2(6), MY_INT1(6), MY_INT0(6), 
  6778 ;; Auto vars:     Size  Location     Type
  6779 ;;  ret             1   10[BANK0 ] unsigned char 
  6780 ;; Return value:  Size  Location     Type
  6781 ;;                  1    wreg      unsigned char 
  6782 ;; Registers used:
  6783 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6784 ;; Tracked objects:
  6785 ;;		On entry : 0/0
  6786 ;;		On exit  : 0/0
  6787 ;;		Unchanged: 0/0
  6788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6789 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6790 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6792 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6793 ;;Total ram usage:        3 bytes
  6794 ;; Hardware stack levels used: 1
  6795 ;; Hardware stack levels required when called: 16
  6796 ;; This function calls:
  6797 ;;		_INTx_select_InterruptHandler
  6798 ;;		_interrupt_INTx_clear_flag
  6799 ;;		_interrupt_INTx_disable
  6800 ;;		_interrupt_INTx_edge_init
  6801 ;;		_interrupt_INTx_enable
  6802 ;;		_interrupt_INTx_pin_init
  6803 ;; This function is called by:
  6804 ;;		__Initialize
  6805 ;; This function uses a non-reentrant model
  6806 ;;
  6807                           
  6808                           	psect	text29
  6809  004D90                     __ptext29:
  6810                           	callstack 0
  6811  004D90                     _interrupt_INTx_init:
  6812                           	callstack 13
  6813  004D90                     
  6814                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 60:     if(((void*)0)==_interrupt){
  6815  004D90  0100               	movlb	0	; () banked
  6816  004D92  5188               	movf	interrupt_INTx_init@_interrupt& (0+255),w,b
  6817  004D94  1189               	iorwf	(interrupt_INTx_init@_interrupt+1)& (0+255),w,b
  6818  004D96  A4D8               	btfss	status,2,c
  6819  004D98  EFD0  F026         	goto	u10521
  6820  004D9C  EFD2  F026         	goto	u10520
  6821  004DA0                     u10521:
  6822  004DA0  EFD4  F026         	goto	l12451
  6823  004DA4                     u10520:
  6824  004DA4                     
  6825                           ; BSR set to: 0
  6826                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 62:     }
  6827  004DA4  EF04  F027         	goto	l618
  6828  004DA8                     l12451:
  6829                           
  6830                           ; BSR set to: 0
  6831                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 66:         ret=interrupt_INTx_disable(_inter
      +                          rupt);
  6832  004DA8  C088  F027         	movff	interrupt_INTx_init@_interrupt,interrupt_INTx_disable@_interrupt
  6833  004DAC  C089  F028         	movff	interrupt_INTx_init@_interrupt+1,interrupt_INTx_disable@_interrupt+1
  6834  004DB0  ECF5  F027         	call	_interrupt_INTx_disable	;wreg free
  6835  004DB4  0100               	movlb	0	; () banked
  6836  004DB6  6F8A               	movwf	interrupt_INTx_init@ret& (0+255),b
  6837                           
  6838                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 68:         ret|=interrupt_INTx_clear_flag(_i
      +                          nterrupt);
  6839  004DB8  C088  F027         	movff	interrupt_INTx_init@_interrupt,interrupt_INTx_clear_flag@_interrupt
  6840  004DBC  C089  F028         	movff	interrupt_INTx_init@_interrupt+1,interrupt_INTx_clear_flag@_interrupt+1
  6841  004DC0  EC2E  F028         	call	_interrupt_INTx_clear_flag	;wreg free
  6842  004DC4  0100               	movlb	0	; () banked
  6843  004DC6  138A               	iorwf	interrupt_INTx_init@ret& (0+255),f,b
  6844                           
  6845                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 74:         ret|=interrupt_INTx_edge_init(_in
      +                          terrupt);
  6846  004DC8  C088  F027         	movff	interrupt_INTx_init@_interrupt,interrupt_INTx_edge_init@_interrupt
  6847  004DCC  C089  F028         	movff	interrupt_INTx_init@_interrupt+1,interrupt_INTx_edge_init@_interrupt+1
  6848  004DD0  ECC3  F01C         	call	_interrupt_INTx_edge_init	;wreg free
  6849  004DD4  0100               	movlb	0	; () banked
  6850  004DD6  138A               	iorwf	interrupt_INTx_init@ret& (0+255),f,b
  6851  004DD8                     
  6852                           ; BSR set to: 0
  6853                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 76:         ret|=interrupt_INTx_pin_init(_int
      +                          errupt);
  6854  004DD8  C088  F085         	movff	interrupt_INTx_init@_interrupt,interrupt_INTx_pin_init@_interrupt
  6855  004DDC  C089  F086         	movff	interrupt_INTx_init@_interrupt+1,interrupt_INTx_pin_init@_interrupt+1
  6856  004DE0  EC42  F02E         	call	_interrupt_INTx_pin_init	;wreg free
  6857  004DE4  0100               	movlb	0	; () banked
  6858  004DE6  138A               	iorwf	interrupt_INTx_init@ret& (0+255),f,b
  6859  004DE8                     
  6860                           ; BSR set to: 0
  6861                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 78:         ret|=INTx_select_InterruptHandler
      +                          (_interrupt);
  6862  004DE8  C088  F02A         	movff	interrupt_INTx_init@_interrupt,INTx_select_InterruptHandler@_interrupt
  6863  004DEC  C089  F02B         	movff	interrupt_INTx_init@_interrupt+1,INTx_select_InterruptHandler@_interrupt+1
  6864  004DF0  EC40  F023         	call	_INTx_select_InterruptHandler	;wreg free
  6865  004DF4  0100               	movlb	0	; () banked
  6866  004DF6  138A               	iorwf	interrupt_INTx_init@ret& (0+255),f,b
  6867  004DF8                     
  6868                           ; BSR set to: 0
  6869                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 80:         ret|=interrupt_INTx_enable(_inter
      +                          rupt);
  6870  004DF8  C088  F027         	movff	interrupt_INTx_init@_interrupt,interrupt_INTx_enable@_interrupt
  6871  004DFC  C089  F028         	movff	interrupt_INTx_init@_interrupt+1,interrupt_INTx_enable@_interrupt+1
  6872  004E00  ECCF  F025         	call	_interrupt_INTx_enable	;wreg free
  6873  004E04  0100               	movlb	0	; () banked
  6874  004E06  138A               	iorwf	interrupt_INTx_init@ret& (0+255),f,b
  6875  004E08                     l618:
  6876                           
  6877                           ; BSR set to: 0
  6878  004E08  0012               	return		;funcret
  6879  004E0A                     __end_of_interrupt_INTx_init:
  6880                           	callstack 0
  6881                           
  6882 ;; *************** function _interrupt_INTx_pin_init *****************
  6883 ;; Defined at:
  6884 ;;		line 342 in file "MCAL/INTERRUPT/mcal_external_interrupt.c"
  6885 ;; Parameters:    Size  Location     Type
  6886 ;;  _interrupt      2    5[BANK0 ] PTR struct .
  6887 ;;		 -> MY_INT2(6), MY_INT1(6), MY_INT0(6), 
  6888 ;; Auto vars:     Size  Location     Type
  6889 ;;  ret             1    7[BANK0 ] unsigned char 
  6890 ;; Return value:  Size  Location     Type
  6891 ;;                  1    wreg      unsigned char 
  6892 ;; Registers used:
  6893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6894 ;; Tracked objects:
  6895 ;;		On entry : 0/0
  6896 ;;		On exit  : 0/0
  6897 ;;		Unchanged: 0/0
  6898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6899 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6900 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6902 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6903 ;;Total ram usage:        3 bytes
  6904 ;; Hardware stack levels used: 1
  6905 ;; Hardware stack levels required when called: 15
  6906 ;; This function calls:
  6907 ;;		_gpio_pin_input_init
  6908 ;; This function is called by:
  6909 ;;		_interrupt_INTx_init
  6910 ;; This function uses a non-reentrant model
  6911 ;;
  6912                           
  6913                           	psect	text30
  6914  005C84                     __ptext30:
  6915                           	callstack 0
  6916  005C84                     _interrupt_INTx_pin_init:
  6917                           	callstack 13
  6918  005C84                     
  6919                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 345:     if(((void*)0)==_interrupt){
  6920  005C84  0100               	movlb	0	; () banked
  6921  005C86  5185               	movf	interrupt_INTx_pin_init@_interrupt& (0+255),w,b
  6922  005C88  1186               	iorwf	(interrupt_INTx_pin_init@_interrupt+1)& (0+255),w,b
  6923  005C8A  A4D8               	btfss	status,2,c
  6924  005C8C  EF4A  F02E         	goto	u10331
  6925  005C90  EF4C  F02E         	goto	u10330
  6926  005C94                     u10331:
  6927  005C94  EF50  F02E         	goto	l12157
  6928  005C98                     u10330:
  6929  005C98                     
  6930                           ; BSR set to: 0
  6931                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 346:         ret=(Std_ReturnType)0x00;
  6932  005C98  0E00               	movlw	0
  6933  005C9A  6F87               	movwf	interrupt_INTx_pin_init@ret& (0+255),b
  6934                           
  6935                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 347:     }
  6936  005C9C  EF5A  F02E         	goto	l12159
  6937  005CA0                     l12157:
  6938                           
  6939                           ; BSR set to: 0
  6940                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 349:         ret=gpio_pin_input_init(&(_inter
      +                          rupt->INTx_pin));
  6941  005CA0  0E02               	movlw	2
  6942  005CA2  2585               	addwf	interrupt_INTx_pin_init@_interrupt& (0+255),w,b
  6943  005CA4  6F80               	movwf	gpio_pin_input_init@pin& (0+255),b
  6944  005CA6  0E00               	movlw	0
  6945  005CA8  2186               	addwfc	(interrupt_INTx_pin_init@_interrupt+1)& (0+255),w,b
  6946  005CAA  6F81               	movwf	(gpio_pin_input_init@pin+1)& (0+255),b
  6947  005CAC  EC21  F02B         	call	_gpio_pin_input_init	;wreg free
  6948  005CB0  0100               	movlb	0	; () banked
  6949  005CB2  6F87               	movwf	interrupt_INTx_pin_init@ret& (0+255),b
  6950  005CB4                     l12159:
  6951                           
  6952                           ; BSR set to: 0
  6953                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 352:     return ret;
  6954  005CB4  5187               	movf	interrupt_INTx_pin_init@ret& (0+255),w,b
  6955  005CB6                     
  6956                           ; BSR set to: 0
  6957  005CB6  0012               	return		;funcret
  6958  005CB8                     __end_of_interrupt_INTx_pin_init:
  6959                           	callstack 0
  6960                           
  6961 ;; *************** function _gpio_pin_input_init *****************
  6962 ;; Defined at:
  6963 ;;		line 211 in file "MCAL/GPIO/gpio.c"
  6964 ;; Parameters:    Size  Location     Type
  6965 ;;  pin             2    0[BANK0 ] PTR struct .
  6966 ;;		 -> MY_INT2(6), MY_INT1(6), MY_INT0(6), 
  6967 ;; Auto vars:     Size  Location     Type
  6968 ;;  ret             1    4[BANK0 ] unsigned char 
  6969 ;;  gpio_ret        1    3[BANK0 ] unsigned char 
  6970 ;; Return value:  Size  Location     Type
  6971 ;;                  1    wreg      unsigned char 
  6972 ;; Registers used:
  6973 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6974 ;; Tracked objects:
  6975 ;;		On entry : 0/0
  6976 ;;		On exit  : 0/0
  6977 ;;		Unchanged: 0/0
  6978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6979 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6980 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6981 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6982 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6983 ;;Total ram usage:        5 bytes
  6984 ;; Hardware stack levels used: 1
  6985 ;; Hardware stack levels required when called: 14
  6986 ;; This function calls:
  6987 ;;		_gpio_pin_direction_init
  6988 ;; This function is called by:
  6989 ;;		_interrupt_INTx_pin_init
  6990 ;;		_interrupt_RBx_init
  6991 ;;		_interrupt_RBx_pin_init
  6992 ;; This function uses a non-reentrant model
  6993 ;;
  6994                           
  6995                           	psect	text31
  6996  005642                     __ptext31:
  6997                           	callstack 0
  6998  005642                     _gpio_pin_input_init:
  6999                           	callstack 13
  7000  005642                     
  7001                           ;MCAL/GPIO/gpio.c: 214:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  7002  005642  0E00               	movlw	0
  7003  005644  0100               	movlb	0	; () banked
  7004  005646  6F83               	movwf	gpio_pin_input_init@gpio_ret& (0+255),b
  7005  005648                     
  7006                           ; BSR set to: 0
  7007                           ;MCAL/GPIO/gpio.c: 215:     if(((void*)0)==pin || (pin->pin)>7){
  7008  005648  5180               	movf	gpio_pin_input_init@pin& (0+255),w,b
  7009  00564A  1181               	iorwf	(gpio_pin_input_init@pin+1)& (0+255),w,b
  7010  00564C  B4D8               	btfsc	status,2,c
  7011  00564E  EF2B  F02B         	goto	u9291
  7012  005652  EF2D  F02B         	goto	u9290
  7013  005656                     u9291:
  7014  005656  EF3E  F02B         	goto	l11453
  7015  00565A                     u9290:
  7016  00565A                     
  7017                           ; BSR set to: 0
  7018  00565A  C080  FFD9         	movff	gpio_pin_input_init@pin,fsr2l
  7019  00565E  C081  FFDA         	movff	gpio_pin_input_init@pin+1,fsr2h
  7020  005662  30DF               	rrcf	223,w,c
  7021  005664  32E8               	rrcf	wreg,f,c
  7022  005666  32E8               	rrcf	wreg,f,c
  7023  005668  0B07               	andlw	7
  7024  00566A  6F82               	movwf	??_gpio_pin_input_init& (0+255),b
  7025  00566C  0E07               	movlw	7
  7026  00566E  6582               	cpfsgt	??_gpio_pin_input_init& (0+255),b
  7027  005670  EF3C  F02B         	goto	u9301
  7028  005674  EF3E  F02B         	goto	u9300
  7029  005678                     u9301:
  7030  005678  EF42  F02B         	goto	l11455
  7031  00567C                     u9300:
  7032  00567C                     l11453:
  7033                           
  7034                           ; BSR set to: 0
  7035                           ;MCAL/GPIO/gpio.c: 216:         ret=(Std_ReturnType)0x00;
  7036  00567C  0E00               	movlw	0
  7037  00567E  6F84               	movwf	gpio_pin_input_init@ret& (0+255),b
  7038                           
  7039                           ;MCAL/GPIO/gpio.c: 217:     }
  7040  005680  EF4D  F02B         	goto	l11459
  7041  005684                     l11455:
  7042                           
  7043                           ; BSR set to: 0
  7044  005684  C080  F027         	movff	gpio_pin_input_init@pin,gpio_pin_direction_init@pin
  7045  005688  C081  F028         	movff	gpio_pin_input_init@pin+1,gpio_pin_direction_init@pin+1
  7046  00568C  0E01               	movlw	1
  7047  00568E  6E29               	movwf	gpio_pin_direction_init@pin_direction^0,c
  7048  005690  EC1A  F01C         	call	_gpio_pin_direction_init	;wreg free
  7049  005694                     
  7050                           ;MCAL/GPIO/gpio.c: 220:         ret=(Std_ReturnType)0x01;
  7051  005694  0E01               	movlw	1
  7052  005696  0100               	movlb	0	; () banked
  7053  005698  6F84               	movwf	gpio_pin_input_init@ret& (0+255),b
  7054  00569A                     l11459:
  7055                           
  7056                           ; BSR set to: 0
  7057                           ;MCAL/GPIO/gpio.c: 223:     return ret;
  7058  00569A  5184               	movf	gpio_pin_input_init@ret& (0+255),w,b
  7059  00569C                     
  7060                           ; BSR set to: 0
  7061  00569C  0012               	return		;funcret
  7062  00569E                     __end_of_gpio_pin_input_init:
  7063                           	callstack 0
  7064                           
  7065 ;; *************** function _interrupt_INTx_enable *****************
  7066 ;; Defined at:
  7067 ;;		line 139 in file "MCAL/INTERRUPT/mcal_external_interrupt.c"
  7068 ;; Parameters:    Size  Location     Type
  7069 ;;  _interrupt      2   38[COMRAM] PTR struct .
  7070 ;;		 -> MY_INT2(6), MY_INT1(6), MY_INT0(6), 
  7071 ;; Auto vars:     Size  Location     Type
  7072 ;;  ret             1   42[COMRAM] unsigned char 
  7073 ;; Return value:  Size  Location     Type
  7074 ;;                  1    wreg      unsigned char 
  7075 ;; Registers used:
  7076 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7077 ;; Tracked objects:
  7078 ;;		On entry : 0/0
  7079 ;;		On exit  : 0/0
  7080 ;;		Unchanged: 0/0
  7081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7082 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7083 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7084 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7085 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7086 ;;Total ram usage:        5 bytes
  7087 ;; Hardware stack levels used: 1
  7088 ;; Hardware stack levels required when called: 13
  7089 ;; This function calls:
  7090 ;;		Nothing
  7091 ;; This function is called by:
  7092 ;;		_interrupt_INTx_init
  7093 ;; This function uses a non-reentrant model
  7094 ;;
  7095                           
  7096                           	psect	text32
  7097  004B9E                     __ptext32:
  7098                           	callstack 0
  7099  004B9E                     _interrupt_INTx_enable:
  7100                           	callstack 15
  7101  004B9E                     
  7102                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 142:     if(((void*)0)==_interrupt){
  7103  004B9E  5027               	movf	interrupt_INTx_enable@_interrupt^0,w,c
  7104  004BA0  1028               	iorwf	(interrupt_INTx_enable@_interrupt+1)^0,w,c
  7105  004BA2  A4D8               	btfss	status,2,c
  7106  004BA4  EFD6  F025         	goto	u10351
  7107  004BA8  EFD8  F025         	goto	u10350
  7108  004BAC                     u10351:
  7109  004BAC  EFED  F025         	goto	l12205
  7110  004BB0                     u10350:
  7111  004BB0                     l12193:
  7112                           
  7113                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 143:         ret=(Std_ReturnType)0x00;
  7114  004BB0  0E00               	movlw	0
  7115  004BB2  6E2B               	movwf	interrupt_INTx_enable@ret^0,c
  7116                           
  7117                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 144:     }
  7118  004BB4  EF0C  F026         	goto	l12207
  7119  004BB8                     l641:
  7120                           
  7121                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 152:                 (INTCONbits.GIE=1);
  7122  004BB8  8EF2               	bsf	242,7,c	;volatile
  7123                           
  7124                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 153:                 (INTCONbits.PEIE=1);
  7125  004BBA  8CF2               	bsf	242,6,c	;volatile
  7126                           
  7127                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 156:                 (INTCONbits.INT0E=1);
  7128  004BBC  88F2               	bsf	242,4,c	;volatile
  7129  004BBE                     l12195:
  7130                           
  7131                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 157:                 ret=(Std_ReturnType)0x01
      +                          ;
  7132  004BBE  0E01               	movlw	1
  7133  004BC0  6E2B               	movwf	interrupt_INTx_enable@ret^0,c
  7134                           
  7135                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 158:                 break;
  7136  004BC2  EF0C  F026         	goto	l12207
  7137  004BC6                     l643:
  7138                           
  7139                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 165:                 (INTCONbits.GIE=1);
  7140  004BC6  8EF2               	bsf	242,7,c	;volatile
  7141                           
  7142                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 166:                 (INTCONbits.PEIE=1);
  7143  004BC8  8CF2               	bsf	242,6,c	;volatile
  7144                           
  7145                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 168:                 (INTCON3bits.INT1E=1);
  7146  004BCA  86F0               	bsf	240,3,c	;volatile
  7147  004BCC  EFDF  F025         	goto	l12195
  7148  004BD0                     l644:
  7149                           
  7150                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 177:                 (INTCONbits.GIE=1);
  7151  004BD0  8EF2               	bsf	242,7,c	;volatile
  7152                           
  7153                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 178:                 (INTCONbits.PEIE=1);
  7154  004BD2  8CF2               	bsf	242,6,c	;volatile
  7155                           
  7156                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 180:                 (INTCON3bits.INT2E=1);
  7157  004BD4  88F0               	bsf	240,4,c	;volatile
  7158  004BD6  EFDF  F025         	goto	l12195
  7159  004BDA                     l12205:
  7160  004BDA  EE20 F004          	lfsr	2,4
  7161  004BDE  5027               	movf	interrupt_INTx_enable@_interrupt^0,w,c
  7162  004BE0  26D9               	addwf	fsr2l,f,c
  7163  004BE2  5028               	movf	(interrupt_INTx_enable@_interrupt+1)^0,w,c
  7164  004BE4  22DA               	addwfc	fsr2h,f,c
  7165  004BE6  50DF               	movf	indf2,w,c
  7166  004BE8  6E29               	movwf	??_interrupt_INTx_enable^0,c
  7167  004BEA  6A2A               	clrf	(??_interrupt_INTx_enable+1)^0,c
  7168                           
  7169                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7170                           ; Switch size 1, requested type "simple"
  7171                           ; Number of cases is 1, Range of values is 0 to 0
  7172                           ; switch strategies available:
  7173                           ; Name         Instructions Cycles
  7174                           ; simple_byte            4     3 (average)
  7175                           ;	Chosen strategy is simple_byte
  7176  004BEC  502A               	movf	(??_interrupt_INTx_enable+1)^0,w,c
  7177  004BEE  0A00               	xorlw	0	; case 0
  7178  004BF0  B4D8               	btfsc	status,2,c
  7179  004BF2  EFFD  F025         	goto	l13649
  7180  004BF6  EFD8  F025         	goto	l12193
  7181  004BFA                     l13649:
  7182                           
  7183                           ; Switch size 1, requested type "simple"
  7184                           ; Number of cases is 3, Range of values is 0 to 2
  7185                           ; switch strategies available:
  7186                           ; Name         Instructions Cycles
  7187                           ; simple_byte           10     6 (average)
  7188                           ;	Chosen strategy is simple_byte
  7189  004BFA  5029               	movf	??_interrupt_INTx_enable^0,w,c
  7190  004BFC  0A00               	xorlw	0	; case 0
  7191  004BFE  B4D8               	btfsc	status,2,c
  7192  004C00  EFDC  F025         	goto	l641
  7193  004C04  0A01               	xorlw	1	; case 1
  7194  004C06  B4D8               	btfsc	status,2,c
  7195  004C08  EFE3  F025         	goto	l643
  7196  004C0C  0A03               	xorlw	3	; case 2
  7197  004C0E  B4D8               	btfsc	status,2,c
  7198  004C10  EFE8  F025         	goto	l644
  7199  004C14  EFD8  F025         	goto	l12193
  7200  004C18                     l12207:
  7201                           
  7202                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 189:     return ret;
  7203  004C18  502B               	movf	interrupt_INTx_enable@ret^0,w,c
  7204  004C1A  0012               	return		;funcret
  7205  004C1C                     __end_of_interrupt_INTx_enable:
  7206                           	callstack 0
  7207                           
  7208 ;; *************** function _interrupt_INTx_edge_init *****************
  7209 ;; Defined at:
  7210 ;;		line 304 in file "MCAL/INTERRUPT/mcal_external_interrupt.c"
  7211 ;; Parameters:    Size  Location     Type
  7212 ;;  _interrupt      2   38[COMRAM] PTR struct .
  7213 ;;		 -> MY_INT2(6), MY_INT1(6), MY_INT0(6), 
  7214 ;; Auto vars:     Size  Location     Type
  7215 ;;  ret             1   42[COMRAM] unsigned char 
  7216 ;; Return value:  Size  Location     Type
  7217 ;;                  1    wreg      unsigned char 
  7218 ;; Registers used:
  7219 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7220 ;; Tracked objects:
  7221 ;;		On entry : 0/0
  7222 ;;		On exit  : 0/0
  7223 ;;		Unchanged: 0/0
  7224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7225 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7226 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7227 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7228 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7229 ;;Total ram usage:        5 bytes
  7230 ;; Hardware stack levels used: 1
  7231 ;; Hardware stack levels required when called: 13
  7232 ;; This function calls:
  7233 ;;		Nothing
  7234 ;; This function is called by:
  7235 ;;		_interrupt_INTx_init
  7236 ;; This function uses a non-reentrant model
  7237 ;;
  7238                           
  7239                           	psect	text33
  7240  003986                     __ptext33:
  7241                           	callstack 0
  7242  003986                     _interrupt_INTx_edge_init:
  7243                           	callstack 15
  7244  003986                     
  7245                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 307:     if(((void*)0)==_interrupt){
  7246  003986  5027               	movf	interrupt_INTx_edge_init@_interrupt^0,w,c
  7247  003988  1028               	iorwf	(interrupt_INTx_edge_init@_interrupt+1)^0,w,c
  7248  00398A  A4D8               	btfss	status,2,c
  7249  00398C  EFCA  F01C         	goto	u10261
  7250  003990  EFCC  F01C         	goto	u10260
  7251  003994                     u10261:
  7252  003994  EF38  F01D         	goto	l12141
  7253  003998                     u10260:
  7254  003998                     l12105:
  7255                           
  7256                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 308:         ret=(Std_ReturnType)0x00;
  7257  003998  0E00               	movlw	0
  7258  00399A  6E2B               	movwf	interrupt_INTx_edge_init@ret^0,c
  7259                           
  7260                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 309:     }
  7261  00399C  EF57  F01D         	goto	l12143
  7262  0039A0                     l12107:
  7263                           
  7264                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 313:                 if(RISING_EDGE==_interru
      +                          pt->edge){ (INTCON2bits.INTEDG0=1);}
  7265  0039A0  EE20 F003          	lfsr	2,3
  7266  0039A4  5027               	movf	interrupt_INTx_edge_init@_interrupt^0,w,c
  7267  0039A6  26D9               	addwf	fsr2l,f,c
  7268  0039A8  5028               	movf	(interrupt_INTx_edge_init@_interrupt+1)^0,w,c
  7269  0039AA  22DA               	addwfc	fsr2h,f,c
  7270  0039AC  04DE               	decf	postinc2,w,c
  7271  0039AE  A4D8               	btfss	status,2,c
  7272  0039B0  EFDC  F01C         	goto	u10271
  7273  0039B4  EFDE  F01C         	goto	u10270
  7274  0039B8                     u10271:
  7275  0039B8  EFE1  F01C         	goto	l12111
  7276  0039BC                     u10270:
  7277  0039BC  8CF1               	bsf	241,6,c	;volatile
  7278  0039BE  EFF0  F01C         	goto	l12115
  7279  0039C2                     l12111:
  7280  0039C2  EE20 F003          	lfsr	2,3
  7281  0039C6  5027               	movf	interrupt_INTx_edge_init@_interrupt^0,w,c
  7282  0039C8  26D9               	addwf	fsr2l,f,c
  7283  0039CA  5028               	movf	(interrupt_INTx_edge_init@_interrupt+1)^0,w,c
  7284  0039CC  22DA               	addwfc	fsr2h,f,c
  7285  0039CE  50DF               	movf	indf2,w,c
  7286  0039D0  A4D8               	btfss	status,2,c
  7287  0039D2  EFED  F01C         	goto	u10281
  7288  0039D6  EFEF  F01C         	goto	u10280
  7289  0039DA                     u10281:
  7290  0039DA  EFF0  F01C         	goto	l12115
  7291  0039DE                     u10280:
  7292  0039DE  9CF1               	bcf	241,6,c	;volatile
  7293  0039E0                     l12115:
  7294                           
  7295                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 315:                 ret=(Std_ReturnType)0x01
      +                          ;
  7296  0039E0  0E01               	movlw	1
  7297  0039E2  6E2B               	movwf	interrupt_INTx_edge_init@ret^0,c
  7298                           
  7299                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 316:                 break;
  7300  0039E4  EF57  F01D         	goto	l12143
  7301  0039E8                     l12117:
  7302                           
  7303                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 318:                 if(RISING_EDGE==_interru
      +                          pt->edge){(INTCON2bits.INTEDG1=1);}
  7304  0039E8  EE20 F003          	lfsr	2,3
  7305  0039EC  5027               	movf	interrupt_INTx_edge_init@_interrupt^0,w,c
  7306  0039EE  26D9               	addwf	fsr2l,f,c
  7307  0039F0  5028               	movf	(interrupt_INTx_edge_init@_interrupt+1)^0,w,c
  7308  0039F2  22DA               	addwfc	fsr2h,f,c
  7309  0039F4  04DE               	decf	postinc2,w,c
  7310  0039F6  A4D8               	btfss	status,2,c
  7311  0039F8  EF00  F01D         	goto	u10291
  7312  0039FC  EF02  F01D         	goto	u10290
  7313  003A00                     u10291:
  7314  003A00  EF05  F01D         	goto	l12121
  7315  003A04                     u10290:
  7316  003A04  8AF1               	bsf	241,5,c	;volatile
  7317  003A06  EFF0  F01C         	goto	l12115
  7318  003A0A                     l12121:
  7319  003A0A  EE20 F003          	lfsr	2,3
  7320  003A0E  5027               	movf	interrupt_INTx_edge_init@_interrupt^0,w,c
  7321  003A10  26D9               	addwf	fsr2l,f,c
  7322  003A12  5028               	movf	(interrupt_INTx_edge_init@_interrupt+1)^0,w,c
  7323  003A14  22DA               	addwfc	fsr2h,f,c
  7324  003A16  50DF               	movf	indf2,w,c
  7325  003A18  A4D8               	btfss	status,2,c
  7326  003A1A  EF11  F01D         	goto	u10301
  7327  003A1E  EF13  F01D         	goto	u10300
  7328  003A22                     u10301:
  7329  003A22  EFF0  F01C         	goto	l12115
  7330  003A26                     u10300:
  7331  003A26  9AF1               	bcf	241,5,c	;volatile
  7332  003A28  EFF0  F01C         	goto	l12115
  7333  003A2C                     l12127:
  7334                           
  7335                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 323:                 if(RISING_EDGE==_interru
      +                          pt->edge){(INTCON2bits.INTEDG2=1);}
  7336  003A2C  EE20 F003          	lfsr	2,3
  7337  003A30  5027               	movf	interrupt_INTx_edge_init@_interrupt^0,w,c
  7338  003A32  26D9               	addwf	fsr2l,f,c
  7339  003A34  5028               	movf	(interrupt_INTx_edge_init@_interrupt+1)^0,w,c
  7340  003A36  22DA               	addwfc	fsr2h,f,c
  7341  003A38  04DE               	decf	postinc2,w,c
  7342  003A3A  A4D8               	btfss	status,2,c
  7343  003A3C  EF22  F01D         	goto	u10311
  7344  003A40  EF24  F01D         	goto	u10310
  7345  003A44                     u10311:
  7346  003A44  EF27  F01D         	goto	l12131
  7347  003A48                     u10310:
  7348  003A48  88F1               	bsf	241,4,c	;volatile
  7349  003A4A  EFF0  F01C         	goto	l12115
  7350  003A4E                     l12131:
  7351  003A4E  EE20 F003          	lfsr	2,3
  7352  003A52  5027               	movf	interrupt_INTx_edge_init@_interrupt^0,w,c
  7353  003A54  26D9               	addwf	fsr2l,f,c
  7354  003A56  5028               	movf	(interrupt_INTx_edge_init@_interrupt+1)^0,w,c
  7355  003A58  22DA               	addwfc	fsr2h,f,c
  7356  003A5A  50DF               	movf	indf2,w,c
  7357  003A5C  A4D8               	btfss	status,2,c
  7358  003A5E  EF33  F01D         	goto	u10321
  7359  003A62  EF35  F01D         	goto	u10320
  7360  003A66                     u10321:
  7361  003A66  EFF0  F01C         	goto	l12115
  7362  003A6A                     u10320:
  7363  003A6A  98F1               	bcf	241,4,c	;volatile
  7364  003A6C  EFF0  F01C         	goto	l12115
  7365  003A70                     l12141:
  7366  003A70  EE20 F004          	lfsr	2,4
  7367  003A74  5027               	movf	interrupt_INTx_edge_init@_interrupt^0,w,c
  7368  003A76  26D9               	addwf	fsr2l,f,c
  7369  003A78  5028               	movf	(interrupt_INTx_edge_init@_interrupt+1)^0,w,c
  7370  003A7A  22DA               	addwfc	fsr2h,f,c
  7371  003A7C  50DF               	movf	indf2,w,c
  7372  003A7E  6E29               	movwf	??_interrupt_INTx_edge_init^0,c
  7373  003A80  6A2A               	clrf	(??_interrupt_INTx_edge_init+1)^0,c
  7374                           
  7375                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7376                           ; Switch size 1, requested type "simple"
  7377                           ; Number of cases is 1, Range of values is 0 to 0
  7378                           ; switch strategies available:
  7379                           ; Name         Instructions Cycles
  7380                           ; simple_byte            4     3 (average)
  7381                           ;	Chosen strategy is simple_byte
  7382  003A82  502A               	movf	(??_interrupt_INTx_edge_init+1)^0,w,c
  7383  003A84  0A00               	xorlw	0	; case 0
  7384  003A86  B4D8               	btfsc	status,2,c
  7385  003A88  EF48  F01D         	goto	l13651
  7386  003A8C  EFCC  F01C         	goto	l12105
  7387  003A90                     l13651:
  7388                           
  7389                           ; Switch size 1, requested type "simple"
  7390                           ; Number of cases is 3, Range of values is 0 to 2
  7391                           ; switch strategies available:
  7392                           ; Name         Instructions Cycles
  7393                           ; simple_byte           10     6 (average)
  7394                           ;	Chosen strategy is simple_byte
  7395  003A90  5029               	movf	??_interrupt_INTx_edge_init^0,w,c
  7396  003A92  0A00               	xorlw	0	; case 0
  7397  003A94  B4D8               	btfsc	status,2,c
  7398  003A96  EFD0  F01C         	goto	l12107
  7399  003A9A  0A01               	xorlw	1	; case 1
  7400  003A9C  B4D8               	btfsc	status,2,c
  7401  003A9E  EFF4  F01C         	goto	l12117
  7402  003AA2  0A03               	xorlw	3	; case 2
  7403  003AA4  B4D8               	btfsc	status,2,c
  7404  003AA6  EF16  F01D         	goto	l12127
  7405  003AAA  EFCC  F01C         	goto	l12105
  7406  003AAE                     l12143:
  7407                           
  7408                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 333:     return ret;
  7409  003AAE  502B               	movf	interrupt_INTx_edge_init@ret^0,w,c
  7410  003AB0  0012               	return		;funcret
  7411  003AB2                     __end_of_interrupt_INTx_edge_init:
  7412                           	callstack 0
  7413                           
  7414 ;; *************** function _interrupt_INTx_disable *****************
  7415 ;; Defined at:
  7416 ;;		line 198 in file "MCAL/INTERRUPT/mcal_external_interrupt.c"
  7417 ;; Parameters:    Size  Location     Type
  7418 ;;  _interrupt      2   38[COMRAM] PTR struct .
  7419 ;;		 -> MY_INT2(6), MY_INT1(6), MY_INT0(6), 
  7420 ;; Auto vars:     Size  Location     Type
  7421 ;;  ret             1   42[COMRAM] unsigned char 
  7422 ;; Return value:  Size  Location     Type
  7423 ;;                  1    wreg      unsigned char 
  7424 ;; Registers used:
  7425 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7426 ;; Tracked objects:
  7427 ;;		On entry : 0/0
  7428 ;;		On exit  : 0/0
  7429 ;;		Unchanged: 0/0
  7430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7431 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7432 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7433 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7434 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7435 ;;Total ram usage:        5 bytes
  7436 ;; Hardware stack levels used: 1
  7437 ;; Hardware stack levels required when called: 13
  7438 ;; This function calls:
  7439 ;;		Nothing
  7440 ;; This function is called by:
  7441 ;;		_interrupt_INTx_init
  7442 ;;		_interrupt_INTx_deInit
  7443 ;; This function uses a non-reentrant model
  7444 ;;
  7445                           
  7446                           	psect	text34
  7447  004FEA                     __ptext34:
  7448                           	callstack 0
  7449  004FEA                     _interrupt_INTx_disable:
  7450                           	callstack 15
  7451  004FEA                     
  7452                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 201:     if(((void*)0)==_interrupt){
  7453  004FEA  5027               	movf	interrupt_INTx_disable@_interrupt^0,w,c
  7454  004FEC  1028               	iorwf	(interrupt_INTx_disable@_interrupt+1)^0,w,c
  7455  004FEE  A4D8               	btfss	status,2,c
  7456  004FF0  EFFC  F027         	goto	u10241
  7457  004FF4  EFFE  F027         	goto	u10240
  7458  004FF8                     u10241:
  7459  004FF8  EF0D  F028         	goto	l12065
  7460  004FFC                     u10240:
  7461  004FFC                     l12053:
  7462                           
  7463                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 202:         ret=(Std_ReturnType)0x00;
  7464  004FFC  0E00               	movlw	0
  7465  004FFE  6E2B               	movwf	interrupt_INTx_disable@ret^0,c
  7466                           
  7467                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 203:     }
  7468  005000  EF2C  F028         	goto	l12067
  7469  005004                     l652:
  7470                           
  7471                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 207:                 (INTCONbits.INT0E=0);
  7472  005004  98F2               	bcf	242,4,c	;volatile
  7473  005006                     l12055:
  7474                           
  7475                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 208:                 ret=(Std_ReturnType)0x01
      +                          ;
  7476  005006  0E01               	movlw	1
  7477  005008  6E2B               	movwf	interrupt_INTx_disable@ret^0,c
  7478                           
  7479                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 209:                 break;
  7480  00500A  EF2C  F028         	goto	l12067
  7481  00500E                     l654:
  7482                           
  7483                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 211:                 (INTCON3bits.INT1E=0);
  7484  00500E  96F0               	bcf	240,3,c	;volatile
  7485  005010  EF03  F028         	goto	l12055
  7486  005014                     l655:
  7487                           
  7488                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 215:                 (INTCON3bits.INT2E=0);
  7489  005014  98F0               	bcf	240,4,c	;volatile
  7490  005016  EF03  F028         	goto	l12055
  7491  00501A                     l12065:
  7492  00501A  EE20 F004          	lfsr	2,4
  7493  00501E  5027               	movf	interrupt_INTx_disable@_interrupt^0,w,c
  7494  005020  26D9               	addwf	fsr2l,f,c
  7495  005022  5028               	movf	(interrupt_INTx_disable@_interrupt+1)^0,w,c
  7496  005024  22DA               	addwfc	fsr2h,f,c
  7497  005026  50DF               	movf	indf2,w,c
  7498  005028  6E29               	movwf	??_interrupt_INTx_disable^0,c
  7499  00502A  6A2A               	clrf	(??_interrupt_INTx_disable+1)^0,c
  7500                           
  7501                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7502                           ; Switch size 1, requested type "simple"
  7503                           ; Number of cases is 1, Range of values is 0 to 0
  7504                           ; switch strategies available:
  7505                           ; Name         Instructions Cycles
  7506                           ; simple_byte            4     3 (average)
  7507                           ;	Chosen strategy is simple_byte
  7508  00502C  502A               	movf	(??_interrupt_INTx_disable+1)^0,w,c
  7509  00502E  0A00               	xorlw	0	; case 0
  7510  005030  B4D8               	btfsc	status,2,c
  7511  005032  EF1D  F028         	goto	l13653
  7512  005036  EFFE  F027         	goto	l12053
  7513  00503A                     l13653:
  7514                           
  7515                           ; Switch size 1, requested type "simple"
  7516                           ; Number of cases is 3, Range of values is 0 to 2
  7517                           ; switch strategies available:
  7518                           ; Name         Instructions Cycles
  7519                           ; simple_byte           10     6 (average)
  7520                           ;	Chosen strategy is simple_byte
  7521  00503A  5029               	movf	??_interrupt_INTx_disable^0,w,c
  7522  00503C  0A00               	xorlw	0	; case 0
  7523  00503E  B4D8               	btfsc	status,2,c
  7524  005040  EF02  F028         	goto	l652
  7525  005044  0A01               	xorlw	1	; case 1
  7526  005046  B4D8               	btfsc	status,2,c
  7527  005048  EF07  F028         	goto	l654
  7528  00504C  0A03               	xorlw	3	; case 2
  7529  00504E  B4D8               	btfsc	status,2,c
  7530  005050  EF0A  F028         	goto	l655
  7531  005054  EFFE  F027         	goto	l12053
  7532  005058                     l12067:
  7533                           
  7534                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 224:     return ret;
  7535  005058  502B               	movf	interrupt_INTx_disable@ret^0,w,c
  7536  00505A  0012               	return		;funcret
  7537  00505C                     __end_of_interrupt_INTx_disable:
  7538                           	callstack 0
  7539                           
  7540 ;; *************** function _interrupt_INTx_clear_flag *****************
  7541 ;; Defined at:
  7542 ;;		line 233 in file "MCAL/INTERRUPT/mcal_external_interrupt.c"
  7543 ;; Parameters:    Size  Location     Type
  7544 ;;  _interrupt      2   38[COMRAM] PTR struct .
  7545 ;;		 -> MY_INT2(6), MY_INT1(6), MY_INT0(6), 
  7546 ;; Auto vars:     Size  Location     Type
  7547 ;;  ret             1   42[COMRAM] unsigned char 
  7548 ;; Return value:  Size  Location     Type
  7549 ;;                  1    wreg      unsigned char 
  7550 ;; Registers used:
  7551 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7552 ;; Tracked objects:
  7553 ;;		On entry : 0/0
  7554 ;;		On exit  : 0/0
  7555 ;;		Unchanged: 0/0
  7556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7557 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7558 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7559 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7560 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7561 ;;Total ram usage:        5 bytes
  7562 ;; Hardware stack levels used: 1
  7563 ;; Hardware stack levels required when called: 13
  7564 ;; This function calls:
  7565 ;;		Nothing
  7566 ;; This function is called by:
  7567 ;;		_interrupt_INTx_init
  7568 ;; This function uses a non-reentrant model
  7569 ;;
  7570                           
  7571                           	psect	text35
  7572  00505C                     __ptext35:
  7573                           	callstack 0
  7574  00505C                     _interrupt_INTx_clear_flag:
  7575                           	callstack 15
  7576  00505C                     
  7577                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 236:     if(((void*)0)==_interrupt){
  7578  00505C  5027               	movf	interrupt_INTx_clear_flag@_interrupt^0,w,c
  7579  00505E  1028               	iorwf	(interrupt_INTx_clear_flag@_interrupt+1)^0,w,c
  7580  005060  A4D8               	btfss	status,2,c
  7581  005062  EF35  F028         	goto	u10251
  7582  005066  EF37  F028         	goto	u10250
  7583  00506A                     u10251:
  7584  00506A  EF46  F028         	goto	l12091
  7585  00506E                     u10250:
  7586  00506E                     l12079:
  7587                           
  7588                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 237:         ret=(Std_ReturnType)0x00;
  7589  00506E  0E00               	movlw	0
  7590  005070  6E2B               	movwf	interrupt_INTx_clear_flag@ret^0,c
  7591                           
  7592                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 238:     }
  7593  005072  EF65  F028         	goto	l12093
  7594  005076                     l663:
  7595                           
  7596                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 242:                 (INTCONbits.INT0F=0);
  7597  005076  92F2               	bcf	242,1,c	;volatile
  7598  005078                     l12081:
  7599                           
  7600                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 243:                 ret=(Std_ReturnType)0x01
      +                          ;
  7601  005078  0E01               	movlw	1
  7602  00507A  6E2B               	movwf	interrupt_INTx_clear_flag@ret^0,c
  7603                           
  7604                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 244:                 break;
  7605  00507C  EF65  F028         	goto	l12093
  7606  005080                     l665:
  7607                           
  7608                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 246:                 (INTCONbits.INT0F=0);
  7609  005080  92F2               	bcf	242,1,c	;volatile
  7610  005082  EF3C  F028         	goto	l12081
  7611  005086                     l666:
  7612                           
  7613                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 250:                 (INTCONbits.INT0F=0);
  7614  005086  92F2               	bcf	242,1,c	;volatile
  7615  005088  EF3C  F028         	goto	l12081
  7616  00508C                     l12091:
  7617  00508C  EE20 F004          	lfsr	2,4
  7618  005090  5027               	movf	interrupt_INTx_clear_flag@_interrupt^0,w,c
  7619  005092  26D9               	addwf	fsr2l,f,c
  7620  005094  5028               	movf	(interrupt_INTx_clear_flag@_interrupt+1)^0,w,c
  7621  005096  22DA               	addwfc	fsr2h,f,c
  7622  005098  50DF               	movf	indf2,w,c
  7623  00509A  6E29               	movwf	??_interrupt_INTx_clear_flag^0,c
  7624  00509C  6A2A               	clrf	(??_interrupt_INTx_clear_flag+1)^0,c
  7625                           
  7626                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7627                           ; Switch size 1, requested type "simple"
  7628                           ; Number of cases is 1, Range of values is 0 to 0
  7629                           ; switch strategies available:
  7630                           ; Name         Instructions Cycles
  7631                           ; simple_byte            4     3 (average)
  7632                           ;	Chosen strategy is simple_byte
  7633  00509E  502A               	movf	(??_interrupt_INTx_clear_flag+1)^0,w,c
  7634  0050A0  0A00               	xorlw	0	; case 0
  7635  0050A2  B4D8               	btfsc	status,2,c
  7636  0050A4  EF56  F028         	goto	l13655
  7637  0050A8  EF37  F028         	goto	l12079
  7638  0050AC                     l13655:
  7639                           
  7640                           ; Switch size 1, requested type "simple"
  7641                           ; Number of cases is 3, Range of values is 0 to 2
  7642                           ; switch strategies available:
  7643                           ; Name         Instructions Cycles
  7644                           ; simple_byte           10     6 (average)
  7645                           ;	Chosen strategy is simple_byte
  7646  0050AC  5029               	movf	??_interrupt_INTx_clear_flag^0,w,c
  7647  0050AE  0A00               	xorlw	0	; case 0
  7648  0050B0  B4D8               	btfsc	status,2,c
  7649  0050B2  EF3B  F028         	goto	l663
  7650  0050B6  0A01               	xorlw	1	; case 1
  7651  0050B8  B4D8               	btfsc	status,2,c
  7652  0050BA  EF40  F028         	goto	l665
  7653  0050BE  0A03               	xorlw	3	; case 2
  7654  0050C0  B4D8               	btfsc	status,2,c
  7655  0050C2  EF43  F028         	goto	l666
  7656  0050C6  EF37  F028         	goto	l12079
  7657  0050CA                     l12093:
  7658                           
  7659                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 259:     return ret;
  7660  0050CA  502B               	movf	interrupt_INTx_clear_flag@ret^0,w,c
  7661  0050CC  0012               	return		;funcret
  7662  0050CE                     __end_of_interrupt_INTx_clear_flag:
  7663                           	callstack 0
  7664                           
  7665 ;; *************** function _INTx_select_InterruptHandler *****************
  7666 ;; Defined at:
  7667 ;;		line 361 in file "MCAL/INTERRUPT/mcal_external_interrupt.c"
  7668 ;; Parameters:    Size  Location     Type
  7669 ;;  _interrupt      2   41[COMRAM] PTR struct .
  7670 ;;		 -> MY_INT2(6), MY_INT1(6), MY_INT0(6), 
  7671 ;; Auto vars:     Size  Location     Type
  7672 ;;  ret             1   45[COMRAM] unsigned char 
  7673 ;; Return value:  Size  Location     Type
  7674 ;;                  1    wreg      unsigned char 
  7675 ;; Registers used:
  7676 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7677 ;; Tracked objects:
  7678 ;;		On entry : 0/0
  7679 ;;		On exit  : 0/0
  7680 ;;		Unchanged: 0/0
  7681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7682 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7683 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7684 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7685 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7686 ;;Total ram usage:        5 bytes
  7687 ;; Hardware stack levels used: 1
  7688 ;; Hardware stack levels required when called: 14
  7689 ;; This function calls:
  7690 ;;		_INT0_set_InterruptHandler
  7691 ;;		_INT1_set_InterruptHandler
  7692 ;;		_INT2_set_InterruptHandler
  7693 ;; This function is called by:
  7694 ;;		_interrupt_INTx_init
  7695 ;; This function uses a non-reentrant model
  7696 ;;
  7697                           
  7698                           	psect	text36
  7699  004680                     __ptext36:
  7700                           	callstack 0
  7701  004680                     _INTx_select_InterruptHandler:
  7702                           	callstack 14
  7703  004680                     
  7704                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 364:     if(((void*)0)==_interrupt){
  7705  004680  502A               	movf	INTx_select_InterruptHandler@_interrupt^0,w,c
  7706  004682  102B               	iorwf	(INTx_select_InterruptHandler@_interrupt+1)^0,w,c
  7707  004684  A4D8               	btfss	status,2,c
  7708  004686  EF47  F023         	goto	u10341
  7709  00468A  EF49  F023         	goto	u10340
  7710  00468E                     u10341:
  7711  00468E  EF74  F023         	goto	l12179
  7712  004692                     u10340:
  7713  004692                     l12167:
  7714                           
  7715                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 365:         ret=(Std_ReturnType)0x00;
  7716  004692  0E00               	movlw	0
  7717  004694  6E2E               	movwf	INTx_select_InterruptHandler@ret^0,c
  7718                           
  7719                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 366:     }
  7720  004696  EF93  F023         	goto	l12181
  7721  00469A                     l12169:
  7722                           
  7723                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 370:                 ret=INT0_set_InterruptHa
      +                          ndler(_interrupt->EXT_InterruptHandler);
  7724  00469A  C02A  FFD9         	movff	INTx_select_InterruptHandler@_interrupt,fsr2l
  7725  00469E  C02B  FFDA         	movff	INTx_select_InterruptHandler@_interrupt+1,fsr2h
  7726  0046A2  CFDE F027          	movff	postinc2,INT0_set_InterruptHandler@InterruptHandler
  7727  0046A6  CFDD F028          	movff	postdec2,INT0_set_InterruptHandler@InterruptHandler+1
  7728  0046AA  ECAD  F02F         	call	_INT0_set_InterruptHandler	;wreg free
  7729  0046AE  6E2E               	movwf	INTx_select_InterruptHandler@ret^0,c
  7730                           
  7731                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 371:                 break;
  7732  0046B0  EF93  F023         	goto	l12181
  7733  0046B4                     l12171:
  7734                           
  7735                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 373:                 ret=INT1_set_InterruptHa
      +                          ndler(_interrupt->EXT_InterruptHandler);
  7736  0046B4  C02A  FFD9         	movff	INTx_select_InterruptHandler@_interrupt,fsr2l
  7737  0046B8  C02B  FFDA         	movff	INTx_select_InterruptHandler@_interrupt+1,fsr2h
  7738  0046BC  CFDE F027          	movff	postinc2,INT1_set_InterruptHandler@InterruptHandler
  7739  0046C0  CFDD F028          	movff	postdec2,INT1_set_InterruptHandler@InterruptHandler+1
  7740  0046C4  EC98  F02F         	call	_INT1_set_InterruptHandler	;wreg free
  7741  0046C8  6E2E               	movwf	INTx_select_InterruptHandler@ret^0,c
  7742                           
  7743                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 374:                 break;
  7744  0046CA  EF93  F023         	goto	l12181
  7745  0046CE                     l12173:
  7746                           
  7747                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 376:                 ret=INT2_set_InterruptHa
      +                          ndler(_interrupt->EXT_InterruptHandler);
  7748  0046CE  C02A  FFD9         	movff	INTx_select_InterruptHandler@_interrupt,fsr2l
  7749  0046D2  C02B  FFDA         	movff	INTx_select_InterruptHandler@_interrupt+1,fsr2h
  7750  0046D6  CFDE F027          	movff	postinc2,INT2_set_InterruptHandler@InterruptHandler
  7751  0046DA  CFDD F028          	movff	postdec2,INT2_set_InterruptHandler@InterruptHandler+1
  7752  0046DE  EC83  F02F         	call	_INT2_set_InterruptHandler	;wreg free
  7753  0046E2  6E2E               	movwf	INTx_select_InterruptHandler@ret^0,c
  7754                           
  7755                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 377:                 break;
  7756  0046E4  EF93  F023         	goto	l12181
  7757  0046E8                     l12179:
  7758  0046E8  EE20 F004          	lfsr	2,4
  7759  0046EC  502A               	movf	INTx_select_InterruptHandler@_interrupt^0,w,c
  7760  0046EE  26D9               	addwf	fsr2l,f,c
  7761  0046F0  502B               	movf	(INTx_select_InterruptHandler@_interrupt+1)^0,w,c
  7762  0046F2  22DA               	addwfc	fsr2h,f,c
  7763  0046F4  50DF               	movf	indf2,w,c
  7764  0046F6  6E2C               	movwf	??_INTx_select_InterruptHandler^0,c
  7765  0046F8  6A2D               	clrf	(??_INTx_select_InterruptHandler+1)^0,c
  7766                           
  7767                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7768                           ; Switch size 1, requested type "simple"
  7769                           ; Number of cases is 1, Range of values is 0 to 0
  7770                           ; switch strategies available:
  7771                           ; Name         Instructions Cycles
  7772                           ; simple_byte            4     3 (average)
  7773                           ;	Chosen strategy is simple_byte
  7774  0046FA  502D               	movf	(??_INTx_select_InterruptHandler+1)^0,w,c
  7775  0046FC  0A00               	xorlw	0	; case 0
  7776  0046FE  B4D8               	btfsc	status,2,c
  7777  004700  EF84  F023         	goto	l13657
  7778  004704  EF49  F023         	goto	l12167
  7779  004708                     l13657:
  7780                           
  7781                           ; Switch size 1, requested type "simple"
  7782                           ; Number of cases is 3, Range of values is 0 to 2
  7783                           ; switch strategies available:
  7784                           ; Name         Instructions Cycles
  7785                           ; simple_byte           10     6 (average)
  7786                           ;	Chosen strategy is simple_byte
  7787  004708  502C               	movf	??_INTx_select_InterruptHandler^0,w,c
  7788  00470A  0A00               	xorlw	0	; case 0
  7789  00470C  B4D8               	btfsc	status,2,c
  7790  00470E  EF4D  F023         	goto	l12169
  7791  004712  0A01               	xorlw	1	; case 1
  7792  004714  B4D8               	btfsc	status,2,c
  7793  004716  EF5A  F023         	goto	l12171
  7794  00471A  0A03               	xorlw	3	; case 2
  7795  00471C  B4D8               	btfsc	status,2,c
  7796  00471E  EF67  F023         	goto	l12173
  7797  004722  EF49  F023         	goto	l12167
  7798  004726                     l12181:
  7799                           
  7800                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 384:     return ret;
  7801  004726  502E               	movf	INTx_select_InterruptHandler@ret^0,w,c
  7802  004728  0012               	return		;funcret
  7803  00472A                     __end_of_INTx_select_InterruptHandler:
  7804                           	callstack 0
  7805                           
  7806 ;; *************** function _INT2_set_InterruptHandler *****************
  7807 ;; Defined at:
  7808 ;;		line 433 in file "MCAL/INTERRUPT/mcal_external_interrupt.c"
  7809 ;; Parameters:    Size  Location     Type
  7810 ;;  InterruptHan    2   38[COMRAM] PTR FTN()void 
  7811 ;;		 -> APP_INT2_ISR(1), APP_INT1_ISR(1), APP_INT0_ISR(1), 
  7812 ;; Auto vars:     Size  Location     Type
  7813 ;;  ret             1   40[COMRAM] unsigned char 
  7814 ;; Return value:  Size  Location     Type
  7815 ;;                  1    wreg      unsigned char 
  7816 ;; Registers used:
  7817 ;;		wreg, status,2, status,0
  7818 ;; Tracked objects:
  7819 ;;		On entry : 0/0
  7820 ;;		On exit  : 0/0
  7821 ;;		Unchanged: 0/0
  7822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7823 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7824 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7826 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7827 ;;Total ram usage:        3 bytes
  7828 ;; Hardware stack levels used: 1
  7829 ;; Hardware stack levels required when called: 13
  7830 ;; This function calls:
  7831 ;;		Nothing
  7832 ;; This function is called by:
  7833 ;;		_INTx_select_InterruptHandler
  7834 ;; This function uses a non-reentrant model
  7835 ;;
  7836                           
  7837                           	psect	text37
  7838  005F06                     __ptext37:
  7839                           	callstack 0
  7840  005F06                     _INT2_set_InterruptHandler:
  7841                           	callstack 14
  7842  005F06                     
  7843                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 436:     if(((void*)0)==InterruptHandler){
  7844  005F06  5027               	movf	INT2_set_InterruptHandler@InterruptHandler^0,w,c
  7845  005F08  1028               	iorwf	(INT2_set_InterruptHandler@InterruptHandler+1)^0,w,c
  7846  005F0A  A4D8               	btfss	status,2,c
  7847  005F0C  EF8A  F02F         	goto	u9331
  7848  005F10  EF8C  F02F         	goto	u9330
  7849  005F14                     u9331:
  7850  005F14  EF90  F02F         	goto	l11497
  7851  005F18                     u9330:
  7852  005F18                     
  7853                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 437:         ret=(Std_ReturnType)0x00;
  7854  005F18  0E00               	movlw	0
  7855  005F1A  6E29               	movwf	INT2_set_InterruptHandler@ret^0,c
  7856                           
  7857                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 438:     }
  7858  005F1C  EF96  F02F         	goto	l11501
  7859  005F20                     l11497:
  7860                           
  7861                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 440:         INT2_InterruptHandler=InterruptH
      +                          andler;
  7862  005F20  C027  F0F8         	movff	INT2_set_InterruptHandler@InterruptHandler,_INT2_InterruptHandler
  7863  005F24  C028  F0F9         	movff	INT2_set_InterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  7864  005F28                     
  7865                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 441:         ret=(Std_ReturnType)0x01;
  7866  005F28  0E01               	movlw	1
  7867  005F2A  6E29               	movwf	INT2_set_InterruptHandler@ret^0,c
  7868  005F2C                     l11501:
  7869                           
  7870                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 444:     return ret;
  7871  005F2C  5029               	movf	INT2_set_InterruptHandler@ret^0,w,c
  7872  005F2E  0012               	return		;funcret
  7873  005F30                     __end_of_INT2_set_InterruptHandler:
  7874                           	callstack 0
  7875                           
  7876 ;; *************** function _INT1_set_InterruptHandler *****************
  7877 ;; Defined at:
  7878 ;;		line 413 in file "MCAL/INTERRUPT/mcal_external_interrupt.c"
  7879 ;; Parameters:    Size  Location     Type
  7880 ;;  InterruptHan    2   38[COMRAM] PTR FTN()void 
  7881 ;;		 -> APP_INT2_ISR(1), APP_INT1_ISR(1), APP_INT0_ISR(1), 
  7882 ;; Auto vars:     Size  Location     Type
  7883 ;;  ret             1   40[COMRAM] unsigned char 
  7884 ;; Return value:  Size  Location     Type
  7885 ;;                  1    wreg      unsigned char 
  7886 ;; Registers used:
  7887 ;;		wreg, status,2, status,0
  7888 ;; Tracked objects:
  7889 ;;		On entry : 0/0
  7890 ;;		On exit  : 0/0
  7891 ;;		Unchanged: 0/0
  7892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7893 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7894 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7896 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7897 ;;Total ram usage:        3 bytes
  7898 ;; Hardware stack levels used: 1
  7899 ;; Hardware stack levels required when called: 13
  7900 ;; This function calls:
  7901 ;;		Nothing
  7902 ;; This function is called by:
  7903 ;;		_INTx_select_InterruptHandler
  7904 ;; This function uses a non-reentrant model
  7905 ;;
  7906                           
  7907                           	psect	text38
  7908  005F30                     __ptext38:
  7909                           	callstack 0
  7910  005F30                     _INT1_set_InterruptHandler:
  7911                           	callstack 14
  7912  005F30                     
  7913                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 416:     if(((void*)0)==InterruptHandler){
  7914  005F30  5027               	movf	INT1_set_InterruptHandler@InterruptHandler^0,w,c
  7915  005F32  1028               	iorwf	(INT1_set_InterruptHandler@InterruptHandler+1)^0,w,c
  7916  005F34  A4D8               	btfss	status,2,c
  7917  005F36  EF9F  F02F         	goto	u9321
  7918  005F3A  EFA1  F02F         	goto	u9320
  7919  005F3E                     u9321:
  7920  005F3E  EFA5  F02F         	goto	l11483
  7921  005F42                     u9320:
  7922  005F42                     
  7923                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 417:         ret=(Std_ReturnType)0x00;
  7924  005F42  0E00               	movlw	0
  7925  005F44  6E29               	movwf	INT1_set_InterruptHandler@ret^0,c
  7926                           
  7927                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 418:     }
  7928  005F46  EFAB  F02F         	goto	l11487
  7929  005F4A                     l11483:
  7930                           
  7931                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 420:         INT1_InterruptHandler=InterruptH
      +                          andler;
  7932  005F4A  C027  F035         	movff	INT1_set_InterruptHandler@InterruptHandler,_INT1_InterruptHandler
  7933  005F4E  C028  F036         	movff	INT1_set_InterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  7934  005F52                     
  7935                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 421:         ret=(Std_ReturnType)0x01;
  7936  005F52  0E01               	movlw	1
  7937  005F54  6E29               	movwf	INT1_set_InterruptHandler@ret^0,c
  7938  005F56                     l11487:
  7939                           
  7940                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 424:     return ret;
  7941  005F56  5029               	movf	INT1_set_InterruptHandler@ret^0,w,c
  7942  005F58  0012               	return		;funcret
  7943  005F5A                     __end_of_INT1_set_InterruptHandler:
  7944                           	callstack 0
  7945                           
  7946 ;; *************** function _INT0_set_InterruptHandler *****************
  7947 ;; Defined at:
  7948 ;;		line 393 in file "MCAL/INTERRUPT/mcal_external_interrupt.c"
  7949 ;; Parameters:    Size  Location     Type
  7950 ;;  InterruptHan    2   38[COMRAM] PTR FTN()void 
  7951 ;;		 -> APP_INT2_ISR(1), APP_INT1_ISR(1), APP_INT0_ISR(1), 
  7952 ;; Auto vars:     Size  Location     Type
  7953 ;;  ret             1   40[COMRAM] unsigned char 
  7954 ;; Return value:  Size  Location     Type
  7955 ;;                  1    wreg      unsigned char 
  7956 ;; Registers used:
  7957 ;;		wreg, status,2, status,0
  7958 ;; Tracked objects:
  7959 ;;		On entry : 0/0
  7960 ;;		On exit  : 0/0
  7961 ;;		Unchanged: 0/0
  7962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7963 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7964 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7966 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7967 ;;Total ram usage:        3 bytes
  7968 ;; Hardware stack levels used: 1
  7969 ;; Hardware stack levels required when called: 13
  7970 ;; This function calls:
  7971 ;;		Nothing
  7972 ;; This function is called by:
  7973 ;;		_INTx_select_InterruptHandler
  7974 ;; This function uses a non-reentrant model
  7975 ;;
  7976                           
  7977                           	psect	text39
  7978  005F5A                     __ptext39:
  7979                           	callstack 0
  7980  005F5A                     _INT0_set_InterruptHandler:
  7981                           	callstack 14
  7982  005F5A                     
  7983                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 396:     if(((void*)0)==InterruptHandler){
  7984  005F5A  5027               	movf	INT0_set_InterruptHandler@InterruptHandler^0,w,c
  7985  005F5C  1028               	iorwf	(INT0_set_InterruptHandler@InterruptHandler+1)^0,w,c
  7986  005F5E  A4D8               	btfss	status,2,c
  7987  005F60  EFB4  F02F         	goto	u9311
  7988  005F64  EFB6  F02F         	goto	u9310
  7989  005F68                     u9311:
  7990  005F68  EFBA  F02F         	goto	l11469
  7991  005F6C                     u9310:
  7992  005F6C                     
  7993                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 397:         ret=(Std_ReturnType)0x00;
  7994  005F6C  0E00               	movlw	0
  7995  005F6E  6E29               	movwf	INT0_set_InterruptHandler@ret^0,c
  7996                           
  7997                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 398:     }
  7998  005F70  EFC0  F02F         	goto	l11473
  7999  005F74                     l11469:
  8000                           
  8001                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 400:         INT0_InterruptHandler=InterruptH
      +                          andler;
  8002  005F74  C027  F037         	movff	INT0_set_InterruptHandler@InterruptHandler,_INT0_InterruptHandler
  8003  005F78  C028  F038         	movff	INT0_set_InterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  8004  005F7C                     
  8005                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 401:         ret=(Std_ReturnType)0x01;
  8006  005F7C  0E01               	movlw	1
  8007  005F7E  6E29               	movwf	INT0_set_InterruptHandler@ret^0,c
  8008  005F80                     l11473:
  8009                           
  8010                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 404:     return ret;
  8011  005F80  5029               	movf	INT0_set_InterruptHandler@ret^0,w,c
  8012  005F82  0012               	return		;funcret
  8013  005F84                     __end_of_INT0_set_InterruptHandler:
  8014                           	callstack 0
  8015                           
  8016 ;; *************** function _buzzer_init *****************
  8017 ;; Defined at:
  8018 ;;		line 17 in file "ECUAL/buzzer/buzzer.c"
  8019 ;; Parameters:    Size  Location     Type
  8020 ;;  buzzer          2    5[BANK0 ] PTR struct .
  8021 ;;		 -> buzzer(2), 
  8022 ;; Auto vars:     Size  Location     Type
  8023 ;;  ret             1    0        unsigned char 
  8024 ;;  gpio_ret        1    7[BANK0 ] unsigned char 
  8025 ;; Return value:  Size  Location     Type
  8026 ;;                  1    wreg      unsigned char 
  8027 ;; Registers used:
  8028 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8029 ;; Tracked objects:
  8030 ;;		On entry : 0/0
  8031 ;;		On exit  : 0/0
  8032 ;;		Unchanged: 0/0
  8033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8034 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8035 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8037 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8038 ;;Total ram usage:        3 bytes
  8039 ;; Hardware stack levels used: 1
  8040 ;; Hardware stack levels required when called: 15
  8041 ;; This function calls:
  8042 ;;		_gpio_pin_output_low_init
  8043 ;; This function is called by:
  8044 ;;		__Initialize
  8045 ;; This function uses a non-reentrant model
  8046 ;;
  8047                           
  8048                           	psect	text40
  8049  0057A4                     __ptext40:
  8050                           	callstack 0
  8051  0057A4                     _buzzer_init:
  8052                           	callstack 14
  8053  0057A4                     
  8054                           ;ECUAL/buzzer/buzzer.c: 20:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  8055  0057A4  0E00               	movlw	0
  8056  0057A6  0100               	movlb	0	; () banked
  8057  0057A8  6F87               	movwf	buzzer_init@gpio_ret& (0+255),b
  8058  0057AA                     
  8059                           ; BSR set to: 0
  8060                           ;ECUAL/buzzer/buzzer.c: 21:     if(((void*)0)==buzzer){
  8061  0057AA  5185               	movf	buzzer_init@buzzer& (0+255),w,b
  8062  0057AC  1186               	iorwf	(buzzer_init@buzzer+1)& (0+255),w,b
  8063  0057AE  A4D8               	btfss	status,2,c
  8064  0057B0  EFDC  F02B         	goto	u10411
  8065  0057B4  EFDE  F02B         	goto	u10410
  8066  0057B8                     u10411:
  8067  0057B8  EFE0  F02B         	goto	l12345
  8068  0057BC                     u10410:
  8069  0057BC                     
  8070                           ; BSR set to: 0
  8071                           ;ECUAL/buzzer/buzzer.c: 23:     }
  8072  0057BC  EFFB  F02B         	goto	l11
  8073  0057C0                     l12345:
  8074                           
  8075                           ; BSR set to: 0
  8076  0057C0  C085  F080         	movff	buzzer_init@buzzer,gpio_pin_output_low_init@pin
  8077  0057C4  C086  F081         	movff	buzzer_init@buzzer+1,gpio_pin_output_low_init@pin+1
  8078  0057C8  EC67  F028         	call	_gpio_pin_output_low_init	;wreg free
  8079  0057CC                     
  8080                           ;ECUAL/buzzer/buzzer.c: 26:         buzzer->buzzer_state=buzzer->buzzer_pin.logic;
  8081  0057CC  0100               	movlb	0	; () banked
  8082  0057CE  EE20 F001          	lfsr	2,1
  8083  0057D2  5185               	movf	buzzer_init@buzzer& (0+255),w,b
  8084  0057D4  26D9               	addwf	fsr2l,f,c
  8085  0057D6  5186               	movf	(buzzer_init@buzzer+1)& (0+255),w,b
  8086  0057D8  22DA               	addwfc	fsr2h,f,c
  8087  0057DA  C085  FFE1         	movff	buzzer_init@buzzer,fsr1l
  8088  0057DE  C086  FFE2         	movff	buzzer_init@buzzer+1,fsr1h
  8089  0057E2  BEE7               	btfsc	indf1,7,c
  8090  0057E4  EFF6  F02B         	goto	u10421
  8091  0057E8  EFF9  F02B         	goto	u10420
  8092  0057EC                     u10421:
  8093  0057EC  0E01               	movlw	1
  8094  0057EE  EFFA  F02B         	goto	u10426
  8095  0057F2                     u10420:
  8096  0057F2  0E00               	movlw	0
  8097  0057F4                     u10426:
  8098  0057F4  6EDF               	movwf	indf2,c
  8099  0057F6                     l11:
  8100                           
  8101                           ; BSR set to: 0
  8102  0057F6  0012               	return		;funcret
  8103  0057F8                     __end_of_buzzer_init:
  8104                           	callstack 0
  8105                           
  8106 ;; *************** function _gpio_pin_output_low_init *****************
  8107 ;; Defined at:
  8108 ;;		line 161 in file "MCAL/GPIO/gpio.c"
  8109 ;; Parameters:    Size  Location     Type
  8110 ;;  pin             2    0[BANK0 ] PTR struct .
  8111 ;;		 -> buzzer(2), lcd.lcd_pins(4), lcd(6), 
  8112 ;; Auto vars:     Size  Location     Type
  8113 ;;  ret             1    4[BANK0 ] unsigned char 
  8114 ;;  gpio_ret        1    3[BANK0 ] unsigned char 
  8115 ;; Return value:  Size  Location     Type
  8116 ;;                  1    wreg      unsigned char 
  8117 ;; Registers used:
  8118 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8119 ;; Tracked objects:
  8120 ;;		On entry : 0/0
  8121 ;;		On exit  : 0/0
  8122 ;;		Unchanged: 0/0
  8123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8124 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8125 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8126 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8127 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8128 ;;Total ram usage:        5 bytes
  8129 ;; Hardware stack levels used: 1
  8130 ;; Hardware stack levels required when called: 14
  8131 ;; This function calls:
  8132 ;;		_gpio_pin_direction_init
  8133 ;;		_gpio_pin_logic_write
  8134 ;; This function is called by:
  8135 ;;		_buzzer_init
  8136 ;;		_lcd_init
  8137 ;;		_led_init
  8138 ;; This function uses a non-reentrant model
  8139 ;;
  8140                           
  8141                           	psect	text41
  8142  0050CE                     __ptext41:
  8143                           	callstack 0
  8144  0050CE                     _gpio_pin_output_low_init:
  8145                           	callstack 14
  8146  0050CE                     
  8147                           ;MCAL/GPIO/gpio.c: 164:     Std_ReturnType gpio_ret=(Std_ReturnType)0x00;
  8148  0050CE  0E00               	movlw	0
  8149  0050D0  0100               	movlb	0	; () banked
  8150  0050D2  6F83               	movwf	gpio_pin_output_low_init@gpio_ret& (0+255),b
  8151  0050D4                     
  8152                           ; BSR set to: 0
  8153                           ;MCAL/GPIO/gpio.c: 165:     if(((void*)0)==pin || (pin->pin)>7){
  8154  0050D4  5180               	movf	gpio_pin_output_low_init@pin& (0+255),w,b
  8155  0050D6  1181               	iorwf	(gpio_pin_output_low_init@pin+1)& (0+255),w,b
  8156  0050D8  B4D8               	btfsc	status,2,c
  8157  0050DA  EF71  F028         	goto	u10121
  8158  0050DE  EF73  F028         	goto	u10120
  8159  0050E2                     u10121:
  8160  0050E2  EF84  F028         	goto	l11957
  8161  0050E6                     u10120:
  8162  0050E6                     
  8163                           ; BSR set to: 0
  8164  0050E6  C080  FFD9         	movff	gpio_pin_output_low_init@pin,fsr2l
  8165  0050EA  C081  FFDA         	movff	gpio_pin_output_low_init@pin+1,fsr2h
  8166  0050EE  30DF               	rrcf	223,w,c
  8167  0050F0  32E8               	rrcf	wreg,f,c
  8168  0050F2  32E8               	rrcf	wreg,f,c
  8169  0050F4  0B07               	andlw	7
  8170  0050F6  6F82               	movwf	??_gpio_pin_output_low_init& (0+255),b
  8171  0050F8  0E07               	movlw	7
  8172  0050FA  6582               	cpfsgt	??_gpio_pin_output_low_init& (0+255),b
  8173  0050FC  EF82  F028         	goto	u10131
  8174  005100  EF84  F028         	goto	u10130
  8175  005104                     u10131:
  8176  005104  EF88  F028         	goto	l11959
  8177  005108                     u10130:
  8178  005108                     l11957:
  8179                           
  8180                           ; BSR set to: 0
  8181                           ;MCAL/GPIO/gpio.c: 166:         ret=(Std_ReturnType)0x00;
  8182  005108  0E00               	movlw	0
  8183  00510A  6F84               	movwf	gpio_pin_output_low_init@ret& (0+255),b
  8184                           
  8185                           ;MCAL/GPIO/gpio.c: 167:     }
  8186  00510C  EF9E  F028         	goto	l11963
  8187  005110                     l11959:
  8188                           
  8189                           ; BSR set to: 0
  8190                           ;MCAL/GPIO/gpio.c: 169:         gpio_ret=gpio_pin_direction_init(pin,OUTPUT);
  8191  005110  C080  F027         	movff	gpio_pin_output_low_init@pin,gpio_pin_direction_init@pin
  8192  005114  C081  F028         	movff	gpio_pin_output_low_init@pin+1,gpio_pin_direction_init@pin+1
  8193  005118  0E00               	movlw	0
  8194  00511A  6E29               	movwf	gpio_pin_direction_init@pin_direction^0,c
  8195  00511C  EC1A  F01C         	call	_gpio_pin_direction_init	;wreg free
  8196  005120  0100               	movlb	0	; () banked
  8197  005122  6F83               	movwf	gpio_pin_output_low_init@gpio_ret& (0+255),b
  8198                           
  8199                           ;MCAL/GPIO/gpio.c: 170:         gpio_ret=gpio_pin_logic_write(pin,LOW);
  8200  005124  C080  F027         	movff	gpio_pin_output_low_init@pin,gpio_pin_logic_write@pin
  8201  005128  C081  F028         	movff	gpio_pin_output_low_init@pin+1,gpio_pin_logic_write@pin+1
  8202  00512C  0E00               	movlw	0
  8203  00512E  6E29               	movwf	gpio_pin_logic_write@pin_logic^0,c
  8204  005130  EC71  F01B         	call	_gpio_pin_logic_write	;wreg free
  8205  005134  0100               	movlb	0	; () banked
  8206  005136  6F83               	movwf	gpio_pin_output_low_init@gpio_ret& (0+255),b
  8207  005138                     
  8208                           ; BSR set to: 0
  8209                           ;MCAL/GPIO/gpio.c: 171:         ret=(Std_ReturnType)0x01;
  8210  005138  0E01               	movlw	1
  8211  00513A  6F84               	movwf	gpio_pin_output_low_init@ret& (0+255),b
  8212  00513C                     l11963:
  8213                           
  8214                           ; BSR set to: 0
  8215                           ;MCAL/GPIO/gpio.c: 174:     return ret;
  8216  00513C  5184               	movf	gpio_pin_output_low_init@ret& (0+255),w,b
  8217  00513E                     
  8218                           ; BSR set to: 0
  8219  00513E  0012               	return		;funcret
  8220  005140                     __end_of_gpio_pin_output_low_init:
  8221                           	callstack 0
  8222                           
  8223 ;; *************** function _gpio_pin_logic_write *****************
  8224 ;; Defined at:
  8225 ;;		line 81 in file "MCAL/GPIO/gpio.c"
  8226 ;; Parameters:    Size  Location     Type
  8227 ;;  pin             2   38[COMRAM] PTR struct .
  8228 ;;		 -> buzzer(2), lcd.lcd_pins(4), lcd(6), 
  8229 ;;  pin_logic       1   40[COMRAM] enum E2965
  8230 ;; Auto vars:     Size  Location     Type
  8231 ;;  ret             1   47[COMRAM] unsigned char 
  8232 ;; Return value:  Size  Location     Type
  8233 ;;                  1    wreg      unsigned char 
  8234 ;; Registers used:
  8235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8236 ;; Tracked objects:
  8237 ;;		On entry : 0/0
  8238 ;;		On exit  : 0/0
  8239 ;;		Unchanged: 0/0
  8240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8241 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8242 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8243 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8244 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8245 ;;Total ram usage:       10 bytes
  8246 ;; Hardware stack levels used: 1
  8247 ;; Hardware stack levels required when called: 13
  8248 ;; This function calls:
  8249 ;;		Nothing
  8250 ;; This function is called by:
  8251 ;;		_buzzer_on
  8252 ;;		_buzzer_off
  8253 ;;		_lcd_send_command
  8254 ;;		_lcd_send_char_data
  8255 ;;		_lcd_send_nbits
  8256 ;;		_lcd_send_enable
  8257 ;;		_gpio_pin_output_low_init
  8258 ;;		_led_on
  8259 ;;		_led_off
  8260 ;;		_gpio_pin_output_high_init
  8261 ;; This function uses a non-reentrant model
  8262 ;;
  8263                           
  8264                           	psect	text42
  8265  0036E2                     __ptext42:
  8266                           	callstack 0
  8267  0036E2                     _gpio_pin_logic_write:
  8268                           	callstack 13
  8269  0036E2                     
  8270                           ;MCAL/GPIO/gpio.c: 84:     if(((void*)0)==pin ||(pin->pin)>7 || pin_logic>1){
  8271  0036E2  5027               	movf	gpio_pin_logic_write@pin^0,w,c
  8272  0036E4  1028               	iorwf	(gpio_pin_logic_write@pin+1)^0,w,c
  8273  0036E6  B4D8               	btfsc	status,2,c
  8274  0036E8  EF78  F01B         	goto	u8861
  8275  0036EC  EF7A  F01B         	goto	u8860
  8276  0036F0                     u8861:
  8277  0036F0  EF93  F01B         	goto	l11141
  8278  0036F4                     u8860:
  8279  0036F4  C027  FFD9         	movff	gpio_pin_logic_write@pin,fsr2l
  8280  0036F8  C028  FFDA         	movff	gpio_pin_logic_write@pin+1,fsr2h
  8281  0036FC  30DF               	rrcf	223,w,c
  8282  0036FE  32E8               	rrcf	wreg,f,c
  8283  003700  32E8               	rrcf	wreg,f,c
  8284  003702  0B07               	andlw	7
  8285  003704  6E2A               	movwf	??_gpio_pin_logic_write^0,c
  8286  003706  0E08               	movlw	8
  8287  003708  602A               	cpfslt	??_gpio_pin_logic_write^0,c
  8288  00370A  EF89  F01B         	goto	u8871
  8289  00370E  EF8B  F01B         	goto	u8870
  8290  003712                     u8871:
  8291  003712  EF93  F01B         	goto	l11141
  8292  003716                     u8870:
  8293  003716  0E01               	movlw	1
  8294  003718  6429               	cpfsgt	gpio_pin_logic_write@pin_logic^0,c
  8295  00371A  EF91  F01B         	goto	u8881
  8296  00371E  EF93  F01B         	goto	u8880
  8297  003722                     u8881:
  8298  003722  EFF8  F01B         	goto	l11149
  8299  003726                     u8880:
  8300  003726                     l11141:
  8301                           
  8302                           ;MCAL/GPIO/gpio.c: 85:         ret=(Std_ReturnType)0x00;
  8303  003726  0E00               	movlw	0
  8304  003728  6E30               	movwf	gpio_pin_logic_write@ret^0,c
  8305                           
  8306                           ;MCAL/GPIO/gpio.c: 86:     }
  8307  00372A  EF18  F01C         	goto	l11155
  8308  00372E                     l11143:
  8309                           
  8310                           ;MCAL/GPIO/gpio.c: 90:                 (*latx[pin->port] &= ~((uint8)1<<pin->pin));
  8311  00372E  C027  FFD9         	movff	gpio_pin_logic_write@pin,fsr2l
  8312  003732  C028  FFDA         	movff	gpio_pin_logic_write@pin+1,fsr2h
  8313  003736  30DF               	rrcf	223,w,c
  8314  003738  32E8               	rrcf	wreg,f,c
  8315  00373A  32E8               	rrcf	wreg,f,c
  8316  00373C  0B07               	andlw	7
  8317  00373E  6E2A               	movwf	??_gpio_pin_logic_write^0,c
  8318  003740  0E01               	movlw	1
  8319  003742  6E2B               	movwf	(??_gpio_pin_logic_write+1)^0,c
  8320  003744  2A2A               	incf	??_gpio_pin_logic_write^0,f,c
  8321  003746  EFA7  F01B         	goto	u8894
  8322  00374A                     u8895:
  8323  00374A  90D8               	bcf	status,0,c
  8324  00374C  362B               	rlcf	(??_gpio_pin_logic_write+1)^0,f,c
  8325  00374E                     u8894:
  8326  00374E  2E2A               	decfsz	??_gpio_pin_logic_write^0,f,c
  8327  003750  EFA5  F01B         	goto	u8895
  8328  003754  502B               	movf	(??_gpio_pin_logic_write+1)^0,w,c
  8329  003756  0AFF               	xorlw	255
  8330  003758  6E2C               	movwf	(??_gpio_pin_logic_write+2)^0,c
  8331  00375A  C027  FFD9         	movff	gpio_pin_logic_write@pin,fsr2l
  8332  00375E  C028  FFDA         	movff	gpio_pin_logic_write@pin+1,fsr2h
  8333  003762  50DF               	movf	223,w,c
  8334  003764  0B07               	andlw	7
  8335  003766  6E2D               	movwf	(??_gpio_pin_logic_write+3)^0,c
  8336  003768  502D               	movf	(??_gpio_pin_logic_write+3)^0,w,c
  8337  00376A  0D02               	mullw	2
  8338  00376C  0E58               	movlw	low _latx
  8339  00376E  24F3               	addwf	243,w,c
  8340  003770  6ED9               	movwf	fsr2l,c
  8341  003772  0E01               	movlw	high _latx
  8342  003774  20F4               	addwfc	prodh,w,c
  8343  003776  6EDA               	movwf	fsr2h,c
  8344  003778  CFDE F02E          	movff	postinc2,??_gpio_pin_logic_write+4
  8345  00377C  CFDD F02F          	movff	postdec2,??_gpio_pin_logic_write+5
  8346  003780  C02E  FFD9         	movff	??_gpio_pin_logic_write+4,fsr2l
  8347  003784  C02F  FFDA         	movff	??_gpio_pin_logic_write+5,fsr2h
  8348  003788  502C               	movf	(??_gpio_pin_logic_write+2)^0,w,c
  8349  00378A  16DF               	andwf	indf2,f,c
  8350                           
  8351                           ;MCAL/GPIO/gpio.c: 91:                 break;
  8352  00378C  EF0D  F01C         	goto	l11151
  8353  003790                     l11145:
  8354                           
  8355                           ;MCAL/GPIO/gpio.c: 94:                 (*latx[pin->port] |= ((uint8)1<<pin->pin));
  8356  003790  C027  FFD9         	movff	gpio_pin_logic_write@pin,fsr2l
  8357  003794  C028  FFDA         	movff	gpio_pin_logic_write@pin+1,fsr2h
  8358  003798  30DF               	rrcf	223,w,c
  8359  00379A  32E8               	rrcf	wreg,f,c
  8360  00379C  32E8               	rrcf	wreg,f,c
  8361  00379E  0B07               	andlw	7
  8362  0037A0  6E2A               	movwf	??_gpio_pin_logic_write^0,c
  8363  0037A2  0E01               	movlw	1
  8364  0037A4  6E2B               	movwf	(??_gpio_pin_logic_write+1)^0,c
  8365  0037A6  2A2A               	incf	??_gpio_pin_logic_write^0,f,c
  8366  0037A8  EFD8  F01B         	goto	u8904
  8367  0037AC                     u8905:
  8368  0037AC  90D8               	bcf	status,0,c
  8369  0037AE  362B               	rlcf	(??_gpio_pin_logic_write+1)^0,f,c
  8370  0037B0                     u8904:
  8371  0037B0  2E2A               	decfsz	??_gpio_pin_logic_write^0,f,c
  8372  0037B2  EFD6  F01B         	goto	u8905
  8373  0037B6  C027  FFD9         	movff	gpio_pin_logic_write@pin,fsr2l
  8374  0037BA  C028  FFDA         	movff	gpio_pin_logic_write@pin+1,fsr2h
  8375  0037BE  50DF               	movf	223,w,c
  8376  0037C0  0B07               	andlw	7
  8377  0037C2  6E2C               	movwf	(??_gpio_pin_logic_write+2)^0,c
  8378  0037C4  502C               	movf	(??_gpio_pin_logic_write+2)^0,w,c
  8379  0037C6  0D02               	mullw	2
  8380  0037C8  0E58               	movlw	low _latx
  8381  0037CA  24F3               	addwf	243,w,c
  8382  0037CC  6ED9               	movwf	fsr2l,c
  8383  0037CE  0E01               	movlw	high _latx
  8384  0037D0  20F4               	addwfc	prodh,w,c
  8385  0037D2  6EDA               	movwf	fsr2h,c
  8386  0037D4  CFDE F02D          	movff	postinc2,??_gpio_pin_logic_write+3
  8387  0037D8  CFDD F02E          	movff	postdec2,??_gpio_pin_logic_write+4
  8388  0037DC  C02D  FFD9         	movff	??_gpio_pin_logic_write+3,fsr2l
  8389  0037E0  C02E  FFDA         	movff	??_gpio_pin_logic_write+4,fsr2h
  8390  0037E4  502B               	movf	(??_gpio_pin_logic_write+1)^0,w,c
  8391  0037E6  12DF               	iorwf	indf2,f,c
  8392                           
  8393                           ;MCAL/GPIO/gpio.c: 95:                 break;
  8394  0037E8  EF0D  F01C         	goto	l11151
  8395  0037EC                     l11147:
  8396                           
  8397                           ;MCAL/GPIO/gpio.c: 99:         }
  8398  0037EC  EF0D  F01C         	goto	l11151
  8399  0037F0                     l11149:
  8400  0037F0  5029               	movf	gpio_pin_logic_write@pin_logic^0,w,c
  8401  0037F2  6E2A               	movwf	??_gpio_pin_logic_write^0,c
  8402  0037F4  6A2B               	clrf	(??_gpio_pin_logic_write+1)^0,c
  8403                           
  8404                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8405                           ; Switch size 1, requested type "simple"
  8406                           ; Number of cases is 1, Range of values is 0 to 0
  8407                           ; switch strategies available:
  8408                           ; Name         Instructions Cycles
  8409                           ; simple_byte            4     3 (average)
  8410                           ;	Chosen strategy is simple_byte
  8411  0037F6  502B               	movf	(??_gpio_pin_logic_write+1)^0,w,c
  8412  0037F8  0A00               	xorlw	0	; case 0
  8413  0037FA  B4D8               	btfsc	status,2,c
  8414  0037FC  EF02  F01C         	goto	l13659
  8415  003800  EFF6  F01B         	goto	l11147
  8416  003804                     l13659:
  8417                           
  8418                           ; Switch size 1, requested type "simple"
  8419                           ; Number of cases is 2, Range of values is 0 to 1
  8420                           ; switch strategies available:
  8421                           ; Name         Instructions Cycles
  8422                           ; simple_byte            7     4 (average)
  8423                           ;	Chosen strategy is simple_byte
  8424  003804  502A               	movf	??_gpio_pin_logic_write^0,w,c
  8425  003806  0A00               	xorlw	0	; case 0
  8426  003808  B4D8               	btfsc	status,2,c
  8427  00380A  EF97  F01B         	goto	l11143
  8428  00380E  0A01               	xorlw	1	; case 1
  8429  003810  B4D8               	btfsc	status,2,c
  8430  003812  EFC8  F01B         	goto	l11145
  8431  003816  EFF6  F01B         	goto	l11147
  8432  00381A                     l11151:
  8433                           
  8434                           ;MCAL/GPIO/gpio.c: 100:         pin->logic=pin_logic;
  8435  00381A  C027  FFD9         	movff	gpio_pin_logic_write@pin,fsr2l
  8436  00381E  C028  FFDA         	movff	gpio_pin_logic_write@pin+1,fsr2h
  8437  003822  B029               	btfsc	gpio_pin_logic_write@pin_logic^0,0,c
  8438  003824  D002               	bra	u8915
  8439  003826  9EDF               	bcf	indf2,7,c
  8440  003828  D001               	bra	u8916
  8441  00382A                     u8915:
  8442  00382A  8EDF               	bsf	indf2,7,c
  8443  00382C                     u8916:
  8444  00382C                     
  8445                           ;MCAL/GPIO/gpio.c: 101:         ret=(Std_ReturnType)0x01;
  8446  00382C  0E01               	movlw	1
  8447  00382E  6E30               	movwf	gpio_pin_logic_write@ret^0,c
  8448  003830                     l11155:
  8449                           
  8450                           ;MCAL/GPIO/gpio.c: 104:     return ret;
  8451  003830  5030               	movf	gpio_pin_logic_write@ret^0,w,c
  8452  003832  0012               	return		;funcret
  8453  003834                     __end_of_gpio_pin_logic_write:
  8454                           	callstack 0
  8455                           
  8456 ;; *************** function _gpio_pin_direction_init *****************
  8457 ;; Defined at:
  8458 ;;		line 23 in file "MCAL/GPIO/gpio.c"
  8459 ;; Parameters:    Size  Location     Type
  8460 ;;  pin             2   38[COMRAM] PTR struct .
  8461 ;;		 -> MY_INT2(6), MY_INT1(6), MY_INT0(6), buzzer(2), 
  8462 ;;		 -> lcd.lcd_pins(4), lcd(6), 
  8463 ;;  pin_directio    1   40[COMRAM] enum E2969
  8464 ;; Auto vars:     Size  Location     Type
  8465 ;;  ret             1   47[COMRAM] unsigned char 
  8466 ;; Return value:  Size  Location     Type
  8467 ;;                  1    wreg      unsigned char 
  8468 ;; Registers used:
  8469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8470 ;; Tracked objects:
  8471 ;;		On entry : 0/0
  8472 ;;		On exit  : 0/0
  8473 ;;		Unchanged: 0/0
  8474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8475 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8476 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8477 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8478 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8479 ;;Total ram usage:       10 bytes
  8480 ;; Hardware stack levels used: 1
  8481 ;; Hardware stack levels required when called: 13
  8482 ;; This function calls:
  8483 ;;		Nothing
  8484 ;; This function is called by:
  8485 ;;		_gpio_pin_output_low_init
  8486 ;;		_gpio_pin_input_init
  8487 ;;		_gpio_pin_output_high_init
  8488 ;; This function uses a non-reentrant model
  8489 ;;
  8490                           
  8491                           	psect	text43
  8492  003834                     __ptext43:
  8493                           	callstack 0
  8494  003834                     _gpio_pin_direction_init:
  8495                           	callstack 14
  8496  003834                     
  8497                           ;MCAL/GPIO/gpio.c: 26:     if(((void*)0)==pin || (pin->pin)>7 || pin_direction>1){
  8498  003834  5027               	movf	gpio_pin_direction_init@pin^0,w,c
  8499  003836  1028               	iorwf	(gpio_pin_direction_init@pin+1)^0,w,c
  8500  003838  B4D8               	btfsc	status,2,c
  8501  00383A  EF21  F01C         	goto	u9151
  8502  00383E  EF23  F01C         	goto	u9150
  8503  003842                     u9151:
  8504  003842  EF3C  F01C         	goto	l11291
  8505  003846                     u9150:
  8506  003846  C027  FFD9         	movff	gpio_pin_direction_init@pin,fsr2l
  8507  00384A  C028  FFDA         	movff	gpio_pin_direction_init@pin+1,fsr2h
  8508  00384E  30DF               	rrcf	223,w,c
  8509  003850  32E8               	rrcf	wreg,f,c
  8510  003852  32E8               	rrcf	wreg,f,c
  8511  003854  0B07               	andlw	7
  8512  003856  6E2A               	movwf	??_gpio_pin_direction_init^0,c
  8513  003858  0E08               	movlw	8
  8514  00385A  602A               	cpfslt	??_gpio_pin_direction_init^0,c
  8515  00385C  EF32  F01C         	goto	u9161
  8516  003860  EF34  F01C         	goto	u9160
  8517  003864                     u9161:
  8518  003864  EF3C  F01C         	goto	l11291
  8519  003868                     u9160:
  8520  003868  0E01               	movlw	1
  8521  00386A  6429               	cpfsgt	gpio_pin_direction_init@pin_direction^0,c
  8522  00386C  EF3A  F01C         	goto	u9171
  8523  003870  EF3C  F01C         	goto	u9170
  8524  003874                     u9171:
  8525  003874  EFA1  F01C         	goto	l11299
  8526  003878                     u9170:
  8527  003878                     l11291:
  8528                           
  8529                           ;MCAL/GPIO/gpio.c: 27:         ret=(Std_ReturnType)0x00;
  8530  003878  0E00               	movlw	0
  8531  00387A  6E30               	movwf	gpio_pin_direction_init@ret^0,c
  8532                           
  8533                           ;MCAL/GPIO/gpio.c: 28:     }
  8534  00387C  EFC1  F01C         	goto	l11305
  8535  003880                     l11293:
  8536                           
  8537                           ;MCAL/GPIO/gpio.c: 32:                 (*trisx[pin->port] &= ~((uint8)1<<pin->pin));
  8538  003880  C027  FFD9         	movff	gpio_pin_direction_init@pin,fsr2l
  8539  003884  C028  FFDA         	movff	gpio_pin_direction_init@pin+1,fsr2h
  8540  003888  30DF               	rrcf	223,w,c
  8541  00388A  32E8               	rrcf	wreg,f,c
  8542  00388C  32E8               	rrcf	wreg,f,c
  8543  00388E  0B07               	andlw	7
  8544  003890  6E2A               	movwf	??_gpio_pin_direction_init^0,c
  8545  003892  0E01               	movlw	1
  8546  003894  6E2B               	movwf	(??_gpio_pin_direction_init+1)^0,c
  8547  003896  2A2A               	incf	??_gpio_pin_direction_init^0,f,c
  8548  003898  EF50  F01C         	goto	u9184
  8549  00389C                     u9185:
  8550  00389C  90D8               	bcf	status,0,c
  8551  00389E  362B               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  8552  0038A0                     u9184:
  8553  0038A0  2E2A               	decfsz	??_gpio_pin_direction_init^0,f,c
  8554  0038A2  EF4E  F01C         	goto	u9185
  8555  0038A6  502B               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  8556  0038A8  0AFF               	xorlw	255
  8557  0038AA  6E2C               	movwf	(??_gpio_pin_direction_init+2)^0,c
  8558  0038AC  C027  FFD9         	movff	gpio_pin_direction_init@pin,fsr2l
  8559  0038B0  C028  FFDA         	movff	gpio_pin_direction_init@pin+1,fsr2h
  8560  0038B4  50DF               	movf	223,w,c
  8561  0038B6  0B07               	andlw	7
  8562  0038B8  6E2D               	movwf	(??_gpio_pin_direction_init+3)^0,c
  8563  0038BA  502D               	movf	(??_gpio_pin_direction_init+3)^0,w,c
  8564  0038BC  0D02               	mullw	2
  8565  0038BE  0E62               	movlw	low _trisx
  8566  0038C0  24F3               	addwf	243,w,c
  8567  0038C2  6ED9               	movwf	fsr2l,c
  8568  0038C4  0E01               	movlw	high _trisx
  8569  0038C6  20F4               	addwfc	prodh,w,c
  8570  0038C8  6EDA               	movwf	fsr2h,c
  8571  0038CA  CFDE F02E          	movff	postinc2,??_gpio_pin_direction_init+4
  8572  0038CE  CFDD F02F          	movff	postdec2,??_gpio_pin_direction_init+5
  8573  0038D2  C02E  FFD9         	movff	??_gpio_pin_direction_init+4,fsr2l
  8574  0038D6  C02F  FFDA         	movff	??_gpio_pin_direction_init+5,fsr2h
  8575  0038DA  502C               	movf	(??_gpio_pin_direction_init+2)^0,w,c
  8576  0038DC  16DF               	andwf	indf2,f,c
  8577                           
  8578                           ;MCAL/GPIO/gpio.c: 33:                 break;
  8579  0038DE  EFB6  F01C         	goto	l11301
  8580  0038E2                     l11295:
  8581                           
  8582                           ;MCAL/GPIO/gpio.c: 36:                 (*trisx[pin->port] |= ((uint8)1<<pin->pin));
  8583  0038E2  C027  FFD9         	movff	gpio_pin_direction_init@pin,fsr2l
  8584  0038E6  C028  FFDA         	movff	gpio_pin_direction_init@pin+1,fsr2h
  8585  0038EA  30DF               	rrcf	223,w,c
  8586  0038EC  32E8               	rrcf	wreg,f,c
  8587  0038EE  32E8               	rrcf	wreg,f,c
  8588  0038F0  0B07               	andlw	7
  8589  0038F2  6E2A               	movwf	??_gpio_pin_direction_init^0,c
  8590  0038F4  0E01               	movlw	1
  8591  0038F6  6E2B               	movwf	(??_gpio_pin_direction_init+1)^0,c
  8592  0038F8  2A2A               	incf	??_gpio_pin_direction_init^0,f,c
  8593  0038FA  EF81  F01C         	goto	u9194
  8594  0038FE                     u9195:
  8595  0038FE  90D8               	bcf	status,0,c
  8596  003900  362B               	rlcf	(??_gpio_pin_direction_init+1)^0,f,c
  8597  003902                     u9194:
  8598  003902  2E2A               	decfsz	??_gpio_pin_direction_init^0,f,c
  8599  003904  EF7F  F01C         	goto	u9195
  8600  003908  C027  FFD9         	movff	gpio_pin_direction_init@pin,fsr2l
  8601  00390C  C028  FFDA         	movff	gpio_pin_direction_init@pin+1,fsr2h
  8602  003910  50DF               	movf	223,w,c
  8603  003912  0B07               	andlw	7
  8604  003914  6E2C               	movwf	(??_gpio_pin_direction_init+2)^0,c
  8605  003916  502C               	movf	(??_gpio_pin_direction_init+2)^0,w,c
  8606  003918  0D02               	mullw	2
  8607  00391A  0E62               	movlw	low _trisx
  8608  00391C  24F3               	addwf	243,w,c
  8609  00391E  6ED9               	movwf	fsr2l,c
  8610  003920  0E01               	movlw	high _trisx
  8611  003922  20F4               	addwfc	prodh,w,c
  8612  003924  6EDA               	movwf	fsr2h,c
  8613  003926  CFDE F02D          	movff	postinc2,??_gpio_pin_direction_init+3
  8614  00392A  CFDD F02E          	movff	postdec2,??_gpio_pin_direction_init+4
  8615  00392E  C02D  FFD9         	movff	??_gpio_pin_direction_init+3,fsr2l
  8616  003932  C02E  FFDA         	movff	??_gpio_pin_direction_init+4,fsr2h
  8617  003936  502B               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  8618  003938  12DF               	iorwf	indf2,f,c
  8619                           
  8620                           ;MCAL/GPIO/gpio.c: 37:                 break;
  8621  00393A  EFB6  F01C         	goto	l11301
  8622  00393E                     l11297:
  8623                           
  8624                           ;MCAL/GPIO/gpio.c: 41:         }
  8625  00393E  EFB6  F01C         	goto	l11301
  8626  003942                     l11299:
  8627  003942  5029               	movf	gpio_pin_direction_init@pin_direction^0,w,c
  8628  003944  6E2A               	movwf	??_gpio_pin_direction_init^0,c
  8629  003946  6A2B               	clrf	(??_gpio_pin_direction_init+1)^0,c
  8630                           
  8631                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8632                           ; Switch size 1, requested type "simple"
  8633                           ; Number of cases is 1, Range of values is 0 to 0
  8634                           ; switch strategies available:
  8635                           ; Name         Instructions Cycles
  8636                           ; simple_byte            4     3 (average)
  8637                           ;	Chosen strategy is simple_byte
  8638  003948  502B               	movf	(??_gpio_pin_direction_init+1)^0,w,c
  8639  00394A  0A00               	xorlw	0	; case 0
  8640  00394C  B4D8               	btfsc	status,2,c
  8641  00394E  EFAB  F01C         	goto	l13661
  8642  003952  EF9F  F01C         	goto	l11297
  8643  003956                     l13661:
  8644                           
  8645                           ; Switch size 1, requested type "simple"
  8646                           ; Number of cases is 2, Range of values is 0 to 1
  8647                           ; switch strategies available:
  8648                           ; Name         Instructions Cycles
  8649                           ; simple_byte            7     4 (average)
  8650                           ;	Chosen strategy is simple_byte
  8651  003956  502A               	movf	??_gpio_pin_direction_init^0,w,c
  8652  003958  0A00               	xorlw	0	; case 0
  8653  00395A  B4D8               	btfsc	status,2,c
  8654  00395C  EF40  F01C         	goto	l11293
  8655  003960  0A01               	xorlw	1	; case 1
  8656  003962  B4D8               	btfsc	status,2,c
  8657  003964  EF71  F01C         	goto	l11295
  8658  003968  EF9F  F01C         	goto	l11297
  8659  00396C                     l11301:
  8660                           
  8661                           ;MCAL/GPIO/gpio.c: 42:         pin->direction=pin_direction;
  8662  00396C  C027  FFD9         	movff	gpio_pin_direction_init@pin,fsr2l
  8663  003970  C028  FFDA         	movff	gpio_pin_direction_init@pin+1,fsr2h
  8664  003974  B029               	btfsc	gpio_pin_direction_init@pin_direction^0,0,c
  8665  003976  D002               	bra	u9205
  8666  003978  9CDF               	bcf	indf2,6,c
  8667  00397A  D001               	bra	u9206
  8668  00397C                     u9205:
  8669  00397C  8CDF               	bsf	indf2,6,c
  8670  00397E                     u9206:
  8671  00397E                     
  8672                           ;MCAL/GPIO/gpio.c: 43:         ret=(Std_ReturnType)0x01;
  8673  00397E  0E01               	movlw	1
  8674  003980  6E30               	movwf	gpio_pin_direction_init@ret^0,c
  8675  003982                     l11305:
  8676                           
  8677                           ;MCAL/GPIO/gpio.c: 46:     return ret;
  8678  003982  5030               	movf	gpio_pin_direction_init@ret^0,w,c
  8679  003984  0012               	return		;funcret
  8680  003986                     __end_of_gpio_pin_direction_init:
  8681                           	callstack 0
  8682                           
  8683 ;; *************** function _I2C_Initialize *****************
  8684 ;; Defined at:
  8685 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  8686 ;; Parameters:    Size  Location     Type
  8687 ;;		None
  8688 ;; Auto vars:     Size  Location     Type
  8689 ;;		None
  8690 ;; Return value:  Size  Location     Type
  8691 ;;                  1    wreg      void 
  8692 ;; Registers used:
  8693 ;;		wreg, status,2
  8694 ;; Tracked objects:
  8695 ;;		On entry : 0/0
  8696 ;;		On exit  : 0/0
  8697 ;;		Unchanged: 0/0
  8698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8703 ;;Total ram usage:        0 bytes
  8704 ;; Hardware stack levels used: 1
  8705 ;; Hardware stack levels required when called: 13
  8706 ;; This function calls:
  8707 ;;		Nothing
  8708 ;; This function is called by:
  8709 ;;		__Initialize
  8710 ;; This function uses a non-reentrant model
  8711 ;;
  8712                           
  8713                           	psect	text44
  8714  0061E4                     __ptext44:
  8715                           	callstack 0
  8716  0061E4                     _I2C_Initialize:
  8717                           	callstack 16
  8718  0061E4                     
  8719                           ;mcc_generated_files/i2c_master.c: 169:     SSPSTAT = 0x80;
  8720  0061E4  0E80               	movlw	128
  8721  0061E6  6EC7               	movwf	199,c	;volatile
  8722                           
  8723                           ;mcc_generated_files/i2c_master.c: 170:     SSPCON1 = 0x08;
  8724  0061E8  0E08               	movlw	8
  8725  0061EA  6EC6               	movwf	198,c	;volatile
  8726                           
  8727                           ;mcc_generated_files/i2c_master.c: 171:     SSPCON2 = 0x00;
  8728  0061EC  0E00               	movlw	0
  8729  0061EE  6EC5               	movwf	197,c	;volatile
  8730                           
  8731                           ;mcc_generated_files/i2c_master.c: 172:     SSPADD = 0x03;
  8732  0061F0  0E03               	movlw	3
  8733  0061F2  6EC8               	movwf	200,c	;volatile
  8734  0061F4                     
  8735                           ;mcc_generated_files/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
  8736  0061F4  9AC6               	bcf	198,5,c	;volatile
  8737  0061F6  0012               	return		;funcret
  8738  0061F8                     __end_of_I2C_Initialize:
  8739                           	callstack 0
  8740                           
  8741 ;; *************** function _EUSART_ASYNC_Init *****************
  8742 ;; Defined at:
  8743 ;;		line 24 in file "MCAL/USART/usart.c"
  8744 ;; Parameters:    Size  Location     Type
  8745 ;;  _eusart         2   59[BANK0 ] PTR const struct .
  8746 ;;		 -> uart(16), 
  8747 ;; Auto vars:     Size  Location     Type
  8748 ;;  ret             1    0        unsigned char 
  8749 ;; Return value:  Size  Location     Type
  8750 ;;                  1    wreg      unsigned char 
  8751 ;; Registers used:
  8752 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8753 ;; Tracked objects:
  8754 ;;		On entry : 0/0
  8755 ;;		On exit  : 0/0
  8756 ;;		Unchanged: 0/0
  8757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8758 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8761 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8762 ;;Total ram usage:        2 bytes
  8763 ;; Hardware stack levels used: 1
  8764 ;; Hardware stack levels required when called: 15
  8765 ;; This function calls:
  8766 ;;		_EUSART_ASYNC_RX_Init
  8767 ;;		_EUSART_ASYNC_TX_Init
  8768 ;;		_EUSART_Baud_Rate_Calculation
  8769 ;; This function is called by:
  8770 ;;		__Initialize
  8771 ;; This function uses a non-reentrant model
  8772 ;;
  8773                           
  8774                           	psect	text45
  8775  0059BC                     __ptext45:
  8776                           	callstack 0
  8777  0059BC                     _EUSART_ASYNC_Init:
  8778                           	callstack 14
  8779  0059BC                     
  8780                           ;MCAL/USART/usart.c: 27:     if(((void*)0) == _eusart){
  8781  0059BC  0100               	movlb	0	; () banked
  8782  0059BE  51BB               	movf	EUSART_ASYNC_Init@_eusart& (0+255),w,b
  8783  0059C0  11BC               	iorwf	(EUSART_ASYNC_Init@_eusart+1)& (0+255),w,b
  8784  0059C2  A4D8               	btfss	status,2,c
  8785  0059C4  EFE6  F02C         	goto	u10531
  8786  0059C8  EFE8  F02C         	goto	u10530
  8787  0059CC                     u10531:
  8788  0059CC  EFEA  F02C         	goto	l832
  8789  0059D0                     u10530:
  8790  0059D0                     
  8791                           ; BSR set to: 0
  8792                           ;MCAL/USART/usart.c: 29:     }
  8793  0059D0  EF00  F02D         	goto	l834
  8794  0059D4                     l832:
  8795                           
  8796                           ; BSR set to: 0
  8797                           ;MCAL/USART/usart.c: 31:         RCSTAbits.SPEN = 0;
  8798  0059D4  9EAB               	bcf	171,7,c	;volatile
  8799                           
  8800                           ;MCAL/USART/usart.c: 32:         TRISCbits.RC7 = 1;
  8801  0059D6  8E94               	bsf	148,7,c	;volatile
  8802                           
  8803                           ;MCAL/USART/usart.c: 33:         TRISCbits.RC6 = 1;
  8804  0059D8  8C94               	bsf	148,6,c	;volatile
  8805  0059DA                     
  8806                           ; BSR set to: 0
  8807                           ;MCAL/USART/usart.c: 34:         EUSART_Baud_Rate_Calculation(_eusart);
  8808  0059DA  C0BB  F0AF         	movff	EUSART_ASYNC_Init@_eusart,EUSART_Baud_Rate_Calculation@_eusart
  8809  0059DE  C0BC  F0B0         	movff	EUSART_ASYNC_Init@_eusart+1,EUSART_Baud_Rate_Calculation@_eusart+1
  8810  0059E2  EC70  F00B         	call	_EUSART_Baud_Rate_Calculation	;wreg free
  8811                           
  8812                           ;MCAL/USART/usart.c: 35:         EUSART_ASYNC_TX_Init(_eusart);
  8813  0059E6  C0BB  F027         	movff	EUSART_ASYNC_Init@_eusart,EUSART_ASYNC_TX_Init@_eusart
  8814  0059EA  C0BC  F028         	movff	EUSART_ASYNC_Init@_eusart+1,EUSART_ASYNC_TX_Init@_eusart+1
  8815  0059EE  EC3B  F022         	call	_EUSART_ASYNC_TX_Init	;wreg free
  8816                           
  8817                           ;MCAL/USART/usart.c: 36:         EUSART_ASYNC_RX_Init(_eusart);
  8818  0059F2  C0BB  F027         	movff	EUSART_ASYNC_Init@_eusart,EUSART_ASYNC_RX_Init@_eusart
  8819  0059F6  C0BC  F028         	movff	EUSART_ASYNC_Init@_eusart+1,EUSART_ASYNC_RX_Init@_eusart+1
  8820  0059FA  ECE8  F023         	call	_EUSART_ASYNC_RX_Init	;wreg free
  8821  0059FE                     
  8822                           ;MCAL/USART/usart.c: 37:         RCSTAbits.SPEN = 1;
  8823  0059FE  8EAB               	bsf	171,7,c	;volatile
  8824  005A00                     l834:
  8825  005A00  0012               	return		;funcret
  8826  005A02                     __end_of_EUSART_ASYNC_Init:
  8827                           	callstack 0
  8828                           
  8829 ;; *************** function _EUSART_Baud_Rate_Calculation *****************
  8830 ;; Defined at:
  8831 ;;		line 136 in file "MCAL/USART/usart.c"
  8832 ;; Parameters:    Size  Location     Type
  8833 ;;  _eusart         2   47[BANK0 ] PTR const struct .
  8834 ;;		 -> uart(16), 
  8835 ;; Auto vars:     Size  Location     Type
  8836 ;;  Baud_Rate_Te    4   51[BANK0 ] float 
  8837 ;; Return value:  Size  Location     Type
  8838 ;;                  1    wreg      void 
  8839 ;; Registers used:
  8840 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8841 ;; Tracked objects:
  8842 ;;		On entry : 0/0
  8843 ;;		On exit  : 0/0
  8844 ;;		Unchanged: 0/0
  8845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8846 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8847 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8848 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8849 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8850 ;;Total ram usage:       12 bytes
  8851 ;; Hardware stack levels used: 1
  8852 ;; Hardware stack levels required when called: 14
  8853 ;; This function calls:
  8854 ;;		___fladd
  8855 ;;		___fldiv
  8856 ;;		___fltol
  8857 ;;		___xxtofl
  8858 ;; This function is called by:
  8859 ;;		_EUSART_ASYNC_Init
  8860 ;; This function uses a non-reentrant model
  8861 ;;
  8862                           
  8863                           	psect	text46
  8864  0016E0                     __ptext46:
  8865                           	callstack 0
  8866  0016E0                     _EUSART_Baud_Rate_Calculation:
  8867                           	callstack 14
  8868  0016E0                     
  8869                           ;MCAL/USART/usart.c: 138:     float Baud_Rate_Temp = 0;
  8870  0016E0  0E00               	movlw	0
  8871  0016E2  0100               	movlb	0	; () banked
  8872  0016E4  6FB3               	movwf	EUSART_Baud_Rate_Calculation@Baud_Rate_Temp& (0+255),b
  8873  0016E6  0E00               	movlw	0
  8874  0016E8  6FB4               	movwf	(EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+1)& (0+255),b
  8875  0016EA  0E00               	movlw	0
  8876  0016EC  6FB5               	movwf	(EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+2)& (0+255),b
  8877  0016EE  0E00               	movlw	0
  8878  0016F0  6FB6               	movwf	(EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+3)& (0+255),b
  8879                           
  8880                           ;MCAL/USART/usart.c: 139:     switch(_eusart->baudrate_gen_gonfig){
  8881  0016F2  EFB3  F00D         	goto	l12241
  8882  0016F6                     l882:
  8883                           
  8884                           ; BSR set to: 0
  8885                           ;MCAL/USART/usart.c: 141:             TXSTAbits.SYNC = 0;
  8886  0016F6  98AC               	bcf	172,4,c	;volatile
  8887                           
  8888                           ;MCAL/USART/usart.c: 142:             TXSTAbits.BRGH = 0;
  8889  0016F8  94AC               	bcf	172,2,c	;volatile
  8890                           
  8891                           ;MCAL/USART/usart.c: 143:             BAUDCONbits.BRG16 = 0;
  8892  0016FA  96B8               	bcf	184,3,c	;volatile
  8893  0016FC                     
  8894                           ; BSR set to: 0
  8895                           ;MCAL/USART/usart.c: 144:             Baud_Rate_Temp = ((8000000 / (float)_eusart->baudr
      +                          ate) / 64) - 1;
  8896  0016FC  C0AF  FFD9         	movff	EUSART_Baud_Rate_Calculation@_eusart,fsr2l
  8897  001700  C0B0  FFDA         	movff	EUSART_Baud_Rate_Calculation@_eusart+1,fsr2h
  8898  001704  CFDE F0B1          	movff	postinc2,??_EUSART_Baud_Rate_Calculation
  8899  001708  CFDD F0B2          	movff	postdec2,??_EUSART_Baud_Rate_Calculation+1
  8900  00170C  C0B1  F027         	movff	??_EUSART_Baud_Rate_Calculation,___xxtofl@val
  8901  001710  C0B2  F028         	movff	??_EUSART_Baud_Rate_Calculation+1,___xxtofl@val+1
  8902  001714  6A29               	clrf	(___xxtofl@val+2)^0,c
  8903  001716  6A2A               	clrf	(___xxtofl@val+3)^0,c
  8904  001718  0E00               	movlw	0
  8905  00171A  EC20  F016         	call	___xxtofl
  8906  00171E  C027  F08A         	movff	?___xxtofl,___fldiv@a
  8907  001722  C028  F08B         	movff	?___xxtofl+1,___fldiv@a+1
  8908  001726  C029  F08C         	movff	?___xxtofl+2,___fldiv@a+2
  8909  00172A  C02A  F08D         	movff	?___xxtofl+3,___fldiv@a+3
  8910  00172E  0E00               	movlw	0
  8911  001730  0100               	movlb	0	; () banked
  8912  001732  6F86               	movwf	___fldiv@b& (0+255),b
  8913  001734  0E24               	movlw	36
  8914  001736  6F87               	movwf	(___fldiv@b+1)& (0+255),b
  8915  001738  0EF4               	movlw	244
  8916  00173A  6F88               	movwf	(___fldiv@b+2)& (0+255),b
  8917  00173C  0E4A               	movlw	74
  8918  00173E  6F89               	movwf	(___fldiv@b+3)& (0+255),b
  8919  001740  EC5B  F010         	call	___fldiv	;wreg free
  8920  001744  C086  F0B7         	movff	?___fldiv,_EUSART_Baud_Rate_Calculation$4290
  8921  001748  C087  F0B8         	movff	?___fldiv+1,_EUSART_Baud_Rate_Calculation$4290+1
  8922  00174C  C088  F0B9         	movff	?___fldiv+2,_EUSART_Baud_Rate_Calculation$4290+2
  8923  001750  C089  F0BA         	movff	?___fldiv+3,_EUSART_Baud_Rate_Calculation$4290+3
  8924  001754                     
  8925                           ;MCAL/USART/usart.c: 144:             Baud_Rate_Temp = ((8000000 / (float)_eusart->baudr
      +                          ate) / 64) - 1;
  8926  001754  0E00               	movlw	0
  8927  001756  0100               	movlb	0	; () banked
  8928  001758  6F8A               	movwf	___fldiv@a& (0+255),b
  8929  00175A  0E00               	movlw	0
  8930  00175C  6F8B               	movwf	(___fldiv@a+1)& (0+255),b
  8931  00175E  0E80               	movlw	128
  8932  001760  6F8C               	movwf	(___fldiv@a+2)& (0+255),b
  8933  001762  0E42               	movlw	66
  8934  001764  6F8D               	movwf	(___fldiv@a+3)& (0+255),b
  8935  001766  C0B7  F086         	movff	_EUSART_Baud_Rate_Calculation$4290,___fldiv@b
  8936  00176A  C0B8  F087         	movff	_EUSART_Baud_Rate_Calculation$4290+1,___fldiv@b+1
  8937  00176E  C0B9  F088         	movff	_EUSART_Baud_Rate_Calculation$4290+2,___fldiv@b+2
  8938  001772  C0BA  F089         	movff	_EUSART_Baud_Rate_Calculation$4290+3,___fldiv@b+3
  8939  001776  EC5B  F010         	call	___fldiv	;wreg free
  8940  00177A  C086  F09F         	movff	?___fldiv,___fladd@b
  8941  00177E  C087  F0A0         	movff	?___fldiv+1,___fladd@b+1
  8942  001782  C088  F0A1         	movff	?___fldiv+2,___fladd@b+2
  8943  001786  C089  F0A2         	movff	?___fldiv+3,___fladd@b+3
  8944  00178A  0E00               	movlw	0
  8945  00178C  0100               	movlb	0	; () banked
  8946  00178E  6FA3               	movwf	___fladd@a& (0+255),b
  8947  001790  0E00               	movlw	0
  8948  001792  6FA4               	movwf	(___fladd@a+1)& (0+255),b
  8949  001794  0E80               	movlw	128
  8950  001796  6FA5               	movwf	(___fladd@a+2)& (0+255),b
  8951  001798  0EBF               	movlw	191
  8952  00179A  6FA6               	movwf	(___fladd@a+3)& (0+255),b
  8953  00179C  ECFA  F00D         	call	___fladd	;wreg free
  8954  0017A0  C09F  F0B3         	movff	?___fladd,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp
  8955  0017A4  C0A0  F0B4         	movff	?___fladd+1,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+1
  8956  0017A8  C0A1  F0B5         	movff	?___fladd+2,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+2
  8957  0017AC  C0A2  F0B6         	movff	?___fladd+3,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+3
  8958                           
  8959                           ;MCAL/USART/usart.c: 145:             break;
  8960  0017B0  EFDE  F00D         	goto	l12243
  8961  0017B4                     l884:
  8962                           
  8963                           ; BSR set to: 0
  8964                           ;MCAL/USART/usart.c: 147:             TXSTAbits.SYNC = 0;
  8965  0017B4  98AC               	bcf	172,4,c	;volatile
  8966                           
  8967                           ;MCAL/USART/usart.c: 148:             TXSTAbits.BRGH = 1;
  8968  0017B6  84AC               	bsf	172,2,c	;volatile
  8969                           
  8970                           ;MCAL/USART/usart.c: 149:             BAUDCONbits.BRG16 = 0;
  8971  0017B8  96B8               	bcf	184,3,c	;volatile
  8972  0017BA                     
  8973                           ; BSR set to: 0
  8974                           ;MCAL/USART/usart.c: 150:             Baud_Rate_Temp = ((8000000 / (float)_eusart->baudr
      +                          ate) / 16) - 1;
  8975  0017BA  C0AF  FFD9         	movff	EUSART_Baud_Rate_Calculation@_eusart,fsr2l
  8976  0017BE  C0B0  FFDA         	movff	EUSART_Baud_Rate_Calculation@_eusart+1,fsr2h
  8977  0017C2  CFDE F0B1          	movff	postinc2,??_EUSART_Baud_Rate_Calculation
  8978  0017C6  CFDD F0B2          	movff	postdec2,??_EUSART_Baud_Rate_Calculation+1
  8979  0017CA  C0B1  F027         	movff	??_EUSART_Baud_Rate_Calculation,___xxtofl@val
  8980  0017CE  C0B2  F028         	movff	??_EUSART_Baud_Rate_Calculation+1,___xxtofl@val+1
  8981  0017D2  6A29               	clrf	(___xxtofl@val+2)^0,c
  8982  0017D4  6A2A               	clrf	(___xxtofl@val+3)^0,c
  8983  0017D6  0E00               	movlw	0
  8984  0017D8  EC20  F016         	call	___xxtofl
  8985  0017DC  C027  F08A         	movff	?___xxtofl,___fldiv@a
  8986  0017E0  C028  F08B         	movff	?___xxtofl+1,___fldiv@a+1
  8987  0017E4  C029  F08C         	movff	?___xxtofl+2,___fldiv@a+2
  8988  0017E8  C02A  F08D         	movff	?___xxtofl+3,___fldiv@a+3
  8989  0017EC  0E00               	movlw	0
  8990  0017EE  0100               	movlb	0	; () banked
  8991  0017F0  6F86               	movwf	___fldiv@b& (0+255),b
  8992  0017F2  0E24               	movlw	36
  8993  0017F4  6F87               	movwf	(___fldiv@b+1)& (0+255),b
  8994  0017F6  0EF4               	movlw	244
  8995  0017F8  6F88               	movwf	(___fldiv@b+2)& (0+255),b
  8996  0017FA  0E4A               	movlw	74
  8997  0017FC  6F89               	movwf	(___fldiv@b+3)& (0+255),b
  8998  0017FE  EC5B  F010         	call	___fldiv	;wreg free
  8999  001802  C086  F0B7         	movff	?___fldiv,_EUSART_Baud_Rate_Calculation$4290
  9000  001806  C087  F0B8         	movff	?___fldiv+1,_EUSART_Baud_Rate_Calculation$4290+1
  9001  00180A  C088  F0B9         	movff	?___fldiv+2,_EUSART_Baud_Rate_Calculation$4290+2
  9002  00180E  C089  F0BA         	movff	?___fldiv+3,_EUSART_Baud_Rate_Calculation$4290+3
  9003  001812                     
  9004                           ;MCAL/USART/usart.c: 150:             Baud_Rate_Temp = ((8000000 / (float)_eusart->baudr
      +                          ate) / 16) - 1;
  9005  001812  0E00               	movlw	0
  9006  001814  0100               	movlb	0	; () banked
  9007  001816  6F8A               	movwf	___fldiv@a& (0+255),b
  9008  001818  0E00               	movlw	0
  9009  00181A  6F8B               	movwf	(___fldiv@a+1)& (0+255),b
  9010  00181C  0E80               	movlw	128
  9011  00181E  6F8C               	movwf	(___fldiv@a+2)& (0+255),b
  9012  001820  0E41               	movlw	65
  9013  001822  6F8D               	movwf	(___fldiv@a+3)& (0+255),b
  9014  001824  C0B7  F086         	movff	_EUSART_Baud_Rate_Calculation$4290,___fldiv@b
  9015  001828  C0B8  F087         	movff	_EUSART_Baud_Rate_Calculation$4290+1,___fldiv@b+1
  9016  00182C  C0B9  F088         	movff	_EUSART_Baud_Rate_Calculation$4290+2,___fldiv@b+2
  9017  001830  C0BA  F089         	movff	_EUSART_Baud_Rate_Calculation$4290+3,___fldiv@b+3
  9018  001834  EC5B  F010         	call	___fldiv	;wreg free
  9019  001838  C086  F09F         	movff	?___fldiv,___fladd@b
  9020  00183C  C087  F0A0         	movff	?___fldiv+1,___fladd@b+1
  9021  001840  C088  F0A1         	movff	?___fldiv+2,___fladd@b+2
  9022  001844  C089  F0A2         	movff	?___fldiv+3,___fladd@b+3
  9023  001848  0E00               	movlw	0
  9024  00184A  0100               	movlb	0	; () banked
  9025  00184C  6FA3               	movwf	___fladd@a& (0+255),b
  9026  00184E  0E00               	movlw	0
  9027  001850  6FA4               	movwf	(___fladd@a+1)& (0+255),b
  9028  001852  0E80               	movlw	128
  9029  001854  6FA5               	movwf	(___fladd@a+2)& (0+255),b
  9030  001856  0EBF               	movlw	191
  9031  001858  6FA6               	movwf	(___fladd@a+3)& (0+255),b
  9032  00185A  ECFA  F00D         	call	___fladd	;wreg free
  9033  00185E  C09F  F0B3         	movff	?___fladd,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp
  9034  001862  C0A0  F0B4         	movff	?___fladd+1,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+1
  9035  001866  C0A1  F0B5         	movff	?___fladd+2,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+2
  9036  00186A  C0A2  F0B6         	movff	?___fladd+3,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+3
  9037                           
  9038                           ;MCAL/USART/usart.c: 151:             break;
  9039  00186E  EFDE  F00D         	goto	l12243
  9040  001872                     l885:
  9041                           
  9042                           ; BSR set to: 0
  9043                           ;MCAL/USART/usart.c: 153:             TXSTAbits.SYNC = 0;
  9044  001872  98AC               	bcf	172,4,c	;volatile
  9045                           
  9046                           ;MCAL/USART/usart.c: 154:             TXSTAbits.BRGH = 0;
  9047  001874  94AC               	bcf	172,2,c	;volatile
  9048                           
  9049                           ;MCAL/USART/usart.c: 155:             BAUDCONbits.BRG16 = 1;
  9050  001876  86B8               	bsf	184,3,c	;volatile
  9051  001878                     
  9052                           ; BSR set to: 0
  9053                           ;MCAL/USART/usart.c: 156:             Baud_Rate_Temp = ((8000000 / (float)_eusart->baudr
      +                          ate) / 16) - 1;
  9054  001878  C0AF  FFD9         	movff	EUSART_Baud_Rate_Calculation@_eusart,fsr2l
  9055  00187C  C0B0  FFDA         	movff	EUSART_Baud_Rate_Calculation@_eusart+1,fsr2h
  9056  001880  CFDE F0B1          	movff	postinc2,??_EUSART_Baud_Rate_Calculation
  9057  001884  CFDD F0B2          	movff	postdec2,??_EUSART_Baud_Rate_Calculation+1
  9058  001888  C0B1  F027         	movff	??_EUSART_Baud_Rate_Calculation,___xxtofl@val
  9059  00188C  C0B2  F028         	movff	??_EUSART_Baud_Rate_Calculation+1,___xxtofl@val+1
  9060  001890  6A29               	clrf	(___xxtofl@val+2)^0,c
  9061  001892  6A2A               	clrf	(___xxtofl@val+3)^0,c
  9062  001894  0E00               	movlw	0
  9063  001896  EC20  F016         	call	___xxtofl
  9064  00189A  C027  F08A         	movff	?___xxtofl,___fldiv@a
  9065  00189E  C028  F08B         	movff	?___xxtofl+1,___fldiv@a+1
  9066  0018A2  C029  F08C         	movff	?___xxtofl+2,___fldiv@a+2
  9067  0018A6  C02A  F08D         	movff	?___xxtofl+3,___fldiv@a+3
  9068  0018AA  0E00               	movlw	0
  9069  0018AC  0100               	movlb	0	; () banked
  9070  0018AE  6F86               	movwf	___fldiv@b& (0+255),b
  9071  0018B0  0E24               	movlw	36
  9072  0018B2  6F87               	movwf	(___fldiv@b+1)& (0+255),b
  9073  0018B4  0EF4               	movlw	244
  9074  0018B6  6F88               	movwf	(___fldiv@b+2)& (0+255),b
  9075  0018B8  0E4A               	movlw	74
  9076  0018BA  6F89               	movwf	(___fldiv@b+3)& (0+255),b
  9077  0018BC  EC5B  F010         	call	___fldiv	;wreg free
  9078  0018C0  C086  F0B7         	movff	?___fldiv,_EUSART_Baud_Rate_Calculation$4290
  9079  0018C4  C087  F0B8         	movff	?___fldiv+1,_EUSART_Baud_Rate_Calculation$4290+1
  9080  0018C8  C088  F0B9         	movff	?___fldiv+2,_EUSART_Baud_Rate_Calculation$4290+2
  9081  0018CC  C089  F0BA         	movff	?___fldiv+3,_EUSART_Baud_Rate_Calculation$4290+3
  9082  0018D0                     
  9083                           ;MCAL/USART/usart.c: 156:             Baud_Rate_Temp = ((8000000 / (float)_eusart->baudr
      +                          ate) / 16) - 1;
  9084  0018D0  0E00               	movlw	0
  9085  0018D2  0100               	movlb	0	; () banked
  9086  0018D4  6F8A               	movwf	___fldiv@a& (0+255),b
  9087  0018D6  0E00               	movlw	0
  9088  0018D8  6F8B               	movwf	(___fldiv@a+1)& (0+255),b
  9089  0018DA  0E80               	movlw	128
  9090  0018DC  6F8C               	movwf	(___fldiv@a+2)& (0+255),b
  9091  0018DE  0E41               	movlw	65
  9092  0018E0  6F8D               	movwf	(___fldiv@a+3)& (0+255),b
  9093  0018E2  C0B7  F086         	movff	_EUSART_Baud_Rate_Calculation$4290,___fldiv@b
  9094  0018E6  C0B8  F087         	movff	_EUSART_Baud_Rate_Calculation$4290+1,___fldiv@b+1
  9095  0018EA  C0B9  F088         	movff	_EUSART_Baud_Rate_Calculation$4290+2,___fldiv@b+2
  9096  0018EE  C0BA  F089         	movff	_EUSART_Baud_Rate_Calculation$4290+3,___fldiv@b+3
  9097  0018F2  EC5B  F010         	call	___fldiv	;wreg free
  9098  0018F6  C086  F09F         	movff	?___fldiv,___fladd@b
  9099  0018FA  C087  F0A0         	movff	?___fldiv+1,___fladd@b+1
  9100  0018FE  C088  F0A1         	movff	?___fldiv+2,___fladd@b+2
  9101  001902  C089  F0A2         	movff	?___fldiv+3,___fladd@b+3
  9102  001906  0E00               	movlw	0
  9103  001908  0100               	movlb	0	; () banked
  9104  00190A  6FA3               	movwf	___fladd@a& (0+255),b
  9105  00190C  0E00               	movlw	0
  9106  00190E  6FA4               	movwf	(___fladd@a+1)& (0+255),b
  9107  001910  0E80               	movlw	128
  9108  001912  6FA5               	movwf	(___fladd@a+2)& (0+255),b
  9109  001914  0EBF               	movlw	191
  9110  001916  6FA6               	movwf	(___fladd@a+3)& (0+255),b
  9111  001918  ECFA  F00D         	call	___fladd	;wreg free
  9112  00191C  C09F  F0B3         	movff	?___fladd,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp
  9113  001920  C0A0  F0B4         	movff	?___fladd+1,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+1
  9114  001924  C0A1  F0B5         	movff	?___fladd+2,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+2
  9115  001928  C0A2  F0B6         	movff	?___fladd+3,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+3
  9116                           
  9117                           ;MCAL/USART/usart.c: 157:             break;
  9118  00192C  EFDE  F00D         	goto	l12243
  9119  001930                     l886:
  9120                           
  9121                           ; BSR set to: 0
  9122                           ;MCAL/USART/usart.c: 159:             TXSTAbits.SYNC = 0;
  9123  001930  98AC               	bcf	172,4,c	;volatile
  9124                           
  9125                           ;MCAL/USART/usart.c: 160:             TXSTAbits.BRGH = 1;
  9126  001932  84AC               	bsf	172,2,c	;volatile
  9127                           
  9128                           ;MCAL/USART/usart.c: 161:             BAUDCONbits.BRG16 = 1;
  9129  001934  86B8               	bsf	184,3,c	;volatile
  9130  001936                     
  9131                           ; BSR set to: 0
  9132                           ;MCAL/USART/usart.c: 162:             Baud_Rate_Temp = ((8000000 / (float)_eusart->baudr
      +                          ate) / 4) - 1;
  9133  001936  C0AF  FFD9         	movff	EUSART_Baud_Rate_Calculation@_eusart,fsr2l
  9134  00193A  C0B0  FFDA         	movff	EUSART_Baud_Rate_Calculation@_eusart+1,fsr2h
  9135  00193E  CFDE F0B1          	movff	postinc2,??_EUSART_Baud_Rate_Calculation
  9136  001942  CFDD F0B2          	movff	postdec2,??_EUSART_Baud_Rate_Calculation+1
  9137  001946  C0B1  F027         	movff	??_EUSART_Baud_Rate_Calculation,___xxtofl@val
  9138  00194A  C0B2  F028         	movff	??_EUSART_Baud_Rate_Calculation+1,___xxtofl@val+1
  9139  00194E  6A29               	clrf	(___xxtofl@val+2)^0,c
  9140  001950  6A2A               	clrf	(___xxtofl@val+3)^0,c
  9141  001952  0E00               	movlw	0
  9142  001954  EC20  F016         	call	___xxtofl
  9143  001958  C027  F08A         	movff	?___xxtofl,___fldiv@a
  9144  00195C  C028  F08B         	movff	?___xxtofl+1,___fldiv@a+1
  9145  001960  C029  F08C         	movff	?___xxtofl+2,___fldiv@a+2
  9146  001964  C02A  F08D         	movff	?___xxtofl+3,___fldiv@a+3
  9147  001968  0E00               	movlw	0
  9148  00196A  0100               	movlb	0	; () banked
  9149  00196C  6F86               	movwf	___fldiv@b& (0+255),b
  9150  00196E  0E24               	movlw	36
  9151  001970  6F87               	movwf	(___fldiv@b+1)& (0+255),b
  9152  001972  0EF4               	movlw	244
  9153  001974  6F88               	movwf	(___fldiv@b+2)& (0+255),b
  9154  001976  0E4A               	movlw	74
  9155  001978  6F89               	movwf	(___fldiv@b+3)& (0+255),b
  9156  00197A  EC5B  F010         	call	___fldiv	;wreg free
  9157  00197E  C086  F0B7         	movff	?___fldiv,_EUSART_Baud_Rate_Calculation$4290
  9158  001982  C087  F0B8         	movff	?___fldiv+1,_EUSART_Baud_Rate_Calculation$4290+1
  9159  001986  C088  F0B9         	movff	?___fldiv+2,_EUSART_Baud_Rate_Calculation$4290+2
  9160  00198A  C089  F0BA         	movff	?___fldiv+3,_EUSART_Baud_Rate_Calculation$4290+3
  9161  00198E                     
  9162                           ;MCAL/USART/usart.c: 162:             Baud_Rate_Temp = ((8000000 / (float)_eusart->baudr
      +                          ate) / 4) - 1;
  9163  00198E  0E00               	movlw	0
  9164  001990  0100               	movlb	0	; () banked
  9165  001992  6F8A               	movwf	___fldiv@a& (0+255),b
  9166  001994  0E00               	movlw	0
  9167  001996  6F8B               	movwf	(___fldiv@a+1)& (0+255),b
  9168  001998  0E80               	movlw	128
  9169  00199A  6F8C               	movwf	(___fldiv@a+2)& (0+255),b
  9170  00199C  0E40               	movlw	64
  9171  00199E  6F8D               	movwf	(___fldiv@a+3)& (0+255),b
  9172  0019A0  C0B7  F086         	movff	_EUSART_Baud_Rate_Calculation$4290,___fldiv@b
  9173  0019A4  C0B8  F087         	movff	_EUSART_Baud_Rate_Calculation$4290+1,___fldiv@b+1
  9174  0019A8  C0B9  F088         	movff	_EUSART_Baud_Rate_Calculation$4290+2,___fldiv@b+2
  9175  0019AC  C0BA  F089         	movff	_EUSART_Baud_Rate_Calculation$4290+3,___fldiv@b+3
  9176  0019B0  EC5B  F010         	call	___fldiv	;wreg free
  9177  0019B4  C086  F09F         	movff	?___fldiv,___fladd@b
  9178  0019B8  C087  F0A0         	movff	?___fldiv+1,___fladd@b+1
  9179  0019BC  C088  F0A1         	movff	?___fldiv+2,___fladd@b+2
  9180  0019C0  C089  F0A2         	movff	?___fldiv+3,___fladd@b+3
  9181  0019C4  0E00               	movlw	0
  9182  0019C6  0100               	movlb	0	; () banked
  9183  0019C8  6FA3               	movwf	___fladd@a& (0+255),b
  9184  0019CA  0E00               	movlw	0
  9185  0019CC  6FA4               	movwf	(___fladd@a+1)& (0+255),b
  9186  0019CE  0E80               	movlw	128
  9187  0019D0  6FA5               	movwf	(___fladd@a+2)& (0+255),b
  9188  0019D2  0EBF               	movlw	191
  9189  0019D4  6FA6               	movwf	(___fladd@a+3)& (0+255),b
  9190  0019D6  ECFA  F00D         	call	___fladd	;wreg free
  9191  0019DA  C09F  F0B3         	movff	?___fladd,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp
  9192  0019DE  C0A0  F0B4         	movff	?___fladd+1,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+1
  9193  0019E2  C0A1  F0B5         	movff	?___fladd+2,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+2
  9194  0019E6  C0A2  F0B6         	movff	?___fladd+3,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+3
  9195                           
  9196                           ;MCAL/USART/usart.c: 163:             break;
  9197  0019EA  EFDE  F00D         	goto	l12243
  9198  0019EE                     l887:
  9199                           
  9200                           ; BSR set to: 0
  9201                           ;MCAL/USART/usart.c: 165:             TXSTAbits.SYNC = 1;
  9202  0019EE  88AC               	bsf	172,4,c	;volatile
  9203                           
  9204                           ;MCAL/USART/usart.c: 166:             BAUDCONbits.BRG16 = 0;
  9205  0019F0  96B8               	bcf	184,3,c	;volatile
  9206  0019F2                     
  9207                           ; BSR set to: 0
  9208                           ;MCAL/USART/usart.c: 167:             Baud_Rate_Temp = ((8000000 / (float)_eusart->baudr
      +                          ate) / 4) - 1;
  9209  0019F2  C0AF  FFD9         	movff	EUSART_Baud_Rate_Calculation@_eusart,fsr2l
  9210  0019F6  C0B0  FFDA         	movff	EUSART_Baud_Rate_Calculation@_eusart+1,fsr2h
  9211  0019FA  CFDE F0B1          	movff	postinc2,??_EUSART_Baud_Rate_Calculation
  9212  0019FE  CFDD F0B2          	movff	postdec2,??_EUSART_Baud_Rate_Calculation+1
  9213  001A02  C0B1  F027         	movff	??_EUSART_Baud_Rate_Calculation,___xxtofl@val
  9214  001A06  C0B2  F028         	movff	??_EUSART_Baud_Rate_Calculation+1,___xxtofl@val+1
  9215  001A0A  6A29               	clrf	(___xxtofl@val+2)^0,c
  9216  001A0C  6A2A               	clrf	(___xxtofl@val+3)^0,c
  9217  001A0E  0E00               	movlw	0
  9218  001A10  EC20  F016         	call	___xxtofl
  9219  001A14  C027  F08A         	movff	?___xxtofl,___fldiv@a
  9220  001A18  C028  F08B         	movff	?___xxtofl+1,___fldiv@a+1
  9221  001A1C  C029  F08C         	movff	?___xxtofl+2,___fldiv@a+2
  9222  001A20  C02A  F08D         	movff	?___xxtofl+3,___fldiv@a+3
  9223  001A24  0E00               	movlw	0
  9224  001A26  0100               	movlb	0	; () banked
  9225  001A28  6F86               	movwf	___fldiv@b& (0+255),b
  9226  001A2A  0E24               	movlw	36
  9227  001A2C  6F87               	movwf	(___fldiv@b+1)& (0+255),b
  9228  001A2E  0EF4               	movlw	244
  9229  001A30  6F88               	movwf	(___fldiv@b+2)& (0+255),b
  9230  001A32  0E4A               	movlw	74
  9231  001A34  6F89               	movwf	(___fldiv@b+3)& (0+255),b
  9232  001A36  EC5B  F010         	call	___fldiv	;wreg free
  9233  001A3A  C086  F0B7         	movff	?___fldiv,_EUSART_Baud_Rate_Calculation$4290
  9234  001A3E  C087  F0B8         	movff	?___fldiv+1,_EUSART_Baud_Rate_Calculation$4290+1
  9235  001A42  C088  F0B9         	movff	?___fldiv+2,_EUSART_Baud_Rate_Calculation$4290+2
  9236  001A46  C089  F0BA         	movff	?___fldiv+3,_EUSART_Baud_Rate_Calculation$4290+3
  9237  001A4A                     
  9238                           ;MCAL/USART/usart.c: 167:             Baud_Rate_Temp = ((8000000 / (float)_eusart->baudr
      +                          ate) / 4) - 1;
  9239  001A4A  0E00               	movlw	0
  9240  001A4C  0100               	movlb	0	; () banked
  9241  001A4E  6F8A               	movwf	___fldiv@a& (0+255),b
  9242  001A50  0E00               	movlw	0
  9243  001A52  6F8B               	movwf	(___fldiv@a+1)& (0+255),b
  9244  001A54  0E80               	movlw	128
  9245  001A56  6F8C               	movwf	(___fldiv@a+2)& (0+255),b
  9246  001A58  0E40               	movlw	64
  9247  001A5A  6F8D               	movwf	(___fldiv@a+3)& (0+255),b
  9248  001A5C  C0B7  F086         	movff	_EUSART_Baud_Rate_Calculation$4290,___fldiv@b
  9249  001A60  C0B8  F087         	movff	_EUSART_Baud_Rate_Calculation$4290+1,___fldiv@b+1
  9250  001A64  C0B9  F088         	movff	_EUSART_Baud_Rate_Calculation$4290+2,___fldiv@b+2
  9251  001A68  C0BA  F089         	movff	_EUSART_Baud_Rate_Calculation$4290+3,___fldiv@b+3
  9252  001A6C  EC5B  F010         	call	___fldiv	;wreg free
  9253  001A70  C086  F09F         	movff	?___fldiv,___fladd@b
  9254  001A74  C087  F0A0         	movff	?___fldiv+1,___fladd@b+1
  9255  001A78  C088  F0A1         	movff	?___fldiv+2,___fladd@b+2
  9256  001A7C  C089  F0A2         	movff	?___fldiv+3,___fladd@b+3
  9257  001A80  0E00               	movlw	0
  9258  001A82  0100               	movlb	0	; () banked
  9259  001A84  6FA3               	movwf	___fladd@a& (0+255),b
  9260  001A86  0E00               	movlw	0
  9261  001A88  6FA4               	movwf	(___fladd@a+1)& (0+255),b
  9262  001A8A  0E80               	movlw	128
  9263  001A8C  6FA5               	movwf	(___fladd@a+2)& (0+255),b
  9264  001A8E  0EBF               	movlw	191
  9265  001A90  6FA6               	movwf	(___fladd@a+3)& (0+255),b
  9266  001A92  ECFA  F00D         	call	___fladd	;wreg free
  9267  001A96  C09F  F0B3         	movff	?___fladd,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp
  9268  001A9A  C0A0  F0B4         	movff	?___fladd+1,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+1
  9269  001A9E  C0A1  F0B5         	movff	?___fladd+2,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+2
  9270  001AA2  C0A2  F0B6         	movff	?___fladd+3,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+3
  9271                           
  9272                           ;MCAL/USART/usart.c: 168:             break;
  9273  001AA6  EFDE  F00D         	goto	l12243
  9274  001AAA                     l888:
  9275                           
  9276                           ; BSR set to: 0
  9277                           ;MCAL/USART/usart.c: 170:             TXSTAbits.SYNC = 1;
  9278  001AAA  88AC               	bsf	172,4,c	;volatile
  9279                           
  9280                           ;MCAL/USART/usart.c: 171:             BAUDCONbits.BRG16 = 1;
  9281  001AAC  86B8               	bsf	184,3,c	;volatile
  9282  001AAE                     
  9283                           ; BSR set to: 0
  9284                           ;MCAL/USART/usart.c: 172:             Baud_Rate_Temp = ((8000000 / (float)_eusart->baudr
      +                          ate) / 4) - 1;
  9285  001AAE  C0AF  FFD9         	movff	EUSART_Baud_Rate_Calculation@_eusart,fsr2l
  9286  001AB2  C0B0  FFDA         	movff	EUSART_Baud_Rate_Calculation@_eusart+1,fsr2h
  9287  001AB6  CFDE F0B1          	movff	postinc2,??_EUSART_Baud_Rate_Calculation
  9288  001ABA  CFDD F0B2          	movff	postdec2,??_EUSART_Baud_Rate_Calculation+1
  9289  001ABE  C0B1  F027         	movff	??_EUSART_Baud_Rate_Calculation,___xxtofl@val
  9290  001AC2  C0B2  F028         	movff	??_EUSART_Baud_Rate_Calculation+1,___xxtofl@val+1
  9291  001AC6  6A29               	clrf	(___xxtofl@val+2)^0,c
  9292  001AC8  6A2A               	clrf	(___xxtofl@val+3)^0,c
  9293  001ACA  0E00               	movlw	0
  9294  001ACC  EC20  F016         	call	___xxtofl
  9295  001AD0  C027  F08A         	movff	?___xxtofl,___fldiv@a
  9296  001AD4  C028  F08B         	movff	?___xxtofl+1,___fldiv@a+1
  9297  001AD8  C029  F08C         	movff	?___xxtofl+2,___fldiv@a+2
  9298  001ADC  C02A  F08D         	movff	?___xxtofl+3,___fldiv@a+3
  9299  001AE0  0E00               	movlw	0
  9300  001AE2  0100               	movlb	0	; () banked
  9301  001AE4  6F86               	movwf	___fldiv@b& (0+255),b
  9302  001AE6  0E24               	movlw	36
  9303  001AE8  6F87               	movwf	(___fldiv@b+1)& (0+255),b
  9304  001AEA  0EF4               	movlw	244
  9305  001AEC  6F88               	movwf	(___fldiv@b+2)& (0+255),b
  9306  001AEE  0E4A               	movlw	74
  9307  001AF0  6F89               	movwf	(___fldiv@b+3)& (0+255),b
  9308  001AF2  EC5B  F010         	call	___fldiv	;wreg free
  9309  001AF6  C086  F0B7         	movff	?___fldiv,_EUSART_Baud_Rate_Calculation$4290
  9310  001AFA  C087  F0B8         	movff	?___fldiv+1,_EUSART_Baud_Rate_Calculation$4290+1
  9311  001AFE  C088  F0B9         	movff	?___fldiv+2,_EUSART_Baud_Rate_Calculation$4290+2
  9312  001B02  C089  F0BA         	movff	?___fldiv+3,_EUSART_Baud_Rate_Calculation$4290+3
  9313  001B06                     
  9314                           ;MCAL/USART/usart.c: 172:             Baud_Rate_Temp = ((8000000 / (float)_eusart->baudr
      +                          ate) / 4) - 1;
  9315  001B06  0E00               	movlw	0
  9316  001B08  0100               	movlb	0	; () banked
  9317  001B0A  6F8A               	movwf	___fldiv@a& (0+255),b
  9318  001B0C  0E00               	movlw	0
  9319  001B0E  6F8B               	movwf	(___fldiv@a+1)& (0+255),b
  9320  001B10  0E80               	movlw	128
  9321  001B12  6F8C               	movwf	(___fldiv@a+2)& (0+255),b
  9322  001B14  0E40               	movlw	64
  9323  001B16  6F8D               	movwf	(___fldiv@a+3)& (0+255),b
  9324  001B18  C0B7  F086         	movff	_EUSART_Baud_Rate_Calculation$4290,___fldiv@b
  9325  001B1C  C0B8  F087         	movff	_EUSART_Baud_Rate_Calculation$4290+1,___fldiv@b+1
  9326  001B20  C0B9  F088         	movff	_EUSART_Baud_Rate_Calculation$4290+2,___fldiv@b+2
  9327  001B24  C0BA  F089         	movff	_EUSART_Baud_Rate_Calculation$4290+3,___fldiv@b+3
  9328  001B28  EC5B  F010         	call	___fldiv	;wreg free
  9329  001B2C  C086  F09F         	movff	?___fldiv,___fladd@b
  9330  001B30  C087  F0A0         	movff	?___fldiv+1,___fladd@b+1
  9331  001B34  C088  F0A1         	movff	?___fldiv+2,___fladd@b+2
  9332  001B38  C089  F0A2         	movff	?___fldiv+3,___fladd@b+3
  9333  001B3C  0E00               	movlw	0
  9334  001B3E  0100               	movlb	0	; () banked
  9335  001B40  6FA3               	movwf	___fladd@a& (0+255),b
  9336  001B42  0E00               	movlw	0
  9337  001B44  6FA4               	movwf	(___fladd@a+1)& (0+255),b
  9338  001B46  0E80               	movlw	128
  9339  001B48  6FA5               	movwf	(___fladd@a+2)& (0+255),b
  9340  001B4A  0EBF               	movlw	191
  9341  001B4C  6FA6               	movwf	(___fladd@a+3)& (0+255),b
  9342  001B4E  ECFA  F00D         	call	___fladd	;wreg free
  9343  001B52  C09F  F0B3         	movff	?___fladd,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp
  9344  001B56  C0A0  F0B4         	movff	?___fladd+1,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+1
  9345  001B5A  C0A1  F0B5         	movff	?___fladd+2,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+2
  9346  001B5E  C0A2  F0B6         	movff	?___fladd+3,EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+3
  9347                           
  9348                           ;MCAL/USART/usart.c: 173:             break;
  9349  001B62  EFDE  F00D         	goto	l12243
  9350  001B66                     l12241:
  9351                           
  9352                           ; BSR set to: 0
  9353  001B66  EE20 F002          	lfsr	2,2
  9354  001B6A  51AF               	movf	EUSART_Baud_Rate_Calculation@_eusart& (0+255),w,b
  9355  001B6C  26D9               	addwf	fsr2l,f,c
  9356  001B6E  51B0               	movf	(EUSART_Baud_Rate_Calculation@_eusart+1)& (0+255),w,b
  9357  001B70  22DA               	addwfc	fsr2h,f,c
  9358  001B72  50DF               	movf	indf2,w,c
  9359  001B74  6FB1               	movwf	??_EUSART_Baud_Rate_Calculation& (0+255),b
  9360  001B76  6BB2               	clrf	(??_EUSART_Baud_Rate_Calculation+1)& (0+255),b
  9361                           
  9362                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9363                           ; Switch size 1, requested type "simple"
  9364                           ; Number of cases is 1, Range of values is 0 to 0
  9365                           ; switch strategies available:
  9366                           ; Name         Instructions Cycles
  9367                           ; simple_byte            4     3 (average)
  9368                           ;	Chosen strategy is simple_byte
  9369  001B78  51B2               	movf	(??_EUSART_Baud_Rate_Calculation+1)& (0+255),w,b
  9370  001B7A  0A00               	xorlw	0	; case 0
  9371  001B7C  B4D8               	btfsc	status,2,c
  9372  001B7E  EFC3  F00D         	goto	l13663
  9373  001B82  EFDE  F00D         	goto	l12243
  9374  001B86                     l13663:
  9375                           
  9376                           ; BSR set to: 0
  9377                           ; Switch size 1, requested type "simple"
  9378                           ; Number of cases is 6, Range of values is 0 to 5
  9379                           ; switch strategies available:
  9380                           ; Name         Instructions Cycles
  9381                           ; simple_byte           19    10 (average)
  9382                           ;	Chosen strategy is simple_byte
  9383  001B86  51B1               	movf	??_EUSART_Baud_Rate_Calculation& (0+255),w,b
  9384  001B88  0A00               	xorlw	0	; case 0
  9385  001B8A  B4D8               	btfsc	status,2,c
  9386  001B8C  EF7B  F00B         	goto	l882
  9387  001B90  0A01               	xorlw	1	; case 1
  9388  001B92  B4D8               	btfsc	status,2,c
  9389  001B94  EFDA  F00B         	goto	l884
  9390  001B98  0A03               	xorlw	3	; case 2
  9391  001B9A  B4D8               	btfsc	status,2,c
  9392  001B9C  EF39  F00C         	goto	l885
  9393  001BA0  0A01               	xorlw	1	; case 3
  9394  001BA2  B4D8               	btfsc	status,2,c
  9395  001BA4  EF98  F00C         	goto	l886
  9396  001BA8  0A07               	xorlw	7	; case 4
  9397  001BAA  B4D8               	btfsc	status,2,c
  9398  001BAC  EFF7  F00C         	goto	l887
  9399  001BB0  0A01               	xorlw	1	; case 5
  9400  001BB2  B4D8               	btfsc	status,2,c
  9401  001BB4  EF55  F00D         	goto	l888
  9402  001BB8  EFDE  F00D         	goto	l12243
  9403  001BBC                     l12243:
  9404                           
  9405                           ;MCAL/USART/usart.c: 176:     SPBRG = (uint8)((uint32)Baud_Rate_Temp);
  9406  001BBC  C0B3  F027         	movff	EUSART_Baud_Rate_Calculation@Baud_Rate_Temp,___fltol@f1
  9407  001BC0  C0B4  F028         	movff	EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+1,___fltol@f1+1
  9408  001BC4  C0B5  F029         	movff	EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+2,___fltol@f1+2
  9409  001BC8  C0B6  F02A         	movff	EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+3,___fltol@f1+3
  9410  001BCC  EC59  F01D         	call	___fltol	;wreg free
  9411  001BD0  5027               	movf	?___fltol^0,w,c
  9412  001BD2  6EAF               	movwf	175,c	;volatile
  9413                           
  9414                           ;MCAL/USART/usart.c: 177:     SPBRGH = (uint8)(((uint32)Baud_Rate_Temp) >> 8);
  9415  001BD4  C0B3  F027         	movff	EUSART_Baud_Rate_Calculation@Baud_Rate_Temp,___fltol@f1
  9416  001BD8  C0B4  F028         	movff	EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+1,___fltol@f1+1
  9417  001BDC  C0B5  F029         	movff	EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+2,___fltol@f1+2
  9418  001BE0  C0B6  F02A         	movff	EUSART_Baud_Rate_Calculation@Baud_Rate_Temp+3,___fltol@f1+3
  9419  001BE4  EC59  F01D         	call	___fltol	;wreg free
  9420  001BE8  C028  F027         	movff	?___fltol+1,?___fltol
  9421  001BEC  6A28               	clrf	(?___fltol+1)^0,c
  9422  001BEE  5027               	movf	?___fltol^0,w,c
  9423  001BF0  6EB0               	movwf	176,c	;volatile
  9424  001BF2  0012               	return		;funcret
  9425  001BF4                     __end_of_EUSART_Baud_Rate_Calculation:
  9426                           	callstack 0
  9427                           
  9428 ;; *************** function ___xxtofl *****************
  9429 ;; Defined at:
  9430 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
  9431 ;; Parameters:    Size  Location     Type
  9432 ;;  sign            1    wreg     unsigned char 
  9433 ;;  val             4   38[COMRAM] long 
  9434 ;; Auto vars:     Size  Location     Type
  9435 ;;  sign            1    0[BANK0 ] unsigned char 
  9436 ;;  arg             4    2[BANK0 ] unsigned long 
  9437 ;;  exp             1    1[BANK0 ] unsigned char 
  9438 ;; Return value:  Size  Location     Type
  9439 ;;                  4   38[COMRAM] unsigned char 
  9440 ;; Registers used:
  9441 ;;		wreg, status,2, status,0
  9442 ;; Tracked objects:
  9443 ;;		On entry : 0/0
  9444 ;;		On exit  : 0/0
  9445 ;;		Unchanged: 0/0
  9446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9447 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9448 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9449 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9450 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9451 ;;Total ram usage:       14 bytes
  9452 ;; Hardware stack levels used: 1
  9453 ;; Hardware stack levels required when called: 13
  9454 ;; This function calls:
  9455 ;;		Nothing
  9456 ;; This function is called by:
  9457 ;;		_EUSART_Baud_Rate_Calculation
  9458 ;; This function uses a non-reentrant model
  9459 ;;
  9460                           
  9461                           	psect	text47
  9462  002C40                     __ptext47:
  9463                           	callstack 0
  9464  002C40                     ___xxtofl:
  9465                           	callstack 14
  9466                           
  9467                           ;incstack = 0
  9468                           ;___xxtofl@sign stored from wreg
  9469  002C40  0100               	movlb	0	; () banked
  9470  002C42  6F80               	movwf	___xxtofl@sign& (0+255),b
  9471  002C44  0100               	movlb	0	; () banked
  9472  002C46  5180               	movf	___xxtofl@sign& (0+255),w,b
  9473  002C48  B4D8               	btfsc	status,2,c
  9474  002C4A  EF29  F016         	goto	u9991
  9475  002C4E  EF2B  F016         	goto	u9990
  9476  002C52                     u9991:
  9477  002C52  EF4D  F016         	goto	l2202
  9478  002C56                     u9990:
  9479  002C56                     
  9480                           ; BSR set to: 0
  9481  002C56  BE2A               	btfsc	(___xxtofl@val+3)^0,7,c
  9482  002C58  EF32  F016         	goto	u10000
  9483  002C5C  EF30  F016         	goto	u10001
  9484  002C60                     u10001:
  9485  002C60  EF4D  F016         	goto	l2202
  9486  002C64                     u10000:
  9487  002C64                     
  9488                           ; BSR set to: 0
  9489  002C64  C027  F02B         	movff	___xxtofl@val,??___xxtofl
  9490  002C68  C028  F02C         	movff	___xxtofl@val+1,??___xxtofl+1
  9491  002C6C  C029  F02D         	movff	___xxtofl@val+2,??___xxtofl+2
  9492  002C70  C02A  F02E         	movff	___xxtofl@val+3,??___xxtofl+3
  9493  002C74  1E2B               	comf	??___xxtofl^0,f,c
  9494  002C76  1E2C               	comf	(??___xxtofl+1)^0,f,c
  9495  002C78  1E2D               	comf	(??___xxtofl+2)^0,f,c
  9496  002C7A  1E2E               	comf	(??___xxtofl+3)^0,f,c
  9497  002C7C  2A2B               	incf	??___xxtofl^0,f,c
  9498  002C7E  0E00               	movlw	0
  9499  002C80  222C               	addwfc	(??___xxtofl+1)^0,f,c
  9500  002C82  222D               	addwfc	(??___xxtofl+2)^0,f,c
  9501  002C84  222E               	addwfc	(??___xxtofl+3)^0,f,c
  9502  002C86  C02B  F082         	movff	??___xxtofl,___xxtofl@arg
  9503  002C8A  C02C  F083         	movff	??___xxtofl+1,___xxtofl@arg+1
  9504  002C8E  C02D  F084         	movff	??___xxtofl+2,___xxtofl@arg+2
  9505  002C92  C02E  F085         	movff	??___xxtofl+3,___xxtofl@arg+3
  9506  002C96  EF55  F016         	goto	l11885
  9507  002C9A                     l2202:
  9508                           
  9509                           ; BSR set to: 0
  9510  002C9A  C027  F082         	movff	___xxtofl@val,___xxtofl@arg
  9511  002C9E  C028  F083         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9512  002CA2  C029  F084         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9513  002CA6  C02A  F085         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9514  002CAA                     l11885:
  9515                           
  9516                           ; BSR set to: 0
  9517  002CAA  5027               	movf	___xxtofl@val^0,w,c
  9518  002CAC  1028               	iorwf	(___xxtofl@val+1)^0,w,c
  9519  002CAE  1029               	iorwf	(___xxtofl@val+2)^0,w,c
  9520  002CB0  102A               	iorwf	(___xxtofl@val+3)^0,w,c
  9521  002CB2  A4D8               	btfss	status,2,c
  9522  002CB4  EF5E  F016         	goto	u10011
  9523  002CB8  EF60  F016         	goto	u10010
  9524  002CBC                     u10011:
  9525  002CBC  EF6A  F016         	goto	l11891
  9526  002CC0                     u10010:
  9527  002CC0                     
  9528                           ; BSR set to: 0
  9529  002CC0  0E00               	movlw	0
  9530  002CC2  6E27               	movwf	?___xxtofl^0,c
  9531  002CC4  0E00               	movlw	0
  9532  002CC6  6E28               	movwf	(?___xxtofl+1)^0,c
  9533  002CC8  0E00               	movlw	0
  9534  002CCA  6E29               	movwf	(?___xxtofl+2)^0,c
  9535  002CCC  0E00               	movlw	0
  9536  002CCE  6E2A               	movwf	(?___xxtofl+3)^0,c
  9537  002CD0  EFFB  F016         	goto	l2205
  9538  002CD4                     l11891:
  9539                           
  9540                           ; BSR set to: 0
  9541  002CD4  0E96               	movlw	150
  9542  002CD6  6F81               	movwf	___xxtofl@exp& (0+255),b
  9543  002CD8  EF74  F016         	goto	l11895
  9544  002CDC                     l11893:
  9545                           
  9546                           ; BSR set to: 0
  9547  002CDC  2B81               	incf	___xxtofl@exp& (0+255),f,b
  9548  002CDE  90D8               	bcf	status,0,c
  9549  002CE0  3385               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  9550  002CE2  3384               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  9551  002CE4  3383               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  9552  002CE6  3382               	rrcf	___xxtofl@arg& (0+255),f,b
  9553  002CE8                     l11895:
  9554                           
  9555                           ; BSR set to: 0
  9556  002CE8  0E00               	movlw	0
  9557  002CEA  1582               	andwf	___xxtofl@arg& (0+255),w,b
  9558  002CEC  6E2B               	movwf	??___xxtofl^0,c
  9559  002CEE  0E00               	movlw	0
  9560  002CF0  1583               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  9561  002CF2  6E2C               	movwf	(??___xxtofl+1)^0,c
  9562  002CF4  0E00               	movlw	0
  9563  002CF6  1584               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  9564  002CF8  6E2D               	movwf	(??___xxtofl+2)^0,c
  9565  002CFA  0EFE               	movlw	254
  9566  002CFC  1585               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  9567  002CFE  6E2E               	movwf	(??___xxtofl+3)^0,c
  9568  002D00  502B               	movf	??___xxtofl^0,w,c
  9569  002D02  102C               	iorwf	(??___xxtofl+1)^0,w,c
  9570  002D04  102D               	iorwf	(??___xxtofl+2)^0,w,c
  9571  002D06  102E               	iorwf	(??___xxtofl+3)^0,w,c
  9572  002D08  A4D8               	btfss	status,2,c
  9573  002D0A  EF89  F016         	goto	u10021
  9574  002D0E  EF8B  F016         	goto	u10020
  9575  002D12                     u10021:
  9576  002D12  EF6E  F016         	goto	l11893
  9577  002D16                     u10020:
  9578  002D16  EF99  F016         	goto	l2209
  9579  002D1A                     l11897:
  9580                           
  9581                           ; BSR set to: 0
  9582  002D1A  2B81               	incf	___xxtofl@exp& (0+255),f,b
  9583  002D1C                     
  9584                           ; BSR set to: 0
  9585  002D1C  0E01               	movlw	1
  9586  002D1E  2782               	addwf	___xxtofl@arg& (0+255),f,b
  9587  002D20  0E00               	movlw	0
  9588  002D22  2383               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  9589  002D24  2384               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  9590  002D26  2385               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  9591  002D28                     
  9592                           ; BSR set to: 0
  9593  002D28  90D8               	bcf	status,0,c
  9594  002D2A  3385               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  9595  002D2C  3384               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  9596  002D2E  3383               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  9597  002D30  3382               	rrcf	___xxtofl@arg& (0+255),f,b
  9598  002D32                     l2209:
  9599                           
  9600                           ; BSR set to: 0
  9601  002D32  0E00               	movlw	0
  9602  002D34  1582               	andwf	___xxtofl@arg& (0+255),w,b
  9603  002D36  6E2B               	movwf	??___xxtofl^0,c
  9604  002D38  0E00               	movlw	0
  9605  002D3A  1583               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  9606  002D3C  6E2C               	movwf	(??___xxtofl+1)^0,c
  9607  002D3E  0E00               	movlw	0
  9608  002D40  1584               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  9609  002D42  6E2D               	movwf	(??___xxtofl+2)^0,c
  9610  002D44  0EFF               	movlw	255
  9611  002D46  1585               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  9612  002D48  6E2E               	movwf	(??___xxtofl+3)^0,c
  9613  002D4A  502B               	movf	??___xxtofl^0,w,c
  9614  002D4C  102C               	iorwf	(??___xxtofl+1)^0,w,c
  9615  002D4E  102D               	iorwf	(??___xxtofl+2)^0,w,c
  9616  002D50  102E               	iorwf	(??___xxtofl+3)^0,w,c
  9617  002D52  A4D8               	btfss	status,2,c
  9618  002D54  EFAE  F016         	goto	u10031
  9619  002D58  EFB0  F016         	goto	u10030
  9620  002D5C                     u10031:
  9621  002D5C  EF8D  F016         	goto	l11897
  9622  002D60                     u10030:
  9623  002D60  EFB8  F016         	goto	l11905
  9624  002D64                     l11903:
  9625                           
  9626                           ; BSR set to: 0
  9627  002D64  0781               	decf	___xxtofl@exp& (0+255),f,b
  9628  002D66  90D8               	bcf	status,0,c
  9629  002D68  3782               	rlcf	___xxtofl@arg& (0+255),f,b
  9630  002D6A  3783               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  9631  002D6C  3784               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  9632  002D6E  3785               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  9633  002D70                     l11905:
  9634                           
  9635                           ; BSR set to: 0
  9636  002D70  BF84               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  9637  002D72  EFBD  F016         	goto	u10041
  9638  002D76  EFBF  F016         	goto	u10040
  9639  002D7A                     u10041:
  9640  002D7A  EFC7  F016         	goto	l2216
  9641  002D7E                     u10040:
  9642  002D7E                     
  9643                           ; BSR set to: 0
  9644  002D7E  0E02               	movlw	2
  9645  002D80  6181               	cpfslt	___xxtofl@exp& (0+255),b
  9646  002D82  EFC5  F016         	goto	u10051
  9647  002D86  EFC7  F016         	goto	u10050
  9648  002D8A                     u10051:
  9649  002D8A  EFB2  F016         	goto	l11903
  9650  002D8E                     u10050:
  9651  002D8E                     l2216:
  9652                           
  9653                           ; BSR set to: 0
  9654  002D8E  B181               	btfsc	___xxtofl@exp& (0+255),0,b
  9655  002D90  EFCC  F016         	goto	u10061
  9656  002D94  EFCE  F016         	goto	u10060
  9657  002D98                     u10061:
  9658  002D98  EFCF  F016         	goto	l11911
  9659  002D9C                     u10060:
  9660  002D9C                     
  9661                           ; BSR set to: 0
  9662  002D9C  9F84               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  9663  002D9E                     l11911:
  9664                           
  9665                           ; BSR set to: 0
  9666  002D9E  90D8               	bcf	status,0,c
  9667  002DA0  3381               	rrcf	___xxtofl@exp& (0+255),f,b
  9668  002DA2                     
  9669                           ; BSR set to: 0
  9670  002DA2  C081  F02B         	movff	___xxtofl@exp,??___xxtofl
  9671  002DA6  6A2C               	clrf	(??___xxtofl+1)^0,c
  9672  002DA8  6A2D               	clrf	(??___xxtofl+2)^0,c
  9673  002DAA  6A2E               	clrf	(??___xxtofl+3)^0,c
  9674  002DAC  C02B  F02E         	movff	??___xxtofl,??___xxtofl+3
  9675  002DB0  6A2D               	clrf	(??___xxtofl+2)^0,c
  9676  002DB2  6A2C               	clrf	(??___xxtofl+1)^0,c
  9677  002DB4  6A2B               	clrf	??___xxtofl^0,c
  9678  002DB6  502B               	movf	??___xxtofl^0,w,c
  9679  002DB8  1382               	iorwf	___xxtofl@arg& (0+255),f,b
  9680  002DBA  502C               	movf	(??___xxtofl+1)^0,w,c
  9681  002DBC  1383               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  9682  002DBE  502D               	movf	(??___xxtofl+2)^0,w,c
  9683  002DC0  1384               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  9684  002DC2  502E               	movf	(??___xxtofl+3)^0,w,c
  9685  002DC4  1385               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  9686  002DC6                     
  9687                           ; BSR set to: 0
  9688  002DC6  5180               	movf	___xxtofl@sign& (0+255),w,b
  9689  002DC8  B4D8               	btfsc	status,2,c
  9690  002DCA  EFE9  F016         	goto	u10071
  9691  002DCE  EFEB  F016         	goto	u10070
  9692  002DD2                     u10071:
  9693  002DD2  EFF3  F016         	goto	l11921
  9694  002DD6                     u10070:
  9695  002DD6                     
  9696                           ; BSR set to: 0
  9697  002DD6  BE2A               	btfsc	(___xxtofl@val+3)^0,7,c
  9698  002DD8  EFF2  F016         	goto	u10080
  9699  002DDC  EFF0  F016         	goto	u10081
  9700  002DE0                     u10081:
  9701  002DE0  EFF3  F016         	goto	l11921
  9702  002DE4                     u10080:
  9703  002DE4                     
  9704                           ; BSR set to: 0
  9705  002DE4  8F85               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  9706  002DE6                     l11921:
  9707                           
  9708                           ; BSR set to: 0
  9709  002DE6  C082  F027         	movff	___xxtofl@arg,?___xxtofl
  9710  002DEA  C083  F028         	movff	___xxtofl@arg+1,?___xxtofl+1
  9711  002DEE  C084  F029         	movff	___xxtofl@arg+2,?___xxtofl+2
  9712  002DF2  C085  F02A         	movff	___xxtofl@arg+3,?___xxtofl+3
  9713  002DF6                     l2205:
  9714                           
  9715                           ; BSR set to: 0
  9716  002DF6  0012               	return		;funcret
  9717  002DF8                     __end_of___xxtofl:
  9718                           	callstack 0
  9719                           
  9720 ;; *************** function ___fltol *****************
  9721 ;; Defined at:
  9722 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  9723 ;; Parameters:    Size  Location     Type
  9724 ;;  f1              4   38[COMRAM] unsigned char 
  9725 ;; Auto vars:     Size  Location     Type
  9726 ;;  exp1            1   47[COMRAM] unsigned char 
  9727 ;;  sign1           1   46[COMRAM] unsigned char 
  9728 ;; Return value:  Size  Location     Type
  9729 ;;                  4   38[COMRAM] long 
  9730 ;; Registers used:
  9731 ;;		wreg, status,2, status,0
  9732 ;; Tracked objects:
  9733 ;;		On entry : 0/0
  9734 ;;		On exit  : 0/0
  9735 ;;		Unchanged: 0/0
  9736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9737 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9738 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9739 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9740 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9741 ;;Total ram usage:       10 bytes
  9742 ;; Hardware stack levels used: 1
  9743 ;; Hardware stack levels required when called: 13
  9744 ;; This function calls:
  9745 ;;		Nothing
  9746 ;; This function is called by:
  9747 ;;		_EUSART_Baud_Rate_Calculation
  9748 ;; This function uses a non-reentrant model
  9749 ;;
  9750                           
  9751                           	psect	text48
  9752  003AB2                     __ptext48:
  9753                           	callstack 0
  9754  003AB2                     ___fltol:
  9755                           	callstack 14
  9756  003AB2  3429               	rlcf	(___fltol@f1+2)^0,w,c
  9757  003AB4  342A               	rlcf	(___fltol@f1+3)^0,w,c
  9758  003AB6  6E30               	movwf	___fltol@exp1^0,c
  9759  003AB8  5030               	movf	___fltol@exp1^0,w,c
  9760  003ABA  A4D8               	btfss	status,2,c
  9761  003ABC  EF62  F01D         	goto	u6021
  9762  003AC0  EF64  F01D         	goto	u6020
  9763  003AC4                     u6021:
  9764  003AC4  EF6E  F01D         	goto	l8035
  9765  003AC8                     u6020:
  9766  003AC8                     l8031:
  9767  003AC8  0E00               	movlw	0
  9768  003ACA  6E27               	movwf	?___fltol^0,c
  9769  003ACC  0E00               	movlw	0
  9770  003ACE  6E28               	movwf	(?___fltol+1)^0,c
  9771  003AD0  0E00               	movlw	0
  9772  003AD2  6E29               	movwf	(?___fltol+2)^0,c
  9773  003AD4  0E00               	movlw	0
  9774  003AD6  6E2A               	movwf	(?___fltol+3)^0,c
  9775  003AD8  EFDB  F01D         	goto	l1844
  9776  003ADC                     l8035:
  9777  003ADC  C027  F02B         	movff	___fltol@f1,??___fltol
  9778  003AE0  C028  F02C         	movff	___fltol@f1+1,??___fltol+1
  9779  003AE4  C029  F02D         	movff	___fltol@f1+2,??___fltol+2
  9780  003AE8  C02A  F02E         	movff	___fltol@f1+3,??___fltol+3
  9781  003AEC  0E20               	movlw	32
  9782  003AEE  EF7E  F01D         	goto	u6030
  9783  003AF2                     u6035:
  9784  003AF2  90D8               	bcf	status,0,c
  9785  003AF4  322E               	rrcf	(??___fltol+3)^0,f,c
  9786  003AF6  322D               	rrcf	(??___fltol+2)^0,f,c
  9787  003AF8  322C               	rrcf	(??___fltol+1)^0,f,c
  9788  003AFA  322B               	rrcf	??___fltol^0,f,c
  9789  003AFC                     u6030:
  9790  003AFC  2EE8               	decfsz	wreg,f,c
  9791  003AFE  EF79  F01D         	goto	u6035
  9792  003B02  502B               	movf	??___fltol^0,w,c
  9793  003B04  6E2F               	movwf	___fltol@sign1^0,c
  9794  003B06  8E29               	bsf	(___fltol@f1+2)^0,7,c
  9795  003B08  0EFF               	movlw	255
  9796  003B0A  1627               	andwf	___fltol@f1^0,f,c
  9797  003B0C  0EFF               	movlw	255
  9798  003B0E  1628               	andwf	(___fltol@f1+1)^0,f,c
  9799  003B10  0EFF               	movlw	255
  9800  003B12  1629               	andwf	(___fltol@f1+2)^0,f,c
  9801  003B14  0E00               	movlw	0
  9802  003B16  162A               	andwf	(___fltol@f1+3)^0,f,c
  9803  003B18  0E96               	movlw	150
  9804  003B1A  5E30               	subwf	___fltol@exp1^0,f,c
  9805  003B1C  BE30               	btfsc	___fltol@exp1^0,7,c
  9806  003B1E  EF95  F01D         	goto	u6040
  9807  003B22  EF93  F01D         	goto	u6041
  9808  003B26                     u6041:
  9809  003B26  EFAB  F01D         	goto	l8055
  9810  003B2A                     u6040:
  9811  003B2A  5030               	movf	___fltol@exp1^0,w,c
  9812  003B2C  0A80               	xorlw	128
  9813  003B2E  0F97               	addlw	151
  9814  003B30  B0D8               	btfsc	status,0,c
  9815  003B32  EF9D  F01D         	goto	u6051
  9816  003B36  EF9F  F01D         	goto	u6050
  9817  003B3A                     u6051:
  9818  003B3A  EFA1  F01D         	goto	l8051
  9819  003B3E                     u6050:
  9820  003B3E  EF64  F01D         	goto	l8031
  9821  003B42                     l8051:
  9822  003B42  90D8               	bcf	status,0,c
  9823  003B44  322A               	rrcf	(___fltol@f1+3)^0,f,c
  9824  003B46  3229               	rrcf	(___fltol@f1+2)^0,f,c
  9825  003B48  3228               	rrcf	(___fltol@f1+1)^0,f,c
  9826  003B4A  3227               	rrcf	___fltol@f1^0,f,c
  9827  003B4C  3E30               	incfsz	___fltol@exp1^0,f,c
  9828  003B4E  EFA1  F01D         	goto	l8051
  9829  003B52  EFC3  F01D         	goto	l8065
  9830  003B56                     l8055:
  9831  003B56  0E1F               	movlw	31
  9832  003B58  6430               	cpfsgt	___fltol@exp1^0,c
  9833  003B5A  EFB1  F01D         	goto	u6061
  9834  003B5E  EFB3  F01D         	goto	u6060
  9835  003B62                     u6061:
  9836  003B62  EFBB  F01D         	goto	l8063
  9837  003B66                     u6060:
  9838  003B66  EF64  F01D         	goto	l8031
  9839  003B6A                     l8061:
  9840  003B6A  90D8               	bcf	status,0,c
  9841  003B6C  3627               	rlcf	___fltol@f1^0,f,c
  9842  003B6E  3628               	rlcf	(___fltol@f1+1)^0,f,c
  9843  003B70  3629               	rlcf	(___fltol@f1+2)^0,f,c
  9844  003B72  362A               	rlcf	(___fltol@f1+3)^0,f,c
  9845  003B74  0630               	decf	___fltol@exp1^0,f,c
  9846  003B76                     l8063:
  9847  003B76  5030               	movf	___fltol@exp1^0,w,c
  9848  003B78  A4D8               	btfss	status,2,c
  9849  003B7A  EFC1  F01D         	goto	u6071
  9850  003B7E  EFC3  F01D         	goto	u6070
  9851  003B82                     u6071:
  9852  003B82  EFB5  F01D         	goto	l8061
  9853  003B86                     u6070:
  9854  003B86                     l8065:
  9855  003B86  502F               	movf	___fltol@sign1^0,w,c
  9856  003B88  B4D8               	btfsc	status,2,c
  9857  003B8A  EFC9  F01D         	goto	u6081
  9858  003B8E  EFCB  F01D         	goto	u6080
  9859  003B92                     u6081:
  9860  003B92  EFD3  F01D         	goto	l8069
  9861  003B96                     u6080:
  9862  003B96  1E2A               	comf	(___fltol@f1+3)^0,f,c
  9863  003B98  1E29               	comf	(___fltol@f1+2)^0,f,c
  9864  003B9A  1E28               	comf	(___fltol@f1+1)^0,f,c
  9865  003B9C  6C27               	negf	___fltol@f1^0,c
  9866  003B9E  0E00               	movlw	0
  9867  003BA0  2228               	addwfc	(___fltol@f1+1)^0,f,c
  9868  003BA2  2229               	addwfc	(___fltol@f1+2)^0,f,c
  9869  003BA4  222A               	addwfc	(___fltol@f1+3)^0,f,c
  9870  003BA6                     l8069:
  9871  003BA6  C027  F027         	movff	___fltol@f1,?___fltol
  9872  003BAA  C028  F028         	movff	___fltol@f1+1,?___fltol+1
  9873  003BAE  C029  F029         	movff	___fltol@f1+2,?___fltol+2
  9874  003BB2  C02A  F02A         	movff	___fltol@f1+3,?___fltol+3
  9875  003BB6                     l1844:
  9876  003BB6  0012               	return		;funcret
  9877  003BB8                     __end_of___fltol:
  9878                           	callstack 0
  9879                           
  9880 ;; *************** function ___fldiv *****************
  9881 ;; Defined at:
  9882 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcdiv.c"
  9883 ;; Parameters:    Size  Location     Type
  9884 ;;  b               4    6[BANK0 ] long 
  9885 ;;  a               4   10[BANK0 ] long 
  9886 ;; Auto vars:     Size  Location     Type
  9887 ;;  grs             4   25[BANK0 ] unsigned long 
  9888 ;;  rem             4   18[BANK0 ] unsigned long 
  9889 ;;  new_exp         2   23[BANK0 ] short 
  9890 ;;  aexp            1   30[BANK0 ] unsigned char 
  9891 ;;  bexp            1   29[BANK0 ] unsigned char 
  9892 ;;  sign            1   22[BANK0 ] unsigned char 
  9893 ;; Return value:  Size  Location     Type
  9894 ;;                  4    6[BANK0 ] unsigned char 
  9895 ;; Registers used:
  9896 ;;		wreg, status,2, status,0
  9897 ;; Tracked objects:
  9898 ;;		On entry : 0/0
  9899 ;;		On exit  : 0/0
  9900 ;;		Unchanged: 0/0
  9901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9902 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9903 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9904 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9905 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9906 ;;Total ram usage:       25 bytes
  9907 ;; Hardware stack levels used: 1
  9908 ;; Hardware stack levels required when called: 13
  9909 ;; This function calls:
  9910 ;;		Nothing
  9911 ;; This function is called by:
  9912 ;;		_EUSART_Baud_Rate_Calculation
  9913 ;; This function uses a non-reentrant model
  9914 ;;
  9915                           
  9916                           	psect	text49
  9917  0020B6                     __ptext49:
  9918                           	callstack 0
  9919  0020B6                     ___fldiv:
  9920                           	callstack 14
  9921  0020B6  0100               	movlb	0	; () banked
  9922  0020B8  5189               	movf	(___fldiv@b+3)& (0+255),w,b
  9923  0020BA  0B80               	andlw	128
  9924  0020BC  6F96               	movwf	___fldiv@sign& (0+255),b
  9925  0020BE  5189               	movf	(___fldiv@b+3)& (0+255),w,b
  9926  0020C0  2589               	addwf	(___fldiv@b+3)& (0+255),w,b
  9927  0020C2  6F9D               	movwf	___fldiv@bexp& (0+255),b
  9928  0020C4                     
  9929                           ; BSR set to: 0
  9930  0020C4  AF88               	btfss	(___fldiv@b+2)& (0+255),7,b
  9931  0020C6  EF67  F010         	goto	u9761
  9932  0020CA  EF69  F010         	goto	u9760
  9933  0020CE                     u9761:
  9934  0020CE  EF6A  F010         	goto	l11747
  9935  0020D2                     u9760:
  9936  0020D2                     
  9937                           ; BSR set to: 0
  9938  0020D2  819D               	bsf	___fldiv@bexp& (0+255),0,b
  9939  0020D4                     l11747:
  9940                           
  9941                           ; BSR set to: 0
  9942  0020D4  519D               	movf	___fldiv@bexp& (0+255),w,b
  9943  0020D6  B4D8               	btfsc	status,2,c
  9944  0020D8  EF70  F010         	goto	u9771
  9945  0020DC  EF72  F010         	goto	u9770
  9946  0020E0                     u9771:
  9947  0020E0  EF87  F010         	goto	l11757
  9948  0020E4                     u9770:
  9949  0020E4                     
  9950                           ; BSR set to: 0
  9951  0020E4  299D               	incf	___fldiv@bexp& (0+255),w,b
  9952  0020E6  A4D8               	btfss	status,2,c
  9953  0020E8  EF78  F010         	goto	u9781
  9954  0020EC  EF7A  F010         	goto	u9780
  9955  0020F0                     u9781:
  9956  0020F0  EF82  F010         	goto	l11753
  9957  0020F4                     u9780:
  9958  0020F4                     
  9959                           ; BSR set to: 0
  9960  0020F4  0E00               	movlw	0
  9961  0020F6  6F86               	movwf	___fldiv@b& (0+255),b
  9962  0020F8  0E00               	movlw	0
  9963  0020FA  6F87               	movwf	(___fldiv@b+1)& (0+255),b
  9964  0020FC  0E00               	movlw	0
  9965  0020FE  6F88               	movwf	(___fldiv@b+2)& (0+255),b
  9966  002100  0E00               	movlw	0
  9967  002102  6F89               	movwf	(___fldiv@b+3)& (0+255),b
  9968  002104                     l11753:
  9969                           
  9970                           ; BSR set to: 0
  9971  002104  8F88               	bsf	(___fldiv@b+2)& (0+255),7,b
  9972  002106                     
  9973                           ; BSR set to: 0
  9974  002106  0E00               	movlw	0
  9975  002108  6F89               	movwf	(___fldiv@b+3)& (0+255),b
  9976  00210A  EF8F  F010         	goto	l11759
  9977  00210E                     l11757:
  9978                           
  9979                           ; BSR set to: 0
  9980  00210E  0E00               	movlw	0
  9981  002110  6F86               	movwf	___fldiv@b& (0+255),b
  9982  002112  0E00               	movlw	0
  9983  002114  6F87               	movwf	(___fldiv@b+1)& (0+255),b
  9984  002116  0E00               	movlw	0
  9985  002118  6F88               	movwf	(___fldiv@b+2)& (0+255),b
  9986  00211A  0E00               	movlw	0
  9987  00211C  6F89               	movwf	(___fldiv@b+3)& (0+255),b
  9988  00211E                     l11759:
  9989                           
  9990                           ; BSR set to: 0
  9991  00211E  518D               	movf	(___fldiv@a+3)& (0+255),w,b
  9992  002120  0B80               	andlw	128
  9993  002122  1B96               	xorwf	___fldiv@sign& (0+255),f,b
  9994  002124                     
  9995                           ; BSR set to: 0
  9996  002124  518D               	movf	(___fldiv@a+3)& (0+255),w,b
  9997  002126  258D               	addwf	(___fldiv@a+3)& (0+255),w,b
  9998  002128  6F9E               	movwf	___fldiv@aexp& (0+255),b
  9999  00212A                     
 10000                           ; BSR set to: 0
 10001  00212A  AF8C               	btfss	(___fldiv@a+2)& (0+255),7,b
 10002  00212C  EF9A  F010         	goto	u9791
 10003  002130  EF9C  F010         	goto	u9790
 10004  002134                     u9791:
 10005  002134  EF9D  F010         	goto	l11767
 10006  002138                     u9790:
 10007  002138                     
 10008                           ; BSR set to: 0
 10009  002138  819E               	bsf	___fldiv@aexp& (0+255),0,b
 10010  00213A                     l11767:
 10011                           
 10012                           ; BSR set to: 0
 10013  00213A  519E               	movf	___fldiv@aexp& (0+255),w,b
 10014  00213C  B4D8               	btfsc	status,2,c
 10015  00213E  EFA3  F010         	goto	u9801
 10016  002142  EFA5  F010         	goto	u9800
 10017  002146                     u9801:
 10018  002146  EFBA  F010         	goto	l11777
 10019  00214A                     u9800:
 10020  00214A                     
 10021                           ; BSR set to: 0
 10022  00214A  299E               	incf	___fldiv@aexp& (0+255),w,b
 10023  00214C  A4D8               	btfss	status,2,c
 10024  00214E  EFAB  F010         	goto	u9811
 10025  002152  EFAD  F010         	goto	u9810
 10026  002156                     u9811:
 10027  002156  EFB5  F010         	goto	l11773
 10028  00215A                     u9810:
 10029  00215A                     
 10030                           ; BSR set to: 0
 10031  00215A  0E00               	movlw	0
 10032  00215C  6F8A               	movwf	___fldiv@a& (0+255),b
 10033  00215E  0E00               	movlw	0
 10034  002160  6F8B               	movwf	(___fldiv@a+1)& (0+255),b
 10035  002162  0E00               	movlw	0
 10036  002164  6F8C               	movwf	(___fldiv@a+2)& (0+255),b
 10037  002166  0E00               	movlw	0
 10038  002168  6F8D               	movwf	(___fldiv@a+3)& (0+255),b
 10039  00216A                     l11773:
 10040                           
 10041                           ; BSR set to: 0
 10042  00216A  8F8C               	bsf	(___fldiv@a+2)& (0+255),7,b
 10043  00216C                     
 10044                           ; BSR set to: 0
 10045  00216C  0E00               	movlw	0
 10046  00216E  6F8D               	movwf	(___fldiv@a+3)& (0+255),b
 10047  002170  EFC2  F010         	goto	l11779
 10048  002174                     l11777:
 10049                           
 10050                           ; BSR set to: 0
 10051  002174  0E00               	movlw	0
 10052  002176  6F8A               	movwf	___fldiv@a& (0+255),b
 10053  002178  0E00               	movlw	0
 10054  00217A  6F8B               	movwf	(___fldiv@a+1)& (0+255),b
 10055  00217C  0E00               	movlw	0
 10056  00217E  6F8C               	movwf	(___fldiv@a+2)& (0+255),b
 10057  002180  0E00               	movlw	0
 10058  002182  6F8D               	movwf	(___fldiv@a+3)& (0+255),b
 10059  002184                     l11779:
 10060                           
 10061                           ; BSR set to: 0
 10062  002184  518A               	movf	___fldiv@a& (0+255),w,b
 10063  002186  118B               	iorwf	(___fldiv@a+1)& (0+255),w,b
 10064  002188  118C               	iorwf	(___fldiv@a+2)& (0+255),w,b
 10065  00218A  118D               	iorwf	(___fldiv@a+3)& (0+255),w,b
 10066  00218C  A4D8               	btfss	status,2,c
 10067  00218E  EFCB  F010         	goto	u9821
 10068  002192  EFCD  F010         	goto	u9820
 10069  002196                     u9821:
 10070  002196  EFE5  F010         	goto	l11791
 10071  00219A                     u9820:
 10072  00219A                     
 10073                           ; BSR set to: 0
 10074  00219A  0E00               	movlw	0
 10075  00219C  6F86               	movwf	___fldiv@b& (0+255),b
 10076  00219E  0E00               	movlw	0
 10077  0021A0  6F87               	movwf	(___fldiv@b+1)& (0+255),b
 10078  0021A2  0E00               	movlw	0
 10079  0021A4  6F88               	movwf	(___fldiv@b+2)& (0+255),b
 10080  0021A6  0E00               	movlw	0
 10081  0021A8  6F89               	movwf	(___fldiv@b+3)& (0+255),b
 10082  0021AA                     
 10083                           ; BSR set to: 0
 10084  0021AA  0E80               	movlw	128
 10085  0021AC  1388               	iorwf	(___fldiv@b+2)& (0+255),f,b
 10086  0021AE  0E7F               	movlw	127
 10087  0021B0  1389               	iorwf	(___fldiv@b+3)& (0+255),f,b
 10088  0021B2                     l11785:
 10089                           
 10090                           ; BSR set to: 0
 10091  0021B2  5196               	movf	___fldiv@sign& (0+255),w,b
 10092  0021B4  1389               	iorwf	(___fldiv@b+3)& (0+255),f,b
 10093  0021B6                     
 10094                           ; BSR set to: 0
 10095  0021B6  C086  F086         	movff	___fldiv@b,?___fldiv
 10096  0021BA  C087  F087         	movff	___fldiv@b+1,?___fldiv+1
 10097  0021BE  C088  F088         	movff	___fldiv@b+2,?___fldiv+2
 10098  0021C2  C089  F089         	movff	___fldiv@b+3,?___fldiv+3
 10099  0021C6  EF28  F012         	goto	l2129
 10100  0021CA                     l11791:
 10101                           
 10102                           ; BSR set to: 0
 10103  0021CA  519D               	movf	___fldiv@bexp& (0+255),w,b
 10104  0021CC  A4D8               	btfss	status,2,c
 10105  0021CE  EFEB  F010         	goto	u9831
 10106  0021D2  EFED  F010         	goto	u9830
 10107  0021D6                     u9831:
 10108  0021D6  EFF7  F010         	goto	l11799
 10109  0021DA                     u9830:
 10110  0021DA                     
 10111                           ; BSR set to: 0
 10112  0021DA  0E00               	movlw	0
 10113  0021DC  6F86               	movwf	?___fldiv& (0+255),b
 10114  0021DE  0E00               	movlw	0
 10115  0021E0  6F87               	movwf	(?___fldiv+1)& (0+255),b
 10116  0021E2  0E00               	movlw	0
 10117  0021E4  6F88               	movwf	(?___fldiv+2)& (0+255),b
 10118  0021E6  0E00               	movlw	0
 10119  0021E8  6F89               	movwf	(?___fldiv+3)& (0+255),b
 10120  0021EA  EF28  F012         	goto	l2129
 10121  0021EE                     l11799:
 10122                           
 10123                           ; BSR set to: 0
 10124  0021EE  519E               	movf	___fldiv@aexp& (0+255),w,b
 10125  0021F0  C09D  F08E         	movff	___fldiv@bexp,??___fldiv
 10126  0021F4  6B8F               	clrf	(??___fldiv+1)& (0+255),b
 10127  0021F6  5F8E               	subwf	??___fldiv& (0+255),f,b
 10128  0021F8  0E00               	movlw	0
 10129  0021FA  5B8F               	subwfb	(??___fldiv+1)& (0+255),f,b
 10130  0021FC  0E7F               	movlw	127
 10131  0021FE  258E               	addwf	??___fldiv& (0+255),w,b
 10132  002200  6F97               	movwf	___fldiv@new_exp& (0+255),b
 10133  002202  0E00               	movlw	0
 10134  002204  218F               	addwfc	(??___fldiv+1)& (0+255),w,b
 10135  002206  6F98               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10136  002208                     
 10137                           ; BSR set to: 0
 10138  002208  C086  F092         	movff	___fldiv@b,___fldiv@rem
 10139  00220C  C087  F093         	movff	___fldiv@b+1,___fldiv@rem+1
 10140  002210  C088  F094         	movff	___fldiv@b+2,___fldiv@rem+2
 10141  002214  C089  F095         	movff	___fldiv@b+3,___fldiv@rem+3
 10142  002218                     
 10143                           ; BSR set to: 0
 10144  002218  0E00               	movlw	0
 10145  00221A  6F86               	movwf	___fldiv@b& (0+255),b
 10146  00221C  0E00               	movlw	0
 10147  00221E  6F87               	movwf	(___fldiv@b+1)& (0+255),b
 10148  002220  0E00               	movlw	0
 10149  002222  6F88               	movwf	(___fldiv@b+2)& (0+255),b
 10150  002224  0E00               	movlw	0
 10151  002226  6F89               	movwf	(___fldiv@b+3)& (0+255),b
 10152  002228                     
 10153                           ; BSR set to: 0
 10154  002228  0E00               	movlw	0
 10155  00222A  6F99               	movwf	___fldiv@grs& (0+255),b
 10156  00222C  0E00               	movlw	0
 10157  00222E  6F9A               	movwf	(___fldiv@grs+1)& (0+255),b
 10158  002230  0E00               	movlw	0
 10159  002232  6F9B               	movwf	(___fldiv@grs+2)& (0+255),b
 10160  002234  0E00               	movlw	0
 10161  002236  6F9C               	movwf	(___fldiv@grs+3)& (0+255),b
 10162  002238                     
 10163                           ; BSR set to: 0
 10164  002238  0E00               	movlw	0
 10165  00223A  6F9E               	movwf	___fldiv@aexp& (0+255),b
 10166  00223C  EF58  F011         	goto	l2131
 10167  002240                     l11809:
 10168                           
 10169                           ; BSR set to: 0
 10170  002240  519E               	movf	___fldiv@aexp& (0+255),w,b
 10171  002242  B4D8               	btfsc	status,2,c
 10172  002244  EF26  F011         	goto	u9841
 10173  002248  EF28  F011         	goto	u9840
 10174  00224C                     u9841:
 10175  00224C  EF3F  F011         	goto	l11817
 10176  002250                     u9840:
 10177  002250                     
 10178                           ; BSR set to: 0
 10179  002250  90D8               	bcf	status,0,c
 10180  002252  3792               	rlcf	___fldiv@rem& (0+255),f,b
 10181  002254  3793               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 10182  002256  3794               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 10183  002258  3795               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 10184  00225A  90D8               	bcf	status,0,c
 10185  00225C  3786               	rlcf	___fldiv@b& (0+255),f,b
 10186  00225E  3787               	rlcf	(___fldiv@b+1)& (0+255),f,b
 10187  002260  3788               	rlcf	(___fldiv@b+2)& (0+255),f,b
 10188  002262  3789               	rlcf	(___fldiv@b+3)& (0+255),f,b
 10189  002264                     
 10190                           ; BSR set to: 0
 10191  002264  AF9C               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10192  002266  EF37  F011         	goto	u9851
 10193  00226A  EF39  F011         	goto	u9850
 10194  00226E                     u9851:
 10195  00226E  EF3A  F011         	goto	l2134
 10196  002272                     u9850:
 10197  002272                     
 10198                           ; BSR set to: 0
 10199  002272  8186               	bsf	___fldiv@b& (0+255),0,b
 10200  002274                     l2134:
 10201                           
 10202                           ; BSR set to: 0
 10203  002274  90D8               	bcf	status,0,c
 10204  002276  3799               	rlcf	___fldiv@grs& (0+255),f,b
 10205  002278  379A               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10206  00227A  379B               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10207  00227C  379C               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10208  00227E                     l11817:
 10209                           
 10210                           ; BSR set to: 0
 10211  00227E  518A               	movf	___fldiv@a& (0+255),w,b
 10212  002280  5D92               	subwf	___fldiv@rem& (0+255),w,b
 10213  002282  518B               	movf	(___fldiv@a+1)& (0+255),w,b
 10214  002284  5993               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 10215  002286  518C               	movf	(___fldiv@a+2)& (0+255),w,b
 10216  002288  5994               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 10217  00228A  518D               	movf	(___fldiv@a+3)& (0+255),w,b
 10218  00228C  5995               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 10219  00228E  A0D8               	btfss	status,0,c
 10220  002290  EF4C  F011         	goto	u9861
 10221  002294  EF4E  F011         	goto	u9860
 10222  002298                     u9861:
 10223  002298  EF57  F011         	goto	l11823
 10224  00229C                     u9860:
 10225  00229C                     
 10226                           ; BSR set to: 0
 10227  00229C  8D9C               	bsf	(___fldiv@grs+3)& (0+255),6,b
 10228  00229E                     
 10229                           ; BSR set to: 0
 10230  00229E  518A               	movf	___fldiv@a& (0+255),w,b
 10231  0022A0  5F92               	subwf	___fldiv@rem& (0+255),f,b
 10232  0022A2  518B               	movf	(___fldiv@a+1)& (0+255),w,b
 10233  0022A4  5B93               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 10234  0022A6  518C               	movf	(___fldiv@a+2)& (0+255),w,b
 10235  0022A8  5B94               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 10236  0022AA  518D               	movf	(___fldiv@a+3)& (0+255),w,b
 10237  0022AC  5B95               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 10238  0022AE                     l11823:
 10239                           
 10240                           ; BSR set to: 0
 10241  0022AE  2B9E               	incf	___fldiv@aexp& (0+255),f,b
 10242  0022B0                     l2131:
 10243                           
 10244                           ; BSR set to: 0
 10245  0022B0  0E19               	movlw	25
 10246  0022B2  659E               	cpfsgt	___fldiv@aexp& (0+255),b
 10247  0022B4  EF5E  F011         	goto	u9871
 10248  0022B8  EF60  F011         	goto	u9870
 10249  0022BC                     u9871:
 10250  0022BC  EF20  F011         	goto	l11809
 10251  0022C0                     u9870:
 10252  0022C0                     
 10253                           ; BSR set to: 0
 10254  0022C0  5192               	movf	___fldiv@rem& (0+255),w,b
 10255  0022C2  1193               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 10256  0022C4  1194               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 10257  0022C6  1195               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 10258  0022C8  B4D8               	btfsc	status,2,c
 10259  0022CA  EF69  F011         	goto	u9881
 10260  0022CE  EF6B  F011         	goto	u9880
 10261  0022D2                     u9881:
 10262  0022D2  EF83  F011         	goto	l11835
 10263  0022D6                     u9880:
 10264  0022D6                     
 10265                           ; BSR set to: 0
 10266  0022D6  8199               	bsf	___fldiv@grs& (0+255),0,b
 10267  0022D8  EF83  F011         	goto	l11835
 10268  0022DC                     l11829:
 10269                           
 10270                           ; BSR set to: 0
 10271  0022DC  90D8               	bcf	status,0,c
 10272  0022DE  3786               	rlcf	___fldiv@b& (0+255),f,b
 10273  0022E0  3787               	rlcf	(___fldiv@b+1)& (0+255),f,b
 10274  0022E2  3788               	rlcf	(___fldiv@b+2)& (0+255),f,b
 10275  0022E4  3789               	rlcf	(___fldiv@b+3)& (0+255),f,b
 10276  0022E6                     
 10277                           ; BSR set to: 0
 10278  0022E6  AF9C               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10279  0022E8  EF78  F011         	goto	u9891
 10280  0022EC  EF7A  F011         	goto	u9890
 10281  0022F0                     u9891:
 10282  0022F0  EF7B  F011         	goto	l2140
 10283  0022F4                     u9890:
 10284  0022F4                     
 10285                           ; BSR set to: 0
 10286  0022F4  8186               	bsf	___fldiv@b& (0+255),0,b
 10287  0022F6                     l2140:
 10288                           
 10289                           ; BSR set to: 0
 10290  0022F6  90D8               	bcf	status,0,c
 10291  0022F8  3799               	rlcf	___fldiv@grs& (0+255),f,b
 10292  0022FA  379A               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10293  0022FC  379B               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10294  0022FE  379C               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10295  002300  0797               	decf	___fldiv@new_exp& (0+255),f,b
 10296  002302  A0D8               	btfss	status,0,c
 10297  002304  0798               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 10298  002306                     l11835:
 10299                           
 10300                           ; BSR set to: 0
 10301  002306  AF88               	btfss	(___fldiv@b+2)& (0+255),7,b
 10302  002308  EF88  F011         	goto	u9901
 10303  00230C  EF8A  F011         	goto	u9900
 10304  002310                     u9901:
 10305  002310  EF6E  F011         	goto	l11829
 10306  002314                     u9900:
 10307  002314                     
 10308                           ; BSR set to: 0
 10309  002314  0E00               	movlw	0
 10310  002316  6F9E               	movwf	___fldiv@aexp& (0+255),b
 10311  002318                     
 10312                           ; BSR set to: 0
 10313  002318  AF9C               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10314  00231A  EF91  F011         	goto	u9911
 10315  00231E  EF93  F011         	goto	u9910
 10316  002322                     u9911:
 10317  002322  EFB7  F011         	goto	l2142
 10318  002326                     u9910:
 10319  002326                     
 10320                           ; BSR set to: 0
 10321  002326  0EFF               	movlw	255
 10322  002328  1599               	andwf	___fldiv@grs& (0+255),w,b
 10323  00232A  6F8E               	movwf	??___fldiv& (0+255),b
 10324  00232C  0EFF               	movlw	255
 10325  00232E  159A               	andwf	(___fldiv@grs+1)& (0+255),w,b
 10326  002330  6F8F               	movwf	(??___fldiv+1)& (0+255),b
 10327  002332  0EFF               	movlw	255
 10328  002334  159B               	andwf	(___fldiv@grs+2)& (0+255),w,b
 10329  002336  6F90               	movwf	(??___fldiv+2)& (0+255),b
 10330  002338  0E7F               	movlw	127
 10331  00233A  159C               	andwf	(___fldiv@grs+3)& (0+255),w,b
 10332  00233C  6F91               	movwf	(??___fldiv+3)& (0+255),b
 10333  00233E  518E               	movf	??___fldiv& (0+255),w,b
 10334  002340  118F               	iorwf	(??___fldiv+1)& (0+255),w,b
 10335  002342  1190               	iorwf	(??___fldiv+2)& (0+255),w,b
 10336  002344  1191               	iorwf	(??___fldiv+3)& (0+255),w,b
 10337  002346  B4D8               	btfsc	status,2,c
 10338  002348  EFA8  F011         	goto	u9921
 10339  00234C  EFAA  F011         	goto	u9920
 10340  002350                     u9921:
 10341  002350  EFAE  F011         	goto	l2143
 10342  002354                     u9920:
 10343  002354                     l11843:
 10344                           
 10345                           ; BSR set to: 0
 10346  002354  0E01               	movlw	1
 10347  002356  6F9E               	movwf	___fldiv@aexp& (0+255),b
 10348  002358  EFB7  F011         	goto	l2142
 10349  00235C                     l2143:
 10350                           
 10351                           ; BSR set to: 0
 10352  00235C  A186               	btfss	___fldiv@b& (0+255),0,b
 10353  00235E  EFB3  F011         	goto	u9931
 10354  002362  EFB5  F011         	goto	u9930
 10355  002366                     u9931:
 10356  002366  EFB7  F011         	goto	l2142
 10357  00236A                     u9930:
 10358  00236A  EFAA  F011         	goto	l11843
 10359  00236E                     l2142:
 10360                           
 10361                           ; BSR set to: 0
 10362  00236E  519E               	movf	___fldiv@aexp& (0+255),w,b
 10363  002370  B4D8               	btfsc	status,2,c
 10364  002372  EFBD  F011         	goto	u9941
 10365  002376  EFBF  F011         	goto	u9940
 10366  00237A                     u9941:
 10367  00237A  EFE3  F011         	goto	l11855
 10368  00237E                     u9940:
 10369  00237E                     
 10370                           ; BSR set to: 0
 10371  00237E  0E01               	movlw	1
 10372  002380  2786               	addwf	___fldiv@b& (0+255),f,b
 10373  002382  0E00               	movlw	0
 10374  002384  2387               	addwfc	(___fldiv@b+1)& (0+255),f,b
 10375  002386  2388               	addwfc	(___fldiv@b+2)& (0+255),f,b
 10376  002388  2389               	addwfc	(___fldiv@b+3)& (0+255),f,b
 10377  00238A                     
 10378                           ; BSR set to: 0
 10379  00238A  A189               	btfss	(___fldiv@b+3)& (0+255),0,b
 10380  00238C  EFCA  F011         	goto	u9951
 10381  002390  EFCC  F011         	goto	u9950
 10382  002394                     u9951:
 10383  002394  EFE3  F011         	goto	l11855
 10384  002398                     u9950:
 10385  002398                     
 10386                           ; BSR set to: 0
 10387  002398  C086  F08E         	movff	___fldiv@b,??___fldiv
 10388  00239C  C087  F08F         	movff	___fldiv@b+1,??___fldiv+1
 10389  0023A0  C088  F090         	movff	___fldiv@b+2,??___fldiv+2
 10390  0023A4  C089  F091         	movff	___fldiv@b+3,??___fldiv+3
 10391  0023A8  3591               	rlcf	(??___fldiv+3)& (0+255),w,b
 10392  0023AA  3391               	rrcf	(??___fldiv+3)& (0+255),f,b
 10393  0023AC  3390               	rrcf	(??___fldiv+2)& (0+255),f,b
 10394  0023AE  338F               	rrcf	(??___fldiv+1)& (0+255),f,b
 10395  0023B0  338E               	rrcf	??___fldiv& (0+255),f,b
 10396  0023B2  C08E  F086         	movff	??___fldiv,___fldiv@b
 10397  0023B6  C08F  F087         	movff	??___fldiv+1,___fldiv@b+1
 10398  0023BA  C090  F088         	movff	??___fldiv+2,___fldiv@b+2
 10399  0023BE  C091  F089         	movff	??___fldiv+3,___fldiv@b+3
 10400  0023C2                     
 10401                           ; BSR set to: 0
 10402  0023C2  4B97               	infsnz	___fldiv@new_exp& (0+255),f,b
 10403  0023C4  2B98               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 10404  0023C6                     l11855:
 10405                           
 10406                           ; BSR set to: 0
 10407  0023C6  BF98               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10408  0023C8  EFEE  F011         	goto	u9961
 10409  0023CC  5198               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10410  0023CE  E108               	bnz	u9960
 10411  0023D0  2997               	incf	___fldiv@new_exp& (0+255),w,b
 10412  0023D2  A0D8               	btfss	status,0,c
 10413  0023D4  EFEE  F011         	goto	u9961
 10414  0023D8  EFF0  F011         	goto	u9960
 10415  0023DC                     u9961:
 10416  0023DC  EFFB  F011         	goto	l11859
 10417  0023E0                     u9960:
 10418  0023E0                     
 10419                           ; BSR set to: 0
 10420  0023E0  0E00               	movlw	0
 10421  0023E2  6F98               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10422  0023E4  6997               	setf	___fldiv@new_exp& (0+255),b
 10423  0023E6  0E00               	movlw	0
 10424  0023E8  6F86               	movwf	___fldiv@b& (0+255),b
 10425  0023EA  0E00               	movlw	0
 10426  0023EC  6F87               	movwf	(___fldiv@b+1)& (0+255),b
 10427  0023EE  0E00               	movlw	0
 10428  0023F0  6F88               	movwf	(___fldiv@b+2)& (0+255),b
 10429  0023F2  0E00               	movlw	0
 10430  0023F4  6F89               	movwf	(___fldiv@b+3)& (0+255),b
 10431  0023F6                     l11859:
 10432                           
 10433                           ; BSR set to: 0
 10434  0023F6  BF98               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10435  0023F8  EF08  F012         	goto	u9970
 10436  0023FC  5198               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10437  0023FE  E106               	bnz	u9971
 10438  002400  0597               	decf	___fldiv@new_exp& (0+255),w,b
 10439  002402  B0D8               	btfsc	status,0,c
 10440  002404  EF06  F012         	goto	u9971
 10441  002408  EF08  F012         	goto	u9970
 10442  00240C                     u9971:
 10443  00240C  EF16  F012         	goto	l11863
 10444  002410                     u9970:
 10445  002410                     
 10446                           ; BSR set to: 0
 10447  002410  0E00               	movlw	0
 10448  002412  6F98               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10449  002414  0E00               	movlw	0
 10450  002416  6F97               	movwf	___fldiv@new_exp& (0+255),b
 10451  002418  0E00               	movlw	0
 10452  00241A  6F86               	movwf	___fldiv@b& (0+255),b
 10453  00241C  0E00               	movlw	0
 10454  00241E  6F87               	movwf	(___fldiv@b+1)& (0+255),b
 10455  002420  0E00               	movlw	0
 10456  002422  6F88               	movwf	(___fldiv@b+2)& (0+255),b
 10457  002424  0E00               	movlw	0
 10458  002426  6F89               	movwf	(___fldiv@b+3)& (0+255),b
 10459  002428  0E00               	movlw	0
 10460  00242A  6F96               	movwf	___fldiv@sign& (0+255),b
 10461  00242C                     l11863:
 10462                           
 10463                           ; BSR set to: 0
 10464  00242C  C097  F09D         	movff	___fldiv@new_exp,___fldiv@bexp
 10465  002430                     
 10466                           ; BSR set to: 0
 10467  002430  A19D               	btfss	___fldiv@bexp& (0+255),0,b
 10468  002432  EF1D  F012         	goto	u9981
 10469  002436  EF1F  F012         	goto	u9980
 10470  00243A                     u9981:
 10471  00243A  EF22  F012         	goto	l11869
 10472  00243E                     u9980:
 10473  00243E                     
 10474                           ; BSR set to: 0
 10475  00243E  8F88               	bsf	(___fldiv@b+2)& (0+255),7,b
 10476  002440  EF23  F012         	goto	l11871
 10477  002444                     l11869:
 10478                           
 10479                           ; BSR set to: 0
 10480  002444  9F88               	bcf	(___fldiv@b+2)& (0+255),7,b
 10481  002446                     l11871:
 10482                           
 10483                           ; BSR set to: 0
 10484  002446  90D8               	bcf	status,0,c
 10485  002448  319D               	rrcf	___fldiv@bexp& (0+255),w,b
 10486  00244A  6F89               	movwf	(___fldiv@b+3)& (0+255),b
 10487  00244C  EFD9  F010         	goto	l11785
 10488  002450                     l2129:
 10489                           
 10490                           ; BSR set to: 0
 10491  002450  0012               	return		;funcret
 10492  002452                     __end_of___fldiv:
 10493                           	callstack 0
 10494                           
 10495 ;; *************** function ___fladd *****************
 10496 ;; Defined at:
 10497 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
 10498 ;; Parameters:    Size  Location     Type
 10499 ;;  b               4   31[BANK0 ] unsigned char 
 10500 ;;  a               4   35[BANK0 ] unsigned char 
 10501 ;; Auto vars:     Size  Location     Type
 10502 ;;  grs             1   46[BANK0 ] unsigned char 
 10503 ;;  bexp            1   45[BANK0 ] unsigned char 
 10504 ;;  aexp            1   44[BANK0 ] unsigned char 
 10505 ;;  signs           1   43[BANK0 ] unsigned char 
 10506 ;; Return value:  Size  Location     Type
 10507 ;;                  4   31[BANK0 ] unsigned char 
 10508 ;; Registers used:
 10509 ;;		wreg, status,2, status,0
 10510 ;; Tracked objects:
 10511 ;;		On entry : 0/0
 10512 ;;		On exit  : 0/0
 10513 ;;		Unchanged: 0/0
 10514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10515 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10516 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10517 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10518 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10519 ;;Total ram usage:       16 bytes
 10520 ;; Hardware stack levels used: 1
 10521 ;; Hardware stack levels required when called: 13
 10522 ;; This function calls:
 10523 ;;		Nothing
 10524 ;; This function is called by:
 10525 ;;		_EUSART_Baud_Rate_Calculation
 10526 ;; This function uses a non-reentrant model
 10527 ;;
 10528                           
 10529                           	psect	text50
 10530  001BF4                     __ptext50:
 10531                           	callstack 0
 10532  001BF4                     ___fladd:
 10533                           	callstack 14
 10534  001BF4  0100               	movlb	0	; () banked
 10535  001BF6  51A2               	movf	(___fladd@b+3)& (0+255),w,b
 10536  001BF8  0B80               	andlw	128
 10537  001BFA  6FAB               	movwf	___fladd@signs& (0+255),b
 10538  001BFC  51A2               	movf	(___fladd@b+3)& (0+255),w,b
 10539  001BFE  25A2               	addwf	(___fladd@b+3)& (0+255),w,b
 10540  001C00  6FAD               	movwf	___fladd@bexp& (0+255),b
 10541  001C02                     
 10542                           ; BSR set to: 0
 10543  001C02  AFA1               	btfss	(___fladd@b+2)& (0+255),7,b
 10544  001C04  EF06  F00E         	goto	u9371
 10545  001C08  EF08  F00E         	goto	u9370
 10546  001C0C                     u9371:
 10547  001C0C  EF09  F00E         	goto	l11545
 10548  001C10                     u9370:
 10549  001C10                     
 10550                           ; BSR set to: 0
 10551  001C10  81AD               	bsf	___fladd@bexp& (0+255),0,b
 10552  001C12                     l11545:
 10553                           
 10554                           ; BSR set to: 0
 10555  001C12  51AD               	movf	___fladd@bexp& (0+255),w,b
 10556  001C14  B4D8               	btfsc	status,2,c
 10557  001C16  EF0F  F00E         	goto	u9381
 10558  001C1A  EF11  F00E         	goto	u9380
 10559  001C1E                     u9381:
 10560  001C1E  EF26  F00E         	goto	l11555
 10561  001C22                     u9380:
 10562  001C22                     
 10563                           ; BSR set to: 0
 10564  001C22  29AD               	incf	___fladd@bexp& (0+255),w,b
 10565  001C24  A4D8               	btfss	status,2,c
 10566  001C26  EF17  F00E         	goto	u9391
 10567  001C2A  EF19  F00E         	goto	u9390
 10568  001C2E                     u9391:
 10569  001C2E  EF21  F00E         	goto	l11551
 10570  001C32                     u9390:
 10571  001C32                     
 10572                           ; BSR set to: 0
 10573  001C32  0E00               	movlw	0
 10574  001C34  6F9F               	movwf	___fladd@b& (0+255),b
 10575  001C36  0E00               	movlw	0
 10576  001C38  6FA0               	movwf	(___fladd@b+1)& (0+255),b
 10577  001C3A  0E00               	movlw	0
 10578  001C3C  6FA1               	movwf	(___fladd@b+2)& (0+255),b
 10579  001C3E  0E00               	movlw	0
 10580  001C40  6FA2               	movwf	(___fladd@b+3)& (0+255),b
 10581  001C42                     l11551:
 10582                           
 10583                           ; BSR set to: 0
 10584  001C42  8FA1               	bsf	(___fladd@b+2)& (0+255),7,b
 10585  001C44                     
 10586                           ; BSR set to: 0
 10587  001C44  0E00               	movlw	0
 10588  001C46  6FA2               	movwf	(___fladd@b+3)& (0+255),b
 10589  001C48  EF2E  F00E         	goto	l11557
 10590  001C4C                     l11555:
 10591                           
 10592                           ; BSR set to: 0
 10593  001C4C  0E00               	movlw	0
 10594  001C4E  6F9F               	movwf	___fladd@b& (0+255),b
 10595  001C50  0E00               	movlw	0
 10596  001C52  6FA0               	movwf	(___fladd@b+1)& (0+255),b
 10597  001C54  0E00               	movlw	0
 10598  001C56  6FA1               	movwf	(___fladd@b+2)& (0+255),b
 10599  001C58  0E00               	movlw	0
 10600  001C5A  6FA2               	movwf	(___fladd@b+3)& (0+255),b
 10601  001C5C                     l11557:
 10602                           
 10603                           ; BSR set to: 0
 10604  001C5C  51A6               	movf	(___fladd@a+3)& (0+255),w,b
 10605  001C5E  0B80               	andlw	128
 10606  001C60  6FAC               	movwf	___fladd@aexp& (0+255),b
 10607  001C62                     
 10608                           ; BSR set to: 0
 10609  001C62  51AB               	movf	___fladd@signs& (0+255),w,b
 10610  001C64  19AC               	xorwf	___fladd@aexp& (0+255),w,b
 10611  001C66  B4D8               	btfsc	status,2,c
 10612  001C68  EF38  F00E         	goto	u9401
 10613  001C6C  EF3A  F00E         	goto	u9400
 10614  001C70                     u9401:
 10615  001C70  EF3B  F00E         	goto	l11563
 10616  001C74                     u9400:
 10617  001C74                     
 10618                           ; BSR set to: 0
 10619  001C74  8DAB               	bsf	___fladd@signs& (0+255),6,b
 10620  001C76                     l11563:
 10621                           
 10622                           ; BSR set to: 0
 10623  001C76  51A6               	movf	(___fladd@a+3)& (0+255),w,b
 10624  001C78  25A6               	addwf	(___fladd@a+3)& (0+255),w,b
 10625  001C7A  6FAC               	movwf	___fladd@aexp& (0+255),b
 10626  001C7C                     
 10627                           ; BSR set to: 0
 10628  001C7C  AFA5               	btfss	(___fladd@a+2)& (0+255),7,b
 10629  001C7E  EF43  F00E         	goto	u9411
 10630  001C82  EF45  F00E         	goto	u9410
 10631  001C86                     u9411:
 10632  001C86  EF46  F00E         	goto	l11569
 10633  001C8A                     u9410:
 10634  001C8A                     
 10635                           ; BSR set to: 0
 10636  001C8A  81AC               	bsf	___fladd@aexp& (0+255),0,b
 10637  001C8C                     l11569:
 10638                           
 10639                           ; BSR set to: 0
 10640  001C8C  51AC               	movf	___fladd@aexp& (0+255),w,b
 10641  001C8E  B4D8               	btfsc	status,2,c
 10642  001C90  EF4C  F00E         	goto	u9421
 10643  001C94  EF4E  F00E         	goto	u9420
 10644  001C98                     u9421:
 10645  001C98  EF63  F00E         	goto	l11579
 10646  001C9C                     u9420:
 10647  001C9C                     
 10648                           ; BSR set to: 0
 10649  001C9C  29AC               	incf	___fladd@aexp& (0+255),w,b
 10650  001C9E  A4D8               	btfss	status,2,c
 10651  001CA0  EF54  F00E         	goto	u9431
 10652  001CA4  EF56  F00E         	goto	u9430
 10653  001CA8                     u9431:
 10654  001CA8  EF5E  F00E         	goto	l11575
 10655  001CAC                     u9430:
 10656  001CAC                     
 10657                           ; BSR set to: 0
 10658  001CAC  0E00               	movlw	0
 10659  001CAE  6FA3               	movwf	___fladd@a& (0+255),b
 10660  001CB0  0E00               	movlw	0
 10661  001CB2  6FA4               	movwf	(___fladd@a+1)& (0+255),b
 10662  001CB4  0E00               	movlw	0
 10663  001CB6  6FA5               	movwf	(___fladd@a+2)& (0+255),b
 10664  001CB8  0E00               	movlw	0
 10665  001CBA  6FA6               	movwf	(___fladd@a+3)& (0+255),b
 10666  001CBC                     l11575:
 10667                           
 10668                           ; BSR set to: 0
 10669  001CBC  8FA5               	bsf	(___fladd@a+2)& (0+255),7,b
 10670  001CBE                     
 10671                           ; BSR set to: 0
 10672  001CBE  0E00               	movlw	0
 10673  001CC0  6FA6               	movwf	(___fladd@a+3)& (0+255),b
 10674  001CC2  EF6B  F00E         	goto	l11581
 10675  001CC6                     l11579:
 10676                           
 10677                           ; BSR set to: 0
 10678  001CC6  0E00               	movlw	0
 10679  001CC8  6FA3               	movwf	___fladd@a& (0+255),b
 10680  001CCA  0E00               	movlw	0
 10681  001CCC  6FA4               	movwf	(___fladd@a+1)& (0+255),b
 10682  001CCE  0E00               	movlw	0
 10683  001CD0  6FA5               	movwf	(___fladd@a+2)& (0+255),b
 10684  001CD2  0E00               	movlw	0
 10685  001CD4  6FA6               	movwf	(___fladd@a+3)& (0+255),b
 10686  001CD6                     l11581:
 10687                           
 10688                           ; BSR set to: 0
 10689  001CD6  51AD               	movf	___fladd@bexp& (0+255),w,b
 10690  001CD8  5DAC               	subwf	___fladd@aexp& (0+255),w,b
 10691  001CDA  B0D8               	btfsc	status,0,c
 10692  001CDC  EF72  F00E         	goto	u9441
 10693  001CE0  EF74  F00E         	goto	u9440
 10694  001CE4                     u9441:
 10695  001CE4  EF9B  F00E         	goto	l11617
 10696  001CE8                     u9440:
 10697  001CE8                     
 10698                           ; BSR set to: 0
 10699  001CE8  ADAB               	btfss	___fladd@signs& (0+255),6,b
 10700  001CEA  EF79  F00E         	goto	u9451
 10701  001CEE  EF7B  F00E         	goto	u9450
 10702  001CF2                     u9451:
 10703  001CF2  EF7D  F00E         	goto	l11587
 10704  001CF6                     u9450:
 10705  001CF6                     
 10706                           ; BSR set to: 0
 10707  001CF6  0E80               	movlw	128
 10708  001CF8  1BAB               	xorwf	___fladd@signs& (0+255),f,b
 10709  001CFA                     l11587:
 10710                           
 10711                           ; BSR set to: 0
 10712  001CFA  C0AD  F0AE         	movff	___fladd@bexp,___fladd@grs
 10713  001CFE                     
 10714                           ; BSR set to: 0
 10715  001CFE  C0AC  F0AD         	movff	___fladd@aexp,___fladd@bexp
 10716  001D02                     
 10717                           ; BSR set to: 0
 10718  001D02  C0AE  F0AC         	movff	___fladd@grs,___fladd@aexp
 10719  001D06                     
 10720                           ; BSR set to: 0
 10721  001D06  C09F  F0AE         	movff	___fladd@b,___fladd@grs
 10722  001D0A                     
 10723                           ; BSR set to: 0
 10724  001D0A  C0A3  F09F         	movff	___fladd@a,___fladd@b
 10725  001D0E                     
 10726                           ; BSR set to: 0
 10727  001D0E  C0AE  F0A3         	movff	___fladd@grs,___fladd@a
 10728  001D12                     
 10729                           ; BSR set to: 0
 10730  001D12  C0A0  F0AE         	movff	___fladd@b+1,___fladd@grs
 10731  001D16                     
 10732                           ; BSR set to: 0
 10733  001D16  C0A4  F0A0         	movff	___fladd@a+1,___fladd@b+1
 10734  001D1A                     
 10735                           ; BSR set to: 0
 10736  001D1A  C0AE  F0A4         	movff	___fladd@grs,___fladd@a+1
 10737  001D1E                     
 10738                           ; BSR set to: 0
 10739  001D1E  C0A1  F0AE         	movff	___fladd@b+2,___fladd@grs
 10740  001D22                     
 10741                           ; BSR set to: 0
 10742  001D22  C0A5  F0A1         	movff	___fladd@a+2,___fladd@b+2
 10743  001D26                     
 10744                           ; BSR set to: 0
 10745  001D26  C0AE  F0A5         	movff	___fladd@grs,___fladd@a+2
 10746  001D2A                     
 10747                           ; BSR set to: 0
 10748  001D2A  C0A2  F0AE         	movff	___fladd@b+3,___fladd@grs
 10749  001D2E                     
 10750                           ; BSR set to: 0
 10751  001D2E  C0A6  F0A2         	movff	___fladd@a+3,___fladd@b+3
 10752  001D32                     
 10753                           ; BSR set to: 0
 10754  001D32  C0AE  F0A6         	movff	___fladd@grs,___fladd@a+3
 10755  001D36                     l11617:
 10756                           
 10757                           ; BSR set to: 0
 10758  001D36  0E00               	movlw	0
 10759  001D38  6FAE               	movwf	___fladd@grs& (0+255),b
 10760  001D3A                     
 10761                           ; BSR set to: 0
 10762  001D3A  51AD               	movf	___fladd@bexp& (0+255),w,b
 10763  001D3C  C0AC  F0A7         	movff	___fladd@aexp,??___fladd
 10764  001D40  6BA8               	clrf	(??___fladd+1)& (0+255),b
 10765  001D42  5FA7               	subwf	??___fladd& (0+255),f,b
 10766  001D44  0E00               	movlw	0
 10767  001D46  5BA8               	subwfb	(??___fladd+1)& (0+255),f,b
 10768  001D48  BFA8               	btfsc	(??___fladd+1)& (0+255),7,b
 10769  001D4A  EFB0  F00E         	goto	u9461
 10770  001D4E  51A8               	movf	(??___fladd+1)& (0+255),w,b
 10771  001D50  E109               	bnz	u9460
 10772  001D52  0E1A               	movlw	26
 10773  001D54  5DA7               	subwf	??___fladd& (0+255),w,b
 10774  001D56  A0D8               	btfss	status,0,c
 10775  001D58  EFB0  F00E         	goto	u9461
 10776  001D5C  EFB2  F00E         	goto	u9460
 10777  001D60                     u9461:
 10778  001D60  EFE9  F00E         	goto	l2076
 10779  001D64                     u9460:
 10780  001D64                     
 10781                           ; BSR set to: 0
 10782  001D64  519F               	movf	___fladd@b& (0+255),w,b
 10783  001D66  11A0               	iorwf	(___fladd@b+1)& (0+255),w,b
 10784  001D68  11A1               	iorwf	(___fladd@b+2)& (0+255),w,b
 10785  001D6A  11A2               	iorwf	(___fladd@b+3)& (0+255),w,b
 10786  001D6C  A4D8               	btfss	status,2,c
 10787  001D6E  EFBB  F00E         	goto	u9471
 10788  001D72  EFBE  F00E         	goto	u9470
 10789  001D76                     u9471:
 10790  001D76  0E01               	movlw	1
 10791  001D78  EFBF  F00E         	goto	u9480
 10792  001D7C                     u9470:
 10793  001D7C  0E00               	movlw	0
 10794  001D7E                     u9480:
 10795  001D7E  6FAE               	movwf	___fladd@grs& (0+255),b
 10796  001D80                     
 10797                           ; BSR set to: 0
 10798  001D80  0E00               	movlw	0
 10799  001D82  6F9F               	movwf	___fladd@b& (0+255),b
 10800  001D84  0E00               	movlw	0
 10801  001D86  6FA0               	movwf	(___fladd@b+1)& (0+255),b
 10802  001D88  0E00               	movlw	0
 10803  001D8A  6FA1               	movwf	(___fladd@b+2)& (0+255),b
 10804  001D8C  0E00               	movlw	0
 10805  001D8E  6FA2               	movwf	(___fladd@b+3)& (0+255),b
 10806  001D90                     
 10807                           ; BSR set to: 0
 10808  001D90  C0AC  F0AD         	movff	___fladd@aexp,___fladd@bexp
 10809  001D94  EFF2  F00E         	goto	l2075
 10810  001D98                     l2077:
 10811                           
 10812                           ; BSR set to: 0
 10813  001D98  A1AE               	btfss	___fladd@grs& (0+255),0,b
 10814  001D9A  EFD1  F00E         	goto	u9491
 10815  001D9E  EFD3  F00E         	goto	u9490
 10816  001DA2                     u9491:
 10817  001DA2  EFD9  F00E         	goto	l11629
 10818  001DA6                     u9490:
 10819  001DA6                     
 10820                           ; BSR set to: 0
 10821  001DA6  90D8               	bcf	status,0,c
 10822  001DA8  31AE               	rrcf	___fladd@grs& (0+255),w,b
 10823  001DAA  0901               	iorlw	1
 10824  001DAC  6FAE               	movwf	___fladd@grs& (0+255),b
 10825  001DAE  EFDB  F00E         	goto	l11631
 10826  001DB2                     l11629:
 10827                           
 10828                           ; BSR set to: 0
 10829  001DB2  90D8               	bcf	status,0,c
 10830  001DB4  33AE               	rrcf	___fladd@grs& (0+255),f,b
 10831  001DB6                     l11631:
 10832                           
 10833                           ; BSR set to: 0
 10834  001DB6  A19F               	btfss	___fladd@b& (0+255),0,b
 10835  001DB8  EFE0  F00E         	goto	u9501
 10836  001DBC  EFE2  F00E         	goto	u9500
 10837  001DC0                     u9501:
 10838  001DC0  EFE3  F00E         	goto	l11635
 10839  001DC4                     u9500:
 10840  001DC4                     
 10841                           ; BSR set to: 0
 10842  001DC4  8FAE               	bsf	___fladd@grs& (0+255),7,b
 10843  001DC6                     l11635:
 10844                           
 10845                           ; BSR set to: 0
 10846  001DC6  35A2               	rlcf	(___fladd@b+3)& (0+255),w,b
 10847  001DC8  33A2               	rrcf	(___fladd@b+3)& (0+255),f,b
 10848  001DCA  33A1               	rrcf	(___fladd@b+2)& (0+255),f,b
 10849  001DCC  33A0               	rrcf	(___fladd@b+1)& (0+255),f,b
 10850  001DCE  339F               	rrcf	___fladd@b& (0+255),f,b
 10851  001DD0                     
 10852                           ; BSR set to: 0
 10853  001DD0  2BAD               	incf	___fladd@bexp& (0+255),f,b
 10854  001DD2                     l2076:
 10855                           
 10856                           ; BSR set to: 0
 10857  001DD2  51AC               	movf	___fladd@aexp& (0+255),w,b
 10858  001DD4  5DAD               	subwf	___fladd@bexp& (0+255),w,b
 10859  001DD6  A0D8               	btfss	status,0,c
 10860  001DD8  EFF0  F00E         	goto	u9511
 10861  001DDC  EFF2  F00E         	goto	u9510
 10862  001DE0                     u9511:
 10863  001DE0  EFCC  F00E         	goto	l2077
 10864  001DE4                     u9510:
 10865  001DE4                     l2075:
 10866                           
 10867                           ; BSR set to: 0
 10868  001DE4  BDAB               	btfsc	___fladd@signs& (0+255),6,b
 10869  001DE6  EFF7  F00E         	goto	u9521
 10870  001DEA  EFF9  F00E         	goto	u9520
 10871  001DEE                     u9521:
 10872  001DEE  EF39  F00F         	goto	l11663
 10873  001DF2                     u9520:
 10874  001DF2                     
 10875                           ; BSR set to: 0
 10876  001DF2  51AD               	movf	___fladd@bexp& (0+255),w,b
 10877  001DF4  A4D8               	btfss	status,2,c
 10878  001DF6  EFFF  F00E         	goto	u9531
 10879  001DFA  EF01  F00F         	goto	u9530
 10880  001DFE                     u9531:
 10881  001DFE  EF0B  F00F         	goto	l11645
 10882  001E02                     u9530:
 10883  001E02                     
 10884                           ; BSR set to: 0
 10885  001E02  0E00               	movlw	0
 10886  001E04  6F9F               	movwf	?___fladd& (0+255),b
 10887  001E06  0E00               	movlw	0
 10888  001E08  6FA0               	movwf	(?___fladd+1)& (0+255),b
 10889  001E0A  0E00               	movlw	0
 10890  001E0C  6FA1               	movwf	(?___fladd+2)& (0+255),b
 10891  001E0E  0E00               	movlw	0
 10892  001E10  6FA2               	movwf	(?___fladd+3)& (0+255),b
 10893  001E12  EF5A  F010         	goto	l2084
 10894  001E16                     l11645:
 10895                           
 10896                           ; BSR set to: 0
 10897  001E16  51A3               	movf	___fladd@a& (0+255),w,b
 10898  001E18  279F               	addwf	___fladd@b& (0+255),f,b
 10899  001E1A  51A4               	movf	(___fladd@a+1)& (0+255),w,b
 10900  001E1C  23A0               	addwfc	(___fladd@b+1)& (0+255),f,b
 10901  001E1E  51A5               	movf	(___fladd@a+2)& (0+255),w,b
 10902  001E20  23A1               	addwfc	(___fladd@b+2)& (0+255),f,b
 10903  001E22  51A6               	movf	(___fladd@a+3)& (0+255),w,b
 10904  001E24  23A2               	addwfc	(___fladd@b+3)& (0+255),f,b
 10905  001E26                     
 10906                           ; BSR set to: 0
 10907  001E26  A1A2               	btfss	(___fladd@b+3)& (0+255),0,b
 10908  001E28  EF18  F00F         	goto	u9541
 10909  001E2C  EF1A  F00F         	goto	u9540
 10910  001E30                     u9541:
 10911  001E30  EFC6  F00F         	goto	l11699
 10912  001E34                     u9540:
 10913  001E34                     
 10914                           ; BSR set to: 0
 10915  001E34  A1AE               	btfss	___fladd@grs& (0+255),0,b
 10916  001E36  EF1F  F00F         	goto	u9551
 10917  001E3A  EF21  F00F         	goto	u9550
 10918  001E3E                     u9551:
 10919  001E3E  EF27  F00F         	goto	l11653
 10920  001E42                     u9550:
 10921  001E42                     
 10922                           ; BSR set to: 0
 10923  001E42  90D8               	bcf	status,0,c
 10924  001E44  31AE               	rrcf	___fladd@grs& (0+255),w,b
 10925  001E46  0901               	iorlw	1
 10926  001E48  6FAE               	movwf	___fladd@grs& (0+255),b
 10927  001E4A  EF29  F00F         	goto	l11655
 10928  001E4E                     l11653:
 10929                           
 10930                           ; BSR set to: 0
 10931  001E4E  90D8               	bcf	status,0,c
 10932  001E50  33AE               	rrcf	___fladd@grs& (0+255),f,b
 10933  001E52                     l11655:
 10934                           
 10935                           ; BSR set to: 0
 10936  001E52  A19F               	btfss	___fladd@b& (0+255),0,b
 10937  001E54  EF2E  F00F         	goto	u9561
 10938  001E58  EF30  F00F         	goto	u9560
 10939  001E5C                     u9561:
 10940  001E5C  EF31  F00F         	goto	l11659
 10941  001E60                     u9560:
 10942  001E60                     
 10943                           ; BSR set to: 0
 10944  001E60  8FAE               	bsf	___fladd@grs& (0+255),7,b
 10945  001E62                     l11659:
 10946                           
 10947                           ; BSR set to: 0
 10948  001E62  35A2               	rlcf	(___fladd@b+3)& (0+255),w,b
 10949  001E64  33A2               	rrcf	(___fladd@b+3)& (0+255),f,b
 10950  001E66  33A1               	rrcf	(___fladd@b+2)& (0+255),f,b
 10951  001E68  33A0               	rrcf	(___fladd@b+1)& (0+255),f,b
 10952  001E6A  339F               	rrcf	___fladd@b& (0+255),f,b
 10953  001E6C                     
 10954                           ; BSR set to: 0
 10955  001E6C  2BAD               	incf	___fladd@bexp& (0+255),f,b
 10956  001E6E  EFC6  F00F         	goto	l11699
 10957  001E72                     l11663:
 10958                           
 10959                           ; BSR set to: 0
 10960  001E72  51A3               	movf	___fladd@a& (0+255),w,b
 10961  001E74  5D9F               	subwf	___fladd@b& (0+255),w,b
 10962  001E76  51A4               	movf	(___fladd@a+1)& (0+255),w,b
 10963  001E78  59A0               	subwfb	(___fladd@b+1)& (0+255),w,b
 10964  001E7A  51A5               	movf	(___fladd@a+2)& (0+255),w,b
 10965  001E7C  59A1               	subwfb	(___fladd@b+2)& (0+255),w,b
 10966  001E7E  51A2               	movf	(___fladd@b+3)& (0+255),w,b
 10967  001E80  0A80               	xorlw	128
 10968  001E82  6FA7               	movwf	??___fladd& (0+255),b
 10969  001E84  51A6               	movf	(___fladd@a+3)& (0+255),w,b
 10970  001E86  0A80               	xorlw	128
 10971  001E88  59A7               	subwfb	??___fladd& (0+255),w,b
 10972  001E8A  B0D8               	btfsc	status,0,c
 10973  001E8C  EF4A  F00F         	goto	u9571
 10974  001E90  EF4C  F00F         	goto	u9570
 10975  001E94                     u9571:
 10976  001E94  EF77  F00F         	goto	l11673
 10977  001E98                     u9570:
 10978  001E98                     
 10979                           ; BSR set to: 0
 10980  001E98  519F               	movf	___fladd@b& (0+255),w,b
 10981  001E9A  5DA3               	subwf	___fladd@a& (0+255),w,b
 10982  001E9C  6FA7               	movwf	??___fladd& (0+255),b
 10983  001E9E  51A0               	movf	(___fladd@b+1)& (0+255),w,b
 10984  001EA0  59A4               	subwfb	(___fladd@a+1)& (0+255),w,b
 10985  001EA2  6FA8               	movwf	(??___fladd+1)& (0+255),b
 10986  001EA4  51A1               	movf	(___fladd@b+2)& (0+255),w,b
 10987  001EA6  59A5               	subwfb	(___fladd@a+2)& (0+255),w,b
 10988  001EA8  6FA9               	movwf	(??___fladd+2)& (0+255),b
 10989  001EAA  51A2               	movf	(___fladd@b+3)& (0+255),w,b
 10990  001EAC  59A6               	subwfb	(___fladd@a+3)& (0+255),w,b
 10991  001EAE  6FAA               	movwf	(??___fladd+3)& (0+255),b
 10992  001EB0  0EFF               	movlw	255
 10993  001EB2  25A7               	addwf	??___fladd& (0+255),w,b
 10994  001EB4  6F9F               	movwf	___fladd@b& (0+255),b
 10995  001EB6  0EFF               	movlw	255
 10996  001EB8  21A8               	addwfc	(??___fladd+1)& (0+255),w,b
 10997  001EBA  6FA0               	movwf	(___fladd@b+1)& (0+255),b
 10998  001EBC  0EFF               	movlw	255
 10999  001EBE  21A9               	addwfc	(??___fladd+2)& (0+255),w,b
 11000  001EC0  6FA1               	movwf	(___fladd@b+2)& (0+255),b
 11001  001EC2  0EFF               	movlw	255
 11002  001EC4  21AA               	addwfc	(??___fladd+3)& (0+255),w,b
 11003  001EC6  6FA2               	movwf	(___fladd@b+3)& (0+255),b
 11004  001EC8  0E80               	movlw	128
 11005  001ECA  1BAB               	xorwf	___fladd@signs& (0+255),f,b
 11006  001ECC                     
 11007                           ; BSR set to: 0
 11008  001ECC  6DAE               	negf	___fladd@grs& (0+255),b
 11009  001ECE                     
 11010                           ; BSR set to: 0
 11011  001ECE  51AE               	movf	___fladd@grs& (0+255),w,b
 11012  001ED0  A4D8               	btfss	status,2,c
 11013  001ED2  EF6D  F00F         	goto	u9581
 11014  001ED6  EF6F  F00F         	goto	u9580
 11015  001EDA                     u9581:
 11016  001EDA  EF7F  F00F         	goto	l2092
 11017  001EDE                     u9580:
 11018  001EDE                     
 11019                           ; BSR set to: 0
 11020  001EDE  0E01               	movlw	1
 11021  001EE0  279F               	addwf	___fladd@b& (0+255),f,b
 11022  001EE2  0E00               	movlw	0
 11023  001EE4  23A0               	addwfc	(___fladd@b+1)& (0+255),f,b
 11024  001EE6  23A1               	addwfc	(___fladd@b+2)& (0+255),f,b
 11025  001EE8  23A2               	addwfc	(___fladd@b+3)& (0+255),f,b
 11026  001EEA  EF7F  F00F         	goto	l2092
 11027  001EEE                     l11673:
 11028                           
 11029                           ; BSR set to: 0
 11030  001EEE  51A3               	movf	___fladd@a& (0+255),w,b
 11031  001EF0  5F9F               	subwf	___fladd@b& (0+255),f,b
 11032  001EF2  51A4               	movf	(___fladd@a+1)& (0+255),w,b
 11033  001EF4  5BA0               	subwfb	(___fladd@b+1)& (0+255),f,b
 11034  001EF6  51A5               	movf	(___fladd@a+2)& (0+255),w,b
 11035  001EF8  5BA1               	subwfb	(___fladd@b+2)& (0+255),f,b
 11036  001EFA  51A6               	movf	(___fladd@a+3)& (0+255),w,b
 11037  001EFC  5BA2               	subwfb	(___fladd@b+3)& (0+255),f,b
 11038  001EFE                     l2092:
 11039                           
 11040                           ; BSR set to: 0
 11041  001EFE  519F               	movf	___fladd@b& (0+255),w,b
 11042  001F00  11A0               	iorwf	(___fladd@b+1)& (0+255),w,b
 11043  001F02  11A1               	iorwf	(___fladd@b+2)& (0+255),w,b
 11044  001F04  11A2               	iorwf	(___fladd@b+3)& (0+255),w,b
 11045  001F06  A4D8               	btfss	status,2,c
 11046  001F08  EF88  F00F         	goto	u9591
 11047  001F0C  EF8A  F00F         	goto	u9590
 11048  001F10                     u9591:
 11049  001F10  EFBF  F00F         	goto	l11697
 11050  001F14                     u9590:
 11051  001F14                     
 11052                           ; BSR set to: 0
 11053  001F14  51AE               	movf	___fladd@grs& (0+255),w,b
 11054  001F16  A4D8               	btfss	status,2,c
 11055  001F18  EF90  F00F         	goto	u9601
 11056  001F1C  EF92  F00F         	goto	u9600
 11057  001F20                     u9601:
 11058  001F20  EFBF  F00F         	goto	l11697
 11059  001F24                     u9600:
 11060  001F24                     
 11061                           ; BSR set to: 0
 11062  001F24  0E00               	movlw	0
 11063  001F26  6F9F               	movwf	?___fladd& (0+255),b
 11064  001F28  0E00               	movlw	0
 11065  001F2A  6FA0               	movwf	(?___fladd+1)& (0+255),b
 11066  001F2C  0E00               	movlw	0
 11067  001F2E  6FA1               	movwf	(?___fladd+2)& (0+255),b
 11068  001F30  0E00               	movlw	0
 11069  001F32  6FA2               	movwf	(?___fladd+3)& (0+255),b
 11070  001F34  EF5A  F010         	goto	l2084
 11071  001F38                     l11681:
 11072                           
 11073                           ; BSR set to: 0
 11074  001F38  90D8               	bcf	status,0,c
 11075  001F3A  379F               	rlcf	___fladd@b& (0+255),f,b
 11076  001F3C  37A0               	rlcf	(___fladd@b+1)& (0+255),f,b
 11077  001F3E  37A1               	rlcf	(___fladd@b+2)& (0+255),f,b
 11078  001F40  37A2               	rlcf	(___fladd@b+3)& (0+255),f,b
 11079  001F42                     
 11080                           ; BSR set to: 0
 11081  001F42  AFAE               	btfss	___fladd@grs& (0+255),7,b
 11082  001F44  EFA6  F00F         	goto	u9611
 11083  001F48  EFA8  F00F         	goto	u9610
 11084  001F4C                     u9611:
 11085  001F4C  EFA9  F00F         	goto	l11687
 11086  001F50                     u9610:
 11087  001F50                     
 11088                           ; BSR set to: 0
 11089  001F50  819F               	bsf	___fladd@b& (0+255),0,b
 11090  001F52                     l11687:
 11091                           
 11092                           ; BSR set to: 0
 11093  001F52  A1AE               	btfss	___fladd@grs& (0+255),0,b
 11094  001F54  EFAE  F00F         	goto	u9621
 11095  001F58  EFB0  F00F         	goto	u9620
 11096  001F5C                     u9621:
 11097  001F5C  EFB4  F00F         	goto	l11691
 11098  001F60                     u9620:
 11099  001F60                     
 11100                           ; BSR set to: 0
 11101  001F60  80D8               	bsf	status,0,c
 11102  001F62  37AE               	rlcf	___fladd@grs& (0+255),f,b
 11103  001F64  EFB6  F00F         	goto	l11693
 11104  001F68                     l11691:
 11105                           
 11106                           ; BSR set to: 0
 11107  001F68  90D8               	bcf	status,0,c
 11108  001F6A  37AE               	rlcf	___fladd@grs& (0+255),f,b
 11109  001F6C                     l11693:
 11110                           
 11111                           ; BSR set to: 0
 11112  001F6C  51AD               	movf	___fladd@bexp& (0+255),w,b
 11113  001F6E  B4D8               	btfsc	status,2,c
 11114  001F70  EFBC  F00F         	goto	u9631
 11115  001F74  EFBE  F00F         	goto	u9630
 11116  001F78                     u9631:
 11117  001F78  EFBF  F00F         	goto	l11697
 11118  001F7C                     u9630:
 11119  001F7C                     
 11120                           ; BSR set to: 0
 11121  001F7C  07AD               	decf	___fladd@bexp& (0+255),f,b
 11122  001F7E                     l11697:
 11123                           
 11124                           ; BSR set to: 0
 11125  001F7E  AFA1               	btfss	(___fladd@b+2)& (0+255),7,b
 11126  001F80  EFC4  F00F         	goto	u9641
 11127  001F84  EFC6  F00F         	goto	u9640
 11128  001F88                     u9641:
 11129  001F88  EF9C  F00F         	goto	l11681
 11130  001F8C                     u9640:
 11131  001F8C                     l11699:
 11132                           
 11133                           ; BSR set to: 0
 11134  001F8C  0E00               	movlw	0
 11135  001F8E  6FAC               	movwf	___fladd@aexp& (0+255),b
 11136  001F90                     
 11137                           ; BSR set to: 0
 11138  001F90  AFAE               	btfss	___fladd@grs& (0+255),7,b
 11139  001F92  EFCD  F00F         	goto	u9651
 11140  001F96  EFCF  F00F         	goto	u9650
 11141  001F9A                     u9651:
 11142  001F9A  EFE7  F00F         	goto	l2101
 11143  001F9E                     u9650:
 11144  001F9E                     
 11145                           ; BSR set to: 0
 11146  001F9E  C0AE  F0A7         	movff	___fladd@grs,??___fladd
 11147  001FA2  0E7F               	movlw	127
 11148  001FA4  17A7               	andwf	??___fladd& (0+255),f,b
 11149  001FA6  B4D8               	btfsc	status,2,c
 11150  001FA8  EFD8  F00F         	goto	u9661
 11151  001FAC  EFDA  F00F         	goto	u9660
 11152  001FB0                     u9661:
 11153  001FB0  EFDE  F00F         	goto	l2102
 11154  001FB4                     u9660:
 11155  001FB4                     l11705:
 11156                           
 11157                           ; BSR set to: 0
 11158  001FB4  0E01               	movlw	1
 11159  001FB6  6FAC               	movwf	___fladd@aexp& (0+255),b
 11160  001FB8  EFE7  F00F         	goto	l2101
 11161  001FBC                     l2102:
 11162                           
 11163                           ; BSR set to: 0
 11164  001FBC  A19F               	btfss	___fladd@b& (0+255),0,b
 11165  001FBE  EFE3  F00F         	goto	u9671
 11166  001FC2  EFE5  F00F         	goto	u9670
 11167  001FC6                     u9671:
 11168  001FC6  EFE7  F00F         	goto	l2101
 11169  001FCA                     u9670:
 11170  001FCA  EFDA  F00F         	goto	l11705
 11171  001FCE                     l2101:
 11172                           
 11173                           ; BSR set to: 0
 11174  001FCE  51AC               	movf	___fladd@aexp& (0+255),w,b
 11175  001FD0  B4D8               	btfsc	status,2,c
 11176  001FD2  EFED  F00F         	goto	u9681
 11177  001FD6  EFEF  F00F         	goto	u9680
 11178  001FDA                     u9681:
 11179  001FDA  EF1A  F010         	goto	l11717
 11180  001FDE                     u9680:
 11181  001FDE                     
 11182                           ; BSR set to: 0
 11183  001FDE  0E01               	movlw	1
 11184  001FE0  279F               	addwf	___fladd@b& (0+255),f,b
 11185  001FE2  0E00               	movlw	0
 11186  001FE4  23A0               	addwfc	(___fladd@b+1)& (0+255),f,b
 11187  001FE6  23A1               	addwfc	(___fladd@b+2)& (0+255),f,b
 11188  001FE8  23A2               	addwfc	(___fladd@b+3)& (0+255),f,b
 11189  001FEA                     
 11190                           ; BSR set to: 0
 11191  001FEA  A1A2               	btfss	(___fladd@b+3)& (0+255),0,b
 11192  001FEC  EFFA  F00F         	goto	u9691
 11193  001FF0  EFFC  F00F         	goto	u9690
 11194  001FF4                     u9691:
 11195  001FF4  EF1A  F010         	goto	l11717
 11196  001FF8                     u9690:
 11197  001FF8                     
 11198                           ; BSR set to: 0
 11199  001FF8  C09F  F0A7         	movff	___fladd@b,??___fladd
 11200  001FFC  C0A0  F0A8         	movff	___fladd@b+1,??___fladd+1
 11201  002000  C0A1  F0A9         	movff	___fladd@b+2,??___fladd+2
 11202  002004  C0A2  F0AA         	movff	___fladd@b+3,??___fladd+3
 11203  002008  35AA               	rlcf	(??___fladd+3)& (0+255),w,b
 11204  00200A  33AA               	rrcf	(??___fladd+3)& (0+255),f,b
 11205  00200C  33A9               	rrcf	(??___fladd+2)& (0+255),f,b
 11206  00200E  33A8               	rrcf	(??___fladd+1)& (0+255),f,b
 11207  002010  33A7               	rrcf	??___fladd& (0+255),f,b
 11208  002012  C0A7  F09F         	movff	??___fladd,___fladd@b
 11209  002016  C0A8  F0A0         	movff	??___fladd+1,___fladd@b+1
 11210  00201A  C0A9  F0A1         	movff	??___fladd+2,___fladd@b+2
 11211  00201E  C0AA  F0A2         	movff	??___fladd+3,___fladd@b+3
 11212  002022  29AD               	incf	___fladd@bexp& (0+255),w,b
 11213  002024  B4D8               	btfsc	status,2,c
 11214  002026  EF17  F010         	goto	u9701
 11215  00202A  EF19  F010         	goto	u9700
 11216  00202E                     u9701:
 11217  00202E  EF1A  F010         	goto	l11717
 11218  002032                     u9700:
 11219  002032                     
 11220                           ; BSR set to: 0
 11221  002032  2BAD               	incf	___fladd@bexp& (0+255),f,b
 11222  002034                     l11717:
 11223                           
 11224                           ; BSR set to: 0
 11225  002034  29AD               	incf	___fladd@bexp& (0+255),w,b
 11226  002036  B4D8               	btfsc	status,2,c
 11227  002038  EF20  F010         	goto	u9711
 11228  00203C  EF22  F010         	goto	u9710
 11229  002040                     u9711:
 11230  002040  EF2A  F010         	goto	l11721
 11231  002044                     u9710:
 11232  002044                     
 11233                           ; BSR set to: 0
 11234  002044  51AD               	movf	___fladd@bexp& (0+255),w,b
 11235  002046  A4D8               	btfss	status,2,c
 11236  002048  EF28  F010         	goto	u9721
 11237  00204C  EF2A  F010         	goto	u9720
 11238  002050                     u9721:
 11239  002050  EF3C  F010         	goto	l11725
 11240  002054                     u9720:
 11241  002054                     l11721:
 11242                           
 11243                           ; BSR set to: 0
 11244  002054  0E00               	movlw	0
 11245  002056  6F9F               	movwf	___fladd@b& (0+255),b
 11246  002058  0E00               	movlw	0
 11247  00205A  6FA0               	movwf	(___fladd@b+1)& (0+255),b
 11248  00205C  0E00               	movlw	0
 11249  00205E  6FA1               	movwf	(___fladd@b+2)& (0+255),b
 11250  002060  0E00               	movlw	0
 11251  002062  6FA2               	movwf	(___fladd@b+3)& (0+255),b
 11252  002064  51AD               	movf	___fladd@bexp& (0+255),w,b
 11253  002066  A4D8               	btfss	status,2,c
 11254  002068  EF38  F010         	goto	u9731
 11255  00206C  EF3A  F010         	goto	u9730
 11256  002070                     u9731:
 11257  002070  EF3C  F010         	goto	l11725
 11258  002074                     u9730:
 11259  002074                     
 11260                           ; BSR set to: 0
 11261  002074  0E00               	movlw	0
 11262  002076  6FAB               	movwf	___fladd@signs& (0+255),b
 11263  002078                     l11725:
 11264                           
 11265                           ; BSR set to: 0
 11266  002078  A1AD               	btfss	___fladd@bexp& (0+255),0,b
 11267  00207A  EF41  F010         	goto	u9741
 11268  00207E  EF43  F010         	goto	u9740
 11269  002082                     u9741:
 11270  002082  EF46  F010         	goto	l11729
 11271  002086                     u9740:
 11272  002086                     
 11273                           ; BSR set to: 0
 11274  002086  8FA1               	bsf	(___fladd@b+2)& (0+255),7,b
 11275  002088  EF47  F010         	goto	l11731
 11276  00208C                     l11729:
 11277                           
 11278                           ; BSR set to: 0
 11279  00208C  9FA1               	bcf	(___fladd@b+2)& (0+255),7,b
 11280  00208E                     l11731:
 11281                           
 11282                           ; BSR set to: 0
 11283  00208E  90D8               	bcf	status,0,c
 11284  002090  31AD               	rrcf	___fladd@bexp& (0+255),w,b
 11285  002092  6FA2               	movwf	(___fladd@b+3)& (0+255),b
 11286  002094                     
 11287                           ; BSR set to: 0
 11288  002094  AFAB               	btfss	___fladd@signs& (0+255),7,b
 11289  002096  EF4F  F010         	goto	u9751
 11290  00209A  EF51  F010         	goto	u9750
 11291  00209E                     u9751:
 11292  00209E  EF52  F010         	goto	l11737
 11293  0020A2                     u9750:
 11294  0020A2                     
 11295                           ; BSR set to: 0
 11296  0020A2  8FA2               	bsf	(___fladd@b+3)& (0+255),7,b
 11297  0020A4                     l11737:
 11298                           
 11299                           ; BSR set to: 0
 11300  0020A4  C09F  F09F         	movff	___fladd@b,?___fladd
 11301  0020A8  C0A0  F0A0         	movff	___fladd@b+1,?___fladd+1
 11302  0020AC  C0A1  F0A1         	movff	___fladd@b+2,?___fladd+2
 11303  0020B0  C0A2  F0A2         	movff	___fladd@b+3,?___fladd+3
 11304  0020B4                     l2084:
 11305                           
 11306                           ; BSR set to: 0
 11307  0020B4  0012               	return		;funcret
 11308  0020B6                     __end_of___fladd:
 11309                           	callstack 0
 11310                           
 11311 ;; *************** function _EUSART_ASYNC_TX_Init *****************
 11312 ;; Defined at:
 11313 ;;		line 181 in file "MCAL/USART/usart.c"
 11314 ;; Parameters:    Size  Location     Type
 11315 ;;  _eusart         2   38[COMRAM] PTR const struct .
 11316 ;;		 -> uart(16), 
 11317 ;; Auto vars:     Size  Location     Type
 11318 ;;		None
 11319 ;; Return value:  Size  Location     Type
 11320 ;;                  1    wreg      void 
 11321 ;; Registers used:
 11322 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11323 ;; Tracked objects:
 11324 ;;		On entry : 0/0
 11325 ;;		On exit  : 0/0
 11326 ;;		Unchanged: 0/0
 11327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11328 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11331 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11332 ;;Total ram usage:        2 bytes
 11333 ;; Hardware stack levels used: 1
 11334 ;; Hardware stack levels required when called: 13
 11335 ;; This function calls:
 11336 ;;		Nothing
 11337 ;; This function is called by:
 11338 ;;		_EUSART_ASYNC_Init
 11339 ;; This function uses a non-reentrant model
 11340 ;;
 11341                           
 11342                           	psect	text51
 11343  004476                     __ptext51:
 11344                           	callstack 0
 11345  004476                     _EUSART_ASYNC_TX_Init:
 11346                           	callstack 15
 11347  004476                     
 11348                           ;MCAL/USART/usart.c: 183:     if(1==_eusart->usart_tx_cfg.usart_tx_enable){
 11349  004476  EE20 F004          	lfsr	2,4
 11350  00447A  5027               	movf	EUSART_ASYNC_TX_Init@_eusart^0,w,c
 11351  00447C  26D9               	addwf	fsr2l,f,c
 11352  00447E  5028               	movf	(EUSART_ASYNC_TX_Init@_eusart+1)^0,w,c
 11353  004480  22DA               	addwfc	fsr2h,f,c
 11354  004482  A0DF               	btfss	indf2,0,c
 11355  004484  EF46  F022         	goto	u6551
 11356  004488  EF48  F022         	goto	u6550
 11357  00448C                     u6551:
 11358  00448C  EF92  F022         	goto	l900
 11359  004490                     u6550:
 11360  004490                     
 11361                           ;MCAL/USART/usart.c: 184:         TXSTAbits.TXEN=1;
 11362  004490  8AAC               	bsf	172,5,c	;volatile
 11363  004492                     
 11364                           ;MCAL/USART/usart.c: 185:         if(1==_eusart->usart_tx_cfg.usart_tx_interrupt_enable)
      +                          {
 11365  004492  EE20 F004          	lfsr	2,4
 11366  004496  5027               	movf	EUSART_ASYNC_TX_Init@_eusart^0,w,c
 11367  004498  26D9               	addwf	fsr2l,f,c
 11368  00449A  5028               	movf	(EUSART_ASYNC_TX_Init@_eusart+1)^0,w,c
 11369  00449C  22DA               	addwfc	fsr2h,f,c
 11370  00449E  A2DF               	btfss	indf2,1,c
 11371  0044A0  EF54  F022         	goto	u6561
 11372  0044A4  EF56  F022         	goto	u6560
 11373  0044A8                     u6561:
 11374  0044A8  EF66  F022         	goto	l8581
 11375  0044AC                     u6560:
 11376  0044AC                     
 11377                           ;MCAL/USART/usart.c: 188:             (PIE1bits.TXIE = 0);
 11378  0044AC  989D               	bcf	157,4,c	;volatile
 11379                           
 11380                           ;MCAL/USART/usart.c: 202:                 (INTCONbits.GIE=1);
 11381  0044AE  8EF2               	bsf	242,7,c	;volatile
 11382                           
 11383                           ;MCAL/USART/usart.c: 203:                 (INTCONbits.PEIE=1);
 11384  0044B0  8CF2               	bsf	242,6,c	;volatile
 11385                           
 11386                           ;MCAL/USART/usart.c: 205:             (PIE1bits.TXIE = 1);
 11387  0044B2  889D               	bsf	157,4,c	;volatile
 11388  0044B4                     
 11389                           ;MCAL/USART/usart.c: 206:             EUSART_TxInterruptHandler=_eusart->EUSART_TxDefaul
      +                          tInterruptHandler;
 11390  0044B4  EE20 F008          	lfsr	2,8
 11391  0044B8  5027               	movf	EUSART_ASYNC_TX_Init@_eusart^0,w,c
 11392  0044BA  26D9               	addwf	fsr2l,f,c
 11393  0044BC  5028               	movf	(EUSART_ASYNC_TX_Init@_eusart+1)^0,w,c
 11394  0044BE  22DA               	addwfc	fsr2h,f,c
 11395  0044C0  CFDE F11C          	movff	postinc2,_EUSART_TxInterruptHandler
 11396  0044C4  CFDD F11D          	movff	postdec2,_EUSART_TxInterruptHandler+1
 11397                           
 11398                           ;MCAL/USART/usart.c: 208:         }
 11399  0044C8  EF74  F022         	goto	l8585
 11400  0044CC                     l8581:
 11401  0044CC  EE20 F004          	lfsr	2,4
 11402  0044D0  5027               	movf	EUSART_ASYNC_TX_Init@_eusart^0,w,c
 11403  0044D2  26D9               	addwf	fsr2l,f,c
 11404  0044D4  5028               	movf	(EUSART_ASYNC_TX_Init@_eusart+1)^0,w,c
 11405  0044D6  22DA               	addwfc	fsr2h,f,c
 11406  0044D8  B2DF               	btfsc	indf2,1,c
 11407  0044DA  EF71  F022         	goto	u6571
 11408  0044DE  EF73  F022         	goto	u6570
 11409  0044E2                     u6571:
 11410  0044E2  EF74  F022         	goto	l8585
 11411  0044E6                     u6570:
 11412  0044E6                     
 11413                           ;MCAL/USART/usart.c: 210:             PIE1bits.TXIE=0;
 11414  0044E6  989D               	bcf	157,4,c	;volatile
 11415  0044E8                     l8585:
 11416                           
 11417                           ;MCAL/USART/usart.c: 212:         if(1==_eusart->usart_tx_cfg.usart_tx_9bit_enable){
 11418  0044E8  EE20 F004          	lfsr	2,4
 11419  0044EC  5027               	movf	EUSART_ASYNC_TX_Init@_eusart^0,w,c
 11420  0044EE  26D9               	addwf	fsr2l,f,c
 11421  0044F0  5028               	movf	(EUSART_ASYNC_TX_Init@_eusart+1)^0,w,c
 11422  0044F2  22DA               	addwfc	fsr2h,f,c
 11423  0044F4  A4DF               	btfss	indf2,2,c
 11424  0044F6  EF7F  F022         	goto	u6581
 11425  0044FA  EF81  F022         	goto	u6580
 11426  0044FE                     u6581:
 11427  0044FE  EF84  F022         	goto	l8589
 11428  004502                     u6580:
 11429  004502                     
 11430                           ;MCAL/USART/usart.c: 213:             TXSTAbits.TX9=1;
 11431  004502  8CAC               	bsf	172,6,c	;volatile
 11432                           
 11433                           ;MCAL/USART/usart.c: 214:         }
 11434  004504  EF92  F022         	goto	l900
 11435  004508                     l8589:
 11436  004508  EE20 F004          	lfsr	2,4
 11437  00450C  5027               	movf	EUSART_ASYNC_TX_Init@_eusart^0,w,c
 11438  00450E  26D9               	addwf	fsr2l,f,c
 11439  004510  5028               	movf	(EUSART_ASYNC_TX_Init@_eusart+1)^0,w,c
 11440  004512  22DA               	addwfc	fsr2h,f,c
 11441  004514  B4DF               	btfsc	indf2,2,c
 11442  004516  EF8F  F022         	goto	u6591
 11443  00451A  EF91  F022         	goto	u6590
 11444  00451E                     u6591:
 11445  00451E  EF92  F022         	goto	l900
 11446  004522                     u6590:
 11447  004522                     
 11448                           ;MCAL/USART/usart.c: 216:             TXSTAbits.TX9=0;
 11449  004522  9CAC               	bcf	172,6,c	;volatile
 11450  004524                     l900:
 11451  004524  0012               	return		;funcret
 11452  004526                     __end_of_EUSART_ASYNC_TX_Init:
 11453                           	callstack 0
 11454                           
 11455 ;; *************** function _EUSART_ASYNC_RX_Init *****************
 11456 ;; Defined at:
 11457 ;;		line 221 in file "MCAL/USART/usart.c"
 11458 ;; Parameters:    Size  Location     Type
 11459 ;;  _eusart         2   38[COMRAM] PTR const struct .
 11460 ;;		 -> uart(16), 
 11461 ;; Auto vars:     Size  Location     Type
 11462 ;;		None
 11463 ;; Return value:  Size  Location     Type
 11464 ;;                  1    wreg      void 
 11465 ;; Registers used:
 11466 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11467 ;; Tracked objects:
 11468 ;;		On entry : 0/0
 11469 ;;		On exit  : 0/0
 11470 ;;		Unchanged: 0/0
 11471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11472 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11475 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11476 ;;Total ram usage:        2 bytes
 11477 ;; Hardware stack levels used: 1
 11478 ;; Hardware stack levels required when called: 13
 11479 ;; This function calls:
 11480 ;;		Nothing
 11481 ;; This function is called by:
 11482 ;;		_EUSART_ASYNC_Init
 11483 ;; This function uses a non-reentrant model
 11484 ;;
 11485                           
 11486                           	psect	text52
 11487  0047D0                     __ptext52:
 11488                           	callstack 0
 11489  0047D0                     _EUSART_ASYNC_RX_Init:
 11490                           	callstack 15
 11491  0047D0                     
 11492                           ;MCAL/USART/usart.c: 223:     if(1==_eusart->usart_rx_cfg.usart_rx_enable){
 11493  0047D0  EE20 F006          	lfsr	2,6
 11494  0047D4  5027               	movf	EUSART_ASYNC_RX_Init@_eusart^0,w,c
 11495  0047D6  26D9               	addwf	fsr2l,f,c
 11496  0047D8  5028               	movf	(EUSART_ASYNC_RX_Init@_eusart+1)^0,w,c
 11497  0047DA  22DA               	addwfc	fsr2h,f,c
 11498  0047DC  A0DF               	btfss	indf2,0,c
 11499  0047DE  EFF3  F023         	goto	u6601
 11500  0047E2  EFF5  F023         	goto	u6600
 11501  0047E6                     u6601:
 11502  0047E6  EF31  F024         	goto	l910
 11503  0047EA                     u6600:
 11504  0047EA                     
 11505                           ;MCAL/USART/usart.c: 224:         RCSTAbits.CREN=1;
 11506  0047EA  88AB               	bsf	171,4,c	;volatile
 11507  0047EC                     
 11508                           ;MCAL/USART/usart.c: 225:         if(1==_eusart->usart_rx_cfg.usart_rx_interrupt_enable)
      +                          {
 11509  0047EC  EE20 F006          	lfsr	2,6
 11510  0047F0  5027               	movf	EUSART_ASYNC_RX_Init@_eusart^0,w,c
 11511  0047F2  26D9               	addwf	fsr2l,f,c
 11512  0047F4  5028               	movf	(EUSART_ASYNC_RX_Init@_eusart+1)^0,w,c
 11513  0047F6  22DA               	addwfc	fsr2h,f,c
 11514  0047F8  A2DF               	btfss	indf2,1,c
 11515  0047FA  EF01  F024         	goto	u6611
 11516  0047FE  EF03  F024         	goto	u6610
 11517  004802                     u6611:
 11518  004802  EF05  F024         	goto	l8601
 11519  004806                     u6610:
 11520  004806  EF13  F024         	goto	l8605
 11521  00480A                     l8601:
 11522  00480A  EE20 F006          	lfsr	2,6
 11523  00480E  5027               	movf	EUSART_ASYNC_RX_Init@_eusart^0,w,c
 11524  004810  26D9               	addwf	fsr2l,f,c
 11525  004812  5028               	movf	(EUSART_ASYNC_RX_Init@_eusart+1)^0,w,c
 11526  004814  22DA               	addwfc	fsr2h,f,c
 11527  004816  B2DF               	btfsc	indf2,1,c
 11528  004818  EF10  F024         	goto	u6621
 11529  00481C  EF12  F024         	goto	u6620
 11530  004820                     u6621:
 11531  004820  EF13  F024         	goto	l8605
 11532  004824                     u6620:
 11533  004824                     
 11534                           ;MCAL/USART/usart.c: 252:             PIE1bits.RCIE=0;
 11535  004824  9A9D               	bcf	157,5,c	;volatile
 11536  004826                     l8605:
 11537                           
 11538                           ;MCAL/USART/usart.c: 254:         if(1==_eusart->usart_rx_cfg.usart_rx_9bit_enable){
 11539  004826  EE20 F006          	lfsr	2,6
 11540  00482A  5027               	movf	EUSART_ASYNC_RX_Init@_eusart^0,w,c
 11541  00482C  26D9               	addwf	fsr2l,f,c
 11542  00482E  5028               	movf	(EUSART_ASYNC_RX_Init@_eusart+1)^0,w,c
 11543  004830  22DA               	addwfc	fsr2h,f,c
 11544  004832  A4DF               	btfss	indf2,2,c
 11545  004834  EF1E  F024         	goto	u6631
 11546  004838  EF20  F024         	goto	u6630
 11547  00483C                     u6631:
 11548  00483C  EF23  F024         	goto	l8609
 11549  004840                     u6630:
 11550  004840                     
 11551                           ;MCAL/USART/usart.c: 255:             TXSTAbits.TX9=1;
 11552  004840  8CAC               	bsf	172,6,c	;volatile
 11553                           
 11554                           ;MCAL/USART/usart.c: 256:         }
 11555  004842  EF31  F024         	goto	l910
 11556  004846                     l8609:
 11557  004846  EE20 F006          	lfsr	2,6
 11558  00484A  5027               	movf	EUSART_ASYNC_RX_Init@_eusart^0,w,c
 11559  00484C  26D9               	addwf	fsr2l,f,c
 11560  00484E  5028               	movf	(EUSART_ASYNC_RX_Init@_eusart+1)^0,w,c
 11561  004850  22DA               	addwfc	fsr2h,f,c
 11562  004852  B4DF               	btfsc	indf2,2,c
 11563  004854  EF2E  F024         	goto	u6641
 11564  004858  EF30  F024         	goto	u6640
 11565  00485C                     u6641:
 11566  00485C  EF31  F024         	goto	l910
 11567  004860                     u6640:
 11568  004860                     
 11569                           ;MCAL/USART/usart.c: 258:             TXSTAbits.TX9=0;
 11570  004860  9CAC               	bcf	172,6,c	;volatile
 11571  004862                     l910:
 11572  004862  0012               	return		;funcret
 11573  004864                     __end_of_EUSART_ASYNC_RX_Init:
 11574                           	callstack 0
 11575                           
 11576 ;; *************** function _ADC_Init *****************
 11577 ;; Defined at:
 11578 ;;		line 30 in file "MCAL/ADC/adc.c"
 11579 ;; Parameters:    Size  Location     Type
 11580 ;;  _adc            2   41[COMRAM] PTR const struct .
 11581 ;;		 -> adc(7), 
 11582 ;; Auto vars:     Size  Location     Type
 11583 ;;  ret             1    0        unsigned char 
 11584 ;; Return value:  Size  Location     Type
 11585 ;;                  1    wreg      unsigned char 
 11586 ;; Registers used:
 11587 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11588 ;; Tracked objects:
 11589 ;;		On entry : 0/0
 11590 ;;		On exit  : 0/0
 11591 ;;		Unchanged: 0/0
 11592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11593 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11595 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11596 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11597 ;;Total ram usage:        3 bytes
 11598 ;; Hardware stack levels used: 1
 11599 ;; Hardware stack levels required when called: 14
 11600 ;; This function calls:
 11601 ;;		_adc_input_channel_port_configure
 11602 ;;		_configure_voltage_reference
 11603 ;;		_select_result_format
 11604 ;; This function is called by:
 11605 ;;		__Initialize
 11606 ;; This function uses a non-reentrant model
 11607 ;;
 11608                           
 11609                           	psect	text53
 11610  003BB8                     __ptext53:
 11611                           	callstack 0
 11612  003BB8                     _ADC_Init:
 11613                           	callstack 15
 11614  003BB8                     
 11615                           ;MCAL/ADC/adc.c: 33:     if(((void*)0)==_adc){
 11616  003BB8  502A               	movf	ADC_Init@_adc^0,w,c
 11617  003BBA  102B               	iorwf	(ADC_Init@_adc+1)^0,w,c
 11618  003BBC  A4D8               	btfss	status,2,c
 11619  003BBE  EFE3  F01D         	goto	u6821
 11620  003BC2  EFE5  F01D         	goto	u6820
 11621  003BC6                     u6821:
 11622  003BC6  EFE7  F01D         	goto	l281
 11623  003BCA                     u6820:
 11624  003BCA                     
 11625                           ;MCAL/ADC/adc.c: 35:     }
 11626  003BCA  EF4C  F01E         	goto	l283
 11627  003BCE                     l281:
 11628                           
 11629                           ;MCAL/ADC/adc.c: 38:         (ADCON0bits.ADON = 0);
 11630  003BCE  90C2               	bcf	194,0,c	;volatile
 11631  003BD0                     
 11632                           ;MCAL/ADC/adc.c: 40:         ADCON2bits.ACQT=_adc->acquisition_time;
 11633  003BD0  EE20 F003          	lfsr	2,3
 11634  003BD4  502A               	movf	ADC_Init@_adc^0,w,c
 11635  003BD6  26D9               	addwf	fsr2l,f,c
 11636  003BD8  502B               	movf	(ADC_Init@_adc+1)^0,w,c
 11637  003BDA  22DA               	addwfc	fsr2h,f,c
 11638  003BDC  50DF               	movf	indf2,w,c
 11639  003BDE  6E2C               	movwf	??_ADC_Init^0,c
 11640  003BE0  462C               	rlncf	??_ADC_Init^0,f,c
 11641  003BE2  462C               	rlncf	??_ADC_Init^0,f,c
 11642  003BE4  462C               	rlncf	??_ADC_Init^0,f,c
 11643  003BE6  50C0               	movf	192,w,c	;volatile
 11644  003BE8  182C               	xorwf	??_ADC_Init^0,w,c
 11645  003BEA  0BC7               	andlw	-57
 11646  003BEC  182C               	xorwf	??_ADC_Init^0,w,c
 11647  003BEE  6EC0               	movwf	192,c	;volatile
 11648                           
 11649                           ;MCAL/ADC/adc.c: 42:         ADCON2bits.ADCS=_adc->conversion_clock;
 11650  003BF0  EE20 F004          	lfsr	2,4
 11651  003BF4  502A               	movf	ADC_Init@_adc^0,w,c
 11652  003BF6  26D9               	addwf	fsr2l,f,c
 11653  003BF8  502B               	movf	(ADC_Init@_adc+1)^0,w,c
 11654  003BFA  22DA               	addwfc	fsr2h,f,c
 11655  003BFC  50DF               	movf	indf2,w,c
 11656  003BFE  6E2C               	movwf	??_ADC_Init^0,c
 11657  003C00  50C0               	movf	192,w,c	;volatile
 11658  003C02  182C               	xorwf	??_ADC_Init^0,w,c
 11659  003C04  0BF8               	andlw	-8
 11660  003C06  182C               	xorwf	??_ADC_Init^0,w,c
 11661  003C08  6EC0               	movwf	192,c	;volatile
 11662                           
 11663                           ;MCAL/ADC/adc.c: 44:         ADCON0bits.CHS=_adc->adc_channel;
 11664  003C0A  EE20 F005          	lfsr	2,5
 11665  003C0E  502A               	movf	ADC_Init@_adc^0,w,c
 11666  003C10  26D9               	addwf	fsr2l,f,c
 11667  003C12  502B               	movf	(ADC_Init@_adc+1)^0,w,c
 11668  003C14  22DA               	addwfc	fsr2h,f,c
 11669  003C16  50DF               	movf	indf2,w,c
 11670  003C18  6E2C               	movwf	??_ADC_Init^0,c
 11671  003C1A  462C               	rlncf	??_ADC_Init^0,f,c
 11672  003C1C  462C               	rlncf	??_ADC_Init^0,f,c
 11673  003C1E  50C2               	movf	194,w,c	;volatile
 11674  003C20  182C               	xorwf	??_ADC_Init^0,w,c
 11675  003C22  0BC3               	andlw	-61
 11676  003C24  182C               	xorwf	??_ADC_Init^0,w,c
 11677  003C26  6EC2               	movwf	194,c	;volatile
 11678  003C28                     
 11679                           ;MCAL/ADC/adc.c: 45:         adc_input_channel_port_configure(_adc->adc_channel);
 11680  003C28  EE20 F005          	lfsr	2,5
 11681  003C2C  502A               	movf	ADC_Init@_adc^0,w,c
 11682  003C2E  26D9               	addwf	fsr2l,f,c
 11683  003C30  502B               	movf	(ADC_Init@_adc+1)^0,w,c
 11684  003C32  22DA               	addwfc	fsr2h,f,c
 11685  003C34  50DF               	movf	indf2,w,c
 11686  003C36  EC4D  F01E         	call	_adc_input_channel_port_configure
 11687  003C3A                     
 11688                           ;MCAL/ADC/adc.c: 48:         (PIR1bits.ADIF=0);;
 11689  003C3A  9C9E               	bcf	158,6,c	;volatile
 11690  003C3C                     
 11691                           ;MCAL/ADC/adc.c: 60:         (INTCONbits.GIE=1);
 11692  003C3C  8EF2               	bsf	242,7,c	;volatile
 11693  003C3E                     
 11694                           ;MCAL/ADC/adc.c: 61:         (INTCONbits.PEIE=1);
 11695  003C3E  8CF2               	bsf	242,6,c	;volatile
 11696  003C40                     
 11697                           ;MCAL/ADC/adc.c: 63:         (PIE1bits.ADIE=1);
 11698  003C40  8C9D               	bsf	157,6,c	;volatile
 11699  003C42                     
 11700                           ;MCAL/ADC/adc.c: 64:         ADC_InterruptHandler=_adc->ADC_InterruptHandler;
 11701  003C42  C02A  FFD9         	movff	ADC_Init@_adc,fsr2l
 11702  003C46  C02B  FFDA         	movff	ADC_Init@_adc+1,fsr2h
 11703  003C4A  CFDE F039          	movff	postinc2,_ADC_InterruptHandler
 11704  003C4E  CFDD F03A          	movff	postdec2,_ADC_InterruptHandler+1
 11705  003C52                     
 11706                           ;MCAL/ADC/adc.c: 67:         select_result_format(_adc->result_format);
 11707  003C52  EE20 F006          	lfsr	2,6
 11708  003C56  502A               	movf	ADC_Init@_adc^0,w,c
 11709  003C58  26D9               	addwf	fsr2l,f,c
 11710  003C5A  502B               	movf	(ADC_Init@_adc+1)^0,w,c
 11711  003C5C  22DA               	addwfc	fsr2h,f,c
 11712  003C5E  B2DF               	btfsc	indf2,1,c
 11713  003C60  EF34  F01E         	goto	u6831
 11714  003C64  EF37  F01E         	goto	u6830
 11715  003C68                     u6831:
 11716  003C68  0E01               	movlw	1
 11717  003C6A  EF38  F01E         	goto	u6836
 11718  003C6E                     u6830:
 11719  003C6E  0E00               	movlw	0
 11720  003C70                     u6836:
 11721  003C70  ECE9  F02E         	call	_select_result_format
 11722  003C74                     
 11723                           ;MCAL/ADC/adc.c: 69:         configure_voltage_reference(_adc->voltage_reference);
 11724  003C74  EE20 F006          	lfsr	2,6
 11725  003C78  502A               	movf	ADC_Init@_adc^0,w,c
 11726  003C7A  26D9               	addwf	fsr2l,f,c
 11727  003C7C  502B               	movf	(ADC_Init@_adc+1)^0,w,c
 11728  003C7E  22DA               	addwfc	fsr2h,f,c
 11729  003C80  B0DF               	btfsc	indf2,0,c
 11730  003C82  EF45  F01E         	goto	u6841
 11731  003C86  EF48  F01E         	goto	u6840
 11732  003C8A                     u6841:
 11733  003C8A  0E01               	movlw	1
 11734  003C8C  EF49  F01E         	goto	u6846
 11735  003C90                     u6840:
 11736  003C90  0E00               	movlw	0
 11737  003C92                     u6846:
 11738  003C92  EC5C  F02E         	call	_configure_voltage_reference
 11739  003C96                     
 11740                           ;MCAL/ADC/adc.c: 71:         (ADCON0bits.ADON = 1);
 11741  003C96  80C2               	bsf	194,0,c	;volatile
 11742  003C98                     l283:
 11743  003C98  0012               	return		;funcret
 11744  003C9A                     __end_of_ADC_Init:
 11745                           	callstack 0
 11746                           
 11747 ;; *************** function _select_result_format *****************
 11748 ;; Defined at:
 11749 ;;		line 299 in file "MCAL/ADC/adc.c"
 11750 ;; Parameters:    Size  Location     Type
 11751 ;;  result_forma    1    wreg     unsigned char 
 11752 ;; Auto vars:     Size  Location     Type
 11753 ;;  result_forma    1   38[COMRAM] unsigned char 
 11754 ;; Return value:  Size  Location     Type
 11755 ;;                  1    wreg      void 
 11756 ;; Registers used:
 11757 ;;		wreg, status,2, status,0
 11758 ;; Tracked objects:
 11759 ;;		On entry : 0/0
 11760 ;;		On exit  : 0/0
 11761 ;;		Unchanged: 0/0
 11762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11764 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11766 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11767 ;;Total ram usage:        1 bytes
 11768 ;; Hardware stack levels used: 1
 11769 ;; Hardware stack levels required when called: 13
 11770 ;; This function calls:
 11771 ;;		Nothing
 11772 ;; This function is called by:
 11773 ;;		_ADC_Init
 11774 ;; This function uses a non-reentrant model
 11775 ;;
 11776                           
 11777                           	psect	text54
 11778  005DD2                     __ptext54:
 11779                           	callstack 0
 11780  005DD2                     _select_result_format:
 11781                           	callstack 15
 11782                           
 11783                           ;incstack = 0
 11784                           ;select_result_format@result_format stored from wreg
 11785  005DD2  6E27               	movwf	select_result_format@result_format^0,c
 11786  005DD4                     
 11787                           ;MCAL/ADC/adc.c: 300:     if(0x01U==result_format){
 11788  005DD4  0427               	decf	select_result_format@result_format^0,w,c
 11789  005DD6  A4D8               	btfss	status,2,c
 11790  005DD8  EFF0  F02E         	goto	u6341
 11791  005DDC  EFF2  F02E         	goto	u6340
 11792  005DE0                     u6341:
 11793  005DE0  EFF5  F02E         	goto	l8341
 11794  005DE4                     u6340:
 11795  005DE4                     
 11796                           ;MCAL/ADC/adc.c: 301:         (ADCON2bits.ADFM = 1);
 11797  005DE4  8EC0               	bsf	192,7,c	;volatile
 11798                           
 11799                           ;MCAL/ADC/adc.c: 302:     }
 11800  005DE6  EFFE  F02E         	goto	l355
 11801  005DEA                     l8341:
 11802  005DEA  5027               	movf	select_result_format@result_format^0,w,c
 11803  005DEC  A4D8               	btfss	status,2,c
 11804  005DEE  EFFB  F02E         	goto	u6351
 11805  005DF2  EFFD  F02E         	goto	u6350
 11806  005DF6                     u6351:
 11807  005DF6  EFFE  F02E         	goto	l355
 11808  005DFA                     u6350:
 11809  005DFA                     
 11810                           ;MCAL/ADC/adc.c: 304:         (ADCON2bits.ADFM = 0);
 11811  005DFA  9EC0               	bcf	192,7,c	;volatile
 11812  005DFC                     l355:
 11813  005DFC  0012               	return		;funcret
 11814  005DFE                     __end_of_select_result_format:
 11815                           	callstack 0
 11816                           
 11817 ;; *************** function _configure_voltage_reference *****************
 11818 ;; Defined at:
 11819 ;;		line 311 in file "MCAL/ADC/adc.c"
 11820 ;; Parameters:    Size  Location     Type
 11821 ;;  voltage_refe    1    wreg     unsigned char 
 11822 ;; Auto vars:     Size  Location     Type
 11823 ;;  voltage_refe    1   38[COMRAM] unsigned char 
 11824 ;; Return value:  Size  Location     Type
 11825 ;;                  1    wreg      void 
 11826 ;; Registers used:
 11827 ;;		wreg, status,2, status,0
 11828 ;; Tracked objects:
 11829 ;;		On entry : 0/0
 11830 ;;		On exit  : 0/0
 11831 ;;		Unchanged: 0/0
 11832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11834 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11836 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11837 ;;Total ram usage:        1 bytes
 11838 ;; Hardware stack levels used: 1
 11839 ;; Hardware stack levels required when called: 13
 11840 ;; This function calls:
 11841 ;;		Nothing
 11842 ;; This function is called by:
 11843 ;;		_ADC_Init
 11844 ;; This function uses a non-reentrant model
 11845 ;;
 11846                           
 11847                           	psect	text55
 11848  005CB8                     __ptext55:
 11849                           	callstack 0
 11850  005CB8                     _configure_voltage_reference:
 11851                           	callstack 15
 11852                           
 11853                           ;incstack = 0
 11854                           ;configure_voltage_reference@voltage_reference stored from wreg
 11855  005CB8  6E27               	movwf	configure_voltage_reference@voltage_reference^0,c
 11856  005CBA                     
 11857                           ;MCAL/ADC/adc.c: 312:     if(voltage_reference==0x01U){
 11858  005CBA  0427               	decf	configure_voltage_reference@voltage_reference^0,w,c
 11859  005CBC  A4D8               	btfss	status,2,c
 11860  005CBE  EF63  F02E         	goto	u6361
 11861  005CC2  EF65  F02E         	goto	u6360
 11862  005CC6                     u6361:
 11863  005CC6  EF69  F02E         	goto	l8347
 11864  005CCA                     u6360:
 11865  005CCA  8AC1               	bsf	193,5,c	;volatile
 11866  005CCC  88C1               	bsf	193,4,c	;volatile
 11867  005CCE  EF73  F02E         	goto	l365
 11868  005CD2                     l8347:
 11869  005CD2  5027               	movf	configure_voltage_reference@voltage_reference^0,w,c
 11870  005CD4  A4D8               	btfss	status,2,c
 11871  005CD6  EF6F  F02E         	goto	u6371
 11872  005CDA  EF71  F02E         	goto	u6370
 11873  005CDE                     u6371:
 11874  005CDE  EF73  F02E         	goto	l365
 11875  005CE2                     u6370:
 11876  005CE2  9AC1               	bcf	193,5,c	;volatile
 11877  005CE4  98C1               	bcf	193,4,c	;volatile
 11878  005CE6                     l365:
 11879  005CE6  0012               	return		;funcret
 11880  005CE8                     __end_of_configure_voltage_reference:
 11881                           	callstack 0
 11882                           
 11883 ;; *************** function _RealTimeClockDS1307_Get_Date_Time *****************
 11884 ;; Defined at:
 11885 ;;		line 10 in file "ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c"
 11886 ;; Parameters:    Size  Location     Type
 11887 ;;		None
 11888 ;; Auto vars:     Size  Location     Type
 11889 ;;		None
 11890 ;; Return value:  Size  Location     Type
 11891 ;;                  6   10[BANK0 ] struct .
 11892 ;; Registers used:
 11893 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 11894 ;; Tracked objects:
 11895 ;;		On entry : 0/0
 11896 ;;		On exit  : 0/0
 11897 ;;		Unchanged: 0/0
 11898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11899 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11902 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11903 ;;Total ram usage:        6 bytes
 11904 ;; Hardware stack levels used: 1
 11905 ;; Hardware stack levels required when called: 22
 11906 ;; This function calls:
 11907 ;;		_I2C_Read1ByteRegister
 11908 ;; This function is called by:
 11909 ;;		_main
 11910 ;; This function uses a non-reentrant model
 11911 ;;
 11912                           
 11913                           	psect	text56
 11914  005444                     __ptext56:
 11915                           	callstack 0
 11916  005444                     _RealTimeClockDS1307_Get_Date_Time:
 11917                           	callstack 8
 11918  005444                     
 11919                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 11:     RTC1307._Seconds = I2C_Read1By
      +                          teRegister(0xD0, 0x00);
 11920  005444  0E00               	movlw	0
 11921  005446  6E30               	movwf	I2C_Read1ByteRegister@reg^0,c
 11922  005448  0ED0               	movlw	208
 11923  00544A  EC4C  F026         	call	_I2C_Read1ByteRegister
 11924  00544E  0101               	movlb	1	; () banked
 11925  005450  6F08               	movwf	(_RTC1307@RealTimeClockDS1307$F399+2)& (0+255),b
 11926                           
 11927                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 12:     RTC1307._Minutes = I2C_Read1By
      +                          teRegister(0xD0, 0x01);
 11928  005452  0E01               	movlw	1
 11929  005454  6E30               	movwf	I2C_Read1ByteRegister@reg^0,c
 11930  005456  0ED0               	movlw	208
 11931  005458  EC4C  F026         	call	_I2C_Read1ByteRegister
 11932  00545C  0101               	movlb	1	; () banked
 11933  00545E  6F07               	movwf	(_RTC1307@RealTimeClockDS1307$F399+1)& (0+255),b
 11934                           
 11935                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 13:     RTC1307._Hours = I2C_Read1Byte
      +                          Register(0xD0, 0x02);
 11936  005460  0E02               	movlw	2
 11937  005462  6E30               	movwf	I2C_Read1ByteRegister@reg^0,c
 11938  005464  0ED0               	movlw	208
 11939  005466  EC4C  F026         	call	_I2C_Read1ByteRegister
 11940  00546A  0101               	movlb	1	; () banked
 11941  00546C  6F06               	movwf	_RTC1307@RealTimeClockDS1307$F399& (0+255),b
 11942                           
 11943                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 14:     RTC1307._Day = I2C_Read1ByteRe
      +                          gister(0xD0, 0x04);
 11944  00546E  0E04               	movlw	4
 11945  005470  6E30               	movwf	I2C_Read1ByteRegister@reg^0,c
 11946  005472  0ED0               	movlw	208
 11947  005474  EC4C  F026         	call	_I2C_Read1ByteRegister
 11948  005478  0101               	movlb	1	; () banked
 11949  00547A  6F0B               	movwf	(_RTC1307@RealTimeClockDS1307$F399+5)& (0+255),b
 11950                           
 11951                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 15:     RTC1307._Month = I2C_Read1Byte
      +                          Register(0xD0, 0x05);
 11952  00547C  0E05               	movlw	5
 11953  00547E  6E30               	movwf	I2C_Read1ByteRegister@reg^0,c
 11954  005480  0ED0               	movlw	208
 11955  005482  EC4C  F026         	call	_I2C_Read1ByteRegister
 11956  005486  0101               	movlb	1	; () banked
 11957  005488  6F0A               	movwf	(_RTC1307@RealTimeClockDS1307$F399+4)& (0+255),b
 11958                           
 11959                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 16:     RTC1307._Year = I2C_Read1ByteR
      +                          egister(0xD0, 0x06);
 11960  00548A  0E06               	movlw	6
 11961  00548C  6E30               	movwf	I2C_Read1ByteRegister@reg^0,c
 11962  00548E  0ED0               	movlw	208
 11963  005490  EC4C  F026         	call	_I2C_Read1ByteRegister
 11964  005494  0101               	movlb	1	; () banked
 11965  005496  6F09               	movwf	(_RTC1307@RealTimeClockDS1307$F399+3)& (0+255),b
 11966  005498                     
 11967                           ; BSR set to: 1
 11968                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 18:     return RTC1307;
 11969  005498  EE21  F006         	lfsr	2,_RTC1307@RealTimeClockDS1307$F399
 11970  00549C  EE00  F08A         	lfsr	0,?_RealTimeClockDS1307_Get_Date_Time
 11971  0054A0  0E05               	movlw	5
 11972  0054A2                     u10651:
 11973  0054A2  CFDB FFEB          	movff	plusw2,plusw0
 11974  0054A6  06E8               	decf	wreg,f,c
 11975  0054A8  E2FC               	bc	u10651
 11976  0054AA                     
 11977                           ; BSR set to: 1
 11978  0054AA  0012               	return		;funcret
 11979  0054AC                     __end_of_RealTimeClockDS1307_Get_Date_Time:
 11980                           	callstack 0
 11981                           
 11982 ;; *************** function _I2C_Read1ByteRegister *****************
 11983 ;; Defined at:
 11984 ;;		line 63 in file "mcc_generated_files/examples/i2c_master_example.c"
 11985 ;; Parameters:    Size  Location     Type
 11986 ;;  address         1    wreg     unsigned char 
 11987 ;;  reg             1   47[COMRAM] unsigned char 
 11988 ;; Auto vars:     Size  Location     Type
 11989 ;;  address         1    8[BANK0 ] unsigned char 
 11990 ;;  returnValue     1    9[BANK0 ] unsigned char 
 11991 ;; Return value:  Size  Location     Type
 11992 ;;                  1    wreg      unsigned char 
 11993 ;; Registers used:
 11994 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11995 ;; Tracked objects:
 11996 ;;		On entry : 0/0
 11997 ;;		On exit  : 0/0
 11998 ;;		Unchanged: 0/0
 11999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12000 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12001 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12003 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12004 ;;Total ram usage:        3 bytes
 12005 ;; Hardware stack levels used: 1
 12006 ;; Hardware stack levels required when called: 21
 12007 ;; This function calls:
 12008 ;;		_I2C_Close
 12009 ;;		_I2C_MasterWrite
 12010 ;;		_I2C_Open
 12011 ;;		_I2C_SetAddressNackCallback
 12012 ;;		_I2C_SetBuffer
 12013 ;;		_I2C_SetDataCompleteCallback
 12014 ;; This function is called by:
 12015 ;;		_RealTimeClockDS1307_Get_Date_Time
 12016 ;;		_main
 12017 ;; This function uses a non-reentrant model
 12018 ;;
 12019                           
 12020                           	psect	text57
 12021  004C98                     __ptext57:
 12022                           	callstack 0
 12023  004C98                     _I2C_Read1ByteRegister:
 12024                           	callstack 8
 12025                           
 12026                           ; BSR set to: 1
 12027                           ;incstack = 0
 12028                           ;I2C_Read1ByteRegister@address stored from wreg
 12029  004C98  0100               	movlb	0	; () banked
 12030  004C9A  6F88               	movwf	I2C_Read1ByteRegister@address& (0+255),b
 12031  004C9C                     
 12032                           ;mcc_generated_files/examples/i2c_master_example.c: 63: uint8_t I2C_Read1ByteRegister(i2
      +                          c_address_t address, uint8_t reg);mcc_generated_files/examples/i2c_master_example.c: 64:
      +                           {;mcc_generated_files/examples/i2c_master_example.c: 65:     uint8_t returnValue = 0x00
      +                          ;
 12033  004C9C  0E00               	movlw	0
 12034  004C9E  0100               	movlb	0	; () banked
 12035  004CA0  6F89               	movwf	I2C_Read1ByteRegister@returnValue& (0+255),b
 12036  004CA2                     l12429:
 12037  004CA2  0100               	movlb	0	; () banked
 12038  004CA4  5188               	movf	I2C_Read1ByteRegister@address& (0+255),w,b
 12039  004CA6  EC32  F024         	call	_I2C_Open
 12040  004CAA  0900               	iorlw	0
 12041  004CAC  B4D8               	btfsc	status,2,c
 12042  004CAE  EF5B  F026         	goto	u10501
 12043  004CB2  EF5D  F026         	goto	u10500
 12044  004CB6                     u10501:
 12045  004CB6  EF51  F026         	goto	l12429
 12046  004CBA                     u10500:
 12047  004CBA                     
 12048                           ;mcc_generated_files/examples/i2c_master_example.c: 68:     I2C_SetDataCompleteCallback(
      +                          rd1RegCompleteHandler,&returnValue);
 12049  004CBA  0E18               	movlw	low _rd1RegCompleteHandler
 12050  004CBC  6E2C               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 12051  004CBE  0E5C               	movlw	high _rd1RegCompleteHandler
 12052  004CC0  6E2D               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 12053  004CC2  0E89               	movlw	low I2C_Read1ByteRegister@returnValue
 12054  004CC4  6E2E               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 12055  004CC6  0E00               	movlw	high I2C_Read1ByteRegister@returnValue
 12056  004CC8  6E2F               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 12057  004CCA  ECAD  F030         	call	_I2C_SetDataCompleteCallback	;wreg free
 12058  004CCE                     
 12059                           ;mcc_generated_files/examples/i2c_master_example.c: 69:     I2C_SetBuffer(&reg,1);
 12060  004CCE  0E30               	movlw	low I2C_Read1ByteRegister@reg
 12061  004CD0  6E27               	movwf	I2C_SetBuffer@buffer^0,c
 12062  004CD2  0E00               	movlw	high I2C_Read1ByteRegister@reg
 12063  004CD4  6E28               	movwf	(I2C_SetBuffer@buffer+1)^0,c
 12064  004CD6  0E00               	movlw	0
 12065  004CD8  6E2A               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 12066  004CDA  0E01               	movlw	1
 12067  004CDC  6E29               	movwf	I2C_SetBuffer@bufferSize^0,c
 12068  004CDE  ECC2  F02F         	call	_I2C_SetBuffer	;wreg free
 12069  004CE2                     
 12070                           ;mcc_generated_files/examples/i2c_master_example.c: 70:     I2C_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
 12071  004CE2  0E00               	movlw	0
 12072  004CE4  6E2C               	movwf	I2C_SetAddressNackCallback@cb^0,c
 12073  004CE6  0E00               	movlw	0
 12074  004CE8  6E2D               	movwf	(I2C_SetAddressNackCallback@cb+1)^0,c
 12075  004CEA  0E00               	movlw	0
 12076  004CEC  6E2E               	movwf	I2C_SetAddressNackCallback@ptr^0,c
 12077  004CEE  0E00               	movlw	0
 12078  004CF0  6E2F               	movwf	(I2C_SetAddressNackCallback@ptr+1)^0,c
 12079  004CF2  EC95  F030         	call	_I2C_SetAddressNackCallback	;wreg free
 12080  004CF6                     
 12081                           ;mcc_generated_files/examples/i2c_master_example.c: 71:     I2C_MasterWrite();
 12082  004CF6  EC95  F031         	call	_I2C_MasterWrite	;wreg free
 12083  004CFA                     l12439:
 12084  004CFA  ECFF  F02E         	call	_I2C_Close	;wreg free
 12085  004CFE  06E8               	decf	wreg,f,c
 12086  004D00  B4D8               	btfsc	status,2,c
 12087  004D02  EF85  F026         	goto	u10511
 12088  004D06  EF87  F026         	goto	u10510
 12089  004D0A                     u10511:
 12090  004D0A  EF7D  F026         	goto	l12439
 12091  004D0E                     u10510:
 12092  004D0E                     
 12093                           ;mcc_generated_files/examples/i2c_master_example.c: 74:     return returnValue;
 12094  004D0E  0100               	movlb	0	; () banked
 12095  004D10  5189               	movf	I2C_Read1ByteRegister@returnValue& (0+255),w,b
 12096  004D12                     
 12097                           ; BSR set to: 0
 12098  004D12  0012               	return		;funcret
 12099  004D14                     __end_of_I2C_Read1ByteRegister:
 12100                           	callstack 0
 12101                           
 12102 ;; *************** function _I2C_Write1ByteRegister *****************
 12103 ;; Defined at:
 12104 ;;		line 91 in file "mcc_generated_files/examples/i2c_master_example.c"
 12105 ;; Parameters:    Size  Location     Type
 12106 ;;  address         1    wreg     unsigned char 
 12107 ;;  reg             1    8[BANK0 ] unsigned char 
 12108 ;;  data            1    9[BANK0 ] unsigned char 
 12109 ;; Auto vars:     Size  Location     Type
 12110 ;;  address         1   47[COMRAM] unsigned char 
 12111 ;; Return value:  Size  Location     Type
 12112 ;;                  1    wreg      void 
 12113 ;; Registers used:
 12114 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12115 ;; Tracked objects:
 12116 ;;		On entry : 0/0
 12117 ;;		On exit  : 0/0
 12118 ;;		Unchanged: 0/0
 12119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12120 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12121 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12123 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12124 ;;Total ram usage:        3 bytes
 12125 ;; Hardware stack levels used: 1
 12126 ;; Hardware stack levels required when called: 21
 12127 ;; This function calls:
 12128 ;;		_I2C_Close
 12129 ;;		_I2C_MasterWrite
 12130 ;;		_I2C_Open
 12131 ;;		_I2C_SetAddressNackCallback
 12132 ;;		_I2C_SetBuffer
 12133 ;;		_I2C_SetDataCompleteCallback
 12134 ;; This function is called by:
 12135 ;;		_main
 12136 ;; This function uses a non-reentrant model
 12137 ;;
 12138                           
 12139                           	psect	text58
 12140  005292                     __ptext58:
 12141                           	callstack 0
 12142  005292                     _I2C_Write1ByteRegister:
 12143                           	callstack 9
 12144                           
 12145                           ; BSR set to: 0
 12146                           ;incstack = 0
 12147                           ;I2C_Write1ByteRegister@address stored from wreg
 12148  005292  6E30               	movwf	I2C_Write1ByteRegister@address^0,c
 12149  005294                     l12603:
 12150  005294  5030               	movf	I2C_Write1ByteRegister@address^0,w,c
 12151  005296  EC32  F024         	call	_I2C_Open
 12152  00529A  0900               	iorlw	0
 12153  00529C  B4D8               	btfsc	status,2,c
 12154  00529E  EF53  F029         	goto	u10731
 12155  0052A2  EF55  F029         	goto	u10730
 12156  0052A6                     u10731:
 12157  0052A6  EF4A  F029         	goto	l12603
 12158  0052AA                     u10730:
 12159  0052AA                     
 12160                           ;mcc_generated_files/examples/i2c_master_example.c: 94:     I2C_SetDataCompleteCallback(
      +                          wr1RegCompleteHandler,&data);
 12161  0052AA  0EAC               	movlw	low _wr1RegCompleteHandler
 12162  0052AC  6E2C               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 12163  0052AE  0E5B               	movlw	high _wr1RegCompleteHandler
 12164  0052B0  6E2D               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 12165  0052B2  0E89               	movlw	low I2C_Write1ByteRegister@data
 12166  0052B4  6E2E               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 12167  0052B6  0E00               	movlw	high I2C_Write1ByteRegister@data
 12168  0052B8  6E2F               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 12169  0052BA  ECAD  F030         	call	_I2C_SetDataCompleteCallback	;wreg free
 12170  0052BE                     
 12171                           ;mcc_generated_files/examples/i2c_master_example.c: 95:     I2C_SetBuffer(&reg,1);
 12172  0052BE  0E88               	movlw	low I2C_Write1ByteRegister@reg
 12173  0052C0  6E27               	movwf	I2C_SetBuffer@buffer^0,c
 12174  0052C2  0E00               	movlw	high I2C_Write1ByteRegister@reg
 12175  0052C4  6E28               	movwf	(I2C_SetBuffer@buffer+1)^0,c
 12176  0052C6  0E00               	movlw	0
 12177  0052C8  6E2A               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 12178  0052CA  0E01               	movlw	1
 12179  0052CC  6E29               	movwf	I2C_SetBuffer@bufferSize^0,c
 12180  0052CE  ECC2  F02F         	call	_I2C_SetBuffer	;wreg free
 12181  0052D2                     
 12182                           ;mcc_generated_files/examples/i2c_master_example.c: 96:     I2C_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
 12183  0052D2  0E00               	movlw	0
 12184  0052D4  6E2C               	movwf	I2C_SetAddressNackCallback@cb^0,c
 12185  0052D6  0E00               	movlw	0
 12186  0052D8  6E2D               	movwf	(I2C_SetAddressNackCallback@cb+1)^0,c
 12187  0052DA  0E00               	movlw	0
 12188  0052DC  6E2E               	movwf	I2C_SetAddressNackCallback@ptr^0,c
 12189  0052DE  0E00               	movlw	0
 12190  0052E0  6E2F               	movwf	(I2C_SetAddressNackCallback@ptr+1)^0,c
 12191  0052E2  EC95  F030         	call	_I2C_SetAddressNackCallback	;wreg free
 12192  0052E6                     
 12193                           ;mcc_generated_files/examples/i2c_master_example.c: 97:     I2C_MasterWrite();
 12194  0052E6  EC95  F031         	call	_I2C_MasterWrite	;wreg free
 12195  0052EA                     l12613:
 12196  0052EA  ECFF  F02E         	call	_I2C_Close	;wreg free
 12197  0052EE  06E8               	decf	wreg,f,c
 12198  0052F0  B4D8               	btfsc	status,2,c
 12199  0052F2  EF7D  F029         	goto	u10741
 12200  0052F6  EF7F  F029         	goto	u10740
 12201  0052FA                     u10741:
 12202  0052FA  EF75  F029         	goto	l12613
 12203  0052FE                     u10740:
 12204  0052FE  0012               	return		;funcret
 12205  005300                     __end_of_I2C_Write1ByteRegister:
 12206                           	callstack 0
 12207                           
 12208 ;; *************** function _I2C_SetAddressNackCallback *****************
 12209 ;; Defined at:
 12210 ;;		line 283 in file "mcc_generated_files/i2c_master.c"
 12211 ;; Parameters:    Size  Location     Type
 12212 ;;  cb              2   43[COMRAM] PTR FTN(PTR void ,)enum 
 12213 ;;		 -> Absolute function(1), 
 12214 ;;  ptr             2   45[COMRAM] PTR void 
 12215 ;;		 -> NULL(0), 
 12216 ;; Auto vars:     Size  Location     Type
 12217 ;;		None
 12218 ;; Return value:  Size  Location     Type
 12219 ;;                  1    wreg      void 
 12220 ;; Registers used:
 12221 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12222 ;; Tracked objects:
 12223 ;;		On entry : 0/0
 12224 ;;		On exit  : 0/0
 12225 ;;		Unchanged: 0/0
 12226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12227 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12230 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12231 ;;Total ram usage:        4 bytes
 12232 ;; Hardware stack levels used: 1
 12233 ;; Hardware stack levels required when called: 14
 12234 ;; This function calls:
 12235 ;;		_I2C_SetCallback
 12236 ;; This function is called by:
 12237 ;;		_I2C_Read1ByteRegister
 12238 ;;		_I2C_Write1ByteRegister
 12239 ;;		_I2C_Read2ByteRegister
 12240 ;;		_I2C_Write2ByteRegister
 12241 ;;		_I2C_WriteNBytes
 12242 ;;		_I2C_ReadDataBlock
 12243 ;; This function uses a non-reentrant model
 12244 ;;
 12245                           
 12246                           	psect	text59
 12247  00612A                     __ptext59:
 12248                           	callstack 0
 12249  00612A                     _I2C_SetAddressNackCallback:
 12250                           	callstack 14
 12251  00612A                     
 12252                           ;mcc_generated_files/i2c_master.c: 283: void I2C_SetAddressNackCallback(i2c_callback_t c
      +                          b, void *ptr);mcc_generated_files/i2c_master.c: 284: {;mcc_generated_files/i2c_master.c:
      +                           285:     I2C_SetCallback(I2C_ADDR_NACK, cb, ptr);
 12253  00612A  C02C  F027         	movff	I2C_SetAddressNackCallback@cb,I2C_SetCallback@cb
 12254  00612E  C02D  F028         	movff	I2C_SetAddressNackCallback@cb+1,I2C_SetCallback@cb+1
 12255  006132  C02E  F029         	movff	I2C_SetAddressNackCallback@ptr,I2C_SetCallback@ptr
 12256  006136  C02F  F02A         	movff	I2C_SetAddressNackCallback@ptr+1,I2C_SetCallback@ptr+1
 12257  00613A  0E02               	movlw	2
 12258  00613C  EC05  F027         	call	_I2C_SetCallback
 12259  006140  0012               	return		;funcret
 12260  006142                     __end_of_I2C_SetAddressNackCallback:
 12261                           	callstack 0
 12262                           
 12263 ;; *************** function _I2C_Open *****************
 12264 ;; Defined at:
 12265 ;;		line 176 in file "mcc_generated_files/i2c_master.c"
 12266 ;; Parameters:    Size  Location     Type
 12267 ;;  address         1    wreg     unsigned char 
 12268 ;; Auto vars:     Size  Location     Type
 12269 ;;  address         1   38[COMRAM] unsigned char 
 12270 ;;  returnValue     1   39[COMRAM] enum E355
 12271 ;; Return value:  Size  Location     Type
 12272 ;;                  1    wreg      enum E355
 12273 ;; Registers used:
 12274 ;;		wreg, status,2, status,0, cstack
 12275 ;; Tracked objects:
 12276 ;;		On entry : 0/0
 12277 ;;		On exit  : 0/0
 12278 ;;		Unchanged: 0/0
 12279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12281 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12283 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12284 ;;Total ram usage:        2 bytes
 12285 ;; Hardware stack levels used: 1
 12286 ;; Hardware stack levels required when called: 14
 12287 ;; This function calls:
 12288 ;;		_I2C_MasterClearIrq
 12289 ;;		_I2C_MasterOpen
 12290 ;; This function is called by:
 12291 ;;		_I2C_Read1ByteRegister
 12292 ;;		_I2C_Write1ByteRegister
 12293 ;;		_I2C_Read2ByteRegister
 12294 ;;		_I2C_Write2ByteRegister
 12295 ;;		_I2C_WriteNBytes
 12296 ;;		_I2C_ReadNBytes
 12297 ;;		_I2C_ReadDataBlock
 12298 ;; This function uses a non-reentrant model
 12299 ;;
 12300                           
 12301                           	psect	text60
 12302  004864                     __ptext60:
 12303                           	callstack 0
 12304  004864                     _I2C_Open:
 12305                           	callstack 14
 12306                           
 12307                           ;incstack = 0
 12308                           ;I2C_Open@address stored from wreg
 12309  004864  6E27               	movwf	I2C_Open@address^0,c
 12310  004866                     
 12311                           ;mcc_generated_files/i2c_master.c: 176: i2c_error_t I2C_Open(i2c_address_t address);mcc_
      +                          generated_files/i2c_master.c: 177: {;mcc_generated_files/i2c_master.c: 178:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
 12312  004866  0E01               	movlw	1
 12313  004868  6E28               	movwf	I2C_Open@returnValue^0,c
 12314  00486A                     
 12315                           ;mcc_generated_files/i2c_master.c: 180:     if(!I2C_Status.inUse)
 12316  00486A  0100               	movlb	0	; () banked
 12317  00486C  B5EB               	btfsc	(_I2C_Status+35)& (0+255),2,b
 12318  00486E  EF3B  F024         	goto	u10361
 12319  004872  EF3D  F024         	goto	u10360
 12320  004876                     u10361:
 12321  004876  EF77  F024         	goto	l12295
 12322  00487A                     u10360:
 12323  00487A                     
 12324                           ; BSR set to: 0
 12325                           ;mcc_generated_files/i2c_master.c: 181:     {;mcc_generated_files/i2c_master.c: 182:    
      +                               I2C_Status.address = address;
 12326  00487A  C027  F0E4         	movff	I2C_Open@address,_I2C_Status+28
 12327  00487E                     
 12328                           ; BSR set to: 0
 12329                           ;mcc_generated_files/i2c_master.c: 183:         I2C_Status.busy = 0;
 12330  00487E  93EB               	bcf	(_I2C_Status+35)& (0+255),1,b
 12331  004880                     
 12332                           ; BSR set to: 0
 12333                           ;mcc_generated_files/i2c_master.c: 184:         I2C_Status.inUse = 1;
 12334  004880  85EB               	bsf	(_I2C_Status+35)& (0+255),2,b
 12335  004882                     
 12336                           ; BSR set to: 0
 12337                           ;mcc_generated_files/i2c_master.c: 185:         I2C_Status.addressNackCheck = 0;
 12338  004882  91EB               	bcf	(_I2C_Status+35)& (0+255),0,b
 12339  004884                     
 12340                           ; BSR set to: 0
 12341                           ;mcc_generated_files/i2c_master.c: 186:         I2C_Status.state = I2C_RESET;
 12342  004884  0E0E               	movlw	14
 12343  004886  6FE9               	movwf	(_I2C_Status+33)& (0+255),b
 12344  004888                     
 12345                           ; BSR set to: 0
 12346                           ;mcc_generated_files/i2c_master.c: 187:         I2C_Status.time_out_value = 500;
 12347  004888  0E01               	movlw	1
 12348  00488A  6FE3               	movwf	(_I2C_Status+27)& (0+255),b
 12349  00488C  0EF4               	movlw	244
 12350  00488E  6FE2               	movwf	(_I2C_Status+26)& (0+255),b
 12351  004890                     
 12352                           ; BSR set to: 0
 12353                           ;mcc_generated_files/i2c_master.c: 188:         I2C_Status.bufferFree = 1;
 12354  004890  87EB               	bsf	(_I2C_Status+35)& (0+255),3,b
 12355  004892                     
 12356                           ; BSR set to: 0
 12357                           ;mcc_generated_files/i2c_master.c: 191:         I2C_Status.callbackTable[I2C_DATA_COMPLE
      +                          TE]=I2C_CallbackReturnStop;
 12358  004892  0EEA               	movlw	low _I2C_CallbackReturnStop
 12359  004894  6FC8               	movwf	_I2C_Status& (0+255),b
 12360  004896  0E62               	movlw	high _I2C_CallbackReturnStop
 12361  004898  6FC9               	movwf	(_I2C_Status+1)& (0+255),b
 12362  00489A                     
 12363                           ; BSR set to: 0
 12364                           ;mcc_generated_files/i2c_master.c: 192:         I2C_Status.callbackPayload[I2C_DATA_COMP
      +                          LETE] = ((void*)0);
 12365  00489A  0E00               	movlw	0
 12366  00489C  6FD4               	movwf	(_I2C_Status+12)& (0+255),b
 12367  00489E  0E00               	movlw	0
 12368  0048A0  6FD5               	movwf	(_I2C_Status+13)& (0+255),b
 12369  0048A2                     
 12370                           ; BSR set to: 0
 12371                           ;mcc_generated_files/i2c_master.c: 193:         I2C_Status.callbackTable[I2C_WRITE_COLLI
      +                          SION]=I2C_CallbackReturnStop;
 12372  0048A2  0EEA               	movlw	low _I2C_CallbackReturnStop
 12373  0048A4  6FCA               	movwf	(_I2C_Status+2)& (0+255),b
 12374  0048A6  0E62               	movlw	high _I2C_CallbackReturnStop
 12375  0048A8  6FCB               	movwf	(_I2C_Status+3)& (0+255),b
 12376  0048AA                     
 12377                           ; BSR set to: 0
 12378                           ;mcc_generated_files/i2c_master.c: 194:         I2C_Status.callbackPayload[I2C_WRITE_COL
      +                          LISION] = ((void*)0);
 12379  0048AA  0E00               	movlw	0
 12380  0048AC  6FD6               	movwf	(_I2C_Status+14)& (0+255),b
 12381  0048AE  0E00               	movlw	0
 12382  0048B0  6FD7               	movwf	(_I2C_Status+15)& (0+255),b
 12383  0048B2                     
 12384                           ; BSR set to: 0
 12385                           ;mcc_generated_files/i2c_master.c: 195:         I2C_Status.callbackTable[I2C_ADDR_NACK]=
      +                          I2C_CallbackReturnStop;
 12386  0048B2  0EEA               	movlw	low _I2C_CallbackReturnStop
 12387  0048B4  6FCC               	movwf	(_I2C_Status+4)& (0+255),b
 12388  0048B6  0E62               	movlw	high _I2C_CallbackReturnStop
 12389  0048B8  6FCD               	movwf	(_I2C_Status+5)& (0+255),b
 12390  0048BA                     
 12391                           ; BSR set to: 0
 12392                           ;mcc_generated_files/i2c_master.c: 196:         I2C_Status.callbackPayload[I2C_ADDR_NACK
      +                          ] = ((void*)0);
 12393  0048BA  0E00               	movlw	0
 12394  0048BC  6FD8               	movwf	(_I2C_Status+16)& (0+255),b
 12395  0048BE  0E00               	movlw	0
 12396  0048C0  6FD9               	movwf	(_I2C_Status+17)& (0+255),b
 12397  0048C2                     
 12398                           ; BSR set to: 0
 12399                           ;mcc_generated_files/i2c_master.c: 197:         I2C_Status.callbackTable[I2C_DATA_NACK]=
      +                          I2C_CallbackReturnStop;
 12400  0048C2  0EEA               	movlw	low _I2C_CallbackReturnStop
 12401  0048C4  6FCE               	movwf	(_I2C_Status+6)& (0+255),b
 12402  0048C6  0E62               	movlw	high _I2C_CallbackReturnStop
 12403  0048C8  6FCF               	movwf	(_I2C_Status+7)& (0+255),b
 12404  0048CA                     
 12405                           ; BSR set to: 0
 12406                           ;mcc_generated_files/i2c_master.c: 198:         I2C_Status.callbackPayload[I2C_DATA_NACK
      +                          ] = ((void*)0);
 12407  0048CA  0E00               	movlw	0
 12408  0048CC  6FDA               	movwf	(_I2C_Status+18)& (0+255),b
 12409  0048CE  0E00               	movlw	0
 12410  0048D0  6FDB               	movwf	(_I2C_Status+19)& (0+255),b
 12411  0048D2                     
 12412                           ; BSR set to: 0
 12413                           ;mcc_generated_files/i2c_master.c: 199:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2
      +                          C_CallbackReturnReset;
 12414  0048D2  0EDC               	movlw	low _I2C_CallbackReturnReset
 12415  0048D4  6FD0               	movwf	(_I2C_Status+8)& (0+255),b
 12416  0048D6  0E62               	movlw	high _I2C_CallbackReturnReset
 12417  0048D8  6FD1               	movwf	(_I2C_Status+9)& (0+255),b
 12418  0048DA                     
 12419                           ; BSR set to: 0
 12420                           ;mcc_generated_files/i2c_master.c: 200:         I2C_Status.callbackPayload[I2C_TIMEOUT] 
      +                          = ((void*)0);
 12421  0048DA  0E00               	movlw	0
 12422  0048DC  6FDC               	movwf	(_I2C_Status+20)& (0+255),b
 12423  0048DE  0E00               	movlw	0
 12424  0048E0  6FDD               	movwf	(_I2C_Status+21)& (0+255),b
 12425  0048E2                     
 12426                           ; BSR set to: 0
 12427                           ;mcc_generated_files/i2c_master.c: 202:         I2C_MasterClearIrq();
 12428  0048E2  ECDD  F031         	call	_I2C_MasterClearIrq	;wreg free
 12429  0048E6                     
 12430                           ;mcc_generated_files/i2c_master.c: 203:         I2C_MasterOpen();
 12431  0048E6  ECF8  F02F         	call	_I2C_MasterOpen	;wreg free
 12432  0048EA                     
 12433                           ;mcc_generated_files/i2c_master.c: 204:         returnValue = I2C_NOERR;
 12434  0048EA  0E00               	movlw	0
 12435  0048EC  6E28               	movwf	I2C_Open@returnValue^0,c
 12436  0048EE                     l12295:
 12437                           
 12438                           ;mcc_generated_files/i2c_master.c: 206:     return returnValue;
 12439  0048EE  5028               	movf	I2C_Open@returnValue^0,w,c
 12440  0048F0  0012               	return		;funcret
 12441  0048F2                     __end_of_I2C_Open:
 12442                           	callstack 0
 12443                           
 12444 ;; *************** function _I2C_MasterOpen *****************
 12445 ;; Defined at:
 12446 ;;		line 543 in file "mcc_generated_files/i2c_master.c"
 12447 ;; Parameters:    Size  Location     Type
 12448 ;;		None
 12449 ;; Auto vars:     Size  Location     Type
 12450 ;;		None
 12451 ;; Return value:  Size  Location     Type
 12452 ;;                  1    wreg      _Bool 
 12453 ;; Registers used:
 12454 ;;		wreg, status,2
 12455 ;; Tracked objects:
 12456 ;;		On entry : 0/0
 12457 ;;		On exit  : 0/0
 12458 ;;		Unchanged: 0/0
 12459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12464 ;;Total ram usage:        0 bytes
 12465 ;; Hardware stack levels used: 1
 12466 ;; Hardware stack levels required when called: 13
 12467 ;; This function calls:
 12468 ;;		Nothing
 12469 ;; This function is called by:
 12470 ;;		_I2C_Open
 12471 ;; This function uses a non-reentrant model
 12472 ;;
 12473                           
 12474                           	psect	text61
 12475  005FF0                     __ptext61:
 12476                           	callstack 0
 12477  005FF0                     _I2C_MasterOpen:
 12478                           	callstack 14
 12479  005FF0                     
 12480                           ;mcc_generated_files/i2c_master.c: 545:     if(!SSPCON1bits.SSPEN)
 12481  005FF0  BAC6               	btfsc	198,5,c	;volatile
 12482  005FF2  EFFD  F02F         	goto	u9341
 12483  005FF6  EFFF  F02F         	goto	u9340
 12484  005FFA                     u9341:
 12485  005FFA  EF08  F030         	goto	l1328
 12486  005FFE                     u9340:
 12487  005FFE                     
 12488                           ;mcc_generated_files/i2c_master.c: 546:     {;mcc_generated_files/i2c_master.c: 547:    
      +                               SSPSTAT = 0x80;
 12489  005FFE  0E80               	movlw	128
 12490  006000  6EC7               	movwf	199,c	;volatile
 12491                           
 12492                           ;mcc_generated_files/i2c_master.c: 548:         SSPCON1 = 0x08;
 12493  006002  0E08               	movlw	8
 12494  006004  6EC6               	movwf	198,c	;volatile
 12495                           
 12496                           ;mcc_generated_files/i2c_master.c: 549:         SSPCON2 = 0x00;
 12497  006006  0E00               	movlw	0
 12498  006008  6EC5               	movwf	197,c	;volatile
 12499                           
 12500                           ;mcc_generated_files/i2c_master.c: 550:         SSPADD = 0x03;
 12501  00600A  0E03               	movlw	3
 12502  00600C  6EC8               	movwf	200,c	;volatile
 12503  00600E                     
 12504                           ;mcc_generated_files/i2c_master.c: 551:         SSPCON1bits.SSPEN = 1;
 12505  00600E  8AC6               	bsf	198,5,c	;volatile
 12506  006010                     l1328:
 12507  006010  0012               	return		;funcret
 12508  006012                     __end_of_I2C_MasterOpen:
 12509                           	callstack 0
 12510                           
 12511 ;; *************** function _I2C_MasterWrite *****************
 12512 ;; Defined at:
 12513 ;;		line 251 in file "mcc_generated_files/i2c_master.c"
 12514 ;; Parameters:    Size  Location     Type
 12515 ;;		None
 12516 ;; Auto vars:     Size  Location     Type
 12517 ;;		None
 12518 ;; Return value:  Size  Location     Type
 12519 ;;                  1    wreg      enum E355
 12520 ;; Registers used:
 12521 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12522 ;; Tracked objects:
 12523 ;;		On entry : 0/0
 12524 ;;		On exit  : 0/0
 12525 ;;		Unchanged: 0/0
 12526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12531 ;;Total ram usage:        0 bytes
 12532 ;; Hardware stack levels used: 1
 12533 ;; Hardware stack levels required when called: 20
 12534 ;; This function calls:
 12535 ;;		_I2C_MasterOperation
 12536 ;; This function is called by:
 12537 ;;		_I2C_Read1ByteRegister
 12538 ;;		_I2C_Write1ByteRegister
 12539 ;;		_I2C_Read2ByteRegister
 12540 ;;		_I2C_Write2ByteRegister
 12541 ;;		_I2C_WriteNBytes
 12542 ;;		_I2C_ReadDataBlock
 12543 ;; This function uses a non-reentrant model
 12544 ;;
 12545                           
 12546                           	psect	text62
 12547  00632A                     __ptext62:
 12548                           	callstack 0
 12549  00632A                     _I2C_MasterWrite:
 12550                           	callstack 8
 12551  00632A                     
 12552                           ;mcc_generated_files/i2c_master.c: 253:     return I2C_MasterOperation(0);;	Return value
      +                           of _I2C_MasterWrite is never used
 12553  00632A  0E00               	movlw	0
 12554  00632C  EC96  F02C         	call	_I2C_MasterOperation
 12555  006330  0012               	return		;funcret
 12556  006332                     __end_of_I2C_MasterWrite:
 12557                           	callstack 0
 12558                           
 12559 ;; *************** function _I2C_MasterOperation *****************
 12560 ;; Defined at:
 12561 ;;		line 224 in file "mcc_generated_files/i2c_master.c"
 12562 ;; Parameters:    Size  Location     Type
 12563 ;;  read            1    wreg     _Bool 
 12564 ;; Auto vars:     Size  Location     Type
 12565 ;;  read            1    6[BANK0 ] _Bool 
 12566 ;;  returnValue     1    7[BANK0 ] enum E355
 12567 ;; Return value:  Size  Location     Type
 12568 ;;                  1    wreg      enum E355
 12569 ;; Registers used:
 12570 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12571 ;; Tracked objects:
 12572 ;;		On entry : 0/0
 12573 ;;		On exit  : 0/0
 12574 ;;		Unchanged: 0/0
 12575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12577 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12579 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12580 ;;Total ram usage:        2 bytes
 12581 ;; Hardware stack levels used: 1
 12582 ;; Hardware stack levels required when called: 19
 12583 ;; This function calls:
 12584 ;;		_I2C_MasterStart
 12585 ;;		_I2C_Poller
 12586 ;; This function is called by:
 12587 ;;		_I2C_MasterWrite
 12588 ;;		_I2C_MasterRead
 12589 ;; This function uses a non-reentrant model
 12590 ;;
 12591                           
 12592                           	psect	text63
 12593  00592C                     __ptext63:
 12594                           	callstack 0
 12595  00592C                     _I2C_MasterOperation:
 12596                           	callstack 8
 12597                           
 12598                           ;incstack = 0
 12599                           ;I2C_MasterOperation@read stored from wreg
 12600  00592C  0100               	movlb	0	; () banked
 12601  00592E  6F86               	movwf	I2C_MasterOperation@read& (0+255),b
 12602  005930                     
 12603                           ;mcc_generated_files/i2c_master.c: 224: i2c_error_t I2C_MasterOperation(_Bool read);mcc_
      +                          generated_files/i2c_master.c: 225: {;mcc_generated_files/i2c_master.c: 226:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
 12604  005930  0E01               	movlw	1
 12605  005932  0100               	movlb	0	; () banked
 12606  005934  6F87               	movwf	I2C_MasterOperation@returnValue& (0+255),b
 12607  005936                     
 12608                           ; BSR set to: 0
 12609                           ;mcc_generated_files/i2c_master.c: 227:     if(!I2C_Status.busy)
 12610  005936  B3EB               	btfsc	(_I2C_Status+35)& (0+255),1,b
 12611  005938  EFA0  F02C         	goto	u9351
 12612  00593C  EFA2  F02C         	goto	u9350
 12613  005940                     u9351:
 12614  005940  EFB7  F02C         	goto	l11535
 12615  005944                     u9350:
 12616  005944                     
 12617                           ; BSR set to: 0
 12618                           ;mcc_generated_files/i2c_master.c: 228:     {;mcc_generated_files/i2c_master.c: 229:    
      +                               I2C_Status.busy = 1;
 12619  005944  83EB               	bsf	(_I2C_Status+35)& (0+255),1,b
 12620  005946                     
 12621                           ; BSR set to: 0
 12622                           ;mcc_generated_files/i2c_master.c: 230:         returnValue = I2C_NOERR;
 12623  005946  0E00               	movlw	0
 12624  005948  6F87               	movwf	I2C_MasterOperation@returnValue& (0+255),b
 12625  00594A                     
 12626                           ; BSR set to: 0
 12627                           ;mcc_generated_files/i2c_master.c: 232:         if(read)
 12628  00594A  5186               	movf	I2C_MasterOperation@read& (0+255),w,b
 12629  00594C  B4D8               	btfsc	status,2,c
 12630  00594E  EFAB  F02C         	goto	u9361
 12631  005952  EFAD  F02C         	goto	u9360
 12632  005956                     u9361:
 12633  005956  EFB1  F02C         	goto	l11529
 12634  00595A                     u9360:
 12635  00595A                     
 12636                           ; BSR set to: 0
 12637                           ;mcc_generated_files/i2c_master.c: 233:         {;mcc_generated_files/i2c_master.c: 234:
      +                                       I2C_Status.state = I2C_SEND_ADR_READ;
 12638  00595A  0E01               	movlw	1
 12639  00595C  6FE9               	movwf	(_I2C_Status+33)& (0+255),b
 12640                           
 12641                           ;mcc_generated_files/i2c_master.c: 235:         }
 12642  00595E  EFB3  F02C         	goto	l11531
 12643  005962                     l11529:
 12644                           
 12645                           ; BSR set to: 0
 12646                           ;mcc_generated_files/i2c_master.c: 237:         {;mcc_generated_files/i2c_master.c: 238:
      +                                       I2C_Status.state = I2C_SEND_ADR_WRITE;
 12647  005962  0E02               	movlw	2
 12648  005964  6FE9               	movwf	(_I2C_Status+33)& (0+255),b
 12649  005966                     l11531:
 12650                           
 12651                           ; BSR set to: 0
 12652                           ;mcc_generated_files/i2c_master.c: 240:         I2C_MasterStart();
 12653  005966  ECD7  F031         	call	_I2C_MasterStart	;wreg free
 12654  00596A                     
 12655                           ;mcc_generated_files/i2c_master.c: 241:         I2C_Poller();
 12656  00596A  EC1A  F030         	call	_I2C_Poller	;wreg free
 12657  00596E                     l11535:
 12658                           
 12659                           ;mcc_generated_files/i2c_master.c: 243:     return returnValue;
 12660  00596E  0100               	movlb	0	; () banked
 12661  005970  5187               	movf	I2C_MasterOperation@returnValue& (0+255),w,b
 12662  005972                     
 12663                           ; BSR set to: 0
 12664  005972  0012               	return		;funcret
 12665  005974                     __end_of_I2C_MasterOperation:
 12666                           	callstack 0
 12667                           
 12668 ;; *************** function _I2C_Poller *****************
 12669 ;; Defined at:
 12670 ;;		line 312 in file "mcc_generated_files/i2c_master.c"
 12671 ;; Parameters:    Size  Location     Type
 12672 ;;		None
 12673 ;; Auto vars:     Size  Location     Type
 12674 ;;		None
 12675 ;; Return value:  Size  Location     Type
 12676 ;;                  1    wreg      void 
 12677 ;; Registers used:
 12678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12679 ;; Tracked objects:
 12680 ;;		On entry : 0/0
 12681 ;;		On exit  : 0/0
 12682 ;;		Unchanged: 0/0
 12683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12688 ;;Total ram usage:        0 bytes
 12689 ;; Hardware stack levels used: 1
 12690 ;; Hardware stack levels required when called: 18
 12691 ;; This function calls:
 12692 ;;		_I2C_MasterFsm
 12693 ;;		_I2C_MasterWaitForEvent
 12694 ;; This function is called by:
 12695 ;;		_I2C_MasterOperation
 12696 ;; This function uses a non-reentrant model
 12697 ;;
 12698                           
 12699                           	psect	text64
 12700  006034                     __ptext64:
 12701                           	callstack 0
 12702  006034                     _I2C_Poller:
 12703                           	callstack 8
 12704  006034                     
 12705                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
 12706  006034  EF20  F030         	goto	l11321
 12707  006038                     l11317:
 12708                           
 12709                           ; BSR set to: 0
 12710                           ;mcc_generated_files/i2c_master.c: 315:     {;mcc_generated_files/i2c_master.c: 316:    
      +                               I2C_MasterWaitForEvent();
 12711  006038  EC4F  F031         	call	_I2C_MasterWaitForEvent	;wreg free
 12712  00603C                     
 12713                           ;mcc_generated_files/i2c_master.c: 317:         I2C_MasterFsm();
 12714  00603C  ECD9  F028         	call	_I2C_MasterFsm	;wreg free
 12715  006040                     l11321:
 12716                           
 12717                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
 12718  006040  0100               	movlb	0	; () banked
 12719  006042  B3EB               	btfsc	(_I2C_Status+35)& (0+255),1,b
 12720  006044  EF26  F030         	goto	u9211
 12721  006048  EF28  F030         	goto	u9210
 12722  00604C                     u9211:
 12723  00604C  EF1C  F030         	goto	l11317
 12724  006050                     u9210:
 12725  006050                     
 12726                           ; BSR set to: 0
 12727  006050  0012               	return		;funcret
 12728  006052                     __end_of_I2C_Poller:
 12729                           	callstack 0
 12730                           
 12731 ;; *************** function _I2C_MasterWaitForEvent *****************
 12732 ;; Defined at:
 12733 ;;		line 650 in file "mcc_generated_files/i2c_master.c"
 12734 ;; Parameters:    Size  Location     Type
 12735 ;;		None
 12736 ;; Auto vars:     Size  Location     Type
 12737 ;;		None
 12738 ;; Return value:  Size  Location     Type
 12739 ;;                  1    wreg      void 
 12740 ;; Registers used:
 12741 ;;		None
 12742 ;; Tracked objects:
 12743 ;;		On entry : 0/0
 12744 ;;		On exit  : 0/0
 12745 ;;		Unchanged: 0/0
 12746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12751 ;;Total ram usage:        0 bytes
 12752 ;; Hardware stack levels used: 1
 12753 ;; Hardware stack levels required when called: 13
 12754 ;; This function calls:
 12755 ;;		Nothing
 12756 ;; This function is called by:
 12757 ;;		_I2C_Poller
 12758 ;; This function uses a non-reentrant model
 12759 ;;
 12760                           
 12761                           	psect	text65
 12762  00629E                     __ptext65:
 12763                           	callstack 0
 12764  00629E                     _I2C_MasterWaitForEvent:
 12765                           	callstack 12
 12766  00629E                     l1385:
 12767                           
 12768                           ;mcc_generated_files/i2c_master.c: 653:     {;mcc_generated_files/i2c_master.c: 654:    
      +                               if(PIR1bits.SSPIF)
 12769  00629E  A69E               	btfss	158,3,c	;volatile
 12770  0062A0  EF54  F031         	goto	u8921
 12771  0062A4  EF56  F031         	goto	u8920
 12772  0062A8                     u8921:
 12773  0062A8  EF4F  F031         	goto	l1385
 12774  0062AC                     u8920:
 12775  0062AC  0012               	return		;funcret
 12776  0062AE                     __end_of_I2C_MasterWaitForEvent:
 12777                           	callstack 0
 12778                           
 12779 ;; *************** function _I2C_MasterFsm *****************
 12780 ;; Defined at:
 12781 ;;		line 321 in file "mcc_generated_files/i2c_master.c"
 12782 ;; Parameters:    Size  Location     Type
 12783 ;;		None
 12784 ;; Auto vars:     Size  Location     Type
 12785 ;;		None
 12786 ;; Return value:  Size  Location     Type
 12787 ;;                  1    wreg      void 
 12788 ;; Registers used:
 12789 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12790 ;; Tracked objects:
 12791 ;;		On entry : 0/0
 12792 ;;		On exit  : 0/0
 12793 ;;		Unchanged: 0/0
 12794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12797 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12798 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12799 ;;Total ram usage:        2 bytes
 12800 ;; Hardware stack levels used: 1
 12801 ;; Hardware stack levels required when called: 17
 12802 ;; This function calls:
 12803 ;;		_I2C_DO_ADDRESS_NACK
 12804 ;;		_I2C_DO_IDLE
 12805 ;;		_I2C_DO_RCEN
 12806 ;;		_I2C_DO_RESET
 12807 ;;		_I2C_DO_RX
 12808 ;;		_I2C_DO_RX_ACK
 12809 ;;		_I2C_DO_RX_NACK_RESTART
 12810 ;;		_I2C_DO_RX_NACK_STOP
 12811 ;;		_I2C_DO_SEND_ADR_READ
 12812 ;;		_I2C_DO_SEND_ADR_WRITE
 12813 ;;		_I2C_DO_SEND_RESTART
 12814 ;;		_I2C_DO_SEND_RESTART_READ
 12815 ;;		_I2C_DO_SEND_RESTART_WRITE
 12816 ;;		_I2C_DO_SEND_STOP
 12817 ;;		_I2C_DO_TX
 12818 ;;		_I2C_DO_TX_EMPTY
 12819 ;;		_I2C_MasterClearIrq
 12820 ;;		_I2C_MasterIsNack
 12821 ;; This function is called by:
 12822 ;;		_I2C_Poller
 12823 ;; This function uses a non-reentrant model
 12824 ;;
 12825                           
 12826                           	psect	text66
 12827  0051B2                     __ptext66:
 12828                           	callstack 0
 12829  0051B2                     _I2C_MasterFsm:
 12830                           	callstack 8
 12831  0051B2                     
 12832                           ;mcc_generated_files/i2c_master.c: 323:     I2C_MasterClearIrq();
 12833  0051B2  ECDD  F031         	call	_I2C_MasterClearIrq	;wreg free
 12834  0051B6                     
 12835                           ;mcc_generated_files/i2c_master.c: 325:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
 12836  0051B6  0100               	movlb	0	; () banked
 12837  0051B8  A1EB               	btfss	(_I2C_Status+35)& (0+255),0,b
 12838  0051BA  EFE1  F028         	goto	u8931
 12839  0051BE  EFE3  F028         	goto	u8930
 12840  0051C2                     u8931:
 12841  0051C2  EFF0  F028         	goto	l11173
 12842  0051C6                     u8930:
 12843  0051C6                     
 12844                           ; BSR set to: 0
 12845  0051C6  ECFC  F030         	call	_I2C_MasterIsNack	;wreg free
 12846  0051CA  0900               	iorlw	0
 12847  0051CC  B4D8               	btfsc	status,2,c
 12848  0051CE  EFEB  F028         	goto	u8941
 12849  0051D2  EFED  F028         	goto	u8940
 12850  0051D6                     u8941:
 12851  0051D6  EFF0  F028         	goto	l11173
 12852  0051DA                     u8940:
 12853  0051DA                     
 12854                           ;mcc_generated_files/i2c_master.c: 326:     {;mcc_generated_files/i2c_master.c: 327:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
 12855  0051DA  0E0F               	movlw	15
 12856  0051DC  0100               	movlb	0	; () banked
 12857  0051DE  6FE9               	movwf	(_I2C_Status+33)& (0+255),b
 12858  0051E0                     l11173:
 12859                           
 12860                           ;mcc_generated_files/i2c_master.c: 329:     I2C_Status.state = i2c_fsmStateTable[I2C_Sta
      +                          tus.state]();
 12861  0051E0  0100               	movlb	0	; () banked
 12862  0051E2  51E9               	movf	(_I2C_Status+33)& (0+255),w,b
 12863  0051E4  0D02               	mullw	2
 12864  0051E6  0E01               	movlw	low _i2c_fsmStateTable
 12865  0051E8  24F3               	addwf	243,w,c
 12866  0051EA  6EF6               	movwf	tblptrl,c
 12867  0051EC  0E10               	movlw	high _i2c_fsmStateTable
 12868  0051EE  20F4               	addwfc	244,w,c
 12869  0051F0  6EF7               	movwf	tblptrh,c
 12870  0051F2                     	if	1	;There are 3 active tblptr bytes
 12871  0051F2  6AF8               	clrf	tblptru,c
 12872  0051F4  0E00               	movlw	low (__mediumconst shr (0+16))
 12873  0051F6  22F8               	addwfc	tblptru,f,c
 12874  0051F8                     	endif
 12875  0051F8  0009               	tblrd		*+
 12876  0051FA  CFF5 F084          	movff	tablat,??_I2C_MasterFsm
 12877  0051FE  0009               	tblrd		*+
 12878  005200  CFF5 F085          	movff	tablat,??_I2C_MasterFsm+1
 12879  005204  D802               	call	u8958
 12880  005206  EF0E  F029         	goto	u8959
 12881  00520A                     u8958:
 12882  00520A  0005               	push	
 12883  00520C  6EFA               	movwf	pclath,c
 12884  00520E  5184               	movf	??_I2C_MasterFsm& (0+255),w,b
 12885  005210  6EFD               	movwf	tosl,c
 12886  005212  5185               	movf	(??_I2C_MasterFsm+1)& (0+255),w,b
 12887  005214  6EFE               	movwf	tosh,c
 12888  005216  6AFF               	clrf	tosu,c
 12889  005218  50FA               	movf	pclath,w,c
 12890  00521A  0012               	return		;indir
 12891  00521C                     u8959:
 12892  00521C  0100               	movlb	0	; () banked
 12893  00521E  6FE9               	movwf	(_I2C_Status+33)& (0+255),b
 12894  005220                     
 12895                           ; BSR set to: 0
 12896  005220  0012               	return		;funcret
 12897  005222                     __end_of_I2C_MasterFsm:
 12898                           	callstack 0
 12899                           
 12900 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
 12901 ;; Defined at:
 12902 ;;		line 500 in file "mcc_generated_files/i2c_master.c"
 12903 ;; Parameters:    Size  Location     Type
 12904 ;;		None
 12905 ;; Auto vars:     Size  Location     Type
 12906 ;;		None
 12907 ;; Return value:  Size  Location     Type
 12908 ;;                  1    wreg      enum E2863
 12909 ;; Registers used:
 12910 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 12911 ;; Tracked objects:
 12912 ;;		On entry : 0/0
 12913 ;;		On exit  : 0/0
 12914 ;;		Unchanged: 0/0
 12915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12918 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12919 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12920 ;;Total ram usage:        2 bytes
 12921 ;; Hardware stack levels used: 1
 12922 ;; Hardware stack levels required when called: 16
 12923 ;; This function calls:
 12924 ;;		Absolute function
 12925 ;;		_I2C_CallbackReturnReset
 12926 ;;		_I2C_CallbackReturnStop
 12927 ;;		_I2C_DO_SEND_RESTART
 12928 ;;		_I2C_DO_SEND_STOP
 12929 ;;		_rd1RegCompleteHandler
 12930 ;;		_rd2RegCompleteHandler
 12931 ;;		_rdBlkRegCompleteHandler
 12932 ;;		_wr1RegCompleteHandler
 12933 ;;		_wr2RegCompleteHandler
 12934 ;; This function is called by:
 12935 ;;		i2_I2C_MasterFsm
 12936 ;;		_I2C_MasterFsm
 12937 ;; This function uses a non-reentrant model
 12938 ;;
 12939                           
 12940                           	psect	text67
 12941  005140                     __ptext67:
 12942                           	callstack 0
 12943  005140                     _I2C_DO_ADDRESS_NACK:
 12944                           	callstack 0
 12945                           
 12946                           ; BSR set to: 0
 12947                           ;Skip over the trampoline to the duplicate function for level 2
 12948  005140  A259               	btfss	int$flags,1,c
 12949  005142  EFA5  F028         	goto	_I2C_DO_ADDRESS_NACK$intlevel0
 12950  005146  EFBD  F02A         	goto	i2_I2C_DO_ADDRESS_NACK
 12951  00514A                     _I2C_DO_ADDRESS_NACK$intlevel0:
 12952                           	callstack 8
 12953  00514A                     
 12954                           ;mcc_generated_files/i2c_master.c: 502:     I2C_Status.addressNackCheck = 0;
 12955  00514A  0100               	movlb	0	; () banked
 12956  00514C  91EB               	bcf	(_I2C_Status+35)& (0+255),0,b
 12957  00514E                     
 12958                           ; BSR set to: 0
 12959                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.error = I2C_FAIL;
 12960  00514E  0E02               	movlw	2
 12961  005150  6FEA               	movwf	(_I2C_Status+34)& (0+255),b
 12962                           
 12963                           ;mcc_generated_files/i2c_master.c: 504:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
 12964  005152  EFB3  F028         	goto	l11013
 12965  005156                     l11003:
 12966                           
 12967                           ; BSR set to: 0
 12968                           ;mcc_generated_files/i2c_master.c: 508:             return I2C_DO_SEND_RESTART();
 12969  005156  EC34  F031         	call	_I2C_DO_SEND_RESTART	;wreg free
 12970  00515A  EFD8  F028         	goto	l1307
 12971  00515E                     l11007:
 12972                           
 12973                           ; BSR set to: 0
 12974                           ;mcc_generated_files/i2c_master.c: 510:             return I2C_DO_SEND_STOP();
 12975  00515E  EC2B  F031         	call	_I2C_DO_SEND_STOP	;wreg free
 12976  005162  EFD8  F028         	goto	l1307
 12977  005166                     l11013:
 12978                           
 12979                           ; BSR set to: 0
 12980  005166  C0D8  F080         	movff	_I2C_Status+16,rd1RegCompleteHandler@ptr
 12981  00516A  C0D9  F081         	movff	_I2C_Status+17,rd1RegCompleteHandler@ptr+1
 12982  00516E  D802               	call	u8668
 12983  005170  EFC3  F028         	goto	u8669
 12984  005174                     u8668:
 12985  005174  0005               	push	
 12986  005176  6EFA               	movwf	pclath,c
 12987  005178  51CC               	movf	(_I2C_Status+4)& (0+255),w,b
 12988  00517A  6EFD               	movwf	tosl,c
 12989  00517C  51CD               	movf	(_I2C_Status+5)& (0+255),w,b
 12990  00517E  6EFE               	movwf	tosh,c
 12991  005180  6AFF               	clrf	tosu,c
 12992  005182  50FA               	movf	pclath,w,c
 12993  005184  0012               	return		;indir
 12994  005186                     u8669:
 12995  005186  0100               	movlb	0	; () banked
 12996  005188  6F82               	movwf	??_I2C_DO_ADDRESS_NACK& (0+255),b
 12997  00518A  6B83               	clrf	(??_I2C_DO_ADDRESS_NACK+1)& (0+255),b
 12998                           
 12999                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13000                           ; Switch size 1, requested type "simple"
 13001                           ; Number of cases is 1, Range of values is 0 to 0
 13002                           ; switch strategies available:
 13003                           ; Name         Instructions Cycles
 13004                           ; simple_byte            4     3 (average)
 13005                           ;	Chosen strategy is simple_byte
 13006  00518C  5183               	movf	(??_I2C_DO_ADDRESS_NACK+1)& (0+255),w,b
 13007  00518E  0A00               	xorlw	0	; case 0
 13008  005190  B4D8               	btfsc	status,2,c
 13009  005192  EFCD  F028         	goto	l13665
 13010  005196  EFAF  F028         	goto	l11007
 13011  00519A                     l13665:
 13012                           
 13013                           ; BSR set to: 0
 13014                           ; Switch size 1, requested type "simple"
 13015                           ; Number of cases is 2, Range of values is 2 to 3
 13016                           ; switch strategies available:
 13017                           ; Name         Instructions Cycles
 13018                           ; simple_byte            7     4 (average)
 13019                           ;	Chosen strategy is simple_byte
 13020  00519A  5182               	movf	??_I2C_DO_ADDRESS_NACK& (0+255),w,b
 13021  00519C  0A02               	xorlw	2	; case 2
 13022  00519E  B4D8               	btfsc	status,2,c
 13023  0051A0  EFAB  F028         	goto	l11003
 13024  0051A4  0A01               	xorlw	1	; case 3
 13025  0051A6  B4D8               	btfsc	status,2,c
 13026  0051A8  EFAB  F028         	goto	l11003
 13027  0051AC  EFAF  F028         	goto	l11007
 13028  0051B0                     l1307:
 13029  0051B0  0012               	return		;funcret
 13030  0051B2                     __end_of_I2C_DO_ADDRESS_NACK:
 13031                           	callstack 0
 13032                           
 13033 ;; *************** function _I2C_DO_RESET *****************
 13034 ;; Defined at:
 13035 ;;		line 494 in file "mcc_generated_files/i2c_master.c"
 13036 ;; Parameters:    Size  Location     Type
 13037 ;;		None
 13038 ;; Auto vars:     Size  Location     Type
 13039 ;;		None
 13040 ;; Return value:  Size  Location     Type
 13041 ;;                  1    wreg      enum E2863
 13042 ;; Registers used:
 13043 ;;		wreg, status,2
 13044 ;; Tracked objects:
 13045 ;;		On entry : 0/0
 13046 ;;		On exit  : 0/0
 13047 ;;		Unchanged: 0/0
 13048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13053 ;;Total ram usage:        0 bytes
 13054 ;; Hardware stack levels used: 1
 13055 ;; Hardware stack levels required when called: 13
 13056 ;; This function calls:
 13057 ;;		Nothing
 13058 ;; This function is called by:
 13059 ;;		i2_I2C_MasterFsm
 13060 ;;		_I2C_MasterFsm
 13061 ;; This function uses a non-reentrant model
 13062 ;;
 13063                           
 13064                           	psect	text68
 13065  0061A2                     __ptext68:
 13066                           	callstack 0
 13067  0061A2                     _I2C_DO_RESET:
 13068                           	callstack 0
 13069                           
 13070                           ;Skip over the trampoline to the duplicate function for level 2
 13071  0061A2  A259               	btfss	int$flags,1,c
 13072  0061A4  EFD6  F030         	goto	_I2C_DO_RESET$intlevel0
 13073  0061A8  EF83  F031         	goto	i2_I2C_DO_RESET
 13074  0061AC                     _I2C_DO_RESET$intlevel0:
 13075                           	callstack 11
 13076  0061AC                     
 13077                           ;mcc_generated_files/i2c_master.c: 496:     I2C_Status.busy = 0;
 13078  0061AC  0100               	movlb	0	; () banked
 13079  0061AE  93EB               	bcf	(_I2C_Status+35)& (0+255),1,b
 13080  0061B0                     
 13081                           ; BSR set to: 0
 13082                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.error = I2C_NOERR;
 13083  0061B0  0E00               	movlw	0
 13084  0061B2  6FEA               	movwf	(_I2C_Status+34)& (0+255),b
 13085  0061B4                     
 13086                           ; BSR set to: 0
 13087                           ;mcc_generated_files/i2c_master.c: 498:     return I2C_RESET;
 13088  0061B4  0E0E               	movlw	14
 13089  0061B6                     
 13090                           ; BSR set to: 0
 13091  0061B6  0012               	return		;funcret
 13092  0061B8                     __end_of_I2C_DO_RESET:
 13093                           	callstack 0
 13094                           
 13095 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
 13096 ;; Defined at:
 13097 ;;		line 488 in file "mcc_generated_files/i2c_master.c"
 13098 ;; Parameters:    Size  Location     Type
 13099 ;;		None
 13100 ;; Auto vars:     Size  Location     Type
 13101 ;;		None
 13102 ;; Return value:  Size  Location     Type
 13103 ;;                  1    wreg      enum E2863
 13104 ;; Registers used:
 13105 ;;		wreg, cstack
 13106 ;; Tracked objects:
 13107 ;;		On entry : 0/0
 13108 ;;		On exit  : 0/0
 13109 ;;		Unchanged: 0/0
 13110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13115 ;;Total ram usage:        0 bytes
 13116 ;; Hardware stack levels used: 1
 13117 ;; Hardware stack levels required when called: 14
 13118 ;; This function calls:
 13119 ;;		_I2C_MasterSendNack
 13120 ;; This function is called by:
 13121 ;;		_I2C_DO_RX
 13122 ;;		i2_I2C_MasterFsm
 13123 ;;		_I2C_MasterFsm
 13124 ;; This function uses a non-reentrant model
 13125 ;;
 13126                           
 13127                           	psect	text69
 13128  006220                     __ptext69:
 13129                           	callstack 0
 13130  006220                     _I2C_DO_RX_NACK_RESTART:
 13131                           	callstack 0
 13132                           
 13133                           ; BSR set to: 0
 13134                           ;Skip over the trampoline to the duplicate function for level 2
 13135  006220  A259               	btfss	int$flags,1,c
 13136  006222  EF15  F031         	goto	_I2C_DO_RX_NACK_RESTART$intlevel0
 13137  006226  EFA1  F031         	goto	i2_I2C_DO_RX_NACK_RESTART
 13138  00622A                     _I2C_DO_RX_NACK_RESTART$intlevel0:
 13139                           	callstack 10
 13140  00622A                     
 13141                           ;mcc_generated_files/i2c_master.c: 490:     I2C_MasterSendNack();
 13142  00622A  ECC4  F031         	call	_I2C_MasterSendNack	;wreg free
 13143  00622E                     
 13144                           ;mcc_generated_files/i2c_master.c: 491:     return I2C_SEND_RESTART;
 13145  00622E  0E09               	movlw	9
 13146  006230  0012               	return		;funcret
 13147  006232                     __end_of_I2C_DO_RX_NACK_RESTART:
 13148                           	callstack 0
 13149                           
 13150 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
 13151 ;; Defined at:
 13152 ;;		line 482 in file "mcc_generated_files/i2c_master.c"
 13153 ;; Parameters:    Size  Location     Type
 13154 ;;		None
 13155 ;; Auto vars:     Size  Location     Type
 13156 ;;		None
 13157 ;; Return value:  Size  Location     Type
 13158 ;;                  1    wreg      enum E2863
 13159 ;; Registers used:
 13160 ;;		wreg, cstack
 13161 ;; Tracked objects:
 13162 ;;		On entry : 0/0
 13163 ;;		On exit  : 0/0
 13164 ;;		Unchanged: 0/0
 13165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13170 ;;Total ram usage:        0 bytes
 13171 ;; Hardware stack levels used: 1
 13172 ;; Hardware stack levels required when called: 14
 13173 ;; This function calls:
 13174 ;;		_I2C_MasterSendNack
 13175 ;; This function is called by:
 13176 ;;		_I2C_DO_RX
 13177 ;;		i2_I2C_MasterFsm
 13178 ;;		_I2C_MasterFsm
 13179 ;; This function uses a non-reentrant model
 13180 ;;
 13181                           
 13182                           	psect	text70
 13183  006232                     __ptext70:
 13184                           	callstack 0
 13185  006232                     _I2C_DO_RX_NACK_STOP:
 13186                           	callstack 0
 13187                           
 13188                           ;Skip over the trampoline to the duplicate function for level 2
 13189  006232  A259               	btfss	int$flags,1,c
 13190  006234  EF1E  F031         	goto	_I2C_DO_RX_NACK_STOP$intlevel0
 13191  006238  EFA5  F031         	goto	i2_I2C_DO_RX_NACK_STOP
 13192  00623C                     _I2C_DO_RX_NACK_STOP$intlevel0:
 13193                           	callstack 10
 13194  00623C                     
 13195                           ;mcc_generated_files/i2c_master.c: 484:     I2C_MasterSendNack();
 13196  00623C  ECC4  F031         	call	_I2C_MasterSendNack	;wreg free
 13197  006240                     
 13198                           ;mcc_generated_files/i2c_master.c: 485:     return I2C_SEND_STOP;
 13199  006240  0E0A               	movlw	10
 13200  006242  0012               	return		;funcret
 13201  006244                     __end_of_I2C_DO_RX_NACK_STOP:
 13202                           	callstack 0
 13203                           
 13204 ;; *************** function _I2C_DO_RX_ACK *****************
 13205 ;; Defined at:
 13206 ;;		line 475 in file "mcc_generated_files/i2c_master.c"
 13207 ;; Parameters:    Size  Location     Type
 13208 ;;		None
 13209 ;; Auto vars:     Size  Location     Type
 13210 ;;		None
 13211 ;; Return value:  Size  Location     Type
 13212 ;;                  1    wreg      enum E2863
 13213 ;; Registers used:
 13214 ;;		wreg, cstack
 13215 ;; Tracked objects:
 13216 ;;		On entry : 0/0
 13217 ;;		On exit  : 0/0
 13218 ;;		Unchanged: 0/0
 13219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13224 ;;Total ram usage:        0 bytes
 13225 ;; Hardware stack levels used: 1
 13226 ;; Hardware stack levels required when called: 14
 13227 ;; This function calls:
 13228 ;;		_I2C_MasterSendAck
 13229 ;; This function is called by:
 13230 ;;		i2_I2C_MasterFsm
 13231 ;;		_I2C_MasterFsm
 13232 ;; This function uses a non-reentrant model
 13233 ;;
 13234                           
 13235                           	psect	text71
 13236  006244                     __ptext71:
 13237                           	callstack 0
 13238  006244                     _I2C_DO_RX_ACK:
 13239                           	callstack 0
 13240                           
 13241                           ;Skip over the trampoline to the duplicate function for level 2
 13242  006244  A259               	btfss	int$flags,1,c
 13243  006246  EF27  F031         	goto	_I2C_DO_RX_ACK$intlevel0
 13244  00624A  EFA9  F031         	goto	i2_I2C_DO_RX_ACK
 13245  00624E                     _I2C_DO_RX_ACK$intlevel0:
 13246                           	callstack 10
 13247  00624E                     
 13248                           ;mcc_generated_files/i2c_master.c: 477:     I2C_MasterSendAck();
 13249  00624E  ECC1  F031         	call	_I2C_MasterSendAck	;wreg free
 13250  006252                     
 13251                           ;mcc_generated_files/i2c_master.c: 478:     return I2C_RCEN;
 13252  006252  0E05               	movlw	5
 13253  006254  0012               	return		;funcret
 13254  006256                     __end_of_I2C_DO_RX_ACK:
 13255                           	callstack 0
 13256                           
 13257 ;; *************** function _I2C_DO_SEND_STOP *****************
 13258 ;; Defined at:
 13259 ;;		line 469 in file "mcc_generated_files/i2c_master.c"
 13260 ;; Parameters:    Size  Location     Type
 13261 ;;		None
 13262 ;; Auto vars:     Size  Location     Type
 13263 ;;		None
 13264 ;; Return value:  Size  Location     Type
 13265 ;;                  1    wreg      enum E2863
 13266 ;; Registers used:
 13267 ;;		wreg, cstack
 13268 ;; Tracked objects:
 13269 ;;		On entry : 0/0
 13270 ;;		On exit  : 0/0
 13271 ;;		Unchanged: 0/0
 13272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13277 ;;Total ram usage:        0 bytes
 13278 ;; Hardware stack levels used: 1
 13279 ;; Hardware stack levels required when called: 14
 13280 ;; This function calls:
 13281 ;;		_I2C_MasterStop
 13282 ;; This function is called by:
 13283 ;;		_I2C_DO_TX
 13284 ;;		_I2C_DO_TX_EMPTY
 13285 ;;		_I2C_DO_ADDRESS_NACK
 13286 ;;		i2_I2C_MasterFsm
 13287 ;;		_I2C_MasterFsm
 13288 ;; This function uses a non-reentrant model
 13289 ;;
 13290                           
 13291                           	psect	text72
 13292  006256                     __ptext72:
 13293                           	callstack 0
 13294  006256                     _I2C_DO_SEND_STOP:
 13295                           	callstack 0
 13296                           
 13297                           ;Skip over the trampoline to the duplicate function for level 2
 13298  006256  A259               	btfss	int$flags,1,c
 13299  006258  EF30  F031         	goto	_I2C_DO_SEND_STOP$intlevel0
 13300  00625C  EFAD  F031         	goto	i2_I2C_DO_SEND_STOP
 13301  006260                     _I2C_DO_SEND_STOP$intlevel0:
 13302                           	callstack 9
 13303  006260                     
 13304                           ;mcc_generated_files/i2c_master.c: 471:     I2C_MasterStop();
 13305  006260  ECD3  F031         	call	_I2C_MasterStop	;wreg free
 13306  006264                     
 13307                           ;mcc_generated_files/i2c_master.c: 472:     return I2C_IDLE;
 13308  006264  0E00               	movlw	0
 13309  006266  0012               	return		;funcret
 13310  006268                     __end_of_I2C_DO_SEND_STOP:
 13311                           	callstack 0
 13312                           
 13313 ;; *************** function _I2C_DO_SEND_RESTART *****************
 13314 ;; Defined at:
 13315 ;;		line 463 in file "mcc_generated_files/i2c_master.c"
 13316 ;; Parameters:    Size  Location     Type
 13317 ;;		None
 13318 ;; Auto vars:     Size  Location     Type
 13319 ;;		None
 13320 ;; Return value:  Size  Location     Type
 13321 ;;                  1    wreg      enum E2863
 13322 ;; Registers used:
 13323 ;;		wreg, cstack
 13324 ;; Tracked objects:
 13325 ;;		On entry : 0/0
 13326 ;;		On exit  : 0/0
 13327 ;;		Unchanged: 0/0
 13328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13333 ;;Total ram usage:        0 bytes
 13334 ;; Hardware stack levels used: 1
 13335 ;; Hardware stack levels required when called: 14
 13336 ;; This function calls:
 13337 ;;		_I2C_MasterEnableRestart
 13338 ;; This function is called by:
 13339 ;;		_I2C_DO_TX_EMPTY
 13340 ;;		_I2C_DO_ADDRESS_NACK
 13341 ;;		i2_I2C_MasterFsm
 13342 ;;		_I2C_MasterFsm
 13343 ;; This function uses a non-reentrant model
 13344 ;;
 13345                           
 13346                           	psect	text73
 13347  006268                     __ptext73:
 13348                           	callstack 0
 13349  006268                     _I2C_DO_SEND_RESTART:
 13350                           	callstack 0
 13351                           
 13352                           ;Skip over the trampoline to the duplicate function for level 2
 13353  006268  A259               	btfss	int$flags,1,c
 13354  00626A  EF39  F031         	goto	_I2C_DO_SEND_RESTART$intlevel0
 13355  00626E  EFB1  F031         	goto	i2_I2C_DO_SEND_RESTART
 13356  006272                     _I2C_DO_SEND_RESTART$intlevel0:
 13357                           	callstack 9
 13358  006272                     
 13359                           ;mcc_generated_files/i2c_master.c: 465:     I2C_MasterEnableRestart();
 13360  006272  ECD5  F031         	call	_I2C_MasterEnableRestart	;wreg free
 13361  006276                     
 13362                           ;mcc_generated_files/i2c_master.c: 466:     return I2C_SEND_ADR_READ;
 13363  006276  0E01               	movlw	1
 13364  006278  0012               	return		;funcret
 13365  00627A                     __end_of_I2C_DO_SEND_RESTART:
 13366                           	callstack 0
 13367                           
 13368 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
 13369 ;; Defined at:
 13370 ;;		line 456 in file "mcc_generated_files/i2c_master.c"
 13371 ;; Parameters:    Size  Location     Type
 13372 ;;		None
 13373 ;; Auto vars:     Size  Location     Type
 13374 ;;		None
 13375 ;; Return value:  Size  Location     Type
 13376 ;;                  1    wreg      enum E2863
 13377 ;; Registers used:
 13378 ;;		wreg, cstack
 13379 ;; Tracked objects:
 13380 ;;		On entry : 0/0
 13381 ;;		On exit  : 0/0
 13382 ;;		Unchanged: 0/0
 13383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13388 ;;Total ram usage:        0 bytes
 13389 ;; Hardware stack levels used: 1
 13390 ;; Hardware stack levels required when called: 14
 13391 ;; This function calls:
 13392 ;;		_I2C_MasterEnableRestart
 13393 ;; This function is called by:
 13394 ;;		_I2C_DO_TX
 13395 ;;		i2_I2C_MasterFsm
 13396 ;;		_I2C_MasterFsm
 13397 ;; This function uses a non-reentrant model
 13398 ;;
 13399                           
 13400                           	psect	text74
 13401  00627A                     __ptext74:
 13402                           	callstack 0
 13403  00627A                     _I2C_DO_SEND_RESTART_WRITE:
 13404                           	callstack 0
 13405                           
 13406                           ;Skip over the trampoline to the duplicate function for level 2
 13407  00627A  A259               	btfss	int$flags,1,c
 13408  00627C  EF42  F031         	goto	_I2C_DO_SEND_RESTART_WRITE$intlevel0
 13409  006280  EFB5  F031         	goto	i2_I2C_DO_SEND_RESTART_WRITE
 13410  006284                     _I2C_DO_SEND_RESTART_WRITE$intlevel0:
 13411                           	callstack 9
 13412  006284                     
 13413                           ;mcc_generated_files/i2c_master.c: 458:     I2C_MasterEnableRestart();
 13414  006284  ECD5  F031         	call	_I2C_MasterEnableRestart	;wreg free
 13415  006288                     
 13416                           ;mcc_generated_files/i2c_master.c: 459:     return I2C_SEND_ADR_WRITE;
 13417  006288  0E02               	movlw	2
 13418  00628A  0012               	return		;funcret
 13419  00628C                     __end_of_I2C_DO_SEND_RESTART_WRITE:
 13420                           	callstack 0
 13421                           
 13422 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
 13423 ;; Defined at:
 13424 ;;		line 450 in file "mcc_generated_files/i2c_master.c"
 13425 ;; Parameters:    Size  Location     Type
 13426 ;;		None
 13427 ;; Auto vars:     Size  Location     Type
 13428 ;;		None
 13429 ;; Return value:  Size  Location     Type
 13430 ;;                  1    wreg      enum E2863
 13431 ;; Registers used:
 13432 ;;		wreg, cstack
 13433 ;; Tracked objects:
 13434 ;;		On entry : 0/0
 13435 ;;		On exit  : 0/0
 13436 ;;		Unchanged: 0/0
 13437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13442 ;;Total ram usage:        0 bytes
 13443 ;; Hardware stack levels used: 1
 13444 ;; Hardware stack levels required when called: 14
 13445 ;; This function calls:
 13446 ;;		_I2C_MasterEnableRestart
 13447 ;; This function is called by:
 13448 ;;		_I2C_DO_TX
 13449 ;;		i2_I2C_MasterFsm
 13450 ;;		_I2C_MasterFsm
 13451 ;; This function uses a non-reentrant model
 13452 ;;
 13453                           
 13454                           	psect	text75
 13455  00628C                     __ptext75:
 13456                           	callstack 0
 13457  00628C                     _I2C_DO_SEND_RESTART_READ:
 13458                           	callstack 0
 13459                           
 13460                           ;Skip over the trampoline to the duplicate function for level 2
 13461  00628C  A259               	btfss	int$flags,1,c
 13462  00628E  EF4B  F031         	goto	_I2C_DO_SEND_RESTART_READ$intlevel0
 13463  006292  EFB9  F031         	goto	i2_I2C_DO_SEND_RESTART_READ
 13464  006296                     _I2C_DO_SEND_RESTART_READ$intlevel0:
 13465                           	callstack 9
 13466  006296                     
 13467                           ;mcc_generated_files/i2c_master.c: 452:     I2C_MasterEnableRestart();
 13468  006296  ECD5  F031         	call	_I2C_MasterEnableRestart	;wreg free
 13469  00629A                     
 13470                           ;mcc_generated_files/i2c_master.c: 453:     return I2C_SEND_ADR_READ;
 13471  00629A  0E01               	movlw	1
 13472  00629C  0012               	return		;funcret
 13473  00629E                     __end_of_I2C_DO_SEND_RESTART_READ:
 13474                           	callstack 0
 13475                           
 13476 ;; *************** function _I2C_DO_RCEN *****************
 13477 ;; Defined at:
 13478 ;;		line 402 in file "mcc_generated_files/i2c_master.c"
 13479 ;; Parameters:    Size  Location     Type
 13480 ;;		None
 13481 ;; Auto vars:     Size  Location     Type
 13482 ;;		None
 13483 ;; Return value:  Size  Location     Type
 13484 ;;                  1    wreg      enum E2863
 13485 ;; Registers used:
 13486 ;;		wreg, cstack
 13487 ;; Tracked objects:
 13488 ;;		On entry : 0/0
 13489 ;;		On exit  : 0/0
 13490 ;;		Unchanged: 0/0
 13491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13496 ;;Total ram usage:        0 bytes
 13497 ;; Hardware stack levels used: 1
 13498 ;; Hardware stack levels required when called: 14
 13499 ;; This function calls:
 13500 ;;		_I2C_MasterStartRx
 13501 ;; This function is called by:
 13502 ;;		i2_I2C_MasterFsm
 13503 ;;		_I2C_MasterFsm
 13504 ;; This function uses a non-reentrant model
 13505 ;;
 13506                           
 13507                           	psect	text76
 13508  0061B8                     __ptext76:
 13509                           	callstack 0
 13510  0061B8                     _I2C_DO_RCEN:
 13511                           	callstack 0
 13512                           
 13513                           ;Skip over the trampoline to the duplicate function for level 2
 13514  0061B8  A259               	btfss	int$flags,1,c
 13515  0061BA  EFE1  F030         	goto	_I2C_DO_RCEN$intlevel0
 13516  0061BE  EF89  F031         	goto	i2_I2C_DO_RCEN
 13517  0061C2                     _I2C_DO_RCEN$intlevel0:
 13518                           	callstack 10
 13519  0061C2                     
 13520                           ;mcc_generated_files/i2c_master.c: 404:     I2C_Status.addressNackCheck = 0;
 13521  0061C2  0100               	movlb	0	; () banked
 13522  0061C4  91EB               	bcf	(_I2C_Status+35)& (0+255),0,b
 13523  0061C6                     
 13524                           ; BSR set to: 0
 13525                           ;mcc_generated_files/i2c_master.c: 405:     I2C_MasterStartRx();
 13526  0061C6  ECD1  F031         	call	_I2C_MasterStartRx	;wreg free
 13527  0061CA                     
 13528                           ;mcc_generated_files/i2c_master.c: 406:     return I2C_RX;
 13529  0061CA  0E04               	movlw	4
 13530  0061CC  0012               	return		;funcret
 13531  0061CE                     __end_of_I2C_DO_RCEN:
 13532                           	callstack 0
 13533                           
 13534 ;; *************** function _I2C_DO_RX *****************
 13535 ;; Defined at:
 13536 ;;		line 378 in file "mcc_generated_files/i2c_master.c"
 13537 ;; Parameters:    Size  Location     Type
 13538 ;;		None
 13539 ;; Auto vars:     Size  Location     Type
 13540 ;;		None
 13541 ;; Return value:  Size  Location     Type
 13542 ;;                  1    wreg      enum E2863
 13543 ;; Registers used:
 13544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 13545 ;; Tracked objects:
 13546 ;;		On entry : 0/0
 13547 ;;		On exit  : 0/0
 13548 ;;		Unchanged: 0/0
 13549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13552 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13553 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13554 ;;Total ram usage:        2 bytes
 13555 ;; Hardware stack levels used: 1
 13556 ;; Hardware stack levels required when called: 16
 13557 ;; This function calls:
 13558 ;;		Absolute function
 13559 ;;		_I2C_CallbackReturnReset
 13560 ;;		_I2C_CallbackReturnStop
 13561 ;;		_I2C_DO_RX_NACK_RESTART
 13562 ;;		_I2C_DO_RX_NACK_STOP
 13563 ;;		_I2C_MasterGetRxData
 13564 ;;		_I2C_MasterSendAck
 13565 ;;		_rd1RegCompleteHandler
 13566 ;;		_rd2RegCompleteHandler
 13567 ;;		_rdBlkRegCompleteHandler
 13568 ;;		_wr1RegCompleteHandler
 13569 ;;		_wr2RegCompleteHandler
 13570 ;; This function is called by:
 13571 ;;		i2_I2C_MasterFsm
 13572 ;;		_I2C_MasterFsm
 13573 ;; This function uses a non-reentrant model
 13574 ;;
 13575                           
 13576                           	psect	text77
 13577  0043C4                     __ptext77:
 13578                           	callstack 0
 13579  0043C4                     _I2C_DO_RX:
 13580                           	callstack 0
 13581                           
 13582                           ;Skip over the trampoline to the duplicate function for level 2
 13583  0043C4  A259               	btfss	int$flags,1,c
 13584  0043C6  EFE7  F021         	goto	_I2C_DO_RX$intlevel0
 13585  0043CA  EF95  F023         	goto	i2_I2C_DO_RX
 13586  0043CE                     _I2C_DO_RX$intlevel0:
 13587                           	callstack 8
 13588  0043CE                     
 13589                           ;mcc_generated_files/i2c_master.c: 380:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
 13590  0043CE  ECCF  F031         	call	_I2C_MasterGetRxData	;wreg free
 13591  0043D2  C0E5  FFD9         	movff	_I2C_Status+29,fsr2l
 13592  0043D6  C0E6  FFDA         	movff	_I2C_Status+30,fsr2h
 13593  0043DA  6EDF               	movwf	indf2,c
 13594  0043DC  0100               	movlb	0	; () banked
 13595  0043DE  4BE5               	infsnz	(_I2C_Status+29)& (0+255),f,b
 13596  0043E0  2BE6               	incf	(_I2C_Status+30)& (0+255),f,b
 13597  0043E2                     
 13598                           ; BSR set to: 0
 13599                           ;mcc_generated_files/i2c_master.c: 381:     if(--I2C_Status.data_length)
 13600  0043E2  07E7               	decf	(_I2C_Status+31)& (0+255),f,b
 13601  0043E4  A0D8               	btfss	status,0,c
 13602  0043E6  07E8               	decf	(_I2C_Status+32)& (0+255),f,b
 13603  0043E8  51E7               	movf	(_I2C_Status+31)& (0+255),w,b
 13604  0043EA  11E8               	iorwf	(_I2C_Status+32)& (0+255),w,b
 13605  0043EC  B4D8               	btfsc	status,2,c
 13606  0043EE  EFFB  F021         	goto	u8631
 13607  0043F2  EFFD  F021         	goto	u8630
 13608  0043F6                     u8631:
 13609  0043F6  EF02  F022         	goto	l1244
 13610  0043FA                     u8630:
 13611  0043FA                     
 13612                           ; BSR set to: 0
 13613                           ;mcc_generated_files/i2c_master.c: 382:     {;mcc_generated_files/i2c_master.c: 383:    
      +                               I2C_MasterSendAck();
 13614  0043FA  ECC1  F031         	call	_I2C_MasterSendAck	;wreg free
 13615  0043FE                     
 13616                           ;mcc_generated_files/i2c_master.c: 384:         return I2C_RCEN;
 13617  0043FE  0E05               	movlw	5
 13618  004400  EF3A  F022         	goto	l1245
 13619  004404                     l1244:
 13620                           
 13621                           ; BSR set to: 0
 13622                           ;mcc_generated_files/i2c_master.c: 387:     {;mcc_generated_files/i2c_master.c: 388:    
      +                               I2C_Status.bufferFree = 1;
 13623  004404  87EB               	bsf	(_I2C_Status+35)& (0+255),3,b
 13624                           
 13625                           ;mcc_generated_files/i2c_master.c: 389:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 13626  004406  EF0D  F022         	goto	l10947
 13627  00440A                     l10937:
 13628                           
 13629                           ; BSR set to: 0
 13630                           ;mcc_generated_files/i2c_master.c: 393:                 return I2C_DO_RX_NACK_RESTART();
 13631  00440A  EC10  F031         	call	_I2C_DO_RX_NACK_RESTART	;wreg free
 13632  00440E  EF3A  F022         	goto	l1245
 13633  004412                     l10941:
 13634                           
 13635                           ; BSR set to: 0
 13636                           ;mcc_generated_files/i2c_master.c: 397:                 return I2C_DO_RX_NACK_STOP();
 13637  004412  EC19  F031         	call	_I2C_DO_RX_NACK_STOP	;wreg free
 13638  004416  EF3A  F022         	goto	l1245
 13639  00441A                     l10947:
 13640                           
 13641                           ; BSR set to: 0
 13642  00441A  C0D4  F080         	movff	_I2C_Status+12,rd1RegCompleteHandler@ptr
 13643  00441E  C0D5  F081         	movff	_I2C_Status+13,rd1RegCompleteHandler@ptr+1
 13644  004422  D802               	call	u8648
 13645  004424  EF1D  F022         	goto	u8649
 13646  004428                     u8648:
 13647  004428  0005               	push	
 13648  00442A  6EFA               	movwf	pclath,c
 13649  00442C  51C8               	movf	_I2C_Status& (0+255),w,b
 13650  00442E  6EFD               	movwf	tosl,c
 13651  004430  51C9               	movf	(_I2C_Status+1)& (0+255),w,b
 13652  004432  6EFE               	movwf	tosh,c
 13653  004434  6AFF               	clrf	tosu,c
 13654  004436  50FA               	movf	pclath,w,c
 13655  004438  0012               	return		;indir
 13656  00443A                     u8649:
 13657  00443A  0100               	movlb	0	; () banked
 13658  00443C  6F82               	movwf	??_I2C_DO_RX& (0+255),b
 13659  00443E  6B83               	clrf	(??_I2C_DO_RX+1)& (0+255),b
 13660                           
 13661                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13662                           ; Switch size 1, requested type "simple"
 13663                           ; Number of cases is 1, Range of values is 0 to 0
 13664                           ; switch strategies available:
 13665                           ; Name         Instructions Cycles
 13666                           ; simple_byte            4     3 (average)
 13667                           ;	Chosen strategy is simple_byte
 13668  004440  5183               	movf	(??_I2C_DO_RX+1)& (0+255),w,b
 13669  004442  0A00               	xorlw	0	; case 0
 13670  004444  B4D8               	btfsc	status,2,c
 13671  004446  EF27  F022         	goto	l13667
 13672  00444A  EF09  F022         	goto	l10941
 13673  00444E                     l13667:
 13674                           
 13675                           ; BSR set to: 0
 13676                           ; Switch size 1, requested type "simple"
 13677                           ; Number of cases is 4, Range of values is 1 to 4
 13678                           ; switch strategies available:
 13679                           ; Name         Instructions Cycles
 13680                           ; simple_byte           13     7 (average)
 13681                           ;	Chosen strategy is simple_byte
 13682  00444E  5182               	movf	??_I2C_DO_RX& (0+255),w,b
 13683  004450  0A01               	xorlw	1	; case 1
 13684  004452  B4D8               	btfsc	status,2,c
 13685  004454  EF09  F022         	goto	l10941
 13686  004458  0A03               	xorlw	3	; case 2
 13687  00445A  B4D8               	btfsc	status,2,c
 13688  00445C  EF05  F022         	goto	l10937
 13689  004460  0A01               	xorlw	1	; case 3
 13690  004462  B4D8               	btfsc	status,2,c
 13691  004464  EF05  F022         	goto	l10937
 13692  004468  0A07               	xorlw	7	; case 4
 13693  00446A  B4D8               	btfsc	status,2,c
 13694  00446C  EF09  F022         	goto	l10941
 13695  004470  EF09  F022         	goto	l10941
 13696  004474                     l1245:
 13697  004474  0012               	return		;funcret
 13698  004476                     __end_of_I2C_DO_RX:
 13699                           	callstack 0
 13700                           
 13701 ;; *************** function _I2C_DO_TX *****************
 13702 ;; Defined at:
 13703 ;;		line 354 in file "mcc_generated_files/i2c_master.c"
 13704 ;; Parameters:    Size  Location     Type
 13705 ;;		None
 13706 ;; Auto vars:     Size  Location     Type
 13707 ;;		None
 13708 ;; Return value:  Size  Location     Type
 13709 ;;                  1    wreg      enum E2863
 13710 ;; Registers used:
 13711 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 13712 ;; Tracked objects:
 13713 ;;		On entry : 0/0
 13714 ;;		On exit  : 0/0
 13715 ;;		Unchanged: 0/0
 13716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13719 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13720 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13721 ;;Total ram usage:        2 bytes
 13722 ;; Hardware stack levels used: 1
 13723 ;; Hardware stack levels required when called: 16
 13724 ;; This function calls:
 13725 ;;		Absolute function
 13726 ;;		_I2C_CallbackReturnReset
 13727 ;;		_I2C_CallbackReturnStop
 13728 ;;		_I2C_DO_SEND_RESTART_READ
 13729 ;;		_I2C_DO_SEND_RESTART_WRITE
 13730 ;;		_I2C_DO_SEND_STOP
 13731 ;;		_I2C_MasterIsNack
 13732 ;;		_I2C_MasterSendTxData
 13733 ;;		_rd1RegCompleteHandler
 13734 ;;		_rd2RegCompleteHandler
 13735 ;;		_rdBlkRegCompleteHandler
 13736 ;;		_wr1RegCompleteHandler
 13737 ;;		_wr2RegCompleteHandler
 13738 ;; This function is called by:
 13739 ;;		i2_I2C_MasterFsm
 13740 ;;		_I2C_MasterFsm
 13741 ;; This function uses a non-reentrant model
 13742 ;;
 13743                           
 13744                           	psect	text78
 13745  003F20                     __ptext78:
 13746                           	callstack 0
 13747  003F20                     _I2C_DO_TX:
 13748                           	callstack 0
 13749                           
 13750                           ;Skip over the trampoline to the duplicate function for level 2
 13751  003F20  A259               	btfss	int$flags,1,c
 13752  003F22  EF95  F01F         	goto	_I2C_DO_TX$intlevel0
 13753  003F26  EFC1  F020         	goto	i2_I2C_DO_TX
 13754  003F2A                     _I2C_DO_TX$intlevel0:
 13755                           	callstack 8
 13756  003F2A                     
 13757                           ;mcc_generated_files/i2c_master.c: 356:     if(I2C_MasterIsNack())
 13758  003F2A  ECFC  F030         	call	_I2C_MasterIsNack	;wreg free
 13759  003F2E  0900               	iorlw	0
 13760  003F30  B4D8               	btfsc	status,2,c
 13761  003F32  EF9D  F01F         	goto	u8601
 13762  003F36  EF9F  F01F         	goto	u8600
 13763  003F3A                     u8601:
 13764  003F3A  EFDB  F01F         	goto	l1228
 13765  003F3E                     u8600:
 13766  003F3E  EFAD  F01F         	goto	l10907
 13767  003F42                     l10893:
 13768                           
 13769                           ; BSR set to: 0
 13770                           ;mcc_generated_files/i2c_master.c: 361:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
 13771  003F42  EC46  F031         	call	_I2C_DO_SEND_RESTART_READ	;wreg free
 13772  003F46  EFF7  F01F         	goto	l1231
 13773  003F4A                     l10897:
 13774                           
 13775                           ; BSR set to: 0
 13776                           ;mcc_generated_files/i2c_master.c: 363:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
 13777  003F4A  EC3D  F031         	call	_I2C_DO_SEND_RESTART_WRITE	;wreg free
 13778  003F4E  EFF7  F01F         	goto	l1231
 13779  003F52                     l10901:
 13780                           
 13781                           ; BSR set to: 0
 13782                           ;mcc_generated_files/i2c_master.c: 367:                 return I2C_DO_SEND_STOP();
 13783  003F52  EC2B  F031         	call	_I2C_DO_SEND_STOP	;wreg free
 13784  003F56  EFF7  F01F         	goto	l1231
 13785  003F5A                     l10907:
 13786  003F5A  C0DA  F080         	movff	_I2C_Status+18,rd1RegCompleteHandler@ptr
 13787  003F5E  C0DB  F081         	movff	_I2C_Status+19,rd1RegCompleteHandler@ptr+1
 13788  003F62  D802               	call	u8618
 13789  003F64  EFBE  F01F         	goto	u8619
 13790  003F68                     u8618:
 13791  003F68  0005               	push	
 13792  003F6A  6EFA               	movwf	pclath,c
 13793  003F6C  0100               	movlb	0	; () banked
 13794  003F6E  51CE               	movf	(_I2C_Status+6)& (0+255),w,b
 13795  003F70  6EFD               	movwf	tosl,c
 13796  003F72  51CF               	movf	(_I2C_Status+7)& (0+255),w,b
 13797  003F74  6EFE               	movwf	tosh,c
 13798  003F76  6AFF               	clrf	tosu,c
 13799  003F78  50FA               	movf	pclath,w,c
 13800  003F7A  0012               	return		;indir
 13801  003F7C                     u8619:
 13802  003F7C  0100               	movlb	0	; () banked
 13803  003F7E  6F82               	movwf	??_I2C_DO_TX& (0+255),b
 13804  003F80  6B83               	clrf	(??_I2C_DO_TX+1)& (0+255),b
 13805                           
 13806                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13807                           ; Switch size 1, requested type "simple"
 13808                           ; Number of cases is 1, Range of values is 0 to 0
 13809                           ; switch strategies available:
 13810                           ; Name         Instructions Cycles
 13811                           ; simple_byte            4     3 (average)
 13812                           ;	Chosen strategy is simple_byte
 13813  003F82  5183               	movf	(??_I2C_DO_TX+1)& (0+255),w,b
 13814  003F84  0A00               	xorlw	0	; case 0
 13815  003F86  B4D8               	btfsc	status,2,c
 13816  003F88  EFC8  F01F         	goto	l13669
 13817  003F8C  EFA9  F01F         	goto	l10901
 13818  003F90                     l13669:
 13819                           
 13820                           ; BSR set to: 0
 13821                           ; Switch size 1, requested type "simple"
 13822                           ; Number of cases is 4, Range of values is 1 to 4
 13823                           ; switch strategies available:
 13824                           ; Name         Instructions Cycles
 13825                           ; simple_byte           13     7 (average)
 13826                           ;	Chosen strategy is simple_byte
 13827  003F90  5182               	movf	??_I2C_DO_TX& (0+255),w,b
 13828  003F92  0A01               	xorlw	1	; case 1
 13829  003F94  B4D8               	btfsc	status,2,c
 13830  003F96  EFA9  F01F         	goto	l10901
 13831  003F9A  0A03               	xorlw	3	; case 2
 13832  003F9C  B4D8               	btfsc	status,2,c
 13833  003F9E  EFA1  F01F         	goto	l10893
 13834  003FA2  0A01               	xorlw	1	; case 3
 13835  003FA4  B4D8               	btfsc	status,2,c
 13836  003FA6  EFA5  F01F         	goto	l10897
 13837  003FAA  0A07               	xorlw	7	; case 4
 13838  003FAC  B4D8               	btfsc	status,2,c
 13839  003FAE  EFA9  F01F         	goto	l10901
 13840  003FB2  EFA9  F01F         	goto	l10901
 13841  003FB6                     l1228:
 13842                           
 13843                           ;mcc_generated_files/i2c_master.c: 371:     {;mcc_generated_files/i2c_master.c: 372:    
      +                               I2C_Status.addressNackCheck = 0;
 13844  003FB6  0100               	movlb	0	; () banked
 13845  003FB8  91EB               	bcf	(_I2C_Status+35)& (0+255),0,b
 13846  003FBA                     
 13847                           ; BSR set to: 0
 13848                           ;mcc_generated_files/i2c_master.c: 373:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
 13849  003FBA  C0E5  FFD9         	movff	_I2C_Status+29,fsr2l
 13850  003FBE  C0E6  FFDA         	movff	_I2C_Status+30,fsr2h
 13851  003FC2  4BE5               	infsnz	(_I2C_Status+29)& (0+255),f,b
 13852  003FC4  2BE6               	incf	(_I2C_Status+30)& (0+255),f,b
 13853  003FC6  50DF               	movf	indf2,w,c
 13854  003FC8  EC99  F031         	call	_I2C_MasterSendTxData
 13855  003FCC                     
 13856                           ;mcc_generated_files/i2c_master.c: 374:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
 13857  003FCC  0100               	movlb	0	; () banked
 13858  003FCE  07E7               	decf	(_I2C_Status+31)& (0+255),f,b
 13859  003FD0  A0D8               	btfss	status,0,c
 13860  003FD2  07E8               	decf	(_I2C_Status+32)& (0+255),f,b
 13861  003FD4  51E7               	movf	(_I2C_Status+31)& (0+255),w,b
 13862  003FD6  11E8               	iorwf	(_I2C_Status+32)& (0+255),w,b
 13863  003FD8  A4D8               	btfss	status,2,c
 13864  003FDA  EFF1  F01F         	goto	u8621
 13865  003FDE  EFF3  F01F         	goto	u8620
 13866  003FE2                     u8621:
 13867  003FE2  EFF6  F01F         	goto	l10915
 13868  003FE6                     u8620:
 13869  003FE6                     
 13870                           ; BSR set to: 0
 13871  003FE6  0E06               	movlw	6
 13872  003FE8  EFF7  F01F         	goto	l1231
 13873  003FEC                     l10915:
 13874                           
 13875                           ; BSR set to: 0
 13876  003FEC  0E03               	movlw	3
 13877  003FEE                     l1231:
 13878  003FEE  0012               	return		;funcret
 13879  003FF0                     __end_of_I2C_DO_TX:
 13880                           	callstack 0
 13881                           
 13882 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
 13883 ;; Defined at:
 13884 ;;		line 347 in file "mcc_generated_files/i2c_master.c"
 13885 ;; Parameters:    Size  Location     Type
 13886 ;;		None
 13887 ;; Auto vars:     Size  Location     Type
 13888 ;;		None
 13889 ;; Return value:  Size  Location     Type
 13890 ;;                  1    wreg      enum E2863
 13891 ;; Registers used:
 13892 ;;		wreg, status,2, cstack
 13893 ;; Tracked objects:
 13894 ;;		On entry : 0/0
 13895 ;;		On exit  : 0/0
 13896 ;;		Unchanged: 0/0
 13897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13902 ;;Total ram usage:        0 bytes
 13903 ;; Hardware stack levels used: 1
 13904 ;; Hardware stack levels required when called: 14
 13905 ;; This function calls:
 13906 ;;		_I2C_MasterSendTxData
 13907 ;; This function is called by:
 13908 ;;		i2_I2C_MasterFsm
 13909 ;;		_I2C_MasterFsm
 13910 ;; This function uses a non-reentrant model
 13911 ;;
 13912                           
 13913                           	psect	text79
 13914  006142                     __ptext79:
 13915                           	callstack 0
 13916  006142                     _I2C_DO_SEND_ADR_WRITE:
 13917                           	callstack 0
 13918                           
 13919                           ;Skip over the trampoline to the duplicate function for level 2
 13920  006142  A259               	btfss	int$flags,1,c
 13921  006144  EFA6  F030         	goto	_I2C_DO_SEND_ADR_WRITE$intlevel0
 13922  006148  EF7C  F031         	goto	i2_I2C_DO_SEND_ADR_WRITE
 13923  00614C                     _I2C_DO_SEND_ADR_WRITE$intlevel0:
 13924                           	callstack 10
 13925  00614C                     
 13926                           ;mcc_generated_files/i2c_master.c: 349:     I2C_Status.addressNackCheck = 1;
 13927  00614C  0100               	movlb	0	; () banked
 13928  00614E  81EB               	bsf	(_I2C_Status+35)& (0+255),0,b
 13929  006150                     
 13930                           ; BSR set to: 0
 13931                           ;mcc_generated_files/i2c_master.c: 350:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress));
 13932  006150  51E4               	movf	(_I2C_Status+28)& (0+255),w,b
 13933  006152  EC99  F031         	call	_I2C_MasterSendTxData
 13934  006156                     
 13935                           ;mcc_generated_files/i2c_master.c: 351:     return I2C_TX;
 13936  006156  0E03               	movlw	3
 13937  006158  0012               	return		;funcret
 13938  00615A                     __end_of_I2C_DO_SEND_ADR_WRITE:
 13939                           	callstack 0
 13940                           
 13941 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
 13942 ;; Defined at:
 13943 ;;		line 340 in file "mcc_generated_files/i2c_master.c"
 13944 ;; Parameters:    Size  Location     Type
 13945 ;;		None
 13946 ;; Auto vars:     Size  Location     Type
 13947 ;;		None
 13948 ;; Return value:  Size  Location     Type
 13949 ;;                  1    wreg      enum E2863
 13950 ;; Registers used:
 13951 ;;		wreg, status,2, status,0, cstack
 13952 ;; Tracked objects:
 13953 ;;		On entry : 0/0
 13954 ;;		On exit  : 0/0
 13955 ;;		Unchanged: 0/0
 13956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13961 ;;Total ram usage:        0 bytes
 13962 ;; Hardware stack levels used: 1
 13963 ;; Hardware stack levels required when called: 14
 13964 ;; This function calls:
 13965 ;;		_I2C_MasterSendTxData
 13966 ;; This function is called by:
 13967 ;;		i2_I2C_MasterFsm
 13968 ;;		_I2C_MasterFsm
 13969 ;; This function uses a non-reentrant model
 13970 ;;
 13971                           
 13972                           	psect	text80
 13973  0060A8                     __ptext80:
 13974                           	callstack 0
 13975  0060A8                     _I2C_DO_SEND_ADR_READ:
 13976                           	callstack 0
 13977                           
 13978                           ;Skip over the trampoline to the duplicate function for level 2
 13979  0060A8  A259               	btfss	int$flags,1,c
 13980  0060AA  EF59  F030         	goto	_I2C_DO_SEND_ADR_READ$intlevel0
 13981  0060AE  EF5F  F031         	goto	i2_I2C_DO_SEND_ADR_READ
 13982  0060B2                     _I2C_DO_SEND_ADR_READ$intlevel0:
 13983                           	callstack 10
 13984  0060B2                     
 13985                           ;mcc_generated_files/i2c_master.c: 342:     I2C_Status.addressNackCheck = 1;
 13986  0060B2  0100               	movlb	0	; () banked
 13987  0060B4  81EB               	bsf	(_I2C_Status+35)& (0+255),0,b
 13988  0060B6                     
 13989                           ; BSR set to: 0
 13990                           ;mcc_generated_files/i2c_master.c: 343:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress| 1));
 13991  0060B6  51E4               	movf	(_I2C_Status+28)& (0+255),w,b
 13992  0060B8  0901               	iorlw	1
 13993  0060BA  EC99  F031         	call	_I2C_MasterSendTxData
 13994  0060BE                     
 13995                           ;mcc_generated_files/i2c_master.c: 344:     return I2C_RCEN;
 13996  0060BE  0E05               	movlw	5
 13997  0060C0  0012               	return		;funcret
 13998  0060C2                     __end_of_I2C_DO_SEND_ADR_READ:
 13999                           	callstack 0
 14000                           
 14001 ;; *************** function _I2C_DO_IDLE *****************
 14002 ;; Defined at:
 14003 ;;		line 333 in file "mcc_generated_files/i2c_master.c"
 14004 ;; Parameters:    Size  Location     Type
 14005 ;;		None
 14006 ;; Auto vars:     Size  Location     Type
 14007 ;;		None
 14008 ;; Return value:  Size  Location     Type
 14009 ;;                  1    wreg      enum E2863
 14010 ;; Registers used:
 14011 ;;		wreg, status,2
 14012 ;; Tracked objects:
 14013 ;;		On entry : 0/0
 14014 ;;		On exit  : 0/0
 14015 ;;		Unchanged: 0/0
 14016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14021 ;;Total ram usage:        0 bytes
 14022 ;; Hardware stack levels used: 1
 14023 ;; Hardware stack levels required when called: 13
 14024 ;; This function calls:
 14025 ;;		Nothing
 14026 ;; This function is called by:
 14027 ;;		i2_I2C_MasterFsm
 14028 ;;		_I2C_MasterFsm
 14029 ;; This function uses a non-reentrant model
 14030 ;;
 14031                           
 14032                           	psect	text81
 14033  0061CE                     __ptext81:
 14034                           	callstack 0
 14035  0061CE                     _I2C_DO_IDLE:
 14036                           	callstack 0
 14037                           
 14038                           ;Skip over the trampoline to the duplicate function for level 2
 14039  0061CE  A259               	btfss	int$flags,1,c
 14040  0061D0  EFEC  F030         	goto	_I2C_DO_IDLE$intlevel0
 14041  0061D4  EF8F  F031         	goto	i2_I2C_DO_IDLE
 14042  0061D8                     _I2C_DO_IDLE$intlevel0:
 14043                           	callstack 11
 14044  0061D8                     
 14045                           ;mcc_generated_files/i2c_master.c: 335:     I2C_Status.busy = 0;
 14046  0061D8  0100               	movlb	0	; () banked
 14047  0061DA  93EB               	bcf	(_I2C_Status+35)& (0+255),1,b
 14048  0061DC                     
 14049                           ; BSR set to: 0
 14050                           ;mcc_generated_files/i2c_master.c: 336:     I2C_Status.error = I2C_NOERR;
 14051  0061DC  0E00               	movlw	0
 14052  0061DE  6FEA               	movwf	(_I2C_Status+34)& (0+255),b
 14053  0061E0                     
 14054                           ; BSR set to: 0
 14055                           ;mcc_generated_files/i2c_master.c: 337:     return I2C_RESET;
 14056  0061E0  0E0E               	movlw	14
 14057  0061E2                     
 14058                           ; BSR set to: 0
 14059  0061E2  0012               	return		;funcret
 14060  0061E4                     __end_of_I2C_DO_IDLE:
 14061                           	callstack 0
 14062                           
 14063 ;; *************** function _I2C_DO_TX_EMPTY *****************
 14064 ;; Defined at:
 14065 ;;		line 409 in file "mcc_generated_files/i2c_master.c"
 14066 ;; Parameters:    Size  Location     Type
 14067 ;;		None
 14068 ;; Auto vars:     Size  Location     Type
 14069 ;;		None
 14070 ;; Return value:  Size  Location     Type
 14071 ;;                  1    wreg      enum E2863
 14072 ;; Registers used:
 14073 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 14074 ;; Tracked objects:
 14075 ;;		On entry : 0/0
 14076 ;;		On exit  : 0/0
 14077 ;;		Unchanged: 0/0
 14078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14081 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14082 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14083 ;;Total ram usage:        2 bytes
 14084 ;; Hardware stack levels used: 1
 14085 ;; Hardware stack levels required when called: 16
 14086 ;; This function calls:
 14087 ;;		Absolute function
 14088 ;;		_I2C_CallbackReturnReset
 14089 ;;		_I2C_CallbackReturnStop
 14090 ;;		_I2C_DO_SEND_RESTART
 14091 ;;		_I2C_DO_SEND_STOP
 14092 ;;		_I2C_MasterSetIrq
 14093 ;;		_rd1RegCompleteHandler
 14094 ;;		_rd2RegCompleteHandler
 14095 ;;		_rdBlkRegCompleteHandler
 14096 ;;		_wr1RegCompleteHandler
 14097 ;;		_wr2RegCompleteHandler
 14098 ;; This function is called by:
 14099 ;;		i2_I2C_MasterFsm
 14100 ;;		_I2C_MasterFsm
 14101 ;; This function uses a non-reentrant model
 14102 ;;
 14103                           
 14104                           	psect	text82
 14105  004A90                     __ptext82:
 14106                           	callstack 0
 14107  004A90                     _I2C_DO_TX_EMPTY:
 14108                           	callstack 0
 14109                           
 14110                           ; BSR set to: 0
 14111                           ;Skip over the trampoline to the duplicate function for level 2
 14112  004A90  A259               	btfss	int$flags,1,c
 14113  004A92  EF4D  F025         	goto	_I2C_DO_TX_EMPTY$intlevel0
 14114  004A96  EF8A  F026         	goto	i2_I2C_DO_TX_EMPTY
 14115  004A9A                     _I2C_DO_TX_EMPTY$intlevel0:
 14116                           	callstack 8
 14117  004A9A                     
 14118                           ;mcc_generated_files/i2c_master.c: 411:     I2C_Status.bufferFree = 1;
 14119  004A9A  0100               	movlb	0	; () banked
 14120  004A9C  87EB               	bsf	(_I2C_Status+35)& (0+255),3,b
 14121                           
 14122                           ;mcc_generated_files/i2c_master.c: 412:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 14123  004A9E  EF5E  F025         	goto	l10979
 14124  004AA2                     l10963:
 14125                           
 14126                           ; BSR set to: 0
 14127                           ;mcc_generated_files/i2c_master.c: 416:             return I2C_DO_SEND_RESTART();
 14128  004AA2  EC34  F031         	call	_I2C_DO_SEND_RESTART	;wreg free
 14129  004AA6  EF8B  F025         	goto	l1262
 14130  004AAA                     l10967:
 14131                           
 14132                           ; BSR set to: 0
 14133                           ;mcc_generated_files/i2c_master.c: 418:             I2C_MasterSetIrq();
 14134  004AAA  ECCD  F031         	call	_I2C_MasterSetIrq	;wreg free
 14135  004AAE                     
 14136                           ;mcc_generated_files/i2c_master.c: 419:             return I2C_TX;
 14137  004AAE  0E03               	movlw	3
 14138  004AB0  EF8B  F025         	goto	l1262
 14139  004AB4                     l10973:
 14140                           
 14141                           ; BSR set to: 0
 14142                           ;mcc_generated_files/i2c_master.c: 422:             return I2C_DO_SEND_STOP();
 14143  004AB4  EC2B  F031         	call	_I2C_DO_SEND_STOP	;wreg free
 14144  004AB8  EF8B  F025         	goto	l1262
 14145  004ABC                     l10979:
 14146                           
 14147                           ; BSR set to: 0
 14148  004ABC  C0D4  F080         	movff	_I2C_Status+12,rd1RegCompleteHandler@ptr
 14149  004AC0  C0D5  F081         	movff	_I2C_Status+13,rd1RegCompleteHandler@ptr+1
 14150  004AC4  D802               	call	u8658
 14151  004AC6  EF6E  F025         	goto	u8659
 14152  004ACA                     u8658:
 14153  004ACA  0005               	push	
 14154  004ACC  6EFA               	movwf	pclath,c
 14155  004ACE  51C8               	movf	_I2C_Status& (0+255),w,b
 14156  004AD0  6EFD               	movwf	tosl,c
 14157  004AD2  51C9               	movf	(_I2C_Status+1)& (0+255),w,b
 14158  004AD4  6EFE               	movwf	tosh,c
 14159  004AD6  6AFF               	clrf	tosu,c
 14160  004AD8  50FA               	movf	pclath,w,c
 14161  004ADA  0012               	return		;indir
 14162  004ADC                     u8659:
 14163  004ADC  0100               	movlb	0	; () banked
 14164  004ADE  6F82               	movwf	??_I2C_DO_TX_EMPTY& (0+255),b
 14165  004AE0  6B83               	clrf	(??_I2C_DO_TX_EMPTY+1)& (0+255),b
 14166                           
 14167                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14168                           ; Switch size 1, requested type "simple"
 14169                           ; Number of cases is 1, Range of values is 0 to 0
 14170                           ; switch strategies available:
 14171                           ; Name         Instructions Cycles
 14172                           ; simple_byte            4     3 (average)
 14173                           ;	Chosen strategy is simple_byte
 14174  004AE2  5183               	movf	(??_I2C_DO_TX_EMPTY+1)& (0+255),w,b
 14175  004AE4  0A00               	xorlw	0	; case 0
 14176  004AE6  B4D8               	btfsc	status,2,c
 14177  004AE8  EF78  F025         	goto	l13671
 14178  004AEC  EF5A  F025         	goto	l10973
 14179  004AF0                     l13671:
 14180                           
 14181                           ; BSR set to: 0
 14182                           ; Switch size 1, requested type "simple"
 14183                           ; Number of cases is 4, Range of values is 1 to 4
 14184                           ; switch strategies available:
 14185                           ; Name         Instructions Cycles
 14186                           ; simple_byte           13     7 (average)
 14187                           ;	Chosen strategy is simple_byte
 14188  004AF0  5182               	movf	??_I2C_DO_TX_EMPTY& (0+255),w,b
 14189  004AF2  0A01               	xorlw	1	; case 1
 14190  004AF4  B4D8               	btfsc	status,2,c
 14191  004AF6  EF5A  F025         	goto	l10973
 14192  004AFA  0A03               	xorlw	3	; case 2
 14193  004AFC  B4D8               	btfsc	status,2,c
 14194  004AFE  EF51  F025         	goto	l10963
 14195  004B02  0A01               	xorlw	1	; case 3
 14196  004B04  B4D8               	btfsc	status,2,c
 14197  004B06  EF51  F025         	goto	l10963
 14198  004B0A  0A07               	xorlw	7	; case 4
 14199  004B0C  B4D8               	btfsc	status,2,c
 14200  004B0E  EF55  F025         	goto	l10967
 14201  004B12  EF5A  F025         	goto	l10973
 14202  004B16                     l1262:
 14203  004B16  0012               	return		;funcret
 14204  004B18                     __end_of_I2C_DO_TX_EMPTY:
 14205                           	callstack 0
 14206                           
 14207 ;; *************** function _I2C_MasterSetIrq *****************
 14208 ;; Defined at:
 14209 ;;		line 645 in file "mcc_generated_files/i2c_master.c"
 14210 ;; Parameters:    Size  Location     Type
 14211 ;;		None
 14212 ;; Auto vars:     Size  Location     Type
 14213 ;;		None
 14214 ;; Return value:  Size  Location     Type
 14215 ;;                  1    wreg      void 
 14216 ;; Registers used:
 14217 ;;		None
 14218 ;; Tracked objects:
 14219 ;;		On entry : 0/0
 14220 ;;		On exit  : 0/0
 14221 ;;		Unchanged: 0/0
 14222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14227 ;;Total ram usage:        0 bytes
 14228 ;; Hardware stack levels used: 1
 14229 ;; Hardware stack levels required when called: 13
 14230 ;; This function calls:
 14231 ;;		Nothing
 14232 ;; This function is called by:
 14233 ;;		_I2C_DO_TX_EMPTY
 14234 ;; This function uses a non-reentrant model
 14235 ;;
 14236                           
 14237                           	psect	text83
 14238  00639A                     __ptext83:
 14239                           	callstack 0
 14240  00639A                     _I2C_MasterSetIrq:
 14241                           	callstack 10
 14242  00639A                     
 14243                           ;mcc_generated_files/i2c_master.c: 647:     PIR1bits.SSPIF = 1;
 14244  00639A  869E               	bsf	158,3,c	;volatile
 14245  00639C  0012               	return		;funcret
 14246  00639E                     __end_of_I2C_MasterSetIrq:
 14247                           	callstack 0
 14248                           
 14249 ;; *************** function _I2C_MasterIsNack *****************
 14250 ;; Defined at:
 14251 ;;		line 598 in file "mcc_generated_files/i2c_master.c"
 14252 ;; Parameters:    Size  Location     Type
 14253 ;;		None
 14254 ;; Auto vars:     Size  Location     Type
 14255 ;;		None
 14256 ;; Return value:  Size  Location     Type
 14257 ;;                  1    wreg      _Bool 
 14258 ;; Registers used:
 14259 ;;		wreg
 14260 ;; Tracked objects:
 14261 ;;		On entry : 0/0
 14262 ;;		On exit  : 0/0
 14263 ;;		Unchanged: 0/0
 14264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14269 ;;Total ram usage:        0 bytes
 14270 ;; Hardware stack levels used: 1
 14271 ;; Hardware stack levels required when called: 13
 14272 ;; This function calls:
 14273 ;;		Nothing
 14274 ;; This function is called by:
 14275 ;;		_I2C_MasterFsm
 14276 ;;		_I2C_DO_TX
 14277 ;; This function uses a non-reentrant model
 14278 ;;
 14279                           
 14280                           	psect	text84
 14281  0061F8                     __ptext84:
 14282                           	callstack 0
 14283  0061F8                     _I2C_MasterIsNack:
 14284                           	callstack 11
 14285  0061F8                     
 14286                           ;mcc_generated_files/i2c_master.c: 600:     return SSPCON2bits.ACKSTAT;
 14287  0061F8  BCC5               	btfsc	197,6,c	;volatile
 14288  0061FA  EF01  F031         	goto	u8541
 14289  0061FE  EF04  F031         	goto	u8540
 14290  006202                     u8541:
 14291  006202  0E01               	movlw	1
 14292  006204  EF05  F031         	goto	u8546
 14293  006208                     u8540:
 14294  006208  0E00               	movlw	0
 14295  00620A                     u8546:
 14296  00620A  0012               	return		;funcret
 14297  00620C                     __end_of_I2C_MasterIsNack:
 14298                           	callstack 0
 14299                           
 14300 ;; *************** function _I2C_MasterSendTxData *****************
 14301 ;; Defined at:
 14302 ;;		line 568 in file "mcc_generated_files/i2c_master.c"
 14303 ;; Parameters:    Size  Location     Type
 14304 ;;  data            1    wreg     unsigned char 
 14305 ;; Auto vars:     Size  Location     Type
 14306 ;;  data            1   38[COMRAM] unsigned char 
 14307 ;; Return value:  Size  Location     Type
 14308 ;;                  1    wreg      void 
 14309 ;; Registers used:
 14310 ;;		wreg
 14311 ;; Tracked objects:
 14312 ;;		On entry : 0/0
 14313 ;;		On exit  : 0/0
 14314 ;;		Unchanged: 0/0
 14315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14317 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14319 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14320 ;;Total ram usage:        1 bytes
 14321 ;; Hardware stack levels used: 1
 14322 ;; Hardware stack levels required when called: 13
 14323 ;; This function calls:
 14324 ;;		Nothing
 14325 ;; This function is called by:
 14326 ;;		_I2C_DO_SEND_ADR_READ
 14327 ;;		_I2C_DO_SEND_ADR_WRITE
 14328 ;;		_I2C_DO_TX
 14329 ;; This function uses a non-reentrant model
 14330 ;;
 14331                           
 14332                           	psect	text85
 14333  006332                     __ptext85:
 14334                           	callstack 0
 14335  006332                     _I2C_MasterSendTxData:
 14336                           	callstack 10
 14337                           
 14338                           ;incstack = 0
 14339                           ;I2C_MasterSendTxData@data stored from wreg
 14340  006332  6E27               	movwf	I2C_MasterSendTxData@data^0,c
 14341  006334                     
 14342                           ;mcc_generated_files/i2c_master.c: 568: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 569: {;mcc_generated_files/i2c_
      +                          master.c: 570:     SSPBUF = data;
 14343  006334  C027  FFC9         	movff	I2C_MasterSendTxData@data,4041	;volatile
 14344  006338  0012               	return		;funcret
 14345  00633A                     __end_of_I2C_MasterSendTxData:
 14346                           	callstack 0
 14347                           
 14348 ;; *************** function _I2C_MasterSendAck *****************
 14349 ;; Defined at:
 14350 ;;		line 603 in file "mcc_generated_files/i2c_master.c"
 14351 ;; Parameters:    Size  Location     Type
 14352 ;;		None
 14353 ;; Auto vars:     Size  Location     Type
 14354 ;;		None
 14355 ;; Return value:  Size  Location     Type
 14356 ;;                  1    wreg      void 
 14357 ;; Registers used:
 14358 ;;		None
 14359 ;; Tracked objects:
 14360 ;;		On entry : 0/0
 14361 ;;		On exit  : 0/0
 14362 ;;		Unchanged: 0/0
 14363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14368 ;;Total ram usage:        0 bytes
 14369 ;; Hardware stack levels used: 1
 14370 ;; Hardware stack levels required when called: 13
 14371 ;; This function calls:
 14372 ;;		Nothing
 14373 ;; This function is called by:
 14374 ;;		_I2C_DO_RX
 14375 ;;		_I2C_DO_RX_ACK
 14376 ;; This function uses a non-reentrant model
 14377 ;;
 14378                           
 14379                           	psect	text86
 14380  006382                     __ptext86:
 14381                           	callstack 0
 14382  006382                     _I2C_MasterSendAck:
 14383                           	callstack 10
 14384  006382                     
 14385                           ;mcc_generated_files/i2c_master.c: 605:     SSPCON2bits.ACKDT = 0;
 14386  006382  9AC5               	bcf	197,5,c	;volatile
 14387                           
 14388                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKEN = 1;
 14389  006384  88C5               	bsf	197,4,c	;volatile
 14390  006386  0012               	return		;funcret
 14391  006388                     __end_of_I2C_MasterSendAck:
 14392                           	callstack 0
 14393                           
 14394 ;; *************** function _I2C_MasterGetRxData *****************
 14395 ;; Defined at:
 14396 ;;		line 563 in file "mcc_generated_files/i2c_master.c"
 14397 ;; Parameters:    Size  Location     Type
 14398 ;;		None
 14399 ;; Auto vars:     Size  Location     Type
 14400 ;;		None
 14401 ;; Return value:  Size  Location     Type
 14402 ;;                  1    wreg      unsigned char 
 14403 ;; Registers used:
 14404 ;;		wreg, status,2
 14405 ;; Tracked objects:
 14406 ;;		On entry : 0/0
 14407 ;;		On exit  : 0/0
 14408 ;;		Unchanged: 0/0
 14409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14414 ;;Total ram usage:        0 bytes
 14415 ;; Hardware stack levels used: 1
 14416 ;; Hardware stack levels required when called: 13
 14417 ;; This function calls:
 14418 ;;		Nothing
 14419 ;; This function is called by:
 14420 ;;		_I2C_DO_RX
 14421 ;; This function uses a non-reentrant model
 14422 ;;
 14423                           
 14424                           	psect	text87
 14425  00639E                     __ptext87:
 14426                           	callstack 0
 14427  00639E                     _I2C_MasterGetRxData:
 14428                           	callstack 10
 14429  00639E                     
 14430                           ;mcc_generated_files/i2c_master.c: 565:     return SSPBUF;
 14431  00639E  50C9               	movf	201,w,c	;volatile
 14432  0063A0  0012               	return		;funcret
 14433  0063A2                     __end_of_I2C_MasterGetRxData:
 14434                           	callstack 0
 14435                           
 14436 ;; *************** function _I2C_MasterSendNack *****************
 14437 ;; Defined at:
 14438 ;;		line 609 in file "mcc_generated_files/i2c_master.c"
 14439 ;; Parameters:    Size  Location     Type
 14440 ;;		None
 14441 ;; Auto vars:     Size  Location     Type
 14442 ;;		None
 14443 ;; Return value:  Size  Location     Type
 14444 ;;                  1    wreg      void 
 14445 ;; Registers used:
 14446 ;;		None
 14447 ;; Tracked objects:
 14448 ;;		On entry : 0/0
 14449 ;;		On exit  : 0/0
 14450 ;;		Unchanged: 0/0
 14451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14456 ;;Total ram usage:        0 bytes
 14457 ;; Hardware stack levels used: 1
 14458 ;; Hardware stack levels required when called: 13
 14459 ;; This function calls:
 14460 ;;		Nothing
 14461 ;; This function is called by:
 14462 ;;		_I2C_DO_RX_NACK_STOP
 14463 ;;		_I2C_DO_RX_NACK_RESTART
 14464 ;; This function uses a non-reentrant model
 14465 ;;
 14466                           
 14467                           	psect	text88
 14468  006388                     __ptext88:
 14469                           	callstack 0
 14470  006388                     _I2C_MasterSendNack:
 14471                           	callstack 10
 14472  006388                     
 14473                           ;mcc_generated_files/i2c_master.c: 611:     SSPCON2bits.ACKDT = 1;
 14474  006388  8AC5               	bsf	197,5,c	;volatile
 14475                           
 14476                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKEN = 1;
 14477  00638A  88C5               	bsf	197,4,c	;volatile
 14478  00638C  0012               	return		;funcret
 14479  00638E                     __end_of_I2C_MasterSendNack:
 14480                           	callstack 0
 14481                           
 14482 ;; *************** function _I2C_MasterStartRx *****************
 14483 ;; Defined at:
 14484 ;;		line 583 in file "mcc_generated_files/i2c_master.c"
 14485 ;; Parameters:    Size  Location     Type
 14486 ;;		None
 14487 ;; Auto vars:     Size  Location     Type
 14488 ;;		None
 14489 ;; Return value:  Size  Location     Type
 14490 ;;                  1    wreg      void 
 14491 ;; Registers used:
 14492 ;;		None
 14493 ;; Tracked objects:
 14494 ;;		On entry : 0/0
 14495 ;;		On exit  : 0/0
 14496 ;;		Unchanged: 0/0
 14497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14502 ;;Total ram usage:        0 bytes
 14503 ;; Hardware stack levels used: 1
 14504 ;; Hardware stack levels required when called: 13
 14505 ;; This function calls:
 14506 ;;		Nothing
 14507 ;; This function is called by:
 14508 ;;		_I2C_DO_RCEN
 14509 ;; This function uses a non-reentrant model
 14510 ;;
 14511                           
 14512                           	psect	text89
 14513  0063A2                     __ptext89:
 14514                           	callstack 0
 14515  0063A2                     _I2C_MasterStartRx:
 14516                           	callstack 10
 14517  0063A2                     
 14518                           ;mcc_generated_files/i2c_master.c: 585:     SSPCON2bits.RCEN = 1;
 14519  0063A2  86C5               	bsf	197,3,c	;volatile
 14520  0063A4  0012               	return		;funcret
 14521  0063A6                     __end_of_I2C_MasterStartRx:
 14522                           	callstack 0
 14523                           
 14524 ;; *************** function _I2C_CallbackReturnReset *****************
 14525 ;; Defined at:
 14526 ;;		line 525 in file "mcc_generated_files/i2c_master.c"
 14527 ;; Parameters:    Size  Location     Type
 14528 ;;  funPtr          2    0[BANK0 ] PTR void 
 14529 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14530 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 14531 ;; Auto vars:     Size  Location     Type
 14532 ;;		None
 14533 ;; Return value:  Size  Location     Type
 14534 ;;                  1    wreg      enum E360
 14535 ;; Registers used:
 14536 ;;		wreg
 14537 ;; Tracked objects:
 14538 ;;		On entry : 0/0
 14539 ;;		On exit  : 0/0
 14540 ;;		Unchanged: 0/0
 14541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14542 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14545 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14546 ;;Total ram usage:        2 bytes
 14547 ;; Hardware stack levels used: 1
 14548 ;; Hardware stack levels required when called: 13
 14549 ;; This function calls:
 14550 ;;		Nothing
 14551 ;; This function is called by:
 14552 ;;		_I2C_Open
 14553 ;;		i2_I2C_DO_TX
 14554 ;;		i2_I2C_DO_RX
 14555 ;;		i2_I2C_DO_TX_EMPTY
 14556 ;;		i2_I2C_DO_ADDRESS_NACK
 14557 ;;		_I2C_DO_TX
 14558 ;;		_I2C_DO_RX
 14559 ;;		_I2C_DO_TX_EMPTY
 14560 ;;		_I2C_DO_ADDRESS_NACK
 14561 ;;		_I2C_DO_RX_EMPTY
 14562 ;; This function uses a non-reentrant model
 14563 ;;
 14564                           
 14565                           	psect	text90
 14566  0062DC                     __ptext90:
 14567                           	callstack 0
 14568  0062DC                     _I2C_CallbackReturnReset:
 14569                           	callstack 0
 14570                           
 14571                           ;Skip over the trampoline to the duplicate function for level 2
 14572  0062DC  A259               	btfss	int$flags,1,c
 14573  0062DE  EF73  F031         	goto	_I2C_CallbackReturnReset$intlevel0
 14574  0062E2  EFE5  F031         	goto	i2_I2C_CallbackReturnReset
 14575  0062E6                     _I2C_CallbackReturnReset$intlevel0:
 14576                           	callstack 10
 14577  0062E6                     
 14578                           ;mcc_generated_files/i2c_master.c: 525: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 526: {;mcc_generated_files/i2c_master.c: 527:  
      +                             return I2C_RESET_LINK;
 14579  0062E6  0E05               	movlw	5
 14580  0062E8  0012               	return		;funcret
 14581  0062EA                     __end_of_I2C_CallbackReturnReset:
 14582                           	callstack 0
 14583                           
 14584 ;; *************** function _I2C_CallbackReturnStop *****************
 14585 ;; Defined at:
 14586 ;;		line 520 in file "mcc_generated_files/i2c_master.c"
 14587 ;; Parameters:    Size  Location     Type
 14588 ;;  funPtr          2    0[BANK0 ] PTR void 
 14589 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14590 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 14591 ;; Auto vars:     Size  Location     Type
 14592 ;;		None
 14593 ;; Return value:  Size  Location     Type
 14594 ;;                  1    wreg      enum E360
 14595 ;; Registers used:
 14596 ;;		wreg
 14597 ;; Tracked objects:
 14598 ;;		On entry : 0/0
 14599 ;;		On exit  : 0/0
 14600 ;;		Unchanged: 0/0
 14601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14602 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14605 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14606 ;;Total ram usage:        2 bytes
 14607 ;; Hardware stack levels used: 1
 14608 ;; Hardware stack levels required when called: 13
 14609 ;; This function calls:
 14610 ;;		Nothing
 14611 ;; This function is called by:
 14612 ;;		_I2C_Open
 14613 ;;		_I2C_SetCallback
 14614 ;;		i2_I2C_DO_TX
 14615 ;;		i2_I2C_DO_RX
 14616 ;;		i2_I2C_DO_TX_EMPTY
 14617 ;;		i2_I2C_DO_ADDRESS_NACK
 14618 ;;		_I2C_DO_TX
 14619 ;;		_I2C_DO_RX
 14620 ;;		_I2C_DO_TX_EMPTY
 14621 ;;		_I2C_DO_ADDRESS_NACK
 14622 ;;		_I2C_DO_RX_EMPTY
 14623 ;; This function uses a non-reentrant model
 14624 ;;
 14625                           
 14626                           	psect	text91
 14627  0062EA                     __ptext91:
 14628                           	callstack 0
 14629  0062EA                     _I2C_CallbackReturnStop:
 14630                           	callstack 0
 14631                           
 14632                           ;Skip over the trampoline to the duplicate function for level 2
 14633  0062EA  A259               	btfss	int$flags,1,c
 14634  0062EC  EF7A  F031         	goto	_I2C_CallbackReturnStop$intlevel0
 14635  0062F0  EFE7  F031         	goto	i2_I2C_CallbackReturnStop
 14636  0062F4                     _I2C_CallbackReturnStop$intlevel0:
 14637                           	callstack 10
 14638  0062F4                     
 14639                           ;mcc_generated_files/i2c_master.c: 520: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 521: {;mcc_generated_files/i2c_master.c: 522:   
      +                            return I2C_STOP;
 14640  0062F4  0E01               	movlw	1
 14641  0062F6  0012               	return		;funcret
 14642  0062F8                     __end_of_I2C_CallbackReturnStop:
 14643                           	callstack 0
 14644                           
 14645 ;; *************** function _rdBlkRegCompleteHandler *****************
 14646 ;; Defined at:
 14647 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
 14648 ;; Parameters:    Size  Location     Type
 14649 ;;  ptr             2    0[BANK0 ] PTR void 
 14650 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14651 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 14652 ;; Auto vars:     Size  Location     Type
 14653 ;;		None
 14654 ;; Return value:  Size  Location     Type
 14655 ;;                  1    wreg      enum E360
 14656 ;; Registers used:
 14657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14658 ;; Tracked objects:
 14659 ;;		On entry : 0/0
 14660 ;;		On exit  : 0/0
 14661 ;;		Unchanged: 0/0
 14662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14663 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14666 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14667 ;;Total ram usage:        2 bytes
 14668 ;; Hardware stack levels used: 1
 14669 ;; Hardware stack levels required when called: 15
 14670 ;; This function calls:
 14671 ;;		_I2C_SetBuffer
 14672 ;;		_I2C_SetDataCompleteCallback
 14673 ;; This function is called by:
 14674 ;;		_I2C_ReadDataBlock
 14675 ;;		i2_I2C_DO_TX
 14676 ;;		i2_I2C_DO_RX
 14677 ;;		i2_I2C_DO_TX_EMPTY
 14678 ;;		i2_I2C_DO_ADDRESS_NACK
 14679 ;;		_I2C_DO_TX
 14680 ;;		_I2C_DO_RX
 14681 ;;		_I2C_DO_TX_EMPTY
 14682 ;;		_I2C_DO_ADDRESS_NACK
 14683 ;;		_I2C_DO_RX_EMPTY
 14684 ;; This function uses a non-reentrant model
 14685 ;;
 14686                           
 14687                           	psect	text92
 14688  005898                     __ptext92:
 14689                           	callstack 0
 14690  005898                     _rdBlkRegCompleteHandler:
 14691                           	callstack 0
 14692                           
 14693                           ;Skip over the trampoline to the duplicate function for level 2
 14694  005898  A259               	btfss	int$flags,1,c
 14695  00589A  EF51  F02C         	goto	_rdBlkRegCompleteHandler$intlevel0
 14696  00589E  EF43  F02D         	goto	i2_rdBlkRegCompleteHandler
 14697  0058A2                     _rdBlkRegCompleteHandler$intlevel0:
 14698                           	callstack 8
 14699  0058A2                     
 14700                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
 14701  0058A2  0100               	movlb	0	; () banked
 14702  0058A4  EE20 F002          	lfsr	2,2
 14703  0058A8  5180               	movf	rdBlkRegCompleteHandler@ptr& (0+255),w,b
 14704  0058AA  26D9               	addwf	fsr2l,f,c
 14705  0058AC  5181               	movf	(rdBlkRegCompleteHandler@ptr+1)& (0+255),w,b
 14706  0058AE  22DA               	addwfc	fsr2h,f,c
 14707  0058B0  CFDE F027          	movff	postinc2,I2C_SetBuffer@buffer
 14708  0058B4  CFDD F028          	movff	postdec2,I2C_SetBuffer@buffer+1
 14709  0058B8  C080  FFD9         	movff	rdBlkRegCompleteHandler@ptr,fsr2l
 14710  0058BC  C081  FFDA         	movff	rdBlkRegCompleteHandler@ptr+1,fsr2h
 14711  0058C0  CFDE F029          	movff	postinc2,I2C_SetBuffer@bufferSize
 14712  0058C4  CFDD F02A          	movff	postdec2,I2C_SetBuffer@bufferSize+1
 14713  0058C8  ECC2  F02F         	call	_I2C_SetBuffer	;wreg free
 14714  0058CC                     
 14715                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 14716  0058CC  0E00               	movlw	0
 14717  0058CE  6E2C               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 14718  0058D0  0E00               	movlw	0
 14719  0058D2  6E2D               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 14720  0058D4  0E00               	movlw	0
 14721  0058D6  6E2E               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 14722  0058D8  0E00               	movlw	0
 14723  0058DA  6E2F               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 14724  0058DC  ECAD  F030         	call	_I2C_SetDataCompleteCallback	;wreg free
 14725  0058E0                     
 14726                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
 14727  0058E0  0E02               	movlw	2
 14728  0058E2  0012               	return		;funcret
 14729  0058E4                     __end_of_rdBlkRegCompleteHandler:
 14730                           	callstack 0
 14731                           
 14732 ;; *************** function _wr1RegCompleteHandler *****************
 14733 ;; Defined at:
 14734 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
 14735 ;; Parameters:    Size  Location     Type
 14736 ;;  ptr             2    0[BANK0 ] PTR void 
 14737 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14738 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 14739 ;; Auto vars:     Size  Location     Type
 14740 ;;		None
 14741 ;; Return value:  Size  Location     Type
 14742 ;;                  1    wreg      enum E360
 14743 ;; Registers used:
 14744 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14745 ;; Tracked objects:
 14746 ;;		On entry : 0/0
 14747 ;;		On exit  : 0/0
 14748 ;;		Unchanged: 0/0
 14749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14750 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14753 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14754 ;;Total ram usage:        2 bytes
 14755 ;; Hardware stack levels used: 1
 14756 ;; Hardware stack levels required when called: 15
 14757 ;; This function calls:
 14758 ;;		_I2C_SetBuffer
 14759 ;;		_I2C_SetDataCompleteCallback
 14760 ;; This function is called by:
 14761 ;;		_I2C_Write1ByteRegister
 14762 ;;		i2_I2C_DO_TX
 14763 ;;		i2_I2C_DO_RX
 14764 ;;		i2_I2C_DO_TX_EMPTY
 14765 ;;		i2_I2C_DO_ADDRESS_NACK
 14766 ;;		_I2C_DO_TX
 14767 ;;		_I2C_DO_RX
 14768 ;;		_I2C_DO_TX_EMPTY
 14769 ;;		_I2C_DO_ADDRESS_NACK
 14770 ;;		_I2C_DO_RX_EMPTY
 14771 ;; This function uses a non-reentrant model
 14772 ;;
 14773                           
 14774                           	psect	text93
 14775  005BAC                     __ptext93:
 14776                           	callstack 0
 14777  005BAC                     _wr1RegCompleteHandler:
 14778                           	callstack 0
 14779                           
 14780                           ;Skip over the trampoline to the duplicate function for level 2
 14781  005BAC  A259               	btfss	int$flags,1,c
 14782  005BAE  EFDB  F02D         	goto	_wr1RegCompleteHandler$intlevel0
 14783  005BB2  EF15  F02F         	goto	i2_wr1RegCompleteHandler
 14784  005BB6                     _wr1RegCompleteHandler$intlevel0:
 14785                           	callstack 8
 14786  005BB6                     
 14787                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
 14788  005BB6  C080  F027         	movff	wr1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 14789  005BBA  C081  F028         	movff	wr1RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 14790  005BBE  0E00               	movlw	0
 14791  005BC0  6E2A               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 14792  005BC2  0E01               	movlw	1
 14793  005BC4  6E29               	movwf	I2C_SetBuffer@bufferSize^0,c
 14794  005BC6  ECC2  F02F         	call	_I2C_SetBuffer	;wreg free
 14795  005BCA                     
 14796                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 14797  005BCA  0E00               	movlw	0
 14798  005BCC  6E2C               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 14799  005BCE  0E00               	movlw	0
 14800  005BD0  6E2D               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 14801  005BD2  0E00               	movlw	0
 14802  005BD4  6E2E               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 14803  005BD6  0E00               	movlw	0
 14804  005BD8  6E2F               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 14805  005BDA  ECAD  F030         	call	_I2C_SetDataCompleteCallback	;wreg free
 14806  005BDE                     
 14807                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
 14808  005BDE  0E04               	movlw	4
 14809  005BE0  0012               	return		;funcret
 14810  005BE2                     __end_of_wr1RegCompleteHandler:
 14811                           	callstack 0
 14812                           
 14813 ;; *************** function _rd2RegCompleteHandler *****************
 14814 ;; Defined at:
 14815 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
 14816 ;; Parameters:    Size  Location     Type
 14817 ;;  ptr             2    0[BANK0 ] PTR void 
 14818 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14819 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 14820 ;; Auto vars:     Size  Location     Type
 14821 ;;		None
 14822 ;; Return value:  Size  Location     Type
 14823 ;;                  1    wreg      enum E360
 14824 ;; Registers used:
 14825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14826 ;; Tracked objects:
 14827 ;;		On entry : 0/0
 14828 ;;		On exit  : 0/0
 14829 ;;		Unchanged: 0/0
 14830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14831 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14834 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14835 ;;Total ram usage:        2 bytes
 14836 ;; Hardware stack levels used: 1
 14837 ;; Hardware stack levels required when called: 15
 14838 ;; This function calls:
 14839 ;;		_I2C_SetBuffer
 14840 ;;		_I2C_SetDataCompleteCallback
 14841 ;; This function is called by:
 14842 ;;		_I2C_Read2ByteRegister
 14843 ;;		i2_I2C_DO_TX
 14844 ;;		i2_I2C_DO_RX
 14845 ;;		i2_I2C_DO_TX_EMPTY
 14846 ;;		i2_I2C_DO_ADDRESS_NACK
 14847 ;;		_I2C_DO_TX
 14848 ;;		_I2C_DO_RX
 14849 ;;		_I2C_DO_TX_EMPTY
 14850 ;;		_I2C_DO_ADDRESS_NACK
 14851 ;;		_I2C_DO_RX_EMPTY
 14852 ;; This function uses a non-reentrant model
 14853 ;;
 14854                           
 14855                           	psect	text94
 14856  005BE2                     __ptext94:
 14857                           	callstack 0
 14858  005BE2                     _rd2RegCompleteHandler:
 14859                           	callstack 0
 14860                           
 14861                           ;Skip over the trampoline to the duplicate function for level 2
 14862  005BE2  A259               	btfss	int$flags,1,c
 14863  005BE4  EFF6  F02D         	goto	_rd2RegCompleteHandler$intlevel0
 14864  005BE8  EF2B  F02F         	goto	i2_rd2RegCompleteHandler
 14865  005BEC                     _rd2RegCompleteHandler$intlevel0:
 14866                           	callstack 8
 14867  005BEC                     
 14868                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
 14869  005BEC  C080  F027         	movff	rd2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 14870  005BF0  C081  F028         	movff	rd2RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 14871  005BF4  0E00               	movlw	0
 14872  005BF6  6E2A               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 14873  005BF8  0E02               	movlw	2
 14874  005BFA  6E29               	movwf	I2C_SetBuffer@bufferSize^0,c
 14875  005BFC  ECC2  F02F         	call	_I2C_SetBuffer	;wreg free
 14876  005C00                     
 14877                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 14878  005C00  0E00               	movlw	0
 14879  005C02  6E2C               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 14880  005C04  0E00               	movlw	0
 14881  005C06  6E2D               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 14882  005C08  0E00               	movlw	0
 14883  005C0A  6E2E               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 14884  005C0C  0E00               	movlw	0
 14885  005C0E  6E2F               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 14886  005C10  ECAD  F030         	call	_I2C_SetDataCompleteCallback	;wreg free
 14887  005C14                     
 14888                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
 14889  005C14  0E02               	movlw	2
 14890  005C16  0012               	return		;funcret
 14891  005C18                     __end_of_rd2RegCompleteHandler:
 14892                           	callstack 0
 14893                           
 14894 ;; *************** function _rd1RegCompleteHandler *****************
 14895 ;; Defined at:
 14896 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
 14897 ;; Parameters:    Size  Location     Type
 14898 ;;  ptr             2    0[BANK0 ] PTR void 
 14899 ;;		 -> i2I2C_Write1ByteRegister@data(1), i2I2C_Read1ByteRegister@returnValue(1), I2C_ReadDataBlock@bufferBlock(4), I2C_
      +Write2ByteRegister@data(2), 
 14900 ;;		 -> I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@returnValue(2), I2C_Read1ByteRegister@returnValue(1), NULL
      +(0), 
 14901 ;; Auto vars:     Size  Location     Type
 14902 ;;		None
 14903 ;; Return value:  Size  Location     Type
 14904 ;;                  1    wreg      enum E360
 14905 ;; Registers used:
 14906 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14907 ;; Tracked objects:
 14908 ;;		On entry : 0/0
 14909 ;;		On exit  : 0/0
 14910 ;;		Unchanged: 0/0
 14911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14912 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14915 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14916 ;;Total ram usage:        2 bytes
 14917 ;; Hardware stack levels used: 1
 14918 ;; Hardware stack levels required when called: 15
 14919 ;; This function calls:
 14920 ;;		_I2C_SetBuffer
 14921 ;;		_I2C_SetDataCompleteCallback
 14922 ;; This function is called by:
 14923 ;;		_I2C_Read1ByteRegister
 14924 ;;		i2_I2C_DO_TX
 14925 ;;		i2_I2C_DO_RX
 14926 ;;		i2_I2C_DO_TX_EMPTY
 14927 ;;		i2_I2C_DO_ADDRESS_NACK
 14928 ;;		_I2C_DO_TX
 14929 ;;		_I2C_DO_RX
 14930 ;;		_I2C_DO_TX_EMPTY
 14931 ;;		_I2C_DO_ADDRESS_NACK
 14932 ;;		_I2C_DO_RX_EMPTY
 14933 ;; This function uses a non-reentrant model
 14934 ;;
 14935                           
 14936                           	psect	text95
 14937  005C18                     __ptext95:
 14938                           	callstack 0
 14939  005C18                     _rd1RegCompleteHandler:
 14940                           	callstack 0
 14941                           
 14942                           ;Skip over the trampoline to the duplicate function for level 2
 14943  005C18  A259               	btfss	int$flags,1,c
 14944  005C1A  EF11  F02E         	goto	_rd1RegCompleteHandler$intlevel0
 14945  005C1E  EF41  F02F         	goto	i2_rd1RegCompleteHandler
 14946  005C22                     _rd1RegCompleteHandler$intlevel0:
 14947                           	callstack 8
 14948  005C22                     
 14949                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
 14950  005C22  C080  F027         	movff	rd1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 14951  005C26  C081  F028         	movff	rd1RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 14952  005C2A  0E00               	movlw	0
 14953  005C2C  6E2A               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 14954  005C2E  0E01               	movlw	1
 14955  005C30  6E29               	movwf	I2C_SetBuffer@bufferSize^0,c
 14956  005C32  ECC2  F02F         	call	_I2C_SetBuffer	;wreg free
 14957  005C36                     
 14958                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 14959  005C36  0E00               	movlw	0
 14960  005C38  6E2C               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 14961  005C3A  0E00               	movlw	0
 14962  005C3C  6E2D               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 14963  005C3E  0E00               	movlw	0
 14964  005C40  6E2E               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 14965  005C42  0E00               	movlw	0
 14966  005C44  6E2F               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 14967  005C46  ECAD  F030         	call	_I2C_SetDataCompleteCallback	;wreg free
 14968  005C4A                     
 14969                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
 14970  005C4A  0E02               	movlw	2
 14971  005C4C  0012               	return		;funcret
 14972  005C4E                     __end_of_rd1RegCompleteHandler:
 14973                           	callstack 0
 14974                           
 14975 ;; *************** function _wr2RegCompleteHandler *****************
 14976 ;; Defined at:
 14977 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
 14978 ;; Parameters:    Size  Location     Type
 14979 ;;  ptr             2    0[BANK0 ] PTR void 
 14980 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14981 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 14982 ;; Auto vars:     Size  Location     Type
 14983 ;;		None
 14984 ;; Return value:  Size  Location     Type
 14985 ;;                  1    wreg      enum E360
 14986 ;; Registers used:
 14987 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14988 ;; Tracked objects:
 14989 ;;		On entry : 0/0
 14990 ;;		On exit  : 0/0
 14991 ;;		Unchanged: 0/0
 14992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14993 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14996 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14997 ;;Total ram usage:        2 bytes
 14998 ;; Hardware stack levels used: 1
 14999 ;; Hardware stack levels required when called: 15
 15000 ;; This function calls:
 15001 ;;		_I2C_SetBuffer
 15002 ;;		_I2C_SetDataCompleteCallback
 15003 ;; This function is called by:
 15004 ;;		_I2C_Write2ByteRegister
 15005 ;;		i2_I2C_DO_TX
 15006 ;;		i2_I2C_DO_RX
 15007 ;;		i2_I2C_DO_TX_EMPTY
 15008 ;;		i2_I2C_DO_ADDRESS_NACK
 15009 ;;		_I2C_DO_TX
 15010 ;;		_I2C_DO_RX
 15011 ;;		_I2C_DO_TX_EMPTY
 15012 ;;		_I2C_DO_ADDRESS_NACK
 15013 ;;		_I2C_DO_RX_EMPTY
 15014 ;; This function uses a non-reentrant model
 15015 ;;
 15016                           
 15017                           	psect	text96
 15018  005C4E                     __ptext96:
 15019                           	callstack 0
 15020  005C4E                     _wr2RegCompleteHandler:
 15021                           	callstack 0
 15022                           
 15023                           ;Skip over the trampoline to the duplicate function for level 2
 15024  005C4E  A259               	btfss	int$flags,1,c
 15025  005C50  EF2C  F02E         	goto	_wr2RegCompleteHandler$intlevel0
 15026  005C54  EF57  F02F         	goto	i2_wr2RegCompleteHandler
 15027  005C58                     _wr2RegCompleteHandler$intlevel0:
 15028                           	callstack 8
 15029  005C58                     
 15030                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
 15031  005C58  C080  F027         	movff	wr2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 15032  005C5C  C081  F028         	movff	wr2RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 15033  005C60  0E00               	movlw	0
 15034  005C62  6E2A               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 15035  005C64  0E02               	movlw	2
 15036  005C66  6E29               	movwf	I2C_SetBuffer@bufferSize^0,c
 15037  005C68  ECC2  F02F         	call	_I2C_SetBuffer	;wreg free
 15038  005C6C                     
 15039                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 15040  005C6C  0E00               	movlw	0
 15041  005C6E  6E2C               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 15042  005C70  0E00               	movlw	0
 15043  005C72  6E2D               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 15044  005C74  0E00               	movlw	0
 15045  005C76  6E2E               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 15046  005C78  0E00               	movlw	0
 15047  005C7A  6E2F               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 15048  005C7C  ECAD  F030         	call	_I2C_SetDataCompleteCallback	;wreg free
 15049  005C80                     
 15050                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
 15051  005C80  0E04               	movlw	4
 15052  005C82  0012               	return		;funcret
 15053  005C84                     __end_of_wr2RegCompleteHandler:
 15054                           	callstack 0
 15055                           
 15056 ;; *************** function _I2C_SetDataCompleteCallback *****************
 15057 ;; Defined at:
 15058 ;;		line 273 in file "mcc_generated_files/i2c_master.c"
 15059 ;; Parameters:    Size  Location     Type
 15060 ;;  cb              2   43[COMRAM] PTR FTN(PTR void ,)enum 
 15061 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), 
 15062 ;;		 -> rd1RegCompleteHandler(1), Absolute function(1), 
 15063 ;;  ptr             2   45[COMRAM] PTR void 
 15064 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 15065 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 15066 ;; Auto vars:     Size  Location     Type
 15067 ;;		None
 15068 ;; Return value:  Size  Location     Type
 15069 ;;                  1    wreg      void 
 15070 ;; Registers used:
 15071 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15072 ;; Tracked objects:
 15073 ;;		On entry : 0/0
 15074 ;;		On exit  : 0/0
 15075 ;;		Unchanged: 0/0
 15076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15077 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15080 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15081 ;;Total ram usage:        4 bytes
 15082 ;; Hardware stack levels used: 1
 15083 ;; Hardware stack levels required when called: 14
 15084 ;; This function calls:
 15085 ;;		_I2C_SetCallback
 15086 ;; This function is called by:
 15087 ;;		_I2C_Read1ByteRegister
 15088 ;;		_I2C_Write1ByteRegister
 15089 ;;		_rd1RegCompleteHandler
 15090 ;;		_rd2RegCompleteHandler
 15091 ;;		_wr1RegCompleteHandler
 15092 ;;		_wr2RegCompleteHandler
 15093 ;;		_rdBlkRegCompleteHandler
 15094 ;;		_I2C_Read2ByteRegister
 15095 ;;		_I2C_Write2ByteRegister
 15096 ;;		_I2C_ReadDataBlock
 15097 ;; This function uses a non-reentrant model
 15098 ;;
 15099                           
 15100                           	psect	text97
 15101  00615A                     __ptext97:
 15102                           	callstack 0
 15103  00615A                     _I2C_SetDataCompleteCallback:
 15104                           	callstack 14
 15105  00615A                     
 15106                           ;mcc_generated_files/i2c_master.c: 273: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 274: {;mcc_generated_files/i2c_master.c
      +                          : 275:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
 15107  00615A  C02C  F027         	movff	I2C_SetDataCompleteCallback@cb,I2C_SetCallback@cb
 15108  00615E  C02D  F028         	movff	I2C_SetDataCompleteCallback@cb+1,I2C_SetCallback@cb+1
 15109  006162  C02E  F029         	movff	I2C_SetDataCompleteCallback@ptr,I2C_SetCallback@ptr
 15110  006166  C02F  F02A         	movff	I2C_SetDataCompleteCallback@ptr+1,I2C_SetCallback@ptr+1
 15111  00616A  0E00               	movlw	0
 15112  00616C  EC05  F027         	call	_I2C_SetCallback
 15113  006170  0012               	return		;funcret
 15114  006172                     __end_of_I2C_SetDataCompleteCallback:
 15115                           	callstack 0
 15116                           
 15117 ;; *************** function _I2C_SetCallback *****************
 15118 ;; Defined at:
 15119 ;;		line 298 in file "mcc_generated_files/i2c_master.c"
 15120 ;; Parameters:    Size  Location     Type
 15121 ;;  idx             1    wreg     enum E2881
 15122 ;;  cb              2   38[COMRAM] PTR FTN(PTR void ,)enum 
 15123 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), 
 15124 ;;		 -> rd1RegCompleteHandler(1), Absolute function(1), 
 15125 ;;  ptr             2   40[COMRAM] PTR void 
 15126 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 15127 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 15128 ;; Auto vars:     Size  Location     Type
 15129 ;;  idx             1   42[COMRAM] enum E2881
 15130 ;; Return value:  Size  Location     Type
 15131 ;;                  1    wreg      void 
 15132 ;; Registers used:
 15133 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15134 ;; Tracked objects:
 15135 ;;		On entry : 0/0
 15136 ;;		On exit  : 0/0
 15137 ;;		Unchanged: 0/0
 15138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15139 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15140 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15142 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15143 ;;Total ram usage:        5 bytes
 15144 ;; Hardware stack levels used: 1
 15145 ;; Hardware stack levels required when called: 13
 15146 ;; This function calls:
 15147 ;;		Nothing
 15148 ;; This function is called by:
 15149 ;;		_I2C_SetDataCompleteCallback
 15150 ;;		_I2C_SetAddressNackCallback
 15151 ;;		_I2C_SetWriteCollisionCallback
 15152 ;;		_I2C_SetDataNackCallback
 15153 ;;		_I2C_SetTimeoutCallback
 15154 ;; This function uses a non-reentrant model
 15155 ;;
 15156                           
 15157                           	psect	text98
 15158  004E0A                     __ptext98:
 15159                           	callstack 0
 15160  004E0A                     _I2C_SetCallback:
 15161                           	callstack 14
 15162                           
 15163                           ;incstack = 0
 15164                           ;I2C_SetCallback@idx stored from wreg
 15165  004E0A  6E2B               	movwf	I2C_SetCallback@idx^0,c
 15166  004E0C                     
 15167                           ;mcc_generated_files/i2c_master.c: 298: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 299: {;mcc_generate
      +                          d_files/i2c_master.c: 300:     if(cb)
 15168  004E0C  5027               	movf	I2C_SetCallback@cb^0,w,c
 15169  004E0E  1028               	iorwf	(I2C_SetCallback@cb+1)^0,w,c
 15170  004E10  B4D8               	btfsc	status,2,c
 15171  004E12  EF0D  F027         	goto	u8401
 15172  004E16  EF0F  F027         	goto	u8400
 15173  004E1A                     u8401:
 15174  004E1A  EF29  F027         	goto	l10477
 15175  004E1E                     u8400:
 15176  004E1E                     
 15177                           ;mcc_generated_files/i2c_master.c: 301:     {;mcc_generated_files/i2c_master.c: 302:    
      +                               I2C_Status.callbackTable[idx] = cb;
 15178  004E1E  502B               	movf	I2C_SetCallback@idx^0,w,c
 15179  004E20  0D02               	mullw	2
 15180  004E22  0EC8               	movlw	low _I2C_Status
 15181  004E24  24F3               	addwf	243,w,c
 15182  004E26  6ED9               	movwf	fsr2l,c
 15183  004E28  0E00               	movlw	high _I2C_Status
 15184  004E2A  20F4               	addwfc	prodh,w,c
 15185  004E2C  6EDA               	movwf	fsr2h,c
 15186  004E2E  C027  FFDE         	movff	I2C_SetCallback@cb,postinc2
 15187  004E32  C028  FFDD         	movff	I2C_SetCallback@cb+1,postdec2
 15188                           
 15189                           ;mcc_generated_files/i2c_master.c: 303:         I2C_Status.callbackPayload[idx] = ptr;
 15190  004E36  502B               	movf	I2C_SetCallback@idx^0,w,c
 15191  004E38  0D02               	mullw	2
 15192  004E3A  0ED4               	movlw	low (_I2C_Status+12)
 15193  004E3C  24F3               	addwf	243,w,c
 15194  004E3E  6ED9               	movwf	fsr2l,c
 15195  004E40  0E00               	movlw	high (_I2C_Status+12)
 15196  004E42  20F4               	addwfc	prodh,w,c
 15197  004E44  6EDA               	movwf	fsr2h,c
 15198  004E46  C029  FFDE         	movff	I2C_SetCallback@ptr,postinc2
 15199  004E4A  C02A  FFDD         	movff	I2C_SetCallback@ptr+1,postdec2
 15200                           
 15201                           ;mcc_generated_files/i2c_master.c: 304:     }
 15202  004E4E  EF41  F027         	goto	l1206
 15203  004E52                     l10477:
 15204                           
 15205                           ;mcc_generated_files/i2c_master.c: 306:     {;mcc_generated_files/i2c_master.c: 307:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
 15206  004E52  502B               	movf	I2C_SetCallback@idx^0,w,c
 15207  004E54  0D02               	mullw	2
 15208  004E56  0EC8               	movlw	low _I2C_Status
 15209  004E58  24F3               	addwf	243,w,c
 15210  004E5A  6ED9               	movwf	fsr2l,c
 15211  004E5C  0E00               	movlw	high _I2C_Status
 15212  004E5E  20F4               	addwfc	prodh,w,c
 15213  004E60  6EDA               	movwf	fsr2h,c
 15214  004E62  0EEA               	movlw	low _I2C_CallbackReturnStop
 15215  004E64  6EDE               	movwf	postinc2,c
 15216  004E66  0E62               	movlw	high _I2C_CallbackReturnStop
 15217  004E68  6EDD               	movwf	postdec2,c
 15218                           
 15219                           ;mcc_generated_files/i2c_master.c: 308:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
 15220  004E6A  502B               	movf	I2C_SetCallback@idx^0,w,c
 15221  004E6C  0D02               	mullw	2
 15222  004E6E  0ED4               	movlw	low (_I2C_Status+12)
 15223  004E70  24F3               	addwf	243,w,c
 15224  004E72  6ED9               	movwf	fsr2l,c
 15225  004E74  0E00               	movlw	high (_I2C_Status+12)
 15226  004E76  20F4               	addwfc	prodh,w,c
 15227  004E78  6EDA               	movwf	fsr2h,c
 15228  004E7A  0E00               	movlw	0
 15229  004E7C  6EDE               	movwf	postinc2,c
 15230  004E7E  0E00               	movlw	0
 15231  004E80  6EDD               	movwf	postdec2,c
 15232  004E82                     l1206:
 15233  004E82  0012               	return		;funcret
 15234  004E84                     __end_of_I2C_SetCallback:
 15235                           	callstack 0
 15236                           
 15237 ;; *************** function _I2C_SetBuffer *****************
 15238 ;; Defined at:
 15239 ;;		line 263 in file "mcc_generated_files/i2c_master.c"
 15240 ;; Parameters:    Size  Location     Type
 15241 ;;  buffer          2   38[COMRAM] PTR void 
 15242 ;;		 -> I2C_Read1ByteRegister@returnValue.data(3), I2C_Read2ByteRegister@returnValue.data(3), I2C_Write1ByteRegister@dat
      +a.data(3), I2C_Write2ByteRegister@data.data(3), 
 15243 ;;		 -> i2I2C_Write1ByteRegister@data(1), i2I2C_Read1ByteRegister@returnValue(1), I2C_ReadDataBlock@reg(1), I2C_ReadData
      +Block@bufferBlock(4), 
 15244 ;;		 -> bufferBlock.data(3), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1
      +), 
 15245 ;;		 -> I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegister@returnValue(2), I2C_Read1Byt
      +eRegister@reg(1), 
 15246 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 15247 ;;  bufferSize      2   40[COMRAM] unsigned int 
 15248 ;; Auto vars:     Size  Location     Type
 15249 ;;		None
 15250 ;; Return value:  Size  Location     Type
 15251 ;;                  1    wreg      void 
 15252 ;; Registers used:
 15253 ;;		wreg, status,2, status,0
 15254 ;; Tracked objects:
 15255 ;;		On entry : 0/0
 15256 ;;		On exit  : 0/0
 15257 ;;		Unchanged: 0/0
 15258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15259 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15262 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15263 ;;Total ram usage:        4 bytes
 15264 ;; Hardware stack levels used: 1
 15265 ;; Hardware stack levels required when called: 13
 15266 ;; This function calls:
 15267 ;;		Nothing
 15268 ;; This function is called by:
 15269 ;;		_I2C_Read1ByteRegister
 15270 ;;		_I2C_Write1ByteRegister
 15271 ;;		_rd1RegCompleteHandler
 15272 ;;		_rd2RegCompleteHandler
 15273 ;;		_wr1RegCompleteHandler
 15274 ;;		_wr2RegCompleteHandler
 15275 ;;		_rdBlkRegCompleteHandler
 15276 ;;		_I2C_Read2ByteRegister
 15277 ;;		_I2C_Write2ByteRegister
 15278 ;;		_I2C_WriteNBytes
 15279 ;;		_I2C_ReadNBytes
 15280 ;;		_I2C_ReadDataBlock
 15281 ;; This function uses a non-reentrant model
 15282 ;;
 15283                           
 15284                           	psect	text99
 15285  005F84                     __ptext99:
 15286                           	callstack 0
 15287  005F84                     _I2C_SetBuffer:
 15288                           	callstack 15
 15289  005F84                     
 15290                           ;mcc_generated_files/i2c_master.c: 263: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 264: {;mcc_generated_files/i2c_master.c: 265:     
      +                          if(I2C_Status.bufferFree)
 15291  005F84  0100               	movlb	0	; () banked
 15292  005F86  A7EB               	btfss	(_I2C_Status+35)& (0+255),3,b
 15293  005F88  EFC8  F02F         	goto	u8421
 15294  005F8C  EFCA  F02F         	goto	u8420
 15295  005F90                     u8421:
 15296  005F90  EFD3  F02F         	goto	l1186
 15297  005F94                     u8420:
 15298  005F94                     
 15299                           ; BSR set to: 0
 15300                           ;mcc_generated_files/i2c_master.c: 266:     {;mcc_generated_files/i2c_master.c: 267:    
      +                               I2C_Status.data_ptr = buffer;
 15301  005F94  C027  F0E5         	movff	I2C_SetBuffer@buffer,_I2C_Status+29
 15302  005F98  C028  F0E6         	movff	I2C_SetBuffer@buffer+1,_I2C_Status+30
 15303  005F9C                     
 15304                           ; BSR set to: 0
 15305                           ;mcc_generated_files/i2c_master.c: 268:         I2C_Status.data_length = bufferSize;
 15306  005F9C  C029  F0E7         	movff	I2C_SetBuffer@bufferSize,_I2C_Status+31
 15307  005FA0  C02A  F0E8         	movff	I2C_SetBuffer@bufferSize+1,_I2C_Status+32
 15308  005FA4                     
 15309                           ; BSR set to: 0
 15310                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.bufferFree = 0;
 15311  005FA4  97EB               	bcf	(_I2C_Status+35)& (0+255),3,b
 15312  005FA6                     l1186:
 15313                           
 15314                           ; BSR set to: 0
 15315  005FA6  0012               	return		;funcret
 15316  005FA8                     __end_of_I2C_SetBuffer:
 15317                           	callstack 0
 15318                           
 15319 ;; *************** function _I2C_MasterStop *****************
 15320 ;; Defined at:
 15321 ;;		line 593 in file "mcc_generated_files/i2c_master.c"
 15322 ;; Parameters:    Size  Location     Type
 15323 ;;		None
 15324 ;; Auto vars:     Size  Location     Type
 15325 ;;		None
 15326 ;; Return value:  Size  Location     Type
 15327 ;;                  1    wreg      void 
 15328 ;; Registers used:
 15329 ;;		None
 15330 ;; Tracked objects:
 15331 ;;		On entry : 0/0
 15332 ;;		On exit  : 0/0
 15333 ;;		Unchanged: 0/0
 15334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15339 ;;Total ram usage:        0 bytes
 15340 ;; Hardware stack levels used: 1
 15341 ;; Hardware stack levels required when called: 13
 15342 ;; This function calls:
 15343 ;;		Nothing
 15344 ;; This function is called by:
 15345 ;;		_I2C_DO_SEND_STOP
 15346 ;; This function uses a non-reentrant model
 15347 ;;
 15348                           
 15349                           	psect	text100
 15350  0063A6                     __ptext100:
 15351                           	callstack 0
 15352  0063A6                     _I2C_MasterStop:
 15353                           	callstack 9
 15354  0063A6                     
 15355                           ;mcc_generated_files/i2c_master.c: 595:     SSPCON2bits.PEN = 1;
 15356  0063A6  84C5               	bsf	197,2,c	;volatile
 15357  0063A8  0012               	return		;funcret
 15358  0063AA                     __end_of_I2C_MasterStop:
 15359                           	callstack 0
 15360                           
 15361 ;; *************** function _I2C_MasterEnableRestart *****************
 15362 ;; Defined at:
 15363 ;;		line 573 in file "mcc_generated_files/i2c_master.c"
 15364 ;; Parameters:    Size  Location     Type
 15365 ;;		None
 15366 ;; Auto vars:     Size  Location     Type
 15367 ;;		None
 15368 ;; Return value:  Size  Location     Type
 15369 ;;                  1    wreg      void 
 15370 ;; Registers used:
 15371 ;;		None
 15372 ;; Tracked objects:
 15373 ;;		On entry : 0/0
 15374 ;;		On exit  : 0/0
 15375 ;;		Unchanged: 0/0
 15376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15381 ;;Total ram usage:        0 bytes
 15382 ;; Hardware stack levels used: 1
 15383 ;; Hardware stack levels required when called: 13
 15384 ;; This function calls:
 15385 ;;		Nothing
 15386 ;; This function is called by:
 15387 ;;		_I2C_DO_SEND_RESTART_READ
 15388 ;;		_I2C_DO_SEND_RESTART_WRITE
 15389 ;;		_I2C_DO_SEND_RESTART
 15390 ;;		_I2C_DO_RX_EMPTY
 15391 ;; This function uses a non-reentrant model
 15392 ;;
 15393                           
 15394                           	psect	text101
 15395  0063AA                     __ptext101:
 15396                           	callstack 0
 15397  0063AA                     _I2C_MasterEnableRestart:
 15398                           	callstack 9
 15399  0063AA                     
 15400                           ;mcc_generated_files/i2c_master.c: 575:     SSPCON2bits.RSEN = 1;
 15401  0063AA  82C5               	bsf	197,1,c	;volatile
 15402  0063AC  0012               	return		;funcret
 15403  0063AE                     __end_of_I2C_MasterEnableRestart:
 15404                           	callstack 0
 15405                           
 15406 ;; *************** function _I2C_MasterStart *****************
 15407 ;; Defined at:
 15408 ;;		line 588 in file "mcc_generated_files/i2c_master.c"
 15409 ;; Parameters:    Size  Location     Type
 15410 ;;		None
 15411 ;; Auto vars:     Size  Location     Type
 15412 ;;		None
 15413 ;; Return value:  Size  Location     Type
 15414 ;;                  1    wreg      void 
 15415 ;; Registers used:
 15416 ;;		None
 15417 ;; Tracked objects:
 15418 ;;		On entry : 0/0
 15419 ;;		On exit  : 0/0
 15420 ;;		Unchanged: 0/0
 15421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15426 ;;Total ram usage:        0 bytes
 15427 ;; Hardware stack levels used: 1
 15428 ;; Hardware stack levels required when called: 13
 15429 ;; This function calls:
 15430 ;;		Nothing
 15431 ;; This function is called by:
 15432 ;;		_I2C_MasterOperation
 15433 ;; This function uses a non-reentrant model
 15434 ;;
 15435                           
 15436                           	psect	text102
 15437  0063AE                     __ptext102:
 15438                           	callstack 0
 15439  0063AE                     _I2C_MasterStart:
 15440                           	callstack 13
 15441  0063AE                     
 15442                           ;mcc_generated_files/i2c_master.c: 590:     SSPCON2bits.SEN = 1;
 15443  0063AE  80C5               	bsf	197,0,c	;volatile
 15444  0063B0  0012               	return		;funcret
 15445  0063B2                     __end_of_I2C_MasterStart:
 15446                           	callstack 0
 15447                           
 15448 ;; *************** function _I2C_Close *****************
 15449 ;; Defined at:
 15450 ;;		line 209 in file "mcc_generated_files/i2c_master.c"
 15451 ;; Parameters:    Size  Location     Type
 15452 ;;		None
 15453 ;; Auto vars:     Size  Location     Type
 15454 ;;  returnValue     1   38[COMRAM] enum E355
 15455 ;; Return value:  Size  Location     Type
 15456 ;;                  1    wreg      enum E355
 15457 ;; Registers used:
 15458 ;;		wreg, status,2, cstack
 15459 ;; Tracked objects:
 15460 ;;		On entry : 0/0
 15461 ;;		On exit  : 0/0
 15462 ;;		Unchanged: 0/0
 15463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15465 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15467 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15468 ;;Total ram usage:        1 bytes
 15469 ;; Hardware stack levels used: 1
 15470 ;; Hardware stack levels required when called: 14
 15471 ;; This function calls:
 15472 ;;		_I2C_MasterClearIrq
 15473 ;;		_I2C_MasterClose
 15474 ;;		_I2C_MasterDisableIrq
 15475 ;; This function is called by:
 15476 ;;		_I2C_Read1ByteRegister
 15477 ;;		_I2C_Write1ByteRegister
 15478 ;;		_I2C_Read2ByteRegister
 15479 ;;		_I2C_Write2ByteRegister
 15480 ;;		_I2C_WriteNBytes
 15481 ;;		_I2C_ReadNBytes
 15482 ;;		_I2C_ReadDataBlock
 15483 ;; This function uses a non-reentrant model
 15484 ;;
 15485                           
 15486                           	psect	text103
 15487  005DFE                     __ptext103:
 15488                           	callstack 0
 15489  005DFE                     _I2C_Close:
 15490                           	callstack 14
 15491  005DFE                     
 15492                           ;mcc_generated_files/i2c_master.c: 211:     i2c_error_t returnValue = I2C_BUSY;
 15493  005DFE  0E01               	movlw	1
 15494  005E00  6E27               	movwf	I2C_Close@returnValue^0,c
 15495  005E02                     
 15496                           ;mcc_generated_files/i2c_master.c: 212:     if(!I2C_Status.busy)
 15497  005E02  0100               	movlb	0	; () banked
 15498  005E04  B3EB               	btfsc	(_I2C_Status+35)& (0+255),1,b
 15499  005E06  EF07  F02F         	goto	u10371
 15500  005E0A  EF09  F02F         	goto	u10370
 15501  005E0E                     u10371:
 15502  005E0E  EF13  F02F         	goto	l12315
 15503  005E12                     u10370:
 15504  005E12                     
 15505                           ; BSR set to: 0
 15506                           ;mcc_generated_files/i2c_master.c: 213:     {;mcc_generated_files/i2c_master.c: 214:    
      +                               I2C_Status.inUse = 0;
 15507  005E12  95EB               	bcf	(_I2C_Status+35)& (0+255),2,b
 15508                           
 15509                           ;mcc_generated_files/i2c_master.c: 215:         I2C_Status.address = 0xff;
 15510  005E14  69E4               	setf	(_I2C_Status+28)& (0+255),b
 15511  005E16                     
 15512                           ; BSR set to: 0
 15513                           ;mcc_generated_files/i2c_master.c: 216:         I2C_MasterClearIrq();
 15514  005E16  ECDD  F031         	call	_I2C_MasterClearIrq	;wreg free
 15515                           
 15516                           ;mcc_generated_files/i2c_master.c: 217:         I2C_MasterDisableIrq();
 15517  005E1A  ECD9  F031         	call	_I2C_MasterDisableIrq	;wreg free
 15518                           
 15519                           ;mcc_generated_files/i2c_master.c: 218:         I2C_MasterClose();
 15520  005E1E  ECDB  F031         	call	_I2C_MasterClose	;wreg free
 15521  005E22                     
 15522                           ;mcc_generated_files/i2c_master.c: 219:         returnValue = I2C_Status.error;
 15523  005E22  C0EA  F027         	movff	_I2C_Status+34,I2C_Close@returnValue
 15524  005E26                     l12315:
 15525                           
 15526                           ;mcc_generated_files/i2c_master.c: 221:     return returnValue;
 15527  005E26  5027               	movf	I2C_Close@returnValue^0,w,c
 15528  005E28  0012               	return		;funcret
 15529  005E2A                     __end_of_I2C_Close:
 15530                           	callstack 0
 15531                           
 15532 ;; *************** function _I2C_MasterDisableIrq *****************
 15533 ;; Defined at:
 15534 ;;		line 635 in file "mcc_generated_files/i2c_master.c"
 15535 ;; Parameters:    Size  Location     Type
 15536 ;;		None
 15537 ;; Auto vars:     Size  Location     Type
 15538 ;;		None
 15539 ;; Return value:  Size  Location     Type
 15540 ;;                  1    wreg      void 
 15541 ;; Registers used:
 15542 ;;		None
 15543 ;; Tracked objects:
 15544 ;;		On entry : 0/0
 15545 ;;		On exit  : 0/0
 15546 ;;		Unchanged: 0/0
 15547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15552 ;;Total ram usage:        0 bytes
 15553 ;; Hardware stack levels used: 1
 15554 ;; Hardware stack levels required when called: 13
 15555 ;; This function calls:
 15556 ;;		Nothing
 15557 ;; This function is called by:
 15558 ;;		_I2C_Close
 15559 ;;		_I2C_SetTimeOut
 15560 ;; This function uses a non-reentrant model
 15561 ;;
 15562                           
 15563                           	psect	text104
 15564  0063B2                     __ptext104:
 15565                           	callstack 0
 15566  0063B2                     _I2C_MasterDisableIrq:
 15567                           	callstack 14
 15568  0063B2                     
 15569                           ;mcc_generated_files/i2c_master.c: 637:     PIE1bits.SSPIE = 0;
 15570  0063B2  969D               	bcf	157,3,c	;volatile
 15571  0063B4  0012               	return		;funcret
 15572  0063B6                     __end_of_I2C_MasterDisableIrq:
 15573                           	callstack 0
 15574                           
 15575 ;; *************** function _I2C_MasterClose *****************
 15576 ;; Defined at:
 15577 ;;		line 557 in file "mcc_generated_files/i2c_master.c"
 15578 ;; Parameters:    Size  Location     Type
 15579 ;;		None
 15580 ;; Auto vars:     Size  Location     Type
 15581 ;;		None
 15582 ;; Return value:  Size  Location     Type
 15583 ;;                  1    wreg      void 
 15584 ;; Registers used:
 15585 ;;		None
 15586 ;; Tracked objects:
 15587 ;;		On entry : 0/0
 15588 ;;		On exit  : 0/0
 15589 ;;		Unchanged: 0/0
 15590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15595 ;;Total ram usage:        0 bytes
 15596 ;; Hardware stack levels used: 1
 15597 ;; Hardware stack levels required when called: 13
 15598 ;; This function calls:
 15599 ;;		Nothing
 15600 ;; This function is called by:
 15601 ;;		_I2C_Close
 15602 ;; This function uses a non-reentrant model
 15603 ;;
 15604                           
 15605                           	psect	text105
 15606  0063B6                     __ptext105:
 15607                           	callstack 0
 15608  0063B6                     _I2C_MasterClose:
 15609                           	callstack 14
 15610  0063B6                     
 15611                           ;mcc_generated_files/i2c_master.c: 560:     SSPCON1bits.SSPEN = 0;
 15612  0063B6  9AC6               	bcf	198,5,c	;volatile
 15613  0063B8  0012               	return		;funcret
 15614  0063BA                     __end_of_I2C_MasterClose:
 15615                           	callstack 0
 15616                           
 15617 ;; *************** function _I2C_MasterClearIrq *****************
 15618 ;; Defined at:
 15619 ;;		line 640 in file "mcc_generated_files/i2c_master.c"
 15620 ;; Parameters:    Size  Location     Type
 15621 ;;		None
 15622 ;; Auto vars:     Size  Location     Type
 15623 ;;		None
 15624 ;; Return value:  Size  Location     Type
 15625 ;;                  1    wreg      void 
 15626 ;; Registers used:
 15627 ;;		None
 15628 ;; Tracked objects:
 15629 ;;		On entry : 0/0
 15630 ;;		On exit  : 0/0
 15631 ;;		Unchanged: 0/0
 15632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15637 ;;Total ram usage:        0 bytes
 15638 ;; Hardware stack levels used: 1
 15639 ;; Hardware stack levels required when called: 13
 15640 ;; This function calls:
 15641 ;;		Nothing
 15642 ;; This function is called by:
 15643 ;;		_I2C_Open
 15644 ;;		_I2C_Close
 15645 ;;		_I2C_MasterFsm
 15646 ;; This function uses a non-reentrant model
 15647 ;;
 15648                           
 15649                           	psect	text106
 15650  0063BA                     __ptext106:
 15651                           	callstack 0
 15652  0063BA                     _I2C_MasterClearIrq:
 15653                           	callstack 14
 15654  0063BA                     
 15655                           ;mcc_generated_files/i2c_master.c: 642:     PIR1bits.SSPIF = 0;
 15656  0063BA  969E               	bcf	158,3,c	;volatile
 15657  0063BC  0012               	return		;funcret
 15658  0063BE                     __end_of_I2C_MasterClearIrq:
 15659                           	callstack 0
 15660                           
 15661 ;; *************** function _ADC_StartConversion_Interrupt *****************
 15662 ;; Defined at:
 15663 ;;		line 257 in file "MCAL/ADC/adc.c"
 15664 ;; Parameters:    Size  Location     Type
 15665 ;;  _adc            2    0[BANK0 ] PTR const struct .
 15666 ;;		 -> adc(7), 
 15667 ;;  channel         1    2[BANK0 ] enum E3034
 15668 ;; Auto vars:     Size  Location     Type
 15669 ;;  ret             1   46[COMRAM] unsigned char 
 15670 ;; Return value:  Size  Location     Type
 15671 ;;                  1    wreg      unsigned char 
 15672 ;; Registers used:
 15673 ;;		wreg, status,2, status,0, cstack
 15674 ;; Tracked objects:
 15675 ;;		On entry : 0/0
 15676 ;;		On exit  : 0/0
 15677 ;;		Unchanged: 0/0
 15678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15679 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15680 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15682 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15683 ;;Total ram usage:        4 bytes
 15684 ;; Hardware stack levels used: 1
 15685 ;; Hardware stack levels required when called: 15
 15686 ;; This function calls:
 15687 ;;		_ADC_SelectChannel
 15688 ;;		_ADC_StartConversion
 15689 ;; This function is called by:
 15690 ;;		_main
 15691 ;; This function uses a non-reentrant model
 15692 ;;
 15693                           
 15694                           	psect	text107
 15695  005B02                     __ptext107:
 15696                           	callstack 0
 15697  005B02                     _ADC_StartConversion_Interrupt:
 15698                           	callstack 15
 15699  005B02                     
 15700                           ;MCAL/ADC/adc.c: 260:     if(((void*)0)==_adc){
 15701  005B02  0100               	movlb	0	; () banked
 15702  005B04  5180               	movf	ADC_StartConversion_Interrupt@_adc& (0+255),w,b
 15703  005B06  1181               	iorwf	(ADC_StartConversion_Interrupt@_adc+1)& (0+255),w,b
 15704  005B08  A4D8               	btfss	status,2,c
 15705  005B0A  EF89  F02D         	goto	u10661
 15706  005B0E  EF8B  F02D         	goto	u10660
 15707  005B12                     u10661:
 15708  005B12  EF8D  F02D         	goto	l12577
 15709  005B16                     u10660:
 15710  005B16                     
 15711                           ; BSR set to: 0
 15712                           ;MCAL/ADC/adc.c: 262:     }
 15713  005B16  EF9D  F02D         	goto	l330
 15714  005B1A                     l12577:
 15715                           
 15716                           ; BSR set to: 0
 15717                           ;MCAL/ADC/adc.c: 264:         ret=ADC_SelectChannel(_adc,channel);
 15718  005B1A  C080  F02A         	movff	ADC_StartConversion_Interrupt@_adc,ADC_SelectChannel@_adc
 15719  005B1E  C081  F02B         	movff	ADC_StartConversion_Interrupt@_adc+1,ADC_SelectChannel@_adc+1
 15720  005B22  C082  F02C         	movff	ADC_StartConversion_Interrupt@channel,ADC_SelectChannel@channel
 15721  005B26  EC9E  F02D         	call	_ADC_SelectChannel	;wreg free
 15722  005B2A  6E2F               	movwf	ADC_StartConversion_Interrupt@ret^0,c
 15723                           
 15724                           ;MCAL/ADC/adc.c: 265:         ret=ADC_StartConversion(_adc);
 15725  005B2C  C080  F027         	movff	ADC_StartConversion_Interrupt@_adc,ADC_StartConversion@_adc
 15726  005B30  C081  F028         	movff	ADC_StartConversion_Interrupt@_adc+1,ADC_StartConversion@_adc+1
 15727  005B34  ECD4  F02F         	call	_ADC_StartConversion	;wreg free
 15728  005B38  6E2F               	movwf	ADC_StartConversion_Interrupt@ret^0,c
 15729  005B3A                     l330:
 15730  005B3A  0012               	return		;funcret
 15731  005B3C                     __end_of_ADC_StartConversion_Interrupt:
 15732                           	callstack 0
 15733                           
 15734 ;; *************** function _ADC_StartConversion *****************
 15735 ;; Defined at:
 15736 ;;		line 139 in file "MCAL/ADC/adc.c"
 15737 ;; Parameters:    Size  Location     Type
 15738 ;;  _adc            2   38[COMRAM] PTR const struct .
 15739 ;;		 -> adc(7), 
 15740 ;; Auto vars:     Size  Location     Type
 15741 ;;  ret             1   40[COMRAM] unsigned char 
 15742 ;; Return value:  Size  Location     Type
 15743 ;;                  1    wreg      unsigned char 
 15744 ;; Registers used:
 15745 ;;		wreg, status,2, status,0
 15746 ;; Tracked objects:
 15747 ;;		On entry : 0/0
 15748 ;;		On exit  : 0/0
 15749 ;;		Unchanged: 0/0
 15750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15751 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15752 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15754 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15755 ;;Total ram usage:        3 bytes
 15756 ;; Hardware stack levels used: 1
 15757 ;; Hardware stack levels required when called: 13
 15758 ;; This function calls:
 15759 ;;		Nothing
 15760 ;; This function is called by:
 15761 ;;		_ADC_StartConversion_Interrupt
 15762 ;;		_ADC_GetConversion_Blocking
 15763 ;; This function uses a non-reentrant model
 15764 ;;
 15765                           
 15766                           	psect	text108
 15767  005FA8                     __ptext108:
 15768                           	callstack 0
 15769  005FA8                     _ADC_StartConversion:
 15770                           	callstack 16
 15771  005FA8                     
 15772                           ;MCAL/ADC/adc.c: 142:     if(((void*)0)==_adc){
 15773  005FA8  5027               	movf	ADC_StartConversion@_adc^0,w,c
 15774  005FAA  1028               	iorwf	(ADC_StartConversion@_adc+1)^0,w,c
 15775  005FAC  A4D8               	btfss	status,2,c
 15776  005FAE  EFDB  F02F         	goto	u6861
 15777  005FB2  EFDD  F02F         	goto	u6860
 15778  005FB6                     u6861:
 15779  005FB6  EFE1  F02F         	goto	l296
 15780  005FBA                     u6860:
 15781  005FBA                     
 15782                           ;MCAL/ADC/adc.c: 143:         ret=(Std_ReturnType)0x00;
 15783  005FBA  0E00               	movlw	0
 15784  005FBC  6E29               	movwf	ADC_StartConversion@ret^0,c
 15785                           
 15786                           ;MCAL/ADC/adc.c: 144:     }
 15787  005FBE  EFE4  F02F         	goto	l297
 15788  005FC2                     l296:
 15789                           
 15790                           ;MCAL/ADC/adc.c: 146:         (ADCON0bits.GODONE = 1);
 15791  005FC2  82C2               	bsf	194,1,c	;volatile
 15792  005FC4                     
 15793                           ;MCAL/ADC/adc.c: 147:         ret=(Std_ReturnType)0x01;
 15794  005FC4  0E01               	movlw	1
 15795  005FC6  6E29               	movwf	ADC_StartConversion@ret^0,c
 15796  005FC8                     l297:
 15797                           
 15798                           ;MCAL/ADC/adc.c: 150:     return ret;
 15799  005FC8  5029               	movf	ADC_StartConversion@ret^0,w,c
 15800  005FCA  0012               	return		;funcret
 15801  005FCC                     __end_of_ADC_StartConversion:
 15802                           	callstack 0
 15803                           
 15804 ;; *************** function _ADC_SelectChannel *****************
 15805 ;; Defined at:
 15806 ;;		line 114 in file "MCAL/ADC/adc.c"
 15807 ;; Parameters:    Size  Location     Type
 15808 ;;  _adc            2   41[COMRAM] PTR const struct .
 15809 ;;		 -> adc(7), 
 15810 ;;  channel         1   43[COMRAM] enum E3034
 15811 ;; Auto vars:     Size  Location     Type
 15812 ;;  ret             1   45[COMRAM] unsigned char 
 15813 ;; Return value:  Size  Location     Type
 15814 ;;                  1    wreg      unsigned char 
 15815 ;; Registers used:
 15816 ;;		wreg, status,2, status,0, cstack
 15817 ;; Tracked objects:
 15818 ;;		On entry : 0/0
 15819 ;;		On exit  : 0/0
 15820 ;;		Unchanged: 0/0
 15821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15822 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15823 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15824 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15825 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15826 ;;Total ram usage:        5 bytes
 15827 ;; Hardware stack levels used: 1
 15828 ;; Hardware stack levels required when called: 14
 15829 ;; This function calls:
 15830 ;;		_adc_input_channel_port_configure
 15831 ;; This function is called by:
 15832 ;;		_ADC_StartConversion_Interrupt
 15833 ;;		_ADC_GetConversion_Blocking
 15834 ;; This function uses a non-reentrant model
 15835 ;;
 15836                           
 15837                           	psect	text109
 15838  005B3C                     __ptext109:
 15839                           	callstack 0
 15840  005B3C                     _ADC_SelectChannel:
 15841                           	callstack 15
 15842  005B3C                     
 15843                           ;MCAL/ADC/adc.c: 117:     if(((void*)0)==_adc){
 15844  005B3C  502A               	movf	ADC_SelectChannel@_adc^0,w,c
 15845  005B3E  102B               	iorwf	(ADC_SelectChannel@_adc+1)^0,w,c
 15846  005B40  A4D8               	btfss	status,2,c
 15847  005B42  EFA5  F02D         	goto	u6851
 15848  005B46  EFA7  F02D         	goto	u6850
 15849  005B4A                     u6851:
 15850  005B4A  EFAB  F02D         	goto	l8857
 15851  005B4E                     u6850:
 15852  005B4E                     
 15853                           ;MCAL/ADC/adc.c: 118:         ret=(Std_ReturnType)0x00;
 15854  005B4E  0E00               	movlw	0
 15855  005B50  6E2E               	movwf	ADC_SelectChannel@ret^0,c
 15856                           
 15857                           ;MCAL/ADC/adc.c: 119:     }
 15858  005B52  EFB9  F02D         	goto	l8863
 15859  005B56                     l8857:
 15860                           
 15861                           ;MCAL/ADC/adc.c: 121:         ADCON0bits.CHS=channel;
 15862  005B56  C02C  F02D         	movff	ADC_SelectChannel@channel,??_ADC_SelectChannel
 15863  005B5A  462D               	rlncf	??_ADC_SelectChannel^0,f,c
 15864  005B5C  462D               	rlncf	??_ADC_SelectChannel^0,f,c
 15865  005B5E  50C2               	movf	194,w,c	;volatile
 15866  005B60  182D               	xorwf	??_ADC_SelectChannel^0,w,c
 15867  005B62  0BC3               	andlw	-61
 15868  005B64  182D               	xorwf	??_ADC_SelectChannel^0,w,c
 15869  005B66  6EC2               	movwf	194,c	;volatile
 15870  005B68                     
 15871                           ;MCAL/ADC/adc.c: 122:         adc_input_channel_port_configure(channel);
 15872  005B68  502C               	movf	ADC_SelectChannel@channel^0,w,c
 15873  005B6A  EC4D  F01E         	call	_adc_input_channel_port_configure
 15874  005B6E                     
 15875                           ;MCAL/ADC/adc.c: 123:         ret=(Std_ReturnType)0x01;
 15876  005B6E  0E01               	movlw	1
 15877  005B70  6E2E               	movwf	ADC_SelectChannel@ret^0,c
 15878  005B72                     l8863:
 15879                           
 15880                           ;MCAL/ADC/adc.c: 126:     return ret;
 15881  005B72  502E               	movf	ADC_SelectChannel@ret^0,w,c
 15882  005B74  0012               	return		;funcret
 15883  005B76                     __end_of_ADC_SelectChannel:
 15884                           	callstack 0
 15885                           
 15886 ;; *************** function _adc_input_channel_port_configure *****************
 15887 ;; Defined at:
 15888 ;;		line 276 in file "MCAL/ADC/adc.c"
 15889 ;; Parameters:    Size  Location     Type
 15890 ;;  channel         1    wreg     enum E3034
 15891 ;; Auto vars:     Size  Location     Type
 15892 ;;  channel         1   40[COMRAM] enum E3034
 15893 ;; Return value:  Size  Location     Type
 15894 ;;                  1    wreg      void 
 15895 ;; Registers used:
 15896 ;;		wreg, status,2, status,0
 15897 ;; Tracked objects:
 15898 ;;		On entry : 0/0
 15899 ;;		On exit  : 0/0
 15900 ;;		Unchanged: 0/0
 15901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15903 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15904 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15905 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15906 ;;Total ram usage:        3 bytes
 15907 ;; Hardware stack levels used: 1
 15908 ;; Hardware stack levels required when called: 13
 15909 ;; This function calls:
 15910 ;;		Nothing
 15911 ;; This function is called by:
 15912 ;;		_ADC_Init
 15913 ;;		_ADC_SelectChannel
 15914 ;; This function uses a non-reentrant model
 15915 ;;
 15916                           
 15917                           	psect	text110
 15918  003C9A                     __ptext110:
 15919                           	callstack 0
 15920  003C9A                     _adc_input_channel_port_configure:
 15921                           	callstack 15
 15922                           
 15923                           ;incstack = 0
 15924                           ;adc_input_channel_port_configure@channel stored from wreg
 15925  003C9A  6E29               	movwf	adc_input_channel_port_configure@channel^0,c
 15926  003C9C                     
 15927                           ;MCAL/ADC/adc.c: 278:     switch(channel){
 15928  003C9C  EF77  F01E         	goto	l8331
 15929  003CA0                     l8305:
 15930  003CA0  8092               	bsf	146,0,c	;volatile
 15931  003CA2  EFB8  F01E         	goto	l349
 15932  003CA6                     l8307:
 15933  003CA6  8292               	bsf	146,1,c	;volatile
 15934  003CA8  EFB8  F01E         	goto	l349
 15935  003CAC                     l8309:
 15936  003CAC  8492               	bsf	146,2,c	;volatile
 15937  003CAE  EFB8  F01E         	goto	l349
 15938  003CB2                     l8311:
 15939  003CB2  8692               	bsf	146,3,c	;volatile
 15940  003CB4  EFB8  F01E         	goto	l349
 15941  003CB8                     l8313:
 15942  003CB8  8A92               	bsf	146,5,c	;volatile
 15943  003CBA  EFB8  F01E         	goto	l349
 15944  003CBE                     l8315:
 15945  003CBE  8096               	bsf	150,0,c	;volatile
 15946  003CC0  EFB8  F01E         	goto	l349
 15947  003CC4                     l8317:
 15948  003CC4  8296               	bsf	150,1,c	;volatile
 15949  003CC6  EFB8  F01E         	goto	l349
 15950  003CCA                     l8319:
 15951  003CCA  8496               	bsf	150,2,c	;volatile
 15952  003CCC  EFB8  F01E         	goto	l349
 15953  003CD0                     l8321:
 15954  003CD0  8493               	bsf	147,2,c	;volatile
 15955  003CD2  EFB8  F01E         	goto	l349
 15956  003CD6                     l8323:
 15957  003CD6  8693               	bsf	147,3,c	;volatile
 15958  003CD8  EFB8  F01E         	goto	l349
 15959  003CDC                     l8325:
 15960  003CDC  8293               	bsf	147,1,c	;volatile
 15961  003CDE  EFB8  F01E         	goto	l349
 15962  003CE2                     l8327:
 15963  003CE2  8893               	bsf	147,4,c	;volatile
 15964  003CE4  EFB8  F01E         	goto	l349
 15965  003CE8                     l8329:
 15966  003CE8  8093               	bsf	147,0,c	;volatile
 15967  003CEA  EFB8  F01E         	goto	l349
 15968  003CEE                     l8331:
 15969  003CEE  5029               	movf	adc_input_channel_port_configure@channel^0,w,c
 15970  003CF0  6E27               	movwf	??_adc_input_channel_port_configure^0,c
 15971  003CF2  6A28               	clrf	(??_adc_input_channel_port_configure+1)^0,c
 15972                           
 15973                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15974                           ; Switch size 1, requested type "simple"
 15975                           ; Number of cases is 1, Range of values is 0 to 0
 15976                           ; switch strategies available:
 15977                           ; Name         Instructions Cycles
 15978                           ; simple_byte            4     3 (average)
 15979                           ;	Chosen strategy is simple_byte
 15980  003CF4  5028               	movf	(??_adc_input_channel_port_configure+1)^0,w,c
 15981  003CF6  0A00               	xorlw	0	; case 0
 15982  003CF8  B4D8               	btfsc	status,2,c
 15983  003CFA  EF81  F01E         	goto	l13673
 15984  003CFE  EFB8  F01E         	goto	l349
 15985  003D02                     l13673:
 15986                           
 15987                           ; Switch size 1, requested type "simple"
 15988                           ; Number of cases is 13, Range of values is 0 to 12
 15989                           ; switch strategies available:
 15990                           ; Name         Instructions Cycles
 15991                           ; simple_byte           40    21 (average)
 15992                           ;	Chosen strategy is simple_byte
 15993  003D02  5027               	movf	??_adc_input_channel_port_configure^0,w,c
 15994  003D04  0A00               	xorlw	0	; case 0
 15995  003D06  B4D8               	btfsc	status,2,c
 15996  003D08  EF50  F01E         	goto	l8305
 15997  003D0C  0A01               	xorlw	1	; case 1
 15998  003D0E  B4D8               	btfsc	status,2,c
 15999  003D10  EF53  F01E         	goto	l8307
 16000  003D14  0A03               	xorlw	3	; case 2
 16001  003D16  B4D8               	btfsc	status,2,c
 16002  003D18  EF56  F01E         	goto	l8309
 16003  003D1C  0A01               	xorlw	1	; case 3
 16004  003D1E  B4D8               	btfsc	status,2,c
 16005  003D20  EF59  F01E         	goto	l8311
 16006  003D24  0A07               	xorlw	7	; case 4
 16007  003D26  B4D8               	btfsc	status,2,c
 16008  003D28  EF5C  F01E         	goto	l8313
 16009  003D2C  0A01               	xorlw	1	; case 5
 16010  003D2E  B4D8               	btfsc	status,2,c
 16011  003D30  EF5F  F01E         	goto	l8315
 16012  003D34  0A03               	xorlw	3	; case 6
 16013  003D36  B4D8               	btfsc	status,2,c
 16014  003D38  EF62  F01E         	goto	l8317
 16015  003D3C  0A01               	xorlw	1	; case 7
 16016  003D3E  B4D8               	btfsc	status,2,c
 16017  003D40  EF65  F01E         	goto	l8319
 16018  003D44  0A0F               	xorlw	15	; case 8
 16019  003D46  B4D8               	btfsc	status,2,c
 16020  003D48  EF68  F01E         	goto	l8321
 16021  003D4C  0A01               	xorlw	1	; case 9
 16022  003D4E  B4D8               	btfsc	status,2,c
 16023  003D50  EF6B  F01E         	goto	l8323
 16024  003D54  0A03               	xorlw	3	; case 10
 16025  003D56  B4D8               	btfsc	status,2,c
 16026  003D58  EF6E  F01E         	goto	l8325
 16027  003D5C  0A01               	xorlw	1	; case 11
 16028  003D5E  B4D8               	btfsc	status,2,c
 16029  003D60  EF71  F01E         	goto	l8327
 16030  003D64  0A07               	xorlw	7	; case 12
 16031  003D66  B4D8               	btfsc	status,2,c
 16032  003D68  EF74  F01E         	goto	l8329
 16033  003D6C  EFB8  F01E         	goto	l349
 16034  003D70                     l349:
 16035  003D70  0012               	return		;funcret
 16036  003D72                     __end_of_adc_input_channel_port_configure:
 16037                           	callstack 0
 16038                           
 16039 ;; *************** function _InterruptManager *****************
 16040 ;; Defined at:
 16041 ;;		line 91 in file "MCAL/INTERRUPT/mcall_interrupt_manager.c"
 16042 ;; Parameters:    Size  Location     Type
 16043 ;;		None
 16044 ;; Auto vars:     Size  Location     Type
 16045 ;;		None
 16046 ;; Return value:  Size  Location     Type
 16047 ;;                  1    wreg      void 
 16048 ;; Registers used:
 16049 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16050 ;; Tracked objects:
 16051 ;;		On entry : 0/0
 16052 ;;		On exit  : 0/0
 16053 ;;		Unchanged: 0/0
 16054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16057 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16058 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16059 ;;Total ram usage:       12 bytes
 16060 ;; Hardware stack levels used: 1
 16061 ;; Hardware stack levels required when called: 12
 16062 ;; This function calls:
 16063 ;;		_ADC_ISR
 16064 ;;		_EUSART_RX_ISR
 16065 ;;		_EUSART_TX_ISR
 16066 ;;		_INT0_ISR
 16067 ;;		_INT1_ISR
 16068 ;;		_INT2_ISR
 16069 ;;		_RB4_ISR
 16070 ;;		_RB5_ISR
 16071 ;;		_RB6_ISR
 16072 ;;		_RB7_ISR
 16073 ;; This function is called by:
 16074 ;;		Interrupt level 2
 16075 ;; This function uses a non-reentrant model
 16076 ;;
 16077                           
 16078                           	psect	intcode
 16079  000008                     __pintcode:
 16080                           	callstack 0
 16081  000008                     _InterruptManager:
 16082                           	callstack 8
 16083                           
 16084                           ;incstack = 0
 16085  000008  8259               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 16086  00000A  ED29  F012         	call	int_func,f	;refresh shadow registers
 16087                           
 16088                           	psect	intcode_body
 16089  002452                     __pintcode_body:
 16090                           	callstack 8
 16091  002452                     int_func:
 16092                           	callstack 8
 16093  002452  0006               	pop		; remove dummy address from shadow register refresh
 16094  002454  CFFA F01B          	movff	pclath,??_InterruptManager
 16095  002458  CFFB F01C          	movff	pclatu,??_InterruptManager+1
 16096  00245C  CFE9 F01D          	movff	fsr0l,??_InterruptManager+2
 16097  002460  CFEA F01E          	movff	fsr0h,??_InterruptManager+3
 16098  002464  CFD9 F01F          	movff	fsr2l,??_InterruptManager+4
 16099  002468  CFDA F020          	movff	fsr2h,??_InterruptManager+5
 16100  00246C  CFF3 F021          	movff	prodl,??_InterruptManager+6
 16101  002470  CFF4 F022          	movff	prodh,??_InterruptManager+7
 16102  002474  CFF6 F023          	movff	tblptrl,??_InterruptManager+8
 16103  002478  CFF7 F024          	movff	tblptrh,??_InterruptManager+9
 16104  00247C  CFF8 F025          	movff	tblptru,??_InterruptManager+10
 16105  002480  CFF5 F026          	movff	tablat,??_InterruptManager+11
 16106  002484                     
 16107                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 93:     if((1 == INTCONbits.INT0IE) && (1 == 
      +                          INTCONbits.INT0IF)){
 16108  002484  A8F2               	btfss	242,4,c	;volatile
 16109  002486  EF47  F012         	goto	i2u1089_41
 16110  00248A  EF49  F012         	goto	i2u1089_40
 16111  00248E                     i2u1089_41:
 16112  00248E  EF52  F012         	goto	i2l12763
 16113  002492                     i2u1089_40:
 16114  002492  A2F2               	btfss	242,1,c	;volatile
 16115  002494  EF4E  F012         	goto	i2u1090_41
 16116  002498  EF50  F012         	goto	i2u1090_40
 16117  00249C                     i2u1090_41:
 16118  00249C  EF52  F012         	goto	i2l12763
 16119  0024A0                     i2u1090_40:
 16120  0024A0                     
 16121                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 94:         INT0_ISR();
 16122  0024A0  ECBB  F02E         	call	_INT0_ISR	;wreg free
 16123  0024A4                     i2l12763:
 16124                           
 16125                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 96:     if((1 == INTCON3bits.INT1E) && (1 == 
      +                          INTCON3bits.INT1F)){
 16126  0024A4  A6F0               	btfss	240,3,c	;volatile
 16127  0024A6  EF57  F012         	goto	i2u1091_41
 16128  0024AA  EF59  F012         	goto	i2u1091_40
 16129  0024AE                     i2u1091_41:
 16130  0024AE  EF62  F012         	goto	i2l12769
 16131  0024B2                     i2u1091_40:
 16132  0024B2  A0F0               	btfss	240,0,c	;volatile
 16133  0024B4  EF5E  F012         	goto	i2u1092_41
 16134  0024B8  EF60  F012         	goto	i2u1092_40
 16135  0024BC                     i2u1092_41:
 16136  0024BC  EF62  F012         	goto	i2l12769
 16137  0024C0                     i2u1092_40:
 16138  0024C0                     
 16139                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 97:         INT1_ISR();
 16140  0024C0  ECA4  F02E         	call	_INT1_ISR	;wreg free
 16141  0024C4                     i2l12769:
 16142                           
 16143                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 99:     if((1 == INTCON3bits.INT2IE) && (1 ==
      +                           INTCON3bits.INT2IF)){
 16144  0024C4  A8F0               	btfss	240,4,c	;volatile
 16145  0024C6  EF67  F012         	goto	i2u1093_41
 16146  0024CA  EF69  F012         	goto	i2u1093_40
 16147  0024CE                     i2u1093_41:
 16148  0024CE  EF72  F012         	goto	i2l12775
 16149  0024D2                     i2u1093_40:
 16150  0024D2  A2F0               	btfss	240,1,c	;volatile
 16151  0024D4  EF6E  F012         	goto	i2u1094_41
 16152  0024D8  EF70  F012         	goto	i2u1094_40
 16153  0024DC                     i2u1094_41:
 16154  0024DC  EF72  F012         	goto	i2l12775
 16155  0024E0                     i2u1094_40:
 16156  0024E0                     
 16157                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 100:         INT2_ISR();
 16158  0024E0  EC74  F02E         	call	_INT2_ISR	;wreg free
 16159  0024E4                     i2l12775:
 16160                           
 16161                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 105:     if((1 == INTCONbits.RBIE) && (1 == I
      +                          NTCONbits.RBIF) &&
 16162  0024E4  A6F2               	btfss	242,3,c	;volatile
 16163  0024E6  EF77  F012         	goto	i2u1095_41
 16164  0024EA  EF79  F012         	goto	i2u1095_40
 16165  0024EE                     i2u1095_41:
 16166  0024EE  EF94  F012         	goto	i2l12787
 16167  0024F2                     i2u1095_40:
 16168  0024F2  A0F2               	btfss	242,0,c	;volatile
 16169  0024F4  EF7E  F012         	goto	i2u1096_41
 16170  0024F8  EF80  F012         	goto	i2u1096_40
 16171  0024FC                     i2u1096_41:
 16172  0024FC  EF94  F012         	goto	i2l12787
 16173  002500                     i2u1096_40:
 16174  002500  A881               	btfss	129,4,c	;volatile
 16175  002502  EF85  F012         	goto	i2u1097_41
 16176  002506  EF87  F012         	goto	i2u1097_40
 16177  00250A                     i2u1097_41:
 16178  00250A  EF94  F012         	goto	i2l12787
 16179  00250E                     i2u1097_40:
 16180  00250E  044E               	decf	_RB4_Flag^0,w,c	;volatile
 16181  002510  A4D8               	btfss	status,2,c
 16182  002512  EF8D  F012         	goto	i2u1098_41
 16183  002516  EF8F  F012         	goto	i2u1098_40
 16184  00251A                     i2u1098_41:
 16185  00251A  EF94  F012         	goto	i2l12787
 16186  00251E                     i2u1098_40:
 16187  00251E                     
 16188                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 106:        (PORTBbits.RB4 == HIGH) && (RB4_F
      +                          lag == 1)){;MCAL/INTERRUPT/mcall_interrupt_manager.c: 107:         RB4_Flag = 0;
 16189  00251E  0E00               	movlw	0
 16190  002520  6E4E               	movwf	_RB4_Flag^0,c	;volatile
 16191  002522                     
 16192                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 108:         RB4_ISR(0);
 16193  002522  0E00               	movlw	0
 16194  002524  EC88  F030         	call	_RB4_ISR
 16195  002528                     i2l12787:
 16196                           
 16197                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 110:     if((1 == INTCONbits.RBIE) && (1 == I
      +                          NTCONbits.RBIF) &&
 16198  002528  A6F2               	btfss	242,3,c	;volatile
 16199  00252A  EF99  F012         	goto	i2u1099_41
 16200  00252E  EF9B  F012         	goto	i2u1099_40
 16201  002532                     i2u1099_41:
 16202  002532  EFB6  F012         	goto	i2l12799
 16203  002536                     i2u1099_40:
 16204  002536  A0F2               	btfss	242,0,c	;volatile
 16205  002538  EFA0  F012         	goto	i2u1100_41
 16206  00253C  EFA2  F012         	goto	i2u1100_40
 16207  002540                     i2u1100_41:
 16208  002540  EFB6  F012         	goto	i2l12799
 16209  002544                     i2u1100_40:
 16210  002544  B881               	btfsc	129,4,c	;volatile
 16211  002546  EFA7  F012         	goto	i2u1101_41
 16212  00254A  EFA9  F012         	goto	i2u1101_40
 16213  00254E                     i2u1101_41:
 16214  00254E  EFB6  F012         	goto	i2l12799
 16215  002552                     i2u1101_40:
 16216  002552  504E               	movf	_RB4_Flag^0,w,c	;volatile
 16217  002554  A4D8               	btfss	status,2,c
 16218  002556  EFAF  F012         	goto	i2u1102_41
 16219  00255A  EFB1  F012         	goto	i2u1102_40
 16220  00255E                     i2u1102_41:
 16221  00255E  EFB6  F012         	goto	i2l12799
 16222  002562                     i2u1102_40:
 16223  002562                     
 16224                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 111:        (PORTBbits.RB4 == LOW) && (RB4_Fl
      +                          ag == 0)){;MCAL/INTERRUPT/mcall_interrupt_manager.c: 112:         RB4_Flag = 1;
 16225  002562  0E01               	movlw	1
 16226  002564  6E4E               	movwf	_RB4_Flag^0,c	;volatile
 16227  002566                     
 16228                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 113:         RB4_ISR(1);
 16229  002566  0E01               	movlw	1
 16230  002568  EC88  F030         	call	_RB4_ISR
 16231  00256C                     i2l12799:
 16232                           
 16233                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 115:     if((1 == INTCONbits.RBIE) && (1 == I
      +                          NTCONbits.RBIF) &&
 16234  00256C  A6F2               	btfss	242,3,c	;volatile
 16235  00256E  EFBB  F012         	goto	i2u1103_41
 16236  002572  EFBD  F012         	goto	i2u1103_40
 16237  002576                     i2u1103_41:
 16238  002576  EFD8  F012         	goto	i2l12811
 16239  00257A                     i2u1103_40:
 16240  00257A  A0F2               	btfss	242,0,c	;volatile
 16241  00257C  EFC2  F012         	goto	i2u1104_41
 16242  002580  EFC4  F012         	goto	i2u1104_40
 16243  002584                     i2u1104_41:
 16244  002584  EFD8  F012         	goto	i2l12811
 16245  002588                     i2u1104_40:
 16246  002588  AA81               	btfss	129,5,c	;volatile
 16247  00258A  EFC9  F012         	goto	i2u1105_41
 16248  00258E  EFCB  F012         	goto	i2u1105_40
 16249  002592                     i2u1105_41:
 16250  002592  EFD8  F012         	goto	i2l12811
 16251  002596                     i2u1105_40:
 16252  002596  044D               	decf	_RB5_Flag^0,w,c	;volatile
 16253  002598  A4D8               	btfss	status,2,c
 16254  00259A  EFD1  F012         	goto	i2u1106_41
 16255  00259E  EFD3  F012         	goto	i2u1106_40
 16256  0025A2                     i2u1106_41:
 16257  0025A2  EFD8  F012         	goto	i2l12811
 16258  0025A6                     i2u1106_40:
 16259  0025A6                     
 16260                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 116:        (PORTBbits.RB5 == HIGH) && (RB5_F
      +                          lag == 1)){;MCAL/INTERRUPT/mcall_interrupt_manager.c: 117:         RB5_Flag = 0;
 16261  0025A6  0E00               	movlw	0
 16262  0025A8  6E4D               	movwf	_RB5_Flag^0,c	;volatile
 16263  0025AA                     
 16264                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 118:         RB5_ISR(0);
 16265  0025AA  0E00               	movlw	0
 16266  0025AC  EC7B  F030         	call	_RB5_ISR
 16267  0025B0                     i2l12811:
 16268                           
 16269                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 120:     if((1 == INTCONbits.RBIE) && (1 == I
      +                          NTCONbits.RBIF) &&
 16270  0025B0  A6F2               	btfss	242,3,c	;volatile
 16271  0025B2  EFDD  F012         	goto	i2u1107_41
 16272  0025B6  EFDF  F012         	goto	i2u1107_40
 16273  0025BA                     i2u1107_41:
 16274  0025BA  EFFA  F012         	goto	i2l12823
 16275  0025BE                     i2u1107_40:
 16276  0025BE  A0F2               	btfss	242,0,c	;volatile
 16277  0025C0  EFE4  F012         	goto	i2u1108_41
 16278  0025C4  EFE6  F012         	goto	i2u1108_40
 16279  0025C8                     i2u1108_41:
 16280  0025C8  EFFA  F012         	goto	i2l12823
 16281  0025CC                     i2u1108_40:
 16282  0025CC  BA81               	btfsc	129,5,c	;volatile
 16283  0025CE  EFEB  F012         	goto	i2u1109_41
 16284  0025D2  EFED  F012         	goto	i2u1109_40
 16285  0025D6                     i2u1109_41:
 16286  0025D6  EFFA  F012         	goto	i2l12823
 16287  0025DA                     i2u1109_40:
 16288  0025DA  504D               	movf	_RB5_Flag^0,w,c	;volatile
 16289  0025DC  A4D8               	btfss	status,2,c
 16290  0025DE  EFF3  F012         	goto	i2u1110_41
 16291  0025E2  EFF5  F012         	goto	i2u1110_40
 16292  0025E6                     i2u1110_41:
 16293  0025E6  EFFA  F012         	goto	i2l12823
 16294  0025EA                     i2u1110_40:
 16295  0025EA                     
 16296                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 121:        (PORTBbits.RB5 == LOW) && (RB5_Fl
      +                          ag == 0)){;MCAL/INTERRUPT/mcall_interrupt_manager.c: 122:         RB5_Flag = 1;
 16297  0025EA  0E01               	movlw	1
 16298  0025EC  6E4D               	movwf	_RB5_Flag^0,c	;volatile
 16299  0025EE                     
 16300                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 123:         RB5_ISR(1);
 16301  0025EE  0E01               	movlw	1
 16302  0025F0  EC7B  F030         	call	_RB5_ISR
 16303  0025F4                     i2l12823:
 16304                           
 16305                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 125:     if((1 == INTCONbits.RBIE) && (1 == I
      +                          NTCONbits.RBIF) &&
 16306  0025F4  A6F2               	btfss	242,3,c	;volatile
 16307  0025F6  EFFF  F012         	goto	i2u1111_41
 16308  0025FA  EF01  F013         	goto	i2u1111_40
 16309  0025FE                     i2u1111_41:
 16310  0025FE  EF1C  F013         	goto	i2l12835
 16311  002602                     i2u1111_40:
 16312  002602  A0F2               	btfss	242,0,c	;volatile
 16313  002604  EF06  F013         	goto	i2u1112_41
 16314  002608  EF08  F013         	goto	i2u1112_40
 16315  00260C                     i2u1112_41:
 16316  00260C  EF1C  F013         	goto	i2l12835
 16317  002610                     i2u1112_40:
 16318  002610  AC81               	btfss	129,6,c	;volatile
 16319  002612  EF0D  F013         	goto	i2u1113_41
 16320  002616  EF0F  F013         	goto	i2u1113_40
 16321  00261A                     i2u1113_41:
 16322  00261A  EF1C  F013         	goto	i2l12835
 16323  00261E                     i2u1113_40:
 16324  00261E  044C               	decf	_RB6_Flag^0,w,c	;volatile
 16325  002620  A4D8               	btfss	status,2,c
 16326  002622  EF15  F013         	goto	i2u1114_41
 16327  002626  EF17  F013         	goto	i2u1114_40
 16328  00262A                     i2u1114_41:
 16329  00262A  EF1C  F013         	goto	i2l12835
 16330  00262E                     i2u1114_40:
 16331  00262E                     
 16332                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 126:        (PORTBbits.RB6 == HIGH) && (RB6_F
      +                          lag == 1)){;MCAL/INTERRUPT/mcall_interrupt_manager.c: 127:         RB6_Flag = 0;
 16333  00262E  0E00               	movlw	0
 16334  002630  6E4C               	movwf	_RB6_Flag^0,c	;volatile
 16335  002632                     
 16336                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 128:         RB6_ISR(0);
 16337  002632  0E00               	movlw	0
 16338  002634  EC6E  F030         	call	_RB6_ISR
 16339  002638                     i2l12835:
 16340                           
 16341                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 130:     if((1 == INTCONbits.RBIE) && (1 == I
      +                          NTCONbits.RBIF) &&
 16342  002638  A6F2               	btfss	242,3,c	;volatile
 16343  00263A  EF21  F013         	goto	i2u1115_41
 16344  00263E  EF23  F013         	goto	i2u1115_40
 16345  002642                     i2u1115_41:
 16346  002642  EF3E  F013         	goto	i2l12847
 16347  002646                     i2u1115_40:
 16348  002646  A0F2               	btfss	242,0,c	;volatile
 16349  002648  EF28  F013         	goto	i2u1116_41
 16350  00264C  EF2A  F013         	goto	i2u1116_40
 16351  002650                     i2u1116_41:
 16352  002650  EF3E  F013         	goto	i2l12847
 16353  002654                     i2u1116_40:
 16354  002654  BC81               	btfsc	129,6,c	;volatile
 16355  002656  EF2F  F013         	goto	i2u1117_41
 16356  00265A  EF31  F013         	goto	i2u1117_40
 16357  00265E                     i2u1117_41:
 16358  00265E  EF3E  F013         	goto	i2l12847
 16359  002662                     i2u1117_40:
 16360  002662  504C               	movf	_RB6_Flag^0,w,c	;volatile
 16361  002664  A4D8               	btfss	status,2,c
 16362  002666  EF37  F013         	goto	i2u1118_41
 16363  00266A  EF39  F013         	goto	i2u1118_40
 16364  00266E                     i2u1118_41:
 16365  00266E  EF3E  F013         	goto	i2l12847
 16366  002672                     i2u1118_40:
 16367  002672                     
 16368                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 131:        (PORTBbits.RB6 == LOW) && (RB6_Fl
      +                          ag == 0)){;MCAL/INTERRUPT/mcall_interrupt_manager.c: 132:         RB6_Flag = 1;
 16369  002672  0E01               	movlw	1
 16370  002674  6E4C               	movwf	_RB6_Flag^0,c	;volatile
 16371  002676                     
 16372                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 133:         RB6_ISR(1);
 16373  002676  0E01               	movlw	1
 16374  002678  EC6E  F030         	call	_RB6_ISR
 16375  00267C                     i2l12847:
 16376                           
 16377                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 135:     if((1 == INTCONbits.RBIE) && (1 == I
      +                          NTCONbits.RBIF) &&
 16378  00267C  A6F2               	btfss	242,3,c	;volatile
 16379  00267E  EF43  F013         	goto	i2u1119_41
 16380  002682  EF45  F013         	goto	i2u1119_40
 16381  002686                     i2u1119_41:
 16382  002686  EF60  F013         	goto	i2l12859
 16383  00268A                     i2u1119_40:
 16384  00268A  A0F2               	btfss	242,0,c	;volatile
 16385  00268C  EF4A  F013         	goto	i2u1120_41
 16386  002690  EF4C  F013         	goto	i2u1120_40
 16387  002694                     i2u1120_41:
 16388  002694  EF60  F013         	goto	i2l12859
 16389  002698                     i2u1120_40:
 16390  002698  AE81               	btfss	129,7,c	;volatile
 16391  00269A  EF51  F013         	goto	i2u1121_41
 16392  00269E  EF53  F013         	goto	i2u1121_40
 16393  0026A2                     i2u1121_41:
 16394  0026A2  EF60  F013         	goto	i2l12859
 16395  0026A6                     i2u1121_40:
 16396  0026A6  044B               	decf	_RB7_Flag^0,w,c	;volatile
 16397  0026A8  A4D8               	btfss	status,2,c
 16398  0026AA  EF59  F013         	goto	i2u1122_41
 16399  0026AE  EF5B  F013         	goto	i2u1122_40
 16400  0026B2                     i2u1122_41:
 16401  0026B2  EF60  F013         	goto	i2l12859
 16402  0026B6                     i2u1122_40:
 16403  0026B6                     
 16404                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 136:        (PORTBbits.RB7 == HIGH) && (RB7_F
      +                          lag == 1)){;MCAL/INTERRUPT/mcall_interrupt_manager.c: 137:         RB7_Flag = 0;
 16405  0026B6  0E00               	movlw	0
 16406  0026B8  6E4B               	movwf	_RB7_Flag^0,c	;volatile
 16407  0026BA                     
 16408                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 138:         RB7_ISR(0);
 16409  0026BA  0E00               	movlw	0
 16410  0026BC  EC61  F030         	call	_RB7_ISR
 16411  0026C0                     i2l12859:
 16412                           
 16413                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 140:     if((1 == INTCONbits.RBIE) && (1 == I
      +                          NTCONbits.RBIF) &&
 16414  0026C0  A6F2               	btfss	242,3,c	;volatile
 16415  0026C2  EF65  F013         	goto	i2u1123_41
 16416  0026C6  EF67  F013         	goto	i2u1123_40
 16417  0026CA                     i2u1123_41:
 16418  0026CA  EF82  F013         	goto	i2l12871
 16419  0026CE                     i2u1123_40:
 16420  0026CE  A0F2               	btfss	242,0,c	;volatile
 16421  0026D0  EF6C  F013         	goto	i2u1124_41
 16422  0026D4  EF6E  F013         	goto	i2u1124_40
 16423  0026D8                     i2u1124_41:
 16424  0026D8  EF82  F013         	goto	i2l12871
 16425  0026DC                     i2u1124_40:
 16426  0026DC  BE81               	btfsc	129,7,c	;volatile
 16427  0026DE  EF73  F013         	goto	i2u1125_41
 16428  0026E2  EF75  F013         	goto	i2u1125_40
 16429  0026E6                     i2u1125_41:
 16430  0026E6  EF82  F013         	goto	i2l12871
 16431  0026EA                     i2u1125_40:
 16432  0026EA  504B               	movf	_RB7_Flag^0,w,c	;volatile
 16433  0026EC  A4D8               	btfss	status,2,c
 16434  0026EE  EF7B  F013         	goto	i2u1126_41
 16435  0026F2  EF7D  F013         	goto	i2u1126_40
 16436  0026F6                     i2u1126_41:
 16437  0026F6  EF82  F013         	goto	i2l12871
 16438  0026FA                     i2u1126_40:
 16439  0026FA                     
 16440                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 141:        (PORTBbits.RB7 == LOW) && (RB7_Fl
      +                          ag == 0)){;MCAL/INTERRUPT/mcall_interrupt_manager.c: 142:         RB7_Flag = 1;
 16441  0026FA  0E01               	movlw	1
 16442  0026FC  6E4B               	movwf	_RB7_Flag^0,c	;volatile
 16443  0026FE                     
 16444                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 143:         RB7_ISR(1);
 16445  0026FE  0E01               	movlw	1
 16446  002700  EC61  F030         	call	_RB7_ISR
 16447  002704                     i2l12871:
 16448                           
 16449                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 147:     if((1 == PIE1bits.ADIE) && (1 == PIR
      +                          1bits.ADIF)){
 16450  002704  AC9D               	btfss	157,6,c	;volatile
 16451  002706  EF87  F013         	goto	i2u1127_41
 16452  00270A  EF89  F013         	goto	i2u1127_40
 16453  00270E                     i2u1127_41:
 16454  00270E  EF92  F013         	goto	i2l12877
 16455  002712                     i2u1127_40:
 16456  002712  AC9E               	btfss	158,6,c	;volatile
 16457  002714  EF8E  F013         	goto	i2u1128_41
 16458  002718  EF90  F013         	goto	i2u1128_40
 16459  00271C                     i2u1128_41:
 16460  00271C  EF92  F013         	goto	i2l12877
 16461  002720                     i2u1128_40:
 16462  002720                     
 16463                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 148:         ADC_ISR();
 16464  002720  ECD2  F02E         	call	_ADC_ISR	;wreg free
 16465  002724                     i2l12877:
 16466                           
 16467                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 151:     if((1 == PIE1bits.TXIE) && (1 == PIR
      +                          1bits.TXIF)){
 16468  002724  A89D               	btfss	157,4,c	;volatile
 16469  002726  EF97  F013         	goto	i2u1129_41
 16470  00272A  EF99  F013         	goto	i2u1129_40
 16471  00272E                     i2u1129_41:
 16472  00272E  EFA2  F013         	goto	i2l12883
 16473  002732                     i2u1129_40:
 16474  002732  A89E               	btfss	158,4,c	;volatile
 16475  002734  EF9E  F013         	goto	i2u1130_41
 16476  002738  EFA0  F013         	goto	i2u1130_40
 16477  00273C                     i2u1130_41:
 16478  00273C  EFA2  F013         	goto	i2l12883
 16479  002740                     i2u1130_40:
 16480  002740                     
 16481                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 152:         EUSART_TX_ISR();
 16482  002740  ECF5  F031         	call	_EUSART_TX_ISR	;wreg free
 16483  002744                     i2l12883:
 16484                           
 16485                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 156:     if((1 == PIE1bits.RCIE) && (1 == PIR
      +                          1bits.RCIF)){
 16486  002744  AA9D               	btfss	157,5,c	;volatile
 16487  002746  EFA7  F013         	goto	i2u1131_41
 16488  00274A  EFA9  F013         	goto	i2u1131_40
 16489  00274E                     i2u1131_41:
 16490  00274E  EFB2  F013         	goto	i2l561
 16491  002752                     i2u1131_40:
 16492  002752  AA9E               	btfss	158,5,c	;volatile
 16493  002754  EFAE  F013         	goto	i2u1132_41
 16494  002758  EFB0  F013         	goto	i2u1132_40
 16495  00275C                     i2u1132_41:
 16496  00275C  EFB2  F013         	goto	i2l561
 16497  002760                     i2u1132_40:
 16498  002760                     
 16499                           ;MCAL/INTERRUPT/mcall_interrupt_manager.c: 157:         EUSART_RX_ISR();
 16500  002760  ECF9  F031         	call	_EUSART_RX_ISR	;wreg free
 16501  002764                     i2l561:
 16502  002764  C026  FFF5         	movff	??_InterruptManager+11,tablat
 16503  002768  C025  FFF8         	movff	??_InterruptManager+10,tblptru
 16504  00276C  C024  FFF7         	movff	??_InterruptManager+9,tblptrh
 16505  002770  C023  FFF6         	movff	??_InterruptManager+8,tblptrl
 16506  002774  C022  FFF4         	movff	??_InterruptManager+7,prodh
 16507  002778  C021  FFF3         	movff	??_InterruptManager+6,prodl
 16508  00277C  C020  FFDA         	movff	??_InterruptManager+5,fsr2h
 16509  002780  C01F  FFD9         	movff	??_InterruptManager+4,fsr2l
 16510  002784  C01E  FFEA         	movff	??_InterruptManager+3,fsr0h
 16511  002788  C01D  FFE9         	movff	??_InterruptManager+2,fsr0l
 16512  00278C  C01C  FFFB         	movff	??_InterruptManager+1,pclatu
 16513  002790  C01B  FFFA         	movff	??_InterruptManager,pclath
 16514  002794  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 16515  002796  0011               	retfie		f
 16516  002798                     __end_of_InterruptManager:
 16517                           	callstack 0
 16518                           
 16519 ;; *************** function _RB7_ISR *****************
 16520 ;; Defined at:
 16521 ;;		line 526 in file "MCAL/INTERRUPT/mcal_external_interrupt.c"
 16522 ;; Parameters:    Size  Location     Type
 16523 ;;  RB7_Source      1    wreg     unsigned char 
 16524 ;; Auto vars:     Size  Location     Type
 16525 ;;  RB7_Source      1    0[COMRAM] unsigned char 
 16526 ;; Return value:  Size  Location     Type
 16527 ;;                  1    wreg      void 
 16528 ;; Registers used:
 16529 ;;		wreg, status,2, status,0
 16530 ;; Tracked objects:
 16531 ;;		On entry : 0/0
 16532 ;;		On exit  : 0/0
 16533 ;;		Unchanged: 0/0
 16534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16536 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16538 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16539 ;;Total ram usage:        1 bytes
 16540 ;; Hardware stack levels used: 1
 16541 ;; This function calls:
 16542 ;;		Nothing
 16543 ;; This function is called by:
 16544 ;;		_InterruptManager
 16545 ;; This function uses a non-reentrant model
 16546 ;;
 16547                           
 16548                           	psect	text112
 16549  0060C2                     __ptext112:
 16550                           	callstack 0
 16551  0060C2                     _RB7_ISR:
 16552                           	callstack 19
 16553                           
 16554                           ;incstack = 0
 16555                           ;RB7_ISR@RB7_Source stored from wreg
 16556  0060C2  6E01               	movwf	RB7_ISR@RB7_Source^0,c
 16557  0060C4                     
 16558                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 528:     (INTCONbits.RBIF=0);
 16559  0060C4  90F2               	bcf	242,0,c	;volatile
 16560  0060C6                     
 16561                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 530:     if(0 == RB7_Source){
 16562  0060C6  5001               	movf	RB7_ISR@RB7_Source^0,w,c
 16563  0060C8  A4D8               	btfss	status,2,c
 16564  0060CA  EF69  F030         	goto	i2u724_41
 16565  0060CE  EF6B  F030         	goto	i2u724_40
 16566  0060D2                     i2u724_41:
 16567  0060D2  EF6D  F030         	goto	i2l9197
 16568  0060D6                     i2u724_40:
 16569  0060D6  EF6D  F030         	goto	i2l756
 16570  0060DA                     i2l9197:
 16571  0060DA                     i2l756:
 16572  0060DA  0012               	return		;funcret
 16573  0060DC                     __end_of_RB7_ISR:
 16574                           	callstack 0
 16575                           
 16576 ;; *************** function _RB6_ISR *****************
 16577 ;; Defined at:
 16578 ;;		line 511 in file "MCAL/INTERRUPT/mcal_external_interrupt.c"
 16579 ;; Parameters:    Size  Location     Type
 16580 ;;  RB6_Source      1    wreg     unsigned char 
 16581 ;; Auto vars:     Size  Location     Type
 16582 ;;  RB6_Source      1    0[COMRAM] unsigned char 
 16583 ;; Return value:  Size  Location     Type
 16584 ;;                  1    wreg      void 
 16585 ;; Registers used:
 16586 ;;		wreg, status,2, status,0
 16587 ;; Tracked objects:
 16588 ;;		On entry : 0/0
 16589 ;;		On exit  : 0/0
 16590 ;;		Unchanged: 0/0
 16591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16593 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16595 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16596 ;;Total ram usage:        1 bytes
 16597 ;; Hardware stack levels used: 1
 16598 ;; This function calls:
 16599 ;;		Nothing
 16600 ;; This function is called by:
 16601 ;;		_InterruptManager
 16602 ;; This function uses a non-reentrant model
 16603 ;;
 16604                           
 16605                           	psect	text113
 16606  0060DC                     __ptext113:
 16607                           	callstack 0
 16608  0060DC                     _RB6_ISR:
 16609                           	callstack 19
 16610                           
 16611                           ;incstack = 0
 16612                           ;RB6_ISR@RB6_Source stored from wreg
 16613  0060DC  6E01               	movwf	RB6_ISR@RB6_Source^0,c
 16614  0060DE                     
 16615                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 513:     (INTCONbits.RBIF=0);
 16616  0060DE  90F2               	bcf	242,0,c	;volatile
 16617  0060E0                     
 16618                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 515:     if(0 == RB6_Source){
 16619  0060E0  5001               	movf	RB6_ISR@RB6_Source^0,w,c
 16620  0060E2  A4D8               	btfss	status,2,c
 16621  0060E4  EF76  F030         	goto	i2u723_41
 16622  0060E8  EF78  F030         	goto	i2u723_40
 16623  0060EC                     i2u723_41:
 16624  0060EC  EF7A  F030         	goto	i2l9187
 16625  0060F0                     i2u723_40:
 16626  0060F0  EF7A  F030         	goto	i2l748
 16627  0060F4                     i2l9187:
 16628  0060F4                     i2l748:
 16629  0060F4  0012               	return		;funcret
 16630  0060F6                     __end_of_RB6_ISR:
 16631                           	callstack 0
 16632                           
 16633 ;; *************** function _RB5_ISR *****************
 16634 ;; Defined at:
 16635 ;;		line 496 in file "MCAL/INTERRUPT/mcal_external_interrupt.c"
 16636 ;; Parameters:    Size  Location     Type
 16637 ;;  RB5_Source      1    wreg     unsigned char 
 16638 ;; Auto vars:     Size  Location     Type
 16639 ;;  RB5_Source      1    0[COMRAM] unsigned char 
 16640 ;; Return value:  Size  Location     Type
 16641 ;;                  1    wreg      void 
 16642 ;; Registers used:
 16643 ;;		wreg, status,2, status,0
 16644 ;; Tracked objects:
 16645 ;;		On entry : 0/0
 16646 ;;		On exit  : 0/0
 16647 ;;		Unchanged: 0/0
 16648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16650 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16652 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16653 ;;Total ram usage:        1 bytes
 16654 ;; Hardware stack levels used: 1
 16655 ;; This function calls:
 16656 ;;		Nothing
 16657 ;; This function is called by:
 16658 ;;		_InterruptManager
 16659 ;; This function uses a non-reentrant model
 16660 ;;
 16661                           
 16662                           	psect	text114
 16663  0060F6                     __ptext114:
 16664                           	callstack 0
 16665  0060F6                     _RB5_ISR:
 16666                           	callstack 19
 16667                           
 16668                           ;incstack = 0
 16669                           ;RB5_ISR@RB5_Source stored from wreg
 16670  0060F6  6E01               	movwf	RB5_ISR@RB5_Source^0,c
 16671  0060F8                     
 16672                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 498:     (INTCONbits.RBIF=0);
 16673  0060F8  90F2               	bcf	242,0,c	;volatile
 16674  0060FA                     
 16675                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 500:     if(0 == RB5_Source){
 16676  0060FA  5001               	movf	RB5_ISR@RB5_Source^0,w,c
 16677  0060FC  A4D8               	btfss	status,2,c
 16678  0060FE  EF83  F030         	goto	i2u722_41
 16679  006102  EF85  F030         	goto	i2u722_40
 16680  006106                     i2u722_41:
 16681  006106  EF87  F030         	goto	i2l9177
 16682  00610A                     i2u722_40:
 16683  00610A  EF87  F030         	goto	i2l740
 16684  00610E                     i2l9177:
 16685  00610E                     i2l740:
 16686  00610E  0012               	return		;funcret
 16687  006110                     __end_of_RB5_ISR:
 16688                           	callstack 0
 16689                           
 16690 ;; *************** function _RB4_ISR *****************
 16691 ;; Defined at:
 16692 ;;		line 481 in file "MCAL/INTERRUPT/mcal_external_interrupt.c"
 16693 ;; Parameters:    Size  Location     Type
 16694 ;;  RB4_Source      1    wreg     unsigned char 
 16695 ;; Auto vars:     Size  Location     Type
 16696 ;;  RB4_Source      1    0[COMRAM] unsigned char 
 16697 ;; Return value:  Size  Location     Type
 16698 ;;                  1    wreg      void 
 16699 ;; Registers used:
 16700 ;;		wreg, status,2, status,0
 16701 ;; Tracked objects:
 16702 ;;		On entry : 0/0
 16703 ;;		On exit  : 0/0
 16704 ;;		Unchanged: 0/0
 16705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16707 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16709 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16710 ;;Total ram usage:        1 bytes
 16711 ;; Hardware stack levels used: 1
 16712 ;; This function calls:
 16713 ;;		Nothing
 16714 ;; This function is called by:
 16715 ;;		_InterruptManager
 16716 ;; This function uses a non-reentrant model
 16717 ;;
 16718                           
 16719                           	psect	text115
 16720  006110                     __ptext115:
 16721                           	callstack 0
 16722  006110                     _RB4_ISR:
 16723                           	callstack 19
 16724                           
 16725                           ;incstack = 0
 16726                           ;RB4_ISR@RB4_Source stored from wreg
 16727  006110  6E01               	movwf	RB4_ISR@RB4_Source^0,c
 16728  006112                     
 16729                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 483:     (INTCONbits.RBIF=0);
 16730  006112  90F2               	bcf	242,0,c	;volatile
 16731  006114                     
 16732                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 485:     if(0 == RB4_Source){
 16733  006114  5001               	movf	RB4_ISR@RB4_Source^0,w,c
 16734  006116  A4D8               	btfss	status,2,c
 16735  006118  EF90  F030         	goto	i2u721_41
 16736  00611C  EF92  F030         	goto	i2u721_40
 16737  006120                     i2u721_41:
 16738  006120  EF94  F030         	goto	i2l9167
 16739  006124                     i2u721_40:
 16740  006124  EF94  F030         	goto	i2l732
 16741  006128                     i2l9167:
 16742  006128                     i2l732:
 16743  006128  0012               	return		;funcret
 16744  00612A                     __end_of_RB4_ISR:
 16745                           	callstack 0
 16746                           
 16747 ;; *************** function _INT2_ISR *****************
 16748 ;; Defined at:
 16749 ;;		line 107 in file "MCAL/INTERRUPT/mcal_external_interrupt.c"
 16750 ;; Parameters:    Size  Location     Type
 16751 ;;		None
 16752 ;; Auto vars:     Size  Location     Type
 16753 ;;		None
 16754 ;; Return value:  Size  Location     Type
 16755 ;;                  1    wreg      void 
 16756 ;; Registers used:
 16757 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16758 ;; Tracked objects:
 16759 ;;		On entry : 0/0
 16760 ;;		On exit  : 0/0
 16761 ;;		Unchanged: 0/0
 16762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16767 ;;Total ram usage:        0 bytes
 16768 ;; Hardware stack levels used: 1
 16769 ;; Hardware stack levels required when called: 11
 16770 ;; This function calls:
 16771 ;;		Absolute function
 16772 ;;		_APP_INT0_ISR
 16773 ;;		_APP_INT1_ISR
 16774 ;;		_APP_INT2_ISR
 16775 ;; This function is called by:
 16776 ;;		_InterruptManager
 16777 ;; This function uses a non-reentrant model
 16778 ;;
 16779                           
 16780                           	psect	text116
 16781  005CE8                     __ptext116:
 16782                           	callstack 0
 16783  005CE8                     _INT2_ISR:
 16784                           	callstack 8
 16785  005CE8                     
 16786                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 109:     (INTCON3bits.INT2F=0);
 16787  005CE8  92F0               	bcf	240,1,c	;volatile
 16788  005CEA                     
 16789                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 111:     if(INT2_InterruptHandler){INT2_Inter
      +                          ruptHandler();}
 16790  005CEA  0100               	movlb	0	; () banked
 16791  005CEC  51F8               	movf	_INT2_InterruptHandler& (0+255),w,b
 16792  005CEE  11F9               	iorwf	(_INT2_InterruptHandler+1)& (0+255),w,b
 16793  005CF0  B4D8               	btfsc	status,2,c
 16794  005CF2  EF7D  F02E         	goto	i2u1071_41
 16795  005CF6  EF7F  F02E         	goto	i2u1071_40
 16796  005CFA                     i2u1071_41:
 16797  005CFA  EF8B  F02E         	goto	i2l630
 16798  005CFE                     i2u1071_40:
 16799  005CFE                     
 16800                           ; BSR set to: 0
 16801  005CFE  D802               	call	i2u1072_48
 16802  005D00  EF8B  F02E         	goto	i2u1072_49
 16803  005D04                     i2u1072_48:
 16804  005D04  0005               	push	
 16805  005D06  6EFA               	movwf	pclath,c
 16806  005D08  51F8               	movf	_INT2_InterruptHandler& (0+255),w,b
 16807  005D0A  6EFD               	movwf	tosl,c
 16808  005D0C  51F9               	movf	(_INT2_InterruptHandler+1)& (0+255),w,b
 16809  005D0E  6EFE               	movwf	tosh,c
 16810  005D10  6AFF               	clrf	tosu,c
 16811  005D12  50FA               	movf	pclath,w,c
 16812  005D14  0012               	return		;indir
 16813  005D16                     i2u1072_49:
 16814  005D16                     i2l630:
 16815  005D16  0012               	return		;funcret
 16816  005D18                     __end_of_INT2_ISR:
 16817                           	callstack 0
 16818                           
 16819 ;; *************** function _INT1_ISR *****************
 16820 ;; Defined at:
 16821 ;;		line 98 in file "MCAL/INTERRUPT/mcal_external_interrupt.c"
 16822 ;; Parameters:    Size  Location     Type
 16823 ;;		None
 16824 ;; Auto vars:     Size  Location     Type
 16825 ;;		None
 16826 ;; Return value:  Size  Location     Type
 16827 ;;                  1    wreg      void 
 16828 ;; Registers used:
 16829 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16830 ;; Tracked objects:
 16831 ;;		On entry : 0/0
 16832 ;;		On exit  : 0/0
 16833 ;;		Unchanged: 0/0
 16834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16839 ;;Total ram usage:        0 bytes
 16840 ;; Hardware stack levels used: 1
 16841 ;; Hardware stack levels required when called: 11
 16842 ;; This function calls:
 16843 ;;		Absolute function
 16844 ;;		_APP_INT0_ISR
 16845 ;;		_APP_INT1_ISR
 16846 ;;		_APP_INT2_ISR
 16847 ;; This function is called by:
 16848 ;;		_InterruptManager
 16849 ;; This function uses a non-reentrant model
 16850 ;;
 16851                           
 16852                           	psect	text117
 16853  005D48                     __ptext117:
 16854                           	callstack 0
 16855  005D48                     _INT1_ISR:
 16856                           	callstack 8
 16857  005D48                     
 16858                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 100:     (INTCON3bits.INT1F=0);
 16859  005D48  90F0               	bcf	240,0,c	;volatile
 16860  005D4A                     
 16861                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 102:     if(INT1_InterruptHandler){INT1_Inter
      +                          ruptHandler();}
 16862  005D4A  5035               	movf	_INT1_InterruptHandler^0,w,c
 16863  005D4C  1036               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 16864  005D4E  B4D8               	btfsc	status,2,c
 16865  005D50  EFAC  F02E         	goto	i2u1069_41
 16866  005D54  EFAE  F02E         	goto	i2u1069_40
 16867  005D58                     i2u1069_41:
 16868  005D58  EFBA  F02E         	goto	i2l626
 16869  005D5C                     i2u1069_40:
 16870  005D5C  D802               	call	i2u1070_48
 16871  005D5E  EFBA  F02E         	goto	i2u1070_49
 16872  005D62                     i2u1070_48:
 16873  005D62  0005               	push	
 16874  005D64  6EFA               	movwf	pclath,c
 16875  005D66  5035               	movf	_INT1_InterruptHandler^0,w,c
 16876  005D68  6EFD               	movwf	tosl,c
 16877  005D6A  5036               	movf	(_INT1_InterruptHandler+1)^0,w,c
 16878  005D6C  6EFE               	movwf	tosh,c
 16879  005D6E  6AFF               	clrf	tosu,c
 16880  005D70  50FA               	movf	pclath,w,c
 16881  005D72  0012               	return		;indir
 16882  005D74                     i2u1070_49:
 16883  005D74                     i2l626:
 16884  005D74  0012               	return		;funcret
 16885  005D76                     __end_of_INT1_ISR:
 16886                           	callstack 0
 16887                           
 16888 ;; *************** function _INT0_ISR *****************
 16889 ;; Defined at:
 16890 ;;		line 89 in file "MCAL/INTERRUPT/mcal_external_interrupt.c"
 16891 ;; Parameters:    Size  Location     Type
 16892 ;;		None
 16893 ;; Auto vars:     Size  Location     Type
 16894 ;;		None
 16895 ;; Return value:  Size  Location     Type
 16896 ;;                  1    wreg      void 
 16897 ;; Registers used:
 16898 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16899 ;; Tracked objects:
 16900 ;;		On entry : 0/0
 16901 ;;		On exit  : 0/0
 16902 ;;		Unchanged: 0/0
 16903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16908 ;;Total ram usage:        0 bytes
 16909 ;; Hardware stack levels used: 1
 16910 ;; Hardware stack levels required when called: 11
 16911 ;; This function calls:
 16912 ;;		Absolute function
 16913 ;;		_APP_INT0_ISR
 16914 ;;		_APP_INT1_ISR
 16915 ;;		_APP_INT2_ISR
 16916 ;; This function is called by:
 16917 ;;		_InterruptManager
 16918 ;; This function uses a non-reentrant model
 16919 ;;
 16920                           
 16921                           	psect	text118
 16922  005D76                     __ptext118:
 16923                           	callstack 0
 16924  005D76                     _INT0_ISR:
 16925                           	callstack 8
 16926  005D76                     
 16927                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 91:     (INTCONbits.INT0F=0);
 16928  005D76  92F2               	bcf	242,1,c	;volatile
 16929  005D78                     
 16930                           ;MCAL/INTERRUPT/mcal_external_interrupt.c: 93:     if(INT0_InterruptHandler){INT0_Interr
      +                          uptHandler();}
 16931  005D78  5037               	movf	_INT0_InterruptHandler^0,w,c
 16932  005D7A  1038               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 16933  005D7C  B4D8               	btfsc	status,2,c
 16934  005D7E  EFC3  F02E         	goto	i2u1067_41
 16935  005D82  EFC5  F02E         	goto	i2u1067_40
 16936  005D86                     i2u1067_41:
 16937  005D86  EFD1  F02E         	goto	i2l622
 16938  005D8A                     i2u1067_40:
 16939  005D8A  D802               	call	i2u1068_48
 16940  005D8C  EFD1  F02E         	goto	i2u1068_49
 16941  005D90                     i2u1068_48:
 16942  005D90  0005               	push	
 16943  005D92  6EFA               	movwf	pclath,c
 16944  005D94  5037               	movf	_INT0_InterruptHandler^0,w,c
 16945  005D96  6EFD               	movwf	tosl,c
 16946  005D98  5038               	movf	(_INT0_InterruptHandler+1)^0,w,c
 16947  005D9A  6EFE               	movwf	tosh,c
 16948  005D9C  6AFF               	clrf	tosu,c
 16949  005D9E  50FA               	movf	pclath,w,c
 16950  005DA0  0012               	return		;indir
 16951  005DA2                     i2u1068_49:
 16952  005DA2                     i2l622:
 16953  005DA2  0012               	return		;funcret
 16954  005DA4                     __end_of_INT0_ISR:
 16955                           	callstack 0
 16956                           
 16957 ;; *************** function _APP_INT1_ISR *****************
 16958 ;; Defined at:
 16959 ;;		line 45 in file "app.c"
 16960 ;; Parameters:    Size  Location     Type
 16961 ;;		None
 16962 ;; Auto vars:     Size  Location     Type
 16963 ;;		None
 16964 ;; Return value:  Size  Location     Type
 16965 ;;                  1    wreg      void 
 16966 ;; Registers used:
 16967 ;;		wreg, status,2, status,0
 16968 ;; Tracked objects:
 16969 ;;		On entry : 0/0
 16970 ;;		On exit  : 0/0
 16971 ;;		Unchanged: 0/0
 16972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16977 ;;Total ram usage:        0 bytes
 16978 ;; Hardware stack levels used: 1
 16979 ;; This function calls:
 16980 ;;		Nothing
 16981 ;; This function is called by:
 16982 ;;		_INT0_ISR
 16983 ;;		_INT1_ISR
 16984 ;;		_INT2_ISR
 16985 ;; This function uses a non-reentrant model
 16986 ;;
 16987                           
 16988                           	psect	text119
 16989  003D72                     __ptext119:
 16990                           	callstack 0
 16991  003D72                     _APP_INT1_ISR:
 16992                           	callstack 18
 16993  003D72                     
 16994                           ;app.c: 47:     if(option_counter==1){
 16995  003D72  043B               	decf	_option_counter^0,w,c	;volatile
 16996  003D74  A4D8               	btfss	status,2,c
 16997  003D76  EFBF  F01E         	goto	i2u692_41
 16998  003D7A  EFC1  F01E         	goto	i2u692_40
 16999  003D7E                     i2u692_41:
 17000  003D7E  EFCE  F01E         	goto	i2l8951
 17001  003D82                     i2u692_40:
 17002  003D82                     
 17003                           ;app.c: 48:         minutes_counter++;
 17004  003D82  2A49               	incf	_minutes_counter^0,f,c	;volatile
 17005  003D84                     
 17006                           ;app.c: 49:         if(minutes_counter>59){
 17007  003D84  0E3B               	movlw	59
 17008  003D86  6449               	cpfsgt	_minutes_counter^0,c	;volatile
 17009  003D88  EFC8  F01E         	goto	i2u693_41
 17010  003D8C  EFCA  F01E         	goto	i2u693_40
 17011  003D90                     i2u693_41:
 17012  003D90  EF24  F01F         	goto	i2l1510
 17013  003D94                     i2u693_40:
 17014  003D94                     
 17015                           ;app.c: 50:             minutes_counter=0;
 17016  003D94  0E00               	movlw	0
 17017  003D96  6E49               	movwf	_minutes_counter^0,c	;volatile
 17018  003D98  EF24  F01F         	goto	i2l1510
 17019  003D9C                     i2l8951:
 17020  003D9C  0E02               	movlw	2
 17021  003D9E  183B               	xorwf	_option_counter^0,w,c	;volatile
 17022  003DA0  A4D8               	btfss	status,2,c
 17023  003DA2  EFD5  F01E         	goto	i2u694_41
 17024  003DA6  EFD7  F01E         	goto	i2u694_40
 17025  003DAA                     i2u694_41:
 17026  003DAA  EFE4  F01E         	goto	i2l8959
 17027  003DAE                     i2u694_40:
 17028  003DAE                     
 17029                           ;app.c: 54:         hours_counter++;
 17030  003DAE  2A48               	incf	_hours_counter^0,f,c	;volatile
 17031  003DB0                     
 17032                           ;app.c: 55:         if(hours_counter>23){
 17033  003DB0  0E17               	movlw	23
 17034  003DB2  6448               	cpfsgt	_hours_counter^0,c	;volatile
 17035  003DB4  EFDE  F01E         	goto	i2u695_41
 17036  003DB8  EFE0  F01E         	goto	i2u695_40
 17037  003DBC                     i2u695_41:
 17038  003DBC  EF24  F01F         	goto	i2l1510
 17039  003DC0                     i2u695_40:
 17040  003DC0                     
 17041                           ;app.c: 56:             hours_counter=0;
 17042  003DC0  0E00               	movlw	0
 17043  003DC2  6E48               	movwf	_hours_counter^0,c	;volatile
 17044  003DC4  EF24  F01F         	goto	i2l1510
 17045  003DC8                     i2l8959:
 17046  003DC8  0E03               	movlw	3
 17047  003DCA  183B               	xorwf	_option_counter^0,w,c	;volatile
 17048  003DCC  A4D8               	btfss	status,2,c
 17049  003DCE  EFEB  F01E         	goto	i2u696_41
 17050  003DD2  EFED  F01E         	goto	i2u696_40
 17051  003DD6                     i2u696_41:
 17052  003DD6  EFFA  F01E         	goto	i2l8967
 17053  003DDA                     i2u696_40:
 17054  003DDA                     
 17055                           ;app.c: 60:         day_counter++;
 17056  003DDA  2A58               	incf	_day_counter^0,f,c	;volatile
 17057  003DDC                     
 17058                           ;app.c: 61:         if(day_counter>30){
 17059  003DDC  0E1E               	movlw	30
 17060  003DDE  6458               	cpfsgt	_day_counter^0,c	;volatile
 17061  003DE0  EFF4  F01E         	goto	i2u697_41
 17062  003DE4  EFF6  F01E         	goto	i2u697_40
 17063  003DE8                     i2u697_41:
 17064  003DE8  EF24  F01F         	goto	i2l1510
 17065  003DEC                     i2u697_40:
 17066  003DEC                     
 17067                           ;app.c: 62:             day_counter=1;
 17068  003DEC  0E01               	movlw	1
 17069  003DEE  6E58               	movwf	_day_counter^0,c	;volatile
 17070  003DF0  EF24  F01F         	goto	i2l1510
 17071  003DF4                     i2l8967:
 17072  003DF4  0E04               	movlw	4
 17073  003DF6  183B               	xorwf	_option_counter^0,w,c	;volatile
 17074  003DF8  A4D8               	btfss	status,2,c
 17075  003DFA  EF01  F01F         	goto	i2u698_41
 17076  003DFE  EF03  F01F         	goto	i2u698_40
 17077  003E02                     i2u698_41:
 17078  003E02  EF10  F01F         	goto	i2l8975
 17079  003E06                     i2u698_40:
 17080  003E06                     
 17081                           ;app.c: 66:         month_counter++;
 17082  003E06  2A57               	incf	_month_counter^0,f,c	;volatile
 17083  003E08                     
 17084                           ;app.c: 67:         if(month_counter>12){
 17085  003E08  0E0C               	movlw	12
 17086  003E0A  6457               	cpfsgt	_month_counter^0,c	;volatile
 17087  003E0C  EF0A  F01F         	goto	i2u699_41
 17088  003E10  EF0C  F01F         	goto	i2u699_40
 17089  003E14                     i2u699_41:
 17090  003E14  EF24  F01F         	goto	i2l1510
 17091  003E18                     i2u699_40:
 17092  003E18                     
 17093                           ;app.c: 68:             month_counter=1;
 17094  003E18  0E01               	movlw	1
 17095  003E1A  6E57               	movwf	_month_counter^0,c	;volatile
 17096  003E1C  EF24  F01F         	goto	i2l1510
 17097  003E20                     i2l8975:
 17098  003E20  0E05               	movlw	5
 17099  003E22  183B               	xorwf	_option_counter^0,w,c	;volatile
 17100  003E24  A4D8               	btfss	status,2,c
 17101  003E26  EF17  F01F         	goto	i2u700_41
 17102  003E2A  EF19  F01F         	goto	i2u700_40
 17103  003E2E                     i2u700_41:
 17104  003E2E  EF24  F01F         	goto	i2l1510
 17105  003E32                     i2u700_40:
 17106  003E32                     
 17107                           ;app.c: 72:         year_counter++;
 17108  003E32  2A56               	incf	_year_counter^0,f,c	;volatile
 17109  003E34                     
 17110                           ;app.c: 73:          if(year_counter>99){
 17111  003E34  0E63               	movlw	99
 17112  003E36  6456               	cpfsgt	_year_counter^0,c	;volatile
 17113  003E38  EF20  F01F         	goto	i2u701_41
 17114  003E3C  EF22  F01F         	goto	i2u701_40
 17115  003E40                     i2u701_41:
 17116  003E40  EF24  F01F         	goto	i2l1510
 17117  003E44                     i2u701_40:
 17118  003E44                     
 17119                           ;app.c: 74:             year_counter=1;
 17120  003E44  0E01               	movlw	1
 17121  003E46  6E56               	movwf	_year_counter^0,c	;volatile
 17122  003E48                     i2l1510:
 17123  003E48  0012               	return		;funcret
 17124  003E4A                     __end_of_APP_INT1_ISR:
 17125                           	callstack 0
 17126                           
 17127 ;; *************** function _APP_INT0_ISR *****************
 17128 ;; Defined at:
 17129 ;;		line 23 in file "app.c"
 17130 ;; Parameters:    Size  Location     Type
 17131 ;;		None
 17132 ;; Auto vars:     Size  Location     Type
 17133 ;;		None
 17134 ;; Return value:  Size  Location     Type
 17135 ;;                  1    wreg      void 
 17136 ;; Registers used:
 17137 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17138 ;; Tracked objects:
 17139 ;;		On entry : 0/0
 17140 ;;		On exit  : 0/0
 17141 ;;		Unchanged: 0/0
 17142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17147 ;;Total ram usage:        0 bytes
 17148 ;; Hardware stack levels used: 1
 17149 ;; Hardware stack levels required when called: 10
 17150 ;; This function calls:
 17151 ;;		_convert_int_to_BCD
 17152 ;;		i2_I2C_Write1ByteRegister
 17153 ;;		i2_RealTimeClockDS1307_Get_Date_Time
 17154 ;; This function is called by:
 17155 ;;		_INT0_ISR
 17156 ;;		_INT1_ISR
 17157 ;;		_INT2_ISR
 17158 ;; This function uses a non-reentrant model
 17159 ;;
 17160                           
 17161                           	psect	text120
 17162  003E4A                     __ptext120:
 17163                           	callstack 0
 17164  003E4A                     _APP_INT0_ISR:
 17165                           	callstack 8
 17166  003E4A                     
 17167                           ;app.c: 24:     if(option_counter==0){
 17168  003E4A  503B               	movf	_option_counter^0,w,c	;volatile
 17169  003E4C  A4D8               	btfss	status,2,c
 17170  003E4E  EF2B  F01F         	goto	i2u1054_41
 17171  003E52  EF2D  F01F         	goto	i2u1054_40
 17172  003E56                     i2u1054_41:
 17173  003E56  EF36  F01F         	goto	i2l12479
 17174  003E5A                     i2u1054_40:
 17175  003E5A                     
 17176                           ;app.c: 25:        RTC1307 = RealTimeClockDS1307_Get_Date_Time();
 17177  003E5A  EC56  F02A         	call	i2_RealTimeClockDS1307_Get_Date_Time	;wreg free
 17178  003E5E  EE20  F041         	lfsr	2,_RTC1307	;volatile
 17179  003E62  0E05               	movlw	5
 17180  003E64                     i2u1055_41:
 17181  003E64  CFEB FFDB          	movff	plusw0,plusw2
 17182  003E68  06E8               	decf	wreg,f,c
 17183  003E6A  E2FC               	bc	i2u1055_41
 17184  003E6C                     i2l12479:
 17185                           
 17186                           ;app.c: 27:     option_counter++;
 17187  003E6C  2A3B               	incf	_option_counter^0,f,c	;volatile
 17188  003E6E                     
 17189                           ;app.c: 28:     if(option_counter==6){
 17190  003E6E  0E06               	movlw	6
 17191  003E70  183B               	xorwf	_option_counter^0,w,c	;volatile
 17192  003E72  A4D8               	btfss	status,2,c
 17193  003E74  EF3E  F01F         	goto	i2u1056_41
 17194  003E78  EF40  F01F         	goto	i2u1056_40
 17195  003E7C                     i2u1056_41:
 17196  003E7C  EF8F  F01F         	goto	i2l1493
 17197  003E80                     i2u1056_40:
 17198  003E80                     
 17199                           ;app.c: 29:        option_counter=0;
 17200  003E80  0E00               	movlw	0
 17201  003E82  6E3B               	movwf	_option_counter^0,c	;volatile
 17202  003E84                     
 17203                           ;app.c: 31:         I2C_Write1ByteRegister(0xD0, 0x00,0);
 17204  003E84  0E00               	movlw	0
 17205  003E86  6E12               	movwf	i2I2C_Write1ByteRegister@reg^0,c
 17206  003E88  0E00               	movlw	0
 17207  003E8A  6E13               	movwf	i2I2C_Write1ByteRegister@data^0,c
 17208  003E8C  0ED0               	movlw	208
 17209  003E8E  EC80  F029         	call	i2_I2C_Write1ByteRegister
 17210  003E92                     
 17211                           ;app.c: 32:         convert_int_to_BCD(minutes_counter,&RTC1307._Minutes);
 17212  003E92  0E42               	movlw	low (_RTC1307+1)
 17213  003E94  6E09               	movwf	convert_int_to_BCD@BCD_num^0,c
 17214  003E96  0E00               	movlw	high (_RTC1307+1)
 17215  003E98  6E0A               	movwf	(convert_int_to_BCD@BCD_num+1)^0,c
 17216  003E9A  5049               	movf	_minutes_counter^0,w,c	;volatile
 17217  003E9C  ECFC  F016         	call	_convert_int_to_BCD
 17218  003EA0                     
 17219                           ;app.c: 33:         I2C_Write1ByteRegister(0xD0, 0x01,RTC1307._Minutes);
 17220  003EA0  0E01               	movlw	1
 17221  003EA2  6E12               	movwf	i2I2C_Write1ByteRegister@reg^0,c
 17222  003EA4  C042  F013         	movff	_RTC1307+1,i2I2C_Write1ByteRegister@data	;volatile
 17223  003EA8  0ED0               	movlw	208
 17224  003EAA  EC80  F029         	call	i2_I2C_Write1ByteRegister
 17225  003EAE                     
 17226                           ;app.c: 34:         convert_int_to_BCD(hours_counter,&RTC1307._Hours);
 17227  003EAE  0E41               	movlw	low _RTC1307
 17228  003EB0  6E09               	movwf	convert_int_to_BCD@BCD_num^0,c
 17229  003EB2  0E00               	movlw	high _RTC1307
 17230  003EB4  6E0A               	movwf	(convert_int_to_BCD@BCD_num+1)^0,c
 17231  003EB6  5048               	movf	_hours_counter^0,w,c	;volatile
 17232  003EB8  ECFC  F016         	call	_convert_int_to_BCD
 17233  003EBC                     
 17234                           ;app.c: 35:         I2C_Write1ByteRegister(0xD0, 0x02,RTC1307._Hours);
 17235  003EBC  0E02               	movlw	2
 17236  003EBE  6E12               	movwf	i2I2C_Write1ByteRegister@reg^0,c
 17237  003EC0  C041  F013         	movff	_RTC1307,i2I2C_Write1ByteRegister@data	;volatile
 17238  003EC4  0ED0               	movlw	208
 17239  003EC6  EC80  F029         	call	i2_I2C_Write1ByteRegister
 17240  003ECA                     
 17241                           ;app.c: 36:         convert_int_to_BCD(day_counter,&RTC1307._Day);
 17242  003ECA  0E46               	movlw	low (_RTC1307+5)
 17243  003ECC  6E09               	movwf	convert_int_to_BCD@BCD_num^0,c
 17244  003ECE  0E00               	movlw	high (_RTC1307+5)
 17245  003ED0  6E0A               	movwf	(convert_int_to_BCD@BCD_num+1)^0,c
 17246  003ED2  5058               	movf	_day_counter^0,w,c	;volatile
 17247  003ED4  ECFC  F016         	call	_convert_int_to_BCD
 17248  003ED8                     
 17249                           ;app.c: 37:         I2C_Write1ByteRegister(0xD0, 0x04,RTC1307._Day);
 17250  003ED8  0E04               	movlw	4
 17251  003EDA  6E12               	movwf	i2I2C_Write1ByteRegister@reg^0,c
 17252  003EDC  C046  F013         	movff	_RTC1307+5,i2I2C_Write1ByteRegister@data	;volatile
 17253  003EE0  0ED0               	movlw	208
 17254  003EE2  EC80  F029         	call	i2_I2C_Write1ByteRegister
 17255  003EE6                     
 17256                           ;app.c: 38:         convert_int_to_BCD(month_counter,&RTC1307._Month);
 17257  003EE6  0E45               	movlw	low (_RTC1307+4)
 17258  003EE8  6E09               	movwf	convert_int_to_BCD@BCD_num^0,c
 17259  003EEA  0E00               	movlw	high (_RTC1307+4)
 17260  003EEC  6E0A               	movwf	(convert_int_to_BCD@BCD_num+1)^0,c
 17261  003EEE  5057               	movf	_month_counter^0,w,c	;volatile
 17262  003EF0  ECFC  F016         	call	_convert_int_to_BCD
 17263  003EF4                     
 17264                           ;app.c: 39:         I2C_Write1ByteRegister(0xD0, 0x05,RTC1307._Month);
 17265  003EF4  0E05               	movlw	5
 17266  003EF6  6E12               	movwf	i2I2C_Write1ByteRegister@reg^0,c
 17267  003EF8  C045  F013         	movff	_RTC1307+4,i2I2C_Write1ByteRegister@data	;volatile
 17268  003EFC  0ED0               	movlw	208
 17269  003EFE  EC80  F029         	call	i2_I2C_Write1ByteRegister
 17270  003F02                     
 17271                           ;app.c: 40:         convert_int_to_BCD(year_counter,&RTC1307._Year);
 17272  003F02  0E44               	movlw	low (_RTC1307+3)
 17273  003F04  6E09               	movwf	convert_int_to_BCD@BCD_num^0,c
 17274  003F06  0E00               	movlw	high (_RTC1307+3)
 17275  003F08  6E0A               	movwf	(convert_int_to_BCD@BCD_num+1)^0,c
 17276  003F0A  5056               	movf	_year_counter^0,w,c	;volatile
 17277  003F0C  ECFC  F016         	call	_convert_int_to_BCD
 17278  003F10                     
 17279                           ;app.c: 41:         I2C_Write1ByteRegister(0xD0, 0x06,RTC1307._Year);
 17280  003F10  0E06               	movlw	6
 17281  003F12  6E12               	movwf	i2I2C_Write1ByteRegister@reg^0,c
 17282  003F14  C044  F013         	movff	_RTC1307+3,i2I2C_Write1ByteRegister@data	;volatile
 17283  003F18  0ED0               	movlw	208
 17284  003F1A  EC80  F029         	call	i2_I2C_Write1ByteRegister
 17285  003F1E                     i2l1493:
 17286  003F1E  0012               	return		;funcret
 17287  003F20                     __end_of_APP_INT0_ISR:
 17288                           	callstack 0
 17289                           
 17290 ;; *************** function _APP_INT2_ISR *****************
 17291 ;; Defined at:
 17292 ;;		line 79 in file "app.c"
 17293 ;; Parameters:    Size  Location     Type
 17294 ;;		None
 17295 ;; Auto vars:     Size  Location     Type
 17296 ;;		None
 17297 ;; Return value:  Size  Location     Type
 17298 ;;                  1    wreg      void 
 17299 ;; Registers used:
 17300 ;;		wreg, status,2, status,0
 17301 ;; Tracked objects:
 17302 ;;		On entry : 0/0
 17303 ;;		On exit  : 0/0
 17304 ;;		Unchanged: 0/0
 17305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17310 ;;Total ram usage:        0 bytes
 17311 ;; Hardware stack levels used: 1
 17312 ;; This function calls:
 17313 ;;		Nothing
 17314 ;; This function is called by:
 17315 ;;		_INT0_ISR
 17316 ;;		_INT1_ISR
 17317 ;;		_INT2_ISR
 17318 ;; This function uses a non-reentrant model
 17319 ;;
 17320                           
 17321                           	psect	text121
 17322  005D18                     __ptext121:
 17323                           	callstack 0
 17324  005D18                     _APP_INT2_ISR:
 17325                           	callstack 18
 17326  005D18                     
 17327                           ;app.c: 80:     mode_counter=1;
 17328  005D18  0E01               	movlw	1
 17329  005D1A  0100               	movlb	0	; () banked
 17330  005D1C  6FFB               	movwf	_mode_counter& (0+255),b	;volatile
 17331  005D1E                     
 17332                           ; BSR set to: 0
 17333                           ;app.c: 81:     option_counter++;
 17334  005D1E  2A3B               	incf	_option_counter^0,f,c	;volatile
 17335  005D20                     
 17336                           ; BSR set to: 0
 17337                           ;app.c: 82:     if(option_counter==4){
 17338  005D20  0E04               	movlw	4
 17339  005D22  183B               	xorwf	_option_counter^0,w,c	;volatile
 17340  005D24  A4D8               	btfss	status,2,c
 17341  005D26  EF97  F02E         	goto	i2u702_41
 17342  005D2A  EF99  F02E         	goto	i2u702_40
 17343  005D2E                     i2u702_41:
 17344  005D2E  EFA3  F02E         	goto	i2l1514
 17345  005D32                     i2u702_40:
 17346  005D32                     
 17347                           ; BSR set to: 0
 17348                           ;app.c: 83:         mode_counter=0;
 17349  005D32  0E00               	movlw	0
 17350  005D34  6FFB               	movwf	_mode_counter& (0+255),b	;volatile
 17351                           
 17352                           ;app.c: 84:         option_counter=0;
 17353  005D36  0E00               	movlw	0
 17354  005D38  6E3B               	movwf	_option_counter^0,c	;volatile
 17355  005D3A                     
 17356                           ; BSR set to: 0
 17357                           ;app.c: 85:         ALARM_RTC._Minutes=minutes_counter;
 17358  005D3A  C049  F101         	movff	_minutes_counter,_ALARM_RTC+1	;volatile
 17359  005D3E                     
 17360                           ; BSR set to: 0
 17361                           ;app.c: 86:         ALARM_RTC._Hours=hours_counter;
 17362  005D3E  C048  F100         	movff	_hours_counter,_ALARM_RTC	;volatile
 17363  005D42                     
 17364                           ; BSR set to: 0
 17365                           ;app.c: 87:         ALARM_RTC._Day=day_counter;
 17366  005D42  C058  F105         	movff	_day_counter,_ALARM_RTC+5	;volatile
 17367  005D46                     i2l1514:
 17368                           
 17369                           ; BSR set to: 0
 17370  005D46  0012               	return		;funcret
 17371  005D48                     __end_of_APP_INT2_ISR:
 17372                           	callstack 0
 17373                           
 17374 ;; *************** function i2_RealTimeClockDS1307_Get_Date_Time *****************
 17375 ;; Defined at:
 17376 ;;		line 10 in file "ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c"
 17377 ;; Parameters:    Size  Location     Type
 17378 ;;		None
 17379 ;; Auto vars:     Size  Location     Type
 17380 ;;		None
 17381 ;; Return value:  Size  Location     Type
 17382 ;;                  6   20[COMRAM] struct .
 17383 ;; Registers used:
 17384 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17385 ;; Tracked objects:
 17386 ;;		On entry : 0/0
 17387 ;;		On exit  : 0/0
 17388 ;;		Unchanged: 0/0
 17389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17390 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17393 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17394 ;;Total ram usage:        6 bytes
 17395 ;; Hardware stack levels used: 1
 17396 ;; Hardware stack levels required when called: 9
 17397 ;; This function calls:
 17398 ;;		i2_I2C_Read1ByteRegister
 17399 ;; This function is called by:
 17400 ;;		_APP_INT0_ISR
 17401 ;; This function uses a non-reentrant model
 17402 ;;
 17403                           
 17404                           	psect	text122
 17405  0054AC                     __ptext122:
 17406                           	callstack 0
 17407  0054AC                     i2_RealTimeClockDS1307_Get_Date_Time:
 17408                           	callstack 8
 17409  0054AC                     
 17410                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 11:     RTC1307._Seconds = I2C_Read1By
      +                          teRegister(0xD0, 0x00);
 17411  0054AC  0E00               	movlw	0
 17412  0054AE  6E12               	movwf	i2I2C_Read1ByteRegister@reg^0,c
 17413  0054B0  0ED0               	movlw	208
 17414  0054B2  ECBB  F027         	call	i2_I2C_Read1ByteRegister
 17415  0054B6  0101               	movlb	1	; () banked
 17416  0054B8  6F08               	movwf	(_RTC1307@RealTimeClockDS1307$F399+2)& (0+255),b
 17417                           
 17418                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 12:     RTC1307._Minutes = I2C_Read1By
      +                          teRegister(0xD0, 0x01);
 17419  0054BA  0E01               	movlw	1
 17420  0054BC  6E12               	movwf	i2I2C_Read1ByteRegister@reg^0,c
 17421  0054BE  0ED0               	movlw	208
 17422  0054C0  ECBB  F027         	call	i2_I2C_Read1ByteRegister
 17423  0054C4  0101               	movlb	1	; () banked
 17424  0054C6  6F07               	movwf	(_RTC1307@RealTimeClockDS1307$F399+1)& (0+255),b
 17425                           
 17426                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 13:     RTC1307._Hours = I2C_Read1Byte
      +                          Register(0xD0, 0x02);
 17427  0054C8  0E02               	movlw	2
 17428  0054CA  6E12               	movwf	i2I2C_Read1ByteRegister@reg^0,c
 17429  0054CC  0ED0               	movlw	208
 17430  0054CE  ECBB  F027         	call	i2_I2C_Read1ByteRegister
 17431  0054D2  0101               	movlb	1	; () banked
 17432  0054D4  6F06               	movwf	_RTC1307@RealTimeClockDS1307$F399& (0+255),b
 17433                           
 17434                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 14:     RTC1307._Day = I2C_Read1ByteRe
      +                          gister(0xD0, 0x04);
 17435  0054D6  0E04               	movlw	4
 17436  0054D8  6E12               	movwf	i2I2C_Read1ByteRegister@reg^0,c
 17437  0054DA  0ED0               	movlw	208
 17438  0054DC  ECBB  F027         	call	i2_I2C_Read1ByteRegister
 17439  0054E0  0101               	movlb	1	; () banked
 17440  0054E2  6F0B               	movwf	(_RTC1307@RealTimeClockDS1307$F399+5)& (0+255),b
 17441                           
 17442                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 15:     RTC1307._Month = I2C_Read1Byte
      +                          Register(0xD0, 0x05);
 17443  0054E4  0E05               	movlw	5
 17444  0054E6  6E12               	movwf	i2I2C_Read1ByteRegister@reg^0,c
 17445  0054E8  0ED0               	movlw	208
 17446  0054EA  ECBB  F027         	call	i2_I2C_Read1ByteRegister
 17447  0054EE  0101               	movlb	1	; () banked
 17448  0054F0  6F0A               	movwf	(_RTC1307@RealTimeClockDS1307$F399+4)& (0+255),b
 17449                           
 17450                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 16:     RTC1307._Year = I2C_Read1ByteR
      +                          egister(0xD0, 0x06);
 17451  0054F2  0E06               	movlw	6
 17452  0054F4  6E12               	movwf	i2I2C_Read1ByteRegister@reg^0,c
 17453  0054F6  0ED0               	movlw	208
 17454  0054F8  ECBB  F027         	call	i2_I2C_Read1ByteRegister
 17455  0054FC  0101               	movlb	1	; () banked
 17456  0054FE  6F09               	movwf	(_RTC1307@RealTimeClockDS1307$F399+3)& (0+255),b
 17457  005500                     
 17458                           ; BSR set to: 1
 17459                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 18:     return RTC1307;
 17460  005500  EE21  F006         	lfsr	2,_RTC1307@RealTimeClockDS1307$F399
 17461  005504  EE00  F015         	lfsr	0,?i2_RealTimeClockDS1307_Get_Date_Time
 17462  005508  0E05               	movlw	5
 17463  00550A                     i2u1038_41:
 17464  00550A  CFDB FFEB          	movff	plusw2,plusw0
 17465  00550E  06E8               	decf	wreg,f,c
 17466  005510  E2FC               	bc	i2u1038_41
 17467  005512                     
 17468                           ; BSR set to: 1
 17469  005512  0012               	return		;funcret
 17470  005514                     __end_ofi2_RealTimeClockDS1307_Get_Date_Time:
 17471                           	callstack 0
 17472                           
 17473 ;; *************** function i2_I2C_Read1ByteRegister *****************
 17474 ;; Defined at:
 17475 ;;		line 63 in file "mcc_generated_files/examples/i2c_master_example.c"
 17476 ;; Parameters:    Size  Location     Type
 17477 ;;  address         1    wreg     unsigned char 
 17478 ;;  reg             1   17[COMRAM] unsigned char 
 17479 ;; Auto vars:     Size  Location     Type
 17480 ;;  address         1   18[COMRAM] unsigned char 
 17481 ;;  returnValue     1   19[COMRAM] unsigned char 
 17482 ;; Return value:  Size  Location     Type
 17483 ;;                  1    wreg      unsigned char 
 17484 ;; Registers used:
 17485 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17486 ;; Tracked objects:
 17487 ;;		On entry : 0/0
 17488 ;;		On exit  : 0/0
 17489 ;;		Unchanged: 0/0
 17490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17491 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17492 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17494 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17495 ;;Total ram usage:        3 bytes
 17496 ;; Hardware stack levels used: 1
 17497 ;; Hardware stack levels required when called: 8
 17498 ;; This function calls:
 17499 ;;		i2_I2C_Close
 17500 ;;		i2_I2C_MasterWrite
 17501 ;;		i2_I2C_Open
 17502 ;;		i2_I2C_SetAddressNackCallback
 17503 ;;		i2_I2C_SetBuffer
 17504 ;;		i2_I2C_SetDataCompleteCallback
 17505 ;; This function is called by:
 17506 ;;		i2_RealTimeClockDS1307_Get_Date_Time
 17507 ;; This function uses a non-reentrant model
 17508 ;;
 17509                           
 17510                           	psect	text123
 17511  004F76                     __ptext123:
 17512                           	callstack 0
 17513  004F76                     i2_I2C_Read1ByteRegister:
 17514                           	callstack 8
 17515                           
 17516                           ; BSR set to: 1
 17517                           ;incstack = 0
 17518                           ;i2I2C_Read1ByteRegister@address stored from wreg
 17519  004F76  6E13               	movwf	i2I2C_Read1ByteRegister@address^0,c
 17520  004F78                     
 17521                           ;mcc_generated_files/examples/i2c_master_example.c: 63: uint8_t I2C_Read1ByteRegister(i2
      +                          c_address_t address, uint8_t reg);mcc_generated_files/examples/i2c_master_example.c: 64:
      +                           {;mcc_generated_files/examples/i2c_master_example.c: 65:     uint8_t returnValue = 0x00
      +                          ;
 17522  004F78  0E00               	movlw	0
 17523  004F7A  6E14               	movwf	i2I2C_Read1ByteRegister@returnValue^0,c
 17524  004F7C                     i2l11935:
 17525  004F7C  5013               	movf	i2I2C_Read1ByteRegister@address^0,w,c
 17526  004F7E  EC79  F024         	call	i2_I2C_Open
 17527  004F82  0900               	iorlw	0
 17528  004F84  B4D8               	btfsc	status,2,c
 17529  004F86  EFC7  F027         	goto	i2u1010_41
 17530  004F8A  EFC9  F027         	goto	i2u1010_40
 17531  004F8E                     i2u1010_41:
 17532  004F8E  EFBE  F027         	goto	i2l11935
 17533  004F92                     i2u1010_40:
 17534  004F92                     
 17535                           ;mcc_generated_files/examples/i2c_master_example.c: 68:     I2C_SetDataCompleteCallback(
      +                          rd1RegCompleteHandler,&returnValue);
 17536  004F92  0E82               	movlw	low i2_rd1RegCompleteHandler
 17537  004F94  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
 17538  004F96  0E5E               	movlw	high i2_rd1RegCompleteHandler
 17539  004F98  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
 17540  004F9A  0E14               	movlw	low i2I2C_Read1ByteRegister@returnValue
 17541  004F9C  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
 17542  004F9E  0E00               	movlw	high i2I2C_Read1ByteRegister@returnValue
 17543  004FA0  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
 17544  004FA2  ECC5  F030         	call	i2_I2C_SetDataCompleteCallback	;wreg free
 17545  004FA6                     
 17546                           ;mcc_generated_files/examples/i2c_master_example.c: 69:     I2C_SetBuffer(&reg,1);
 17547  004FA6  0E12               	movlw	low i2I2C_Read1ByteRegister@reg
 17548  004FA8  6E01               	movwf	i2I2C_SetBuffer@buffer^0,c
 17549  004FAA  0E00               	movlw	high i2I2C_Read1ByteRegister@reg
 17550  004FAC  6E02               	movwf	(i2I2C_SetBuffer@buffer+1)^0,c
 17551  004FAE  0E00               	movlw	0
 17552  004FB0  6E04               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
 17553  004FB2  0E01               	movlw	1
 17554  004FB4  6E03               	movwf	i2I2C_SetBuffer@bufferSize^0,c
 17555  004FB6  ECE6  F02F         	call	i2_I2C_SetBuffer	;wreg free
 17556  004FBA                     
 17557                           ;mcc_generated_files/examples/i2c_master_example.c: 70:     I2C_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
 17558  004FBA  0E00               	movlw	0
 17559  004FBC  6E06               	movwf	i2I2C_SetAddressNackCallback@cb^0,c
 17560  004FBE  0E00               	movlw	0
 17561  004FC0  6E07               	movwf	(i2I2C_SetAddressNackCallback@cb+1)^0,c
 17562  004FC2  0E00               	movlw	0
 17563  004FC4  6E08               	movwf	i2I2C_SetAddressNackCallback@ptr^0,c
 17564  004FC6  0E00               	movlw	0
 17565  004FC8  6E09               	movwf	(i2I2C_SetAddressNackCallback@ptr+1)^0,c
 17566  004FCA  ECB9  F030         	call	i2_I2C_SetAddressNackCallback	;wreg free
 17567  004FCE                     
 17568                           ;mcc_generated_files/examples/i2c_master_example.c: 71:     I2C_MasterWrite();
 17569  004FCE  EC9D  F031         	call	i2_I2C_MasterWrite	;wreg free
 17570  004FD2                     i2l11945:
 17571  004FD2  EC6D  F02F         	call	i2_I2C_Close	;wreg free
 17572  004FD6  06E8               	decf	wreg,f,c
 17573  004FD8  B4D8               	btfsc	status,2,c
 17574  004FDA  EFF1  F027         	goto	i2u1011_41
 17575  004FDE  EFF3  F027         	goto	i2u1011_40
 17576  004FE2                     i2u1011_41:
 17577  004FE2  EFE9  F027         	goto	i2l11945
 17578  004FE6                     i2u1011_40:
 17579  004FE6                     
 17580                           ;mcc_generated_files/examples/i2c_master_example.c: 74:     return returnValue;
 17581  004FE6  5014               	movf	i2I2C_Read1ByteRegister@returnValue^0,w,c
 17582  004FE8  0012               	return		;funcret
 17583  004FEA                     __end_ofi2_I2C_Read1ByteRegister:
 17584                           	callstack 0
 17585                           
 17586 ;; *************** function i2_I2C_Write1ByteRegister *****************
 17587 ;; Defined at:
 17588 ;;		line 91 in file "mcc_generated_files/examples/i2c_master_example.c"
 17589 ;; Parameters:    Size  Location     Type
 17590 ;;  address         1    wreg     unsigned char 
 17591 ;;  reg             1   17[COMRAM] unsigned char 
 17592 ;;  data            1   18[COMRAM] unsigned char 
 17593 ;; Auto vars:     Size  Location     Type
 17594 ;;  address         1   19[COMRAM] unsigned char 
 17595 ;; Return value:  Size  Location     Type
 17596 ;;                  1    wreg      void 
 17597 ;; Registers used:
 17598 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17599 ;; Tracked objects:
 17600 ;;		On entry : 0/0
 17601 ;;		On exit  : 0/0
 17602 ;;		Unchanged: 0/0
 17603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17604 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17605 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17607 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17608 ;;Total ram usage:        3 bytes
 17609 ;; Hardware stack levels used: 1
 17610 ;; Hardware stack levels required when called: 8
 17611 ;; This function calls:
 17612 ;;		i2_I2C_Close
 17613 ;;		i2_I2C_MasterWrite
 17614 ;;		i2_I2C_Open
 17615 ;;		i2_I2C_SetAddressNackCallback
 17616 ;;		i2_I2C_SetBuffer
 17617 ;;		i2_I2C_SetDataCompleteCallback
 17618 ;; This function is called by:
 17619 ;;		_APP_INT0_ISR
 17620 ;; This function uses a non-reentrant model
 17621 ;;
 17622                           
 17623                           	psect	text124
 17624  005300                     __ptext124:
 17625                           	callstack 0
 17626  005300                     i2_I2C_Write1ByteRegister:
 17627                           	callstack 9
 17628                           
 17629                           ;incstack = 0
 17630                           ;i2I2C_Write1ByteRegister@address stored from wreg
 17631  005300  6E14               	movwf	i2I2C_Write1ByteRegister@address^0,c
 17632  005302                     i2l12327:
 17633  005302  5014               	movf	i2I2C_Write1ByteRegister@address^0,w,c
 17634  005304  EC79  F024         	call	i2_I2C_Open
 17635  005308  0900               	iorlw	0
 17636  00530A  B4D8               	btfsc	status,2,c
 17637  00530C  EF8A  F029         	goto	i2u1039_41
 17638  005310  EF8C  F029         	goto	i2u1039_40
 17639  005314                     i2u1039_41:
 17640  005314  EF81  F029         	goto	i2l12327
 17641  005318                     i2u1039_40:
 17642  005318                     
 17643                           ;mcc_generated_files/examples/i2c_master_example.c: 94:     I2C_SetDataCompleteCallback(
      +                          wr1RegCompleteHandler,&data);
 17644  005318  0E2A               	movlw	low i2_wr1RegCompleteHandler
 17645  00531A  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
 17646  00531C  0E5E               	movlw	high i2_wr1RegCompleteHandler
 17647  00531E  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
 17648  005320  0E13               	movlw	low i2I2C_Write1ByteRegister@data
 17649  005322  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
 17650  005324  0E00               	movlw	high i2I2C_Write1ByteRegister@data
 17651  005326  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
 17652  005328  ECC5  F030         	call	i2_I2C_SetDataCompleteCallback	;wreg free
 17653  00532C                     
 17654                           ;mcc_generated_files/examples/i2c_master_example.c: 95:     I2C_SetBuffer(&reg,1);
 17655  00532C  0E12               	movlw	low i2I2C_Write1ByteRegister@reg
 17656  00532E  6E01               	movwf	i2I2C_SetBuffer@buffer^0,c
 17657  005330  0E00               	movlw	high i2I2C_Write1ByteRegister@reg
 17658  005332  6E02               	movwf	(i2I2C_SetBuffer@buffer+1)^0,c
 17659  005334  0E00               	movlw	0
 17660  005336  6E04               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
 17661  005338  0E01               	movlw	1
 17662  00533A  6E03               	movwf	i2I2C_SetBuffer@bufferSize^0,c
 17663  00533C  ECE6  F02F         	call	i2_I2C_SetBuffer	;wreg free
 17664  005340                     
 17665                           ;mcc_generated_files/examples/i2c_master_example.c: 96:     I2C_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
 17666  005340  0E00               	movlw	0
 17667  005342  6E06               	movwf	i2I2C_SetAddressNackCallback@cb^0,c
 17668  005344  0E00               	movlw	0
 17669  005346  6E07               	movwf	(i2I2C_SetAddressNackCallback@cb+1)^0,c
 17670  005348  0E00               	movlw	0
 17671  00534A  6E08               	movwf	i2I2C_SetAddressNackCallback@ptr^0,c
 17672  00534C  0E00               	movlw	0
 17673  00534E  6E09               	movwf	(i2I2C_SetAddressNackCallback@ptr+1)^0,c
 17674  005350  ECB9  F030         	call	i2_I2C_SetAddressNackCallback	;wreg free
 17675  005354                     
 17676                           ;mcc_generated_files/examples/i2c_master_example.c: 97:     I2C_MasterWrite();
 17677  005354  EC9D  F031         	call	i2_I2C_MasterWrite	;wreg free
 17678  005358                     i2l12337:
 17679  005358  EC6D  F02F         	call	i2_I2C_Close	;wreg free
 17680  00535C  06E8               	decf	wreg,f,c
 17681  00535E  B4D8               	btfsc	status,2,c
 17682  005360  EFB4  F029         	goto	i2u1040_41
 17683  005364  EFB6  F029         	goto	i2u1040_40
 17684  005368                     i2u1040_41:
 17685  005368  EFAC  F029         	goto	i2l12337
 17686  00536C                     i2u1040_40:
 17687  00536C  0012               	return		;funcret
 17688  00536E                     __end_ofi2_I2C_Write1ByteRegister:
 17689                           	callstack 0
 17690                           
 17691 ;; *************** function i2_I2C_SetAddressNackCallback *****************
 17692 ;; Defined at:
 17693 ;;		line 283 in file "mcc_generated_files/i2c_master.c"
 17694 ;; Parameters:    Size  Location     Type
 17695 ;;  cb              2    5[COMRAM] PTR FTN(PTR void ,)enum 
 17696 ;;		 -> Absolute function(1), 
 17697 ;;  ptr             2    7[COMRAM] PTR void 
 17698 ;;		 -> NULL(0), 
 17699 ;; Auto vars:     Size  Location     Type
 17700 ;;		None
 17701 ;; Return value:  Size  Location     Type
 17702 ;;                  1    wreg      void 
 17703 ;; Registers used:
 17704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17705 ;; Tracked objects:
 17706 ;;		On entry : 0/0
 17707 ;;		On exit  : 0/0
 17708 ;;		Unchanged: 0/0
 17709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17710 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17713 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17714 ;;Total ram usage:        4 bytes
 17715 ;; Hardware stack levels used: 1
 17716 ;; Hardware stack levels required when called: 1
 17717 ;; This function calls:
 17718 ;;		i2_I2C_SetCallback
 17719 ;; This function is called by:
 17720 ;;		i2_I2C_Read1ByteRegister
 17721 ;;		i2_I2C_Write1ByteRegister
 17722 ;; This function uses a non-reentrant model
 17723 ;;
 17724                           
 17725                           	psect	text125
 17726  006172                     __ptext125:
 17727                           	callstack 0
 17728  006172                     i2_I2C_SetAddressNackCallback:
 17729                           	callstack 14
 17730  006172                     
 17731                           ;mcc_generated_files/i2c_master.c: 283: void I2C_SetAddressNackCallback(i2c_callback_t c
      +                          b, void *ptr);mcc_generated_files/i2c_master.c: 284: {;mcc_generated_files/i2c_master.c:
      +                           285:     I2C_SetCallback(I2C_ADDR_NACK, cb, ptr);
 17732  006172  C006  F001         	movff	i2I2C_SetAddressNackCallback@cb,i2I2C_SetCallback@cb
 17733  006176  C007  F002         	movff	i2I2C_SetAddressNackCallback@cb+1,i2I2C_SetCallback@cb+1
 17734  00617A  C008  F003         	movff	i2I2C_SetAddressNackCallback@ptr,i2I2C_SetCallback@ptr
 17735  00617E  C009  F004         	movff	i2I2C_SetAddressNackCallback@ptr+1,i2I2C_SetCallback@ptr+1
 17736  006182  0E02               	movlw	2
 17737  006184  EC42  F027         	call	i2_I2C_SetCallback
 17738  006188  0012               	return		;funcret
 17739  00618A                     __end_ofi2_I2C_SetAddressNackCallback:
 17740                           	callstack 0
 17741                           
 17742 ;; *************** function i2_I2C_Open *****************
 17743 ;; Defined at:
 17744 ;;		line 176 in file "mcc_generated_files/i2c_master.c"
 17745 ;; Parameters:    Size  Location     Type
 17746 ;;  address         1    wreg     unsigned char 
 17747 ;; Auto vars:     Size  Location     Type
 17748 ;;  address         1    0[COMRAM] unsigned char 
 17749 ;;  returnValue     1    1[COMRAM] enum E355
 17750 ;; Return value:  Size  Location     Type
 17751 ;;                  1    wreg      enum E355
 17752 ;; Registers used:
 17753 ;;		wreg, status,2, status,0, cstack
 17754 ;; Tracked objects:
 17755 ;;		On entry : 0/0
 17756 ;;		On exit  : 0/0
 17757 ;;		Unchanged: 0/0
 17758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17760 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17762 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17763 ;;Total ram usage:        2 bytes
 17764 ;; Hardware stack levels used: 1
 17765 ;; Hardware stack levels required when called: 1
 17766 ;; This function calls:
 17767 ;;		i2_I2C_MasterClearIrq
 17768 ;;		i2_I2C_MasterOpen
 17769 ;; This function is called by:
 17770 ;;		i2_I2C_Read1ByteRegister
 17771 ;;		i2_I2C_Write1ByteRegister
 17772 ;; This function uses a non-reentrant model
 17773 ;;
 17774                           
 17775                           	psect	text126
 17776  0048F2                     __ptext126:
 17777                           	callstack 0
 17778  0048F2                     i2_I2C_Open:
 17779                           	callstack 14
 17780                           
 17781                           ;incstack = 0
 17782                           ;i2I2C_Open@address stored from wreg
 17783  0048F2  6E01               	movwf	i2I2C_Open@address^0,c
 17784  0048F4                     
 17785                           ;mcc_generated_files/i2c_master.c: 176: i2c_error_t I2C_Open(i2c_address_t address);mcc_
      +                          generated_files/i2c_master.c: 177: {;mcc_generated_files/i2c_master.c: 178:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
 17786  0048F4  0E01               	movlw	1
 17787  0048F6  6E02               	movwf	i2I2C_Open@returnValue^0,c
 17788  0048F8                     
 17789                           ;mcc_generated_files/i2c_master.c: 180:     if(!I2C_Status.inUse)
 17790  0048F8  0100               	movlb	0	; () banked
 17791  0048FA  B5EB               	btfsc	(_I2C_Status+35)& (0+255),2,b
 17792  0048FC  EF82  F024         	goto	i2u926_41
 17793  004900  EF84  F024         	goto	i2u926_40
 17794  004904                     i2u926_41:
 17795  004904  EFBE  F024         	goto	i2l11409
 17796  004908                     i2u926_40:
 17797  004908                     
 17798                           ; BSR set to: 0
 17799                           ;mcc_generated_files/i2c_master.c: 181:     {;mcc_generated_files/i2c_master.c: 182:    
      +                               I2C_Status.address = address;
 17800  004908  C001  F0E4         	movff	i2I2C_Open@address,_I2C_Status+28
 17801  00490C                     
 17802                           ; BSR set to: 0
 17803                           ;mcc_generated_files/i2c_master.c: 183:         I2C_Status.busy = 0;
 17804  00490C  93EB               	bcf	(_I2C_Status+35)& (0+255),1,b
 17805  00490E                     
 17806                           ; BSR set to: 0
 17807                           ;mcc_generated_files/i2c_master.c: 184:         I2C_Status.inUse = 1;
 17808  00490E  85EB               	bsf	(_I2C_Status+35)& (0+255),2,b
 17809  004910                     
 17810                           ; BSR set to: 0
 17811                           ;mcc_generated_files/i2c_master.c: 185:         I2C_Status.addressNackCheck = 0;
 17812  004910  91EB               	bcf	(_I2C_Status+35)& (0+255),0,b
 17813  004912                     
 17814                           ; BSR set to: 0
 17815                           ;mcc_generated_files/i2c_master.c: 186:         I2C_Status.state = I2C_RESET;
 17816  004912  0E0E               	movlw	14
 17817  004914  6FE9               	movwf	(_I2C_Status+33)& (0+255),b
 17818  004916                     
 17819                           ; BSR set to: 0
 17820                           ;mcc_generated_files/i2c_master.c: 187:         I2C_Status.time_out_value = 500;
 17821  004916  0E01               	movlw	1
 17822  004918  6FE3               	movwf	(_I2C_Status+27)& (0+255),b
 17823  00491A  0EF4               	movlw	244
 17824  00491C  6FE2               	movwf	(_I2C_Status+26)& (0+255),b
 17825  00491E                     
 17826                           ; BSR set to: 0
 17827                           ;mcc_generated_files/i2c_master.c: 188:         I2C_Status.bufferFree = 1;
 17828  00491E  87EB               	bsf	(_I2C_Status+35)& (0+255),3,b
 17829  004920                     
 17830                           ; BSR set to: 0
 17831                           ;mcc_generated_files/i2c_master.c: 191:         I2C_Status.callbackTable[I2C_DATA_COMPLE
      +                          TE]=I2C_CallbackReturnStop;
 17832  004920  0ECE               	movlw	low i2_I2C_CallbackReturnStop
 17833  004922  6FC8               	movwf	_I2C_Status& (0+255),b
 17834  004924  0E63               	movlw	high i2_I2C_CallbackReturnStop
 17835  004926  6FC9               	movwf	(_I2C_Status+1)& (0+255),b
 17836  004928                     
 17837                           ; BSR set to: 0
 17838                           ;mcc_generated_files/i2c_master.c: 192:         I2C_Status.callbackPayload[I2C_DATA_COMP
      +                          LETE] = ((void*)0);
 17839  004928  0E00               	movlw	0
 17840  00492A  6FD4               	movwf	(_I2C_Status+12)& (0+255),b
 17841  00492C  0E00               	movlw	0
 17842  00492E  6FD5               	movwf	(_I2C_Status+13)& (0+255),b
 17843  004930                     
 17844                           ; BSR set to: 0
 17845                           ;mcc_generated_files/i2c_master.c: 193:         I2C_Status.callbackTable[I2C_WRITE_COLLI
      +                          SION]=I2C_CallbackReturnStop;
 17846  004930  0ECE               	movlw	low i2_I2C_CallbackReturnStop
 17847  004932  6FCA               	movwf	(_I2C_Status+2)& (0+255),b
 17848  004934  0E63               	movlw	high i2_I2C_CallbackReturnStop
 17849  004936  6FCB               	movwf	(_I2C_Status+3)& (0+255),b
 17850  004938                     
 17851                           ; BSR set to: 0
 17852                           ;mcc_generated_files/i2c_master.c: 194:         I2C_Status.callbackPayload[I2C_WRITE_COL
      +                          LISION] = ((void*)0);
 17853  004938  0E00               	movlw	0
 17854  00493A  6FD6               	movwf	(_I2C_Status+14)& (0+255),b
 17855  00493C  0E00               	movlw	0
 17856  00493E  6FD7               	movwf	(_I2C_Status+15)& (0+255),b
 17857  004940                     
 17858                           ; BSR set to: 0
 17859                           ;mcc_generated_files/i2c_master.c: 195:         I2C_Status.callbackTable[I2C_ADDR_NACK]=
      +                          I2C_CallbackReturnStop;
 17860  004940  0ECE               	movlw	low i2_I2C_CallbackReturnStop
 17861  004942  6FCC               	movwf	(_I2C_Status+4)& (0+255),b
 17862  004944  0E63               	movlw	high i2_I2C_CallbackReturnStop
 17863  004946  6FCD               	movwf	(_I2C_Status+5)& (0+255),b
 17864  004948                     
 17865                           ; BSR set to: 0
 17866                           ;mcc_generated_files/i2c_master.c: 196:         I2C_Status.callbackPayload[I2C_ADDR_NACK
      +                          ] = ((void*)0);
 17867  004948  0E00               	movlw	0
 17868  00494A  6FD8               	movwf	(_I2C_Status+16)& (0+255),b
 17869  00494C  0E00               	movlw	0
 17870  00494E  6FD9               	movwf	(_I2C_Status+17)& (0+255),b
 17871  004950                     
 17872                           ; BSR set to: 0
 17873                           ;mcc_generated_files/i2c_master.c: 197:         I2C_Status.callbackTable[I2C_DATA_NACK]=
      +                          I2C_CallbackReturnStop;
 17874  004950  0ECE               	movlw	low i2_I2C_CallbackReturnStop
 17875  004952  6FCE               	movwf	(_I2C_Status+6)& (0+255),b
 17876  004954  0E63               	movlw	high i2_I2C_CallbackReturnStop
 17877  004956  6FCF               	movwf	(_I2C_Status+7)& (0+255),b
 17878  004958                     
 17879                           ; BSR set to: 0
 17880                           ;mcc_generated_files/i2c_master.c: 198:         I2C_Status.callbackPayload[I2C_DATA_NACK
      +                          ] = ((void*)0);
 17881  004958  0E00               	movlw	0
 17882  00495A  6FDA               	movwf	(_I2C_Status+18)& (0+255),b
 17883  00495C  0E00               	movlw	0
 17884  00495E  6FDB               	movwf	(_I2C_Status+19)& (0+255),b
 17885  004960                     
 17886                           ; BSR set to: 0
 17887                           ;mcc_generated_files/i2c_master.c: 199:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2
      +                          C_CallbackReturnReset;
 17888  004960  0ECA               	movlw	low i2_I2C_CallbackReturnReset
 17889  004962  6FD0               	movwf	(_I2C_Status+8)& (0+255),b
 17890  004964  0E63               	movlw	high i2_I2C_CallbackReturnReset
 17891  004966  6FD1               	movwf	(_I2C_Status+9)& (0+255),b
 17892  004968                     
 17893                           ; BSR set to: 0
 17894                           ;mcc_generated_files/i2c_master.c: 200:         I2C_Status.callbackPayload[I2C_TIMEOUT] 
      +                          = ((void*)0);
 17895  004968  0E00               	movlw	0
 17896  00496A  6FDC               	movwf	(_I2C_Status+20)& (0+255),b
 17897  00496C  0E00               	movlw	0
 17898  00496E  6FDD               	movwf	(_I2C_Status+21)& (0+255),b
 17899  004970                     
 17900                           ; BSR set to: 0
 17901                           ;mcc_generated_files/i2c_master.c: 202:         I2C_MasterClearIrq();
 17902  004970  ECF3  F031         	call	i2_I2C_MasterClearIrq	;wreg free
 17903  004974                     
 17904                           ;mcc_generated_files/i2c_master.c: 203:         I2C_MasterOpen();
 17905  004974  EC09  F030         	call	i2_I2C_MasterOpen	;wreg free
 17906  004978                     
 17907                           ;mcc_generated_files/i2c_master.c: 204:         returnValue = I2C_NOERR;
 17908  004978  0E00               	movlw	0
 17909  00497A  6E02               	movwf	i2I2C_Open@returnValue^0,c
 17910  00497C                     i2l11409:
 17911                           
 17912                           ;mcc_generated_files/i2c_master.c: 206:     return returnValue;
 17913  00497C  5002               	movf	i2I2C_Open@returnValue^0,w,c
 17914  00497E  0012               	return		;funcret
 17915  004980                     __end_ofi2_I2C_Open:
 17916                           	callstack 0
 17917                           
 17918 ;; *************** function i2_I2C_MasterOpen *****************
 17919 ;; Defined at:
 17920 ;;		line 543 in file "mcc_generated_files/i2c_master.c"
 17921 ;; Parameters:    Size  Location     Type
 17922 ;;		None
 17923 ;; Auto vars:     Size  Location     Type
 17924 ;;		None
 17925 ;; Return value:  Size  Location     Type
 17926 ;;                  1    wreg      _Bool 
 17927 ;; Registers used:
 17928 ;;		wreg, status,2
 17929 ;; Tracked objects:
 17930 ;;		On entry : 0/0
 17931 ;;		On exit  : 0/0
 17932 ;;		Unchanged: 0/0
 17933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17938 ;;Total ram usage:        0 bytes
 17939 ;; Hardware stack levels used: 1
 17940 ;; This function calls:
 17941 ;;		Nothing
 17942 ;; This function is called by:
 17943 ;;		i2_I2C_Open
 17944 ;; This function uses a non-reentrant model
 17945 ;;
 17946                           
 17947                           	psect	text127
 17948  006012                     __ptext127:
 17949                           	callstack 0
 17950  006012                     i2_I2C_MasterOpen:
 17951                           	callstack 14
 17952  006012                     
 17953                           ;mcc_generated_files/i2c_master.c: 545:     if(!SSPCON1bits.SSPEN)
 17954  006012  BAC6               	btfsc	198,5,c	;volatile
 17955  006014  EF0E  F030         	goto	i2u502_41
 17956  006018  EF10  F030         	goto	i2u502_40
 17957  00601C                     i2u502_41:
 17958  00601C  EF19  F030         	goto	i2l1328
 17959  006020                     i2u502_40:
 17960  006020                     
 17961                           ;mcc_generated_files/i2c_master.c: 546:     {;mcc_generated_files/i2c_master.c: 547:    
      +                               SSPSTAT = 0x80;
 17962  006020  0E80               	movlw	128
 17963  006022  6EC7               	movwf	199,c	;volatile
 17964                           
 17965                           ;mcc_generated_files/i2c_master.c: 548:         SSPCON1 = 0x08;
 17966  006024  0E08               	movlw	8
 17967  006026  6EC6               	movwf	198,c	;volatile
 17968                           
 17969                           ;mcc_generated_files/i2c_master.c: 549:         SSPCON2 = 0x00;
 17970  006028  0E00               	movlw	0
 17971  00602A  6EC5               	movwf	197,c	;volatile
 17972                           
 17973                           ;mcc_generated_files/i2c_master.c: 550:         SSPADD = 0x03;
 17974  00602C  0E03               	movlw	3
 17975  00602E  6EC8               	movwf	200,c	;volatile
 17976  006030                     
 17977                           ;mcc_generated_files/i2c_master.c: 551:         SSPCON1bits.SSPEN = 1;
 17978  006030  8AC6               	bsf	198,5,c	;volatile
 17979  006032                     i2l1328:
 17980  006032  0012               	return		;funcret
 17981  006034                     __end_ofi2_I2C_MasterOpen:
 17982                           	callstack 0
 17983                           
 17984 ;; *************** function i2_I2C_MasterWrite *****************
 17985 ;; Defined at:
 17986 ;;		line 251 in file "mcc_generated_files/i2c_master.c"
 17987 ;; Parameters:    Size  Location     Type
 17988 ;;		None
 17989 ;; Auto vars:     Size  Location     Type
 17990 ;;		None
 17991 ;; Return value:  Size  Location     Type
 17992 ;;                  1    wreg      enum E355
 17993 ;; Registers used:
 17994 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17995 ;; Tracked objects:
 17996 ;;		On entry : 0/0
 17997 ;;		On exit  : 0/0
 17998 ;;		Unchanged: 0/0
 17999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18004 ;;Total ram usage:        0 bytes
 18005 ;; Hardware stack levels used: 1
 18006 ;; Hardware stack levels required when called: 7
 18007 ;; This function calls:
 18008 ;;		i2_I2C_MasterOperation
 18009 ;; This function is called by:
 18010 ;;		i2_I2C_Read1ByteRegister
 18011 ;;		i2_I2C_Write1ByteRegister
 18012 ;; This function uses a non-reentrant model
 18013 ;;
 18014                           
 18015                           	psect	text128
 18016  00633A                     __ptext128:
 18017                           	callstack 0
 18018  00633A                     i2_I2C_MasterWrite:
 18019                           	callstack 8
 18020  00633A                     
 18021                           ;mcc_generated_files/i2c_master.c: 253:     return I2C_MasterOperation(0);;	Return value
      +                           of i2_I2C_MasterWrite is never used
 18022  00633A  0E00               	movlw	0
 18023  00633C  EC01  F02D         	call	i2_I2C_MasterOperation
 18024  006340  0012               	return		;funcret
 18025  006342                     __end_ofi2_I2C_MasterWrite:
 18026                           	callstack 0
 18027                           
 18028 ;; *************** function i2_I2C_MasterOperation *****************
 18029 ;; Defined at:
 18030 ;;		line 224 in file "mcc_generated_files/i2c_master.c"
 18031 ;; Parameters:    Size  Location     Type
 18032 ;;  read            1    wreg     _Bool 
 18033 ;; Auto vars:     Size  Location     Type
 18034 ;;  read            1   15[COMRAM] _Bool 
 18035 ;;  returnValue     1   16[COMRAM] enum E355
 18036 ;; Return value:  Size  Location     Type
 18037 ;;                  1    wreg      enum E355
 18038 ;; Registers used:
 18039 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18040 ;; Tracked objects:
 18041 ;;		On entry : 0/0
 18042 ;;		On exit  : 0/0
 18043 ;;		Unchanged: 0/0
 18044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18046 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18048 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18049 ;;Total ram usage:        2 bytes
 18050 ;; Hardware stack levels used: 1
 18051 ;; Hardware stack levels required when called: 6
 18052 ;; This function calls:
 18053 ;;		i2_I2C_MasterStart
 18054 ;;		i2_I2C_Poller
 18055 ;; This function is called by:
 18056 ;;		i2_I2C_MasterWrite
 18057 ;; This function uses a non-reentrant model
 18058 ;;
 18059                           
 18060                           	psect	text129
 18061  005A02                     __ptext129:
 18062                           	callstack 0
 18063  005A02                     i2_I2C_MasterOperation:
 18064                           	callstack 8
 18065                           
 18066                           ;incstack = 0
 18067                           ;i2I2C_MasterOperation@read stored from wreg
 18068  005A02  6E10               	movwf	i2I2C_MasterOperation@read^0,c
 18069  005A04                     
 18070                           ;mcc_generated_files/i2c_master.c: 224: i2c_error_t I2C_MasterOperation(_Bool read);mcc_
      +                          generated_files/i2c_master.c: 225: {;mcc_generated_files/i2c_master.c: 226:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
 18071  005A04  0E01               	movlw	1
 18072  005A06  6E11               	movwf	i2I2C_MasterOperation@returnValue^0,c
 18073  005A08                     
 18074                           ;mcc_generated_files/i2c_master.c: 227:     if(!I2C_Status.busy)
 18075  005A08  0100               	movlb	0	; () banked
 18076  005A0A  B3EB               	btfsc	(_I2C_Status+35)& (0+255),1,b
 18077  005A0C  EF0A  F02D         	goto	i2u911_41
 18078  005A10  EF0C  F02D         	goto	i2u911_40
 18079  005A14                     i2u911_41:
 18080  005A14  EF21  F02D         	goto	i2l11255
 18081  005A18                     i2u911_40:
 18082  005A18                     
 18083                           ; BSR set to: 0
 18084                           ;mcc_generated_files/i2c_master.c: 228:     {;mcc_generated_files/i2c_master.c: 229:    
      +                               I2C_Status.busy = 1;
 18085  005A18  83EB               	bsf	(_I2C_Status+35)& (0+255),1,b
 18086  005A1A                     
 18087                           ; BSR set to: 0
 18088                           ;mcc_generated_files/i2c_master.c: 230:         returnValue = I2C_NOERR;
 18089  005A1A  0E00               	movlw	0
 18090  005A1C  6E11               	movwf	i2I2C_MasterOperation@returnValue^0,c
 18091  005A1E                     
 18092                           ; BSR set to: 0
 18093                           ;mcc_generated_files/i2c_master.c: 232:         if(read)
 18094  005A1E  5010               	movf	i2I2C_MasterOperation@read^0,w,c
 18095  005A20  B4D8               	btfsc	status,2,c
 18096  005A22  EF15  F02D         	goto	i2u912_41
 18097  005A26  EF17  F02D         	goto	i2u912_40
 18098  005A2A                     i2u912_41:
 18099  005A2A  EF1B  F02D         	goto	i2l11249
 18100  005A2E                     i2u912_40:
 18101  005A2E                     
 18102                           ; BSR set to: 0
 18103                           ;mcc_generated_files/i2c_master.c: 233:         {;mcc_generated_files/i2c_master.c: 234:
      +                                       I2C_Status.state = I2C_SEND_ADR_READ;
 18104  005A2E  0E01               	movlw	1
 18105  005A30  6FE9               	movwf	(_I2C_Status+33)& (0+255),b
 18106                           
 18107                           ;mcc_generated_files/i2c_master.c: 235:         }
 18108  005A32  EF1D  F02D         	goto	i2l11251
 18109  005A36                     i2l11249:
 18110                           
 18111                           ; BSR set to: 0
 18112                           ;mcc_generated_files/i2c_master.c: 237:         {;mcc_generated_files/i2c_master.c: 238:
      +                                       I2C_Status.state = I2C_SEND_ADR_WRITE;
 18113  005A36  0E02               	movlw	2
 18114  005A38  6FE9               	movwf	(_I2C_Status+33)& (0+255),b
 18115  005A3A                     i2l11251:
 18116                           
 18117                           ; BSR set to: 0
 18118                           ;mcc_generated_files/i2c_master.c: 240:         I2C_MasterStart();
 18119  005A3A  ECED  F031         	call	i2_I2C_MasterStart	;wreg free
 18120  005A3E                     
 18121                           ;mcc_generated_files/i2c_master.c: 241:         I2C_Poller();
 18122  005A3E  EC29  F030         	call	i2_I2C_Poller	;wreg free
 18123  005A42                     i2l11255:
 18124                           
 18125                           ;mcc_generated_files/i2c_master.c: 243:     return returnValue;
 18126  005A42  5011               	movf	i2I2C_MasterOperation@returnValue^0,w,c
 18127  005A44  0012               	return		;funcret
 18128  005A46                     __end_ofi2_I2C_MasterOperation:
 18129                           	callstack 0
 18130                           
 18131 ;; *************** function i2_I2C_Poller *****************
 18132 ;; Defined at:
 18133 ;;		line 312 in file "mcc_generated_files/i2c_master.c"
 18134 ;; Parameters:    Size  Location     Type
 18135 ;;		None
 18136 ;; Auto vars:     Size  Location     Type
 18137 ;;		None
 18138 ;; Return value:  Size  Location     Type
 18139 ;;                  1    wreg      void 
 18140 ;; Registers used:
 18141 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18142 ;; Tracked objects:
 18143 ;;		On entry : 0/0
 18144 ;;		On exit  : 0/0
 18145 ;;		Unchanged: 0/0
 18146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18151 ;;Total ram usage:        0 bytes
 18152 ;; Hardware stack levels used: 1
 18153 ;; Hardware stack levels required when called: 5
 18154 ;; This function calls:
 18155 ;;		i2_I2C_MasterFsm
 18156 ;;		i2_I2C_MasterWaitForEvent
 18157 ;; This function is called by:
 18158 ;;		i2_I2C_MasterOperation
 18159 ;; This function uses a non-reentrant model
 18160 ;;
 18161                           
 18162                           	psect	text130
 18163  006052                     __ptext130:
 18164                           	callstack 0
 18165  006052                     i2_I2C_Poller:
 18166                           	callstack 8
 18167  006052                     
 18168                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
 18169  006052  EF2F  F030         	goto	i2l11131
 18170  006056                     i2l11127:
 18171                           
 18172                           ; BSR set to: 0
 18173                           ;mcc_generated_files/i2c_master.c: 315:     {;mcc_generated_files/i2c_master.c: 316:    
      +                               I2C_MasterWaitForEvent();
 18174  006056  EC57  F031         	call	i2_I2C_MasterWaitForEvent	;wreg free
 18175  00605A                     
 18176                           ;mcc_generated_files/i2c_master.c: 317:         I2C_MasterFsm();
 18177  00605A  EC11  F029         	call	i2_I2C_MasterFsm	;wreg free
 18178  00605E                     i2l11131:
 18179                           
 18180                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
 18181  00605E  0100               	movlb	0	; () banked
 18182  006060  B3EB               	btfsc	(_I2C_Status+35)& (0+255),1,b
 18183  006062  EF35  F030         	goto	i2u885_41
 18184  006066  EF37  F030         	goto	i2u885_40
 18185  00606A                     i2u885_41:
 18186  00606A  EF2B  F030         	goto	i2l11127
 18187  00606E                     i2u885_40:
 18188  00606E                     
 18189                           ; BSR set to: 0
 18190  00606E  0012               	return		;funcret
 18191  006070                     __end_ofi2_I2C_Poller:
 18192                           	callstack 0
 18193                           
 18194 ;; *************** function i2_I2C_MasterWaitForEvent *****************
 18195 ;; Defined at:
 18196 ;;		line 650 in file "mcc_generated_files/i2c_master.c"
 18197 ;; Parameters:    Size  Location     Type
 18198 ;;		None
 18199 ;; Auto vars:     Size  Location     Type
 18200 ;;		None
 18201 ;; Return value:  Size  Location     Type
 18202 ;;                  1    wreg      void 
 18203 ;; Registers used:
 18204 ;;		None
 18205 ;; Tracked objects:
 18206 ;;		On entry : 0/0
 18207 ;;		On exit  : 0/0
 18208 ;;		Unchanged: 0/0
 18209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18214 ;;Total ram usage:        0 bytes
 18215 ;; Hardware stack levels used: 1
 18216 ;; This function calls:
 18217 ;;		Nothing
 18218 ;; This function is called by:
 18219 ;;		i2_I2C_Poller
 18220 ;; This function uses a non-reentrant model
 18221 ;;
 18222                           
 18223                           	psect	text131
 18224  0062AE                     __ptext131:
 18225                           	callstack 0
 18226  0062AE                     i2_I2C_MasterWaitForEvent:
 18227                           	callstack 12
 18228  0062AE                     i2l1385:
 18229                           
 18230                           ;mcc_generated_files/i2c_master.c: 653:     {;mcc_generated_files/i2c_master.c: 654:    
      +                               if(PIR1bits.SSPIF)
 18231  0062AE  A69E               	btfss	158,3,c	;volatile
 18232  0062B0  EF5C  F031         	goto	i2u448_41
 18233  0062B4  EF5E  F031         	goto	i2u448_40
 18234  0062B8                     i2u448_41:
 18235  0062B8  EF57  F031         	goto	i2l1385
 18236  0062BC                     i2u448_40:
 18237  0062BC  0012               	return		;funcret
 18238  0062BE                     __end_ofi2_I2C_MasterWaitForEvent:
 18239                           	callstack 0
 18240                           
 18241 ;; *************** function i2_I2C_MasterFsm *****************
 18242 ;; Defined at:
 18243 ;;		line 321 in file "mcc_generated_files/i2c_master.c"
 18244 ;; Parameters:    Size  Location     Type
 18245 ;;		None
 18246 ;; Auto vars:     Size  Location     Type
 18247 ;;		None
 18248 ;; Return value:  Size  Location     Type
 18249 ;;                  1    wreg      void 
 18250 ;; Registers used:
 18251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18252 ;; Tracked objects:
 18253 ;;		On entry : 0/0
 18254 ;;		On exit  : 0/0
 18255 ;;		Unchanged: 0/0
 18256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18259 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18260 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18261 ;;Total ram usage:        2 bytes
 18262 ;; Hardware stack levels used: 1
 18263 ;; Hardware stack levels required when called: 4
 18264 ;; This function calls:
 18265 ;;		i2_I2C_DO_ADDRESS_NACK
 18266 ;;		i2_I2C_DO_IDLE
 18267 ;;		i2_I2C_DO_RCEN
 18268 ;;		i2_I2C_DO_RESET
 18269 ;;		i2_I2C_DO_RX
 18270 ;;		i2_I2C_DO_RX_ACK
 18271 ;;		i2_I2C_DO_RX_NACK_RESTART
 18272 ;;		i2_I2C_DO_RX_NACK_STOP
 18273 ;;		i2_I2C_DO_SEND_ADR_READ
 18274 ;;		i2_I2C_DO_SEND_ADR_WRITE
 18275 ;;		i2_I2C_DO_SEND_RESTART
 18276 ;;		i2_I2C_DO_SEND_RESTART_READ
 18277 ;;		i2_I2C_DO_SEND_RESTART_WRITE
 18278 ;;		i2_I2C_DO_SEND_STOP
 18279 ;;		i2_I2C_DO_TX
 18280 ;;		i2_I2C_DO_TX_EMPTY
 18281 ;;		i2_I2C_MasterClearIrq
 18282 ;;		i2_I2C_MasterIsNack
 18283 ;; This function is called by:
 18284 ;;		i2_I2C_Poller
 18285 ;; This function uses a non-reentrant model
 18286 ;;
 18287                           
 18288                           	psect	text132
 18289  005222                     __ptext132:
 18290                           	callstack 0
 18291  005222                     i2_I2C_MasterFsm:
 18292                           	callstack 8
 18293  005222                     
 18294                           ;mcc_generated_files/i2c_master.c: 323:     I2C_MasterClearIrq();
 18295  005222  ECF3  F031         	call	i2_I2C_MasterClearIrq	;wreg free
 18296  005226                     
 18297                           ;mcc_generated_files/i2c_master.c: 325:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
 18298  005226  0100               	movlb	0	; () banked
 18299  005228  A1EB               	btfss	(_I2C_Status+35)& (0+255),0,b
 18300  00522A  EF19  F029         	goto	i2u857_41
 18301  00522E  EF1B  F029         	goto	i2u857_40
 18302  005232                     i2u857_41:
 18303  005232  EF28  F029         	goto	i2l10861
 18304  005236                     i2u857_40:
 18305  005236                     
 18306                           ; BSR set to: 0
 18307  005236  EC06  F031         	call	i2_I2C_MasterIsNack	;wreg free
 18308  00523A  0900               	iorlw	0
 18309  00523C  B4D8               	btfsc	status,2,c
 18310  00523E  EF23  F029         	goto	i2u858_41
 18311  005242  EF25  F029         	goto	i2u858_40
 18312  005246                     i2u858_41:
 18313  005246  EF28  F029         	goto	i2l10861
 18314  00524A                     i2u858_40:
 18315  00524A                     
 18316                           ;mcc_generated_files/i2c_master.c: 326:     {;mcc_generated_files/i2c_master.c: 327:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
 18317  00524A  0E0F               	movlw	15
 18318  00524C  0100               	movlb	0	; () banked
 18319  00524E  6FE9               	movwf	(_I2C_Status+33)& (0+255),b
 18320  005250                     i2l10861:
 18321                           
 18322                           ;mcc_generated_files/i2c_master.c: 329:     I2C_Status.state = i2c_fsmStateTable[I2C_Sta
      +                          tus.state]();
 18323  005250  0100               	movlb	0	; () banked
 18324  005252  51E9               	movf	(_I2C_Status+33)& (0+255),w,b
 18325  005254  0D02               	mullw	2
 18326  005256  0E01               	movlw	low _i2c_fsmStateTable
 18327  005258  24F3               	addwf	243,w,c
 18328  00525A  6EF6               	movwf	tblptrl,c
 18329  00525C  0E10               	movlw	high _i2c_fsmStateTable
 18330  00525E  20F4               	addwfc	244,w,c
 18331  005260  6EF7               	movwf	tblptrh,c
 18332  005262                     	if	1	;There are 3 active tblptr bytes
 18333  005262  6AF8               	clrf	tblptru,c
 18334  005264  0E00               	movlw	low (__mediumconst shr (0+16))
 18335  005266  22F8               	addwfc	tblptru,f,c
 18336  005268                     	endif
 18337  005268  0009               	tblrd		*+
 18338  00526A  CFF5 F00E          	movff	tablat,??i2_I2C_MasterFsm
 18339  00526E  0009               	tblrd		*+
 18340  005270  CFF5 F00F          	movff	tablat,??i2_I2C_MasterFsm+1
 18341  005274  D802               	call	i2u859_48
 18342  005276  EF46  F029         	goto	i2u859_49
 18343  00527A                     i2u859_48:
 18344  00527A  0005               	push	
 18345  00527C  6EFA               	movwf	pclath,c
 18346  00527E  500E               	movf	??i2_I2C_MasterFsm^0,w,c
 18347  005280  6EFD               	movwf	tosl,c
 18348  005282  500F               	movf	(??i2_I2C_MasterFsm+1)^0,w,c
 18349  005284  6EFE               	movwf	tosh,c
 18350  005286  6AFF               	clrf	tosu,c
 18351  005288  50FA               	movf	pclath,w,c
 18352  00528A  0012               	return		;indir
 18353  00528C                     i2u859_49:
 18354  00528C  0100               	movlb	0	; () banked
 18355  00528E  6FE9               	movwf	(_I2C_Status+33)& (0+255),b
 18356  005290                     
 18357                           ; BSR set to: 0
 18358  005290  0012               	return		;funcret
 18359  005292                     __end_ofi2_I2C_MasterFsm:
 18360                           	callstack 0
 18361                           
 18362 ;; *************** function i2_I2C_DO_ADDRESS_NACK *****************
 18363 ;; Defined at:
 18364 ;;		line 500 in file "mcc_generated_files/i2c_master.c"
 18365 ;; Parameters:    Size  Location     Type
 18366 ;;		None
 18367 ;; Auto vars:     Size  Location     Type
 18368 ;;		None
 18369 ;; Return value:  Size  Location     Type
 18370 ;;                  1    wreg      enum E2863
 18371 ;; Registers used:
 18372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 18373 ;; Tracked objects:
 18374 ;;		On entry : 0/0
 18375 ;;		On exit  : 0/0
 18376 ;;		Unchanged: 0/0
 18377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18380 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18381 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18382 ;;Total ram usage:        2 bytes
 18383 ;; Hardware stack levels used: 1
 18384 ;; Hardware stack levels required when called: 3
 18385 ;; This function calls:
 18386 ;;		Absolute function
 18387 ;;		i2_I2C_CallbackReturnReset
 18388 ;;		i2_I2C_CallbackReturnStop
 18389 ;;		i2_I2C_DO_SEND_RESTART
 18390 ;;		i2_I2C_DO_SEND_STOP
 18391 ;;		i2_rd1RegCompleteHandler
 18392 ;;		i2_rd2RegCompleteHandler
 18393 ;;		i2_rdBlkRegCompleteHandler
 18394 ;;		i2_wr1RegCompleteHandler
 18395 ;;		i2_wr2RegCompleteHandler
 18396 ;; This function is called by:
 18397 ;; This function uses a non-reentrant model
 18398 ;;
 18399                           
 18400                           	psect	text133
 18401  00557A                     __ptext133:
 18402                           	callstack 0
 18403  00557A                     i2_I2C_DO_ADDRESS_NACK:
 18404                           	callstack 8
 18405  00557A                     
 18406                           ;mcc_generated_files/i2c_master.c: 502:     I2C_Status.addressNackCheck = 0;
 18407  00557A  0100               	movlb	0	; () banked
 18408  00557C  91EB               	bcf	(_I2C_Status+35)& (0+255),0,b
 18409  00557E                     
 18410                           ; BSR set to: 0
 18411                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.error = I2C_FAIL;
 18412  00557E  0E02               	movlw	2
 18413  005580  6FEA               	movwf	(_I2C_Status+34)& (0+255),b
 18414                           
 18415                           ;mcc_generated_files/i2c_master.c: 504:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
 18416  005582  EFCB  F02A         	goto	i2l10729
 18417  005586                     i2l10719:
 18418                           
 18419                           ;mcc_generated_files/i2c_master.c: 508:             return I2C_DO_SEND_RESTART();
 18420  005586  ECB1  F031         	call	i2_I2C_DO_SEND_RESTART	;wreg free
 18421  00558A  EFEF  F02A         	goto	i2l1307
 18422  00558E                     i2l10723:
 18423                           
 18424                           ;mcc_generated_files/i2c_master.c: 510:             return I2C_DO_SEND_STOP();
 18425  00558E  ECAD  F031         	call	i2_I2C_DO_SEND_STOP	;wreg free
 18426  005592  EFEF  F02A         	goto	i2l1307
 18427  005596                     i2l10729:
 18428                           
 18429                           ; BSR set to: 0
 18430  005596  C0D8  F00A         	movff	_I2C_Status+16,i2rd1RegCompleteHandler@ptr
 18431  00559A  C0D9  F00B         	movff	_I2C_Status+17,i2rd1RegCompleteHandler@ptr+1
 18432  00559E  D802               	call	i2u853_48
 18433  0055A0  EFDB  F02A         	goto	i2u853_49
 18434  0055A4                     i2u853_48:
 18435  0055A4  0005               	push	
 18436  0055A6  6EFA               	movwf	pclath,c
 18437  0055A8  51CC               	movf	(_I2C_Status+4)& (0+255),w,b
 18438  0055AA  6EFD               	movwf	tosl,c
 18439  0055AC  51CD               	movf	(_I2C_Status+5)& (0+255),w,b
 18440  0055AE  6EFE               	movwf	tosh,c
 18441  0055B0  6AFF               	clrf	tosu,c
 18442  0055B2  50FA               	movf	pclath,w,c
 18443  0055B4  0012               	return		;indir
 18444  0055B6                     i2u853_49:
 18445  0055B6  6E0C               	movwf	??i2_I2C_DO_ADDRESS_NACK^0,c
 18446  0055B8  6A0D               	clrf	(??i2_I2C_DO_ADDRESS_NACK+1)^0,c
 18447                           
 18448                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18449                           ; Switch size 1, requested type "simple"
 18450                           ; Number of cases is 1, Range of values is 0 to 0
 18451                           ; switch strategies available:
 18452                           ; Name         Instructions Cycles
 18453                           ; simple_byte            4     3 (average)
 18454                           ;	Chosen strategy is simple_byte
 18455  0055BA  500D               	movf	(??i2_I2C_DO_ADDRESS_NACK+1)^0,w,c
 18456  0055BC  0A00               	xorlw	0	; case 0
 18457  0055BE  B4D8               	btfsc	status,2,c
 18458  0055C0  EFE4  F02A         	goto	i2l13675
 18459  0055C4  EFC7  F02A         	goto	i2l10723
 18460  0055C8                     i2l13675:
 18461                           
 18462                           ; Switch size 1, requested type "simple"
 18463                           ; Number of cases is 2, Range of values is 2 to 3
 18464                           ; switch strategies available:
 18465                           ; Name         Instructions Cycles
 18466                           ; simple_byte            7     4 (average)
 18467                           ;	Chosen strategy is simple_byte
 18468  0055C8  500C               	movf	??i2_I2C_DO_ADDRESS_NACK^0,w,c
 18469  0055CA  0A02               	xorlw	2	; case 2
 18470  0055CC  B4D8               	btfsc	status,2,c
 18471  0055CE  EFC3  F02A         	goto	i2l10719
 18472  0055D2  0A01               	xorlw	1	; case 3
 18473  0055D4  B4D8               	btfsc	status,2,c
 18474  0055D6  EFC3  F02A         	goto	i2l10719
 18475  0055DA  EFC7  F02A         	goto	i2l10723
 18476  0055DE                     i2l1307:
 18477  0055DE  0012               	return		;funcret
 18478  0055E0                     __end_ofi2_I2C_DO_ADDRESS_NACK:
 18479                           	callstack 0
 18480                           
 18481 ;; *************** function i2_I2C_DO_RESET *****************
 18482 ;; Defined at:
 18483 ;;		line 494 in file "mcc_generated_files/i2c_master.c"
 18484 ;; Parameters:    Size  Location     Type
 18485 ;;		None
 18486 ;; Auto vars:     Size  Location     Type
 18487 ;;		None
 18488 ;; Return value:  Size  Location     Type
 18489 ;;                  1    wreg      enum E2863
 18490 ;; Registers used:
 18491 ;;		wreg, status,2
 18492 ;; Tracked objects:
 18493 ;;		On entry : 0/0
 18494 ;;		On exit  : 0/0
 18495 ;;		Unchanged: 0/0
 18496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18501 ;;Total ram usage:        0 bytes
 18502 ;; Hardware stack levels used: 1
 18503 ;; This function calls:
 18504 ;;		Nothing
 18505 ;; This function is called by:
 18506 ;; This function uses a non-reentrant model
 18507 ;;
 18508                           
 18509                           	psect	text134
 18510  006306                     __ptext134:
 18511                           	callstack 0
 18512  006306                     i2_I2C_DO_RESET:
 18513                           	callstack 11
 18514  006306                     
 18515                           ;mcc_generated_files/i2c_master.c: 496:     I2C_Status.busy = 0;
 18516  006306  0100               	movlb	0	; () banked
 18517  006308  93EB               	bcf	(_I2C_Status+35)& (0+255),1,b
 18518  00630A                     
 18519                           ; BSR set to: 0
 18520                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.error = I2C_NOERR;
 18521  00630A  0E00               	movlw	0
 18522  00630C  6FEA               	movwf	(_I2C_Status+34)& (0+255),b
 18523  00630E                     
 18524                           ; BSR set to: 0
 18525                           ;mcc_generated_files/i2c_master.c: 498:     return I2C_RESET;
 18526  00630E  0E0E               	movlw	14
 18527  006310                     
 18528                           ; BSR set to: 0
 18529  006310  0012               	return		;funcret
 18530  006312                     __end_ofi2_I2C_DO_RESET:
 18531                           	callstack 0
 18532                           
 18533 ;; *************** function i2_I2C_DO_RX_NACK_RESTART *****************
 18534 ;; Defined at:
 18535 ;;		line 488 in file "mcc_generated_files/i2c_master.c"
 18536 ;; Parameters:    Size  Location     Type
 18537 ;;		None
 18538 ;; Auto vars:     Size  Location     Type
 18539 ;;		None
 18540 ;; Return value:  Size  Location     Type
 18541 ;;                  1    wreg      enum E2863
 18542 ;; Registers used:
 18543 ;;		wreg, cstack
 18544 ;; Tracked objects:
 18545 ;;		On entry : 0/0
 18546 ;;		On exit  : 0/0
 18547 ;;		Unchanged: 0/0
 18548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18553 ;;Total ram usage:        0 bytes
 18554 ;; Hardware stack levels used: 1
 18555 ;; Hardware stack levels required when called: 1
 18556 ;; This function calls:
 18557 ;;		i2_I2C_MasterSendNack
 18558 ;; This function is called by:
 18559 ;;		i2_I2C_DO_RX
 18560 ;; This function uses a non-reentrant model
 18561 ;;
 18562                           
 18563                           	psect	text135
 18564  006342                     __ptext135:
 18565                           	callstack 0
 18566  006342                     i2_I2C_DO_RX_NACK_RESTART:
 18567                           	callstack 10
 18568  006342                     
 18569                           ;mcc_generated_files/i2c_master.c: 490:     I2C_MasterSendNack();
 18570  006342  ECCA  F031         	call	i2_I2C_MasterSendNack	;wreg free
 18571  006346                     
 18572                           ;mcc_generated_files/i2c_master.c: 491:     return I2C_SEND_RESTART;
 18573  006346  0E09               	movlw	9
 18574  006348  0012               	return		;funcret
 18575  00634A                     __end_ofi2_I2C_DO_RX_NACK_RESTART:
 18576                           	callstack 0
 18577                           
 18578 ;; *************** function i2_I2C_DO_RX_NACK_STOP *****************
 18579 ;; Defined at:
 18580 ;;		line 482 in file "mcc_generated_files/i2c_master.c"
 18581 ;; Parameters:    Size  Location     Type
 18582 ;;		None
 18583 ;; Auto vars:     Size  Location     Type
 18584 ;;		None
 18585 ;; Return value:  Size  Location     Type
 18586 ;;                  1    wreg      enum E2863
 18587 ;; Registers used:
 18588 ;;		wreg, cstack
 18589 ;; Tracked objects:
 18590 ;;		On entry : 0/0
 18591 ;;		On exit  : 0/0
 18592 ;;		Unchanged: 0/0
 18593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18598 ;;Total ram usage:        0 bytes
 18599 ;; Hardware stack levels used: 1
 18600 ;; Hardware stack levels required when called: 1
 18601 ;; This function calls:
 18602 ;;		i2_I2C_MasterSendNack
 18603 ;; This function is called by:
 18604 ;;		i2_I2C_DO_RX
 18605 ;; This function uses a non-reentrant model
 18606 ;;
 18607                           
 18608                           	psect	text136
 18609  00634A                     __ptext136:
 18610                           	callstack 0
 18611  00634A                     i2_I2C_DO_RX_NACK_STOP:
 18612                           	callstack 10
 18613  00634A                     
 18614                           ;mcc_generated_files/i2c_master.c: 484:     I2C_MasterSendNack();
 18615  00634A  ECCA  F031         	call	i2_I2C_MasterSendNack	;wreg free
 18616  00634E                     
 18617                           ;mcc_generated_files/i2c_master.c: 485:     return I2C_SEND_STOP;
 18618  00634E  0E0A               	movlw	10
 18619  006350  0012               	return		;funcret
 18620  006352                     __end_ofi2_I2C_DO_RX_NACK_STOP:
 18621                           	callstack 0
 18622                           
 18623 ;; *************** function i2_I2C_DO_RX_ACK *****************
 18624 ;; Defined at:
 18625 ;;		line 475 in file "mcc_generated_files/i2c_master.c"
 18626 ;; Parameters:    Size  Location     Type
 18627 ;;		None
 18628 ;; Auto vars:     Size  Location     Type
 18629 ;;		None
 18630 ;; Return value:  Size  Location     Type
 18631 ;;                  1    wreg      enum E2863
 18632 ;; Registers used:
 18633 ;;		wreg, cstack
 18634 ;; Tracked objects:
 18635 ;;		On entry : 0/0
 18636 ;;		On exit  : 0/0
 18637 ;;		Unchanged: 0/0
 18638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18643 ;;Total ram usage:        0 bytes
 18644 ;; Hardware stack levels used: 1
 18645 ;; Hardware stack levels required when called: 1
 18646 ;; This function calls:
 18647 ;;		i2_I2C_MasterSendAck
 18648 ;; This function is called by:
 18649 ;; This function uses a non-reentrant model
 18650 ;;
 18651                           
 18652                           	psect	text137
 18653  006352                     __ptext137:
 18654                           	callstack 0
 18655  006352                     i2_I2C_DO_RX_ACK:
 18656                           	callstack 10
 18657  006352                     
 18658                           ;mcc_generated_files/i2c_master.c: 477:     I2C_MasterSendAck();
 18659  006352  ECC7  F031         	call	i2_I2C_MasterSendAck	;wreg free
 18660  006356                     
 18661                           ;mcc_generated_files/i2c_master.c: 478:     return I2C_RCEN;
 18662  006356  0E05               	movlw	5
 18663  006358  0012               	return		;funcret
 18664  00635A                     __end_ofi2_I2C_DO_RX_ACK:
 18665                           	callstack 0
 18666                           
 18667 ;; *************** function i2_I2C_DO_SEND_STOP *****************
 18668 ;; Defined at:
 18669 ;;		line 469 in file "mcc_generated_files/i2c_master.c"
 18670 ;; Parameters:    Size  Location     Type
 18671 ;;		None
 18672 ;; Auto vars:     Size  Location     Type
 18673 ;;		None
 18674 ;; Return value:  Size  Location     Type
 18675 ;;                  1    wreg      enum E2863
 18676 ;; Registers used:
 18677 ;;		wreg, cstack
 18678 ;; Tracked objects:
 18679 ;;		On entry : 0/0
 18680 ;;		On exit  : 0/0
 18681 ;;		Unchanged: 0/0
 18682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18687 ;;Total ram usage:        0 bytes
 18688 ;; Hardware stack levels used: 1
 18689 ;; Hardware stack levels required when called: 1
 18690 ;; This function calls:
 18691 ;;		i2_I2C_MasterStop
 18692 ;; This function is called by:
 18693 ;;		i2_I2C_DO_TX
 18694 ;;		i2_I2C_DO_TX_EMPTY
 18695 ;;		i2_I2C_DO_ADDRESS_NACK
 18696 ;; This function uses a non-reentrant model
 18697 ;;
 18698                           
 18699                           	psect	text138
 18700  00635A                     __ptext138:
 18701                           	callstack 0
 18702  00635A                     i2_I2C_DO_SEND_STOP:
 18703                           	callstack 9
 18704  00635A                     
 18705                           ;mcc_generated_files/i2c_master.c: 471:     I2C_MasterStop();
 18706  00635A  ECE9  F031         	call	i2_I2C_MasterStop	;wreg free
 18707  00635E                     
 18708                           ;mcc_generated_files/i2c_master.c: 472:     return I2C_IDLE;
 18709  00635E  0E00               	movlw	0
 18710  006360  0012               	return		;funcret
 18711  006362                     __end_ofi2_I2C_DO_SEND_STOP:
 18712                           	callstack 0
 18713                           
 18714 ;; *************** function i2_I2C_DO_SEND_RESTART *****************
 18715 ;; Defined at:
 18716 ;;		line 463 in file "mcc_generated_files/i2c_master.c"
 18717 ;; Parameters:    Size  Location     Type
 18718 ;;		None
 18719 ;; Auto vars:     Size  Location     Type
 18720 ;;		None
 18721 ;; Return value:  Size  Location     Type
 18722 ;;                  1    wreg      enum E2863
 18723 ;; Registers used:
 18724 ;;		wreg, cstack
 18725 ;; Tracked objects:
 18726 ;;		On entry : 0/0
 18727 ;;		On exit  : 0/0
 18728 ;;		Unchanged: 0/0
 18729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18734 ;;Total ram usage:        0 bytes
 18735 ;; Hardware stack levels used: 1
 18736 ;; Hardware stack levels required when called: 1
 18737 ;; This function calls:
 18738 ;;		i2_I2C_MasterEnableRestart
 18739 ;; This function is called by:
 18740 ;;		i2_I2C_DO_TX_EMPTY
 18741 ;;		i2_I2C_DO_ADDRESS_NACK
 18742 ;; This function uses a non-reentrant model
 18743 ;;
 18744                           
 18745                           	psect	text139
 18746  006362                     __ptext139:
 18747                           	callstack 0
 18748  006362                     i2_I2C_DO_SEND_RESTART:
 18749                           	callstack 9
 18750  006362                     
 18751                           ;mcc_generated_files/i2c_master.c: 465:     I2C_MasterEnableRestart();
 18752  006362  ECEB  F031         	call	i2_I2C_MasterEnableRestart	;wreg free
 18753  006366                     
 18754                           ;mcc_generated_files/i2c_master.c: 466:     return I2C_SEND_ADR_READ;
 18755  006366  0E01               	movlw	1
 18756  006368  0012               	return		;funcret
 18757  00636A                     __end_ofi2_I2C_DO_SEND_RESTART:
 18758                           	callstack 0
 18759                           
 18760 ;; *************** function i2_I2C_DO_SEND_RESTART_WRITE *****************
 18761 ;; Defined at:
 18762 ;;		line 456 in file "mcc_generated_files/i2c_master.c"
 18763 ;; Parameters:    Size  Location     Type
 18764 ;;		None
 18765 ;; Auto vars:     Size  Location     Type
 18766 ;;		None
 18767 ;; Return value:  Size  Location     Type
 18768 ;;                  1    wreg      enum E2863
 18769 ;; Registers used:
 18770 ;;		wreg, cstack
 18771 ;; Tracked objects:
 18772 ;;		On entry : 0/0
 18773 ;;		On exit  : 0/0
 18774 ;;		Unchanged: 0/0
 18775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18780 ;;Total ram usage:        0 bytes
 18781 ;; Hardware stack levels used: 1
 18782 ;; Hardware stack levels required when called: 1
 18783 ;; This function calls:
 18784 ;;		i2_I2C_MasterEnableRestart
 18785 ;; This function is called by:
 18786 ;;		i2_I2C_DO_TX
 18787 ;; This function uses a non-reentrant model
 18788 ;;
 18789                           
 18790                           	psect	text140
 18791  00636A                     __ptext140:
 18792                           	callstack 0
 18793  00636A                     i2_I2C_DO_SEND_RESTART_WRITE:
 18794                           	callstack 9
 18795  00636A                     
 18796                           ;mcc_generated_files/i2c_master.c: 458:     I2C_MasterEnableRestart();
 18797  00636A  ECEB  F031         	call	i2_I2C_MasterEnableRestart	;wreg free
 18798  00636E                     
 18799                           ;mcc_generated_files/i2c_master.c: 459:     return I2C_SEND_ADR_WRITE;
 18800  00636E  0E02               	movlw	2
 18801  006370  0012               	return		;funcret
 18802  006372                     __end_ofi2_I2C_DO_SEND_RESTART_WRITE:
 18803                           	callstack 0
 18804                           
 18805 ;; *************** function i2_I2C_DO_SEND_RESTART_READ *****************
 18806 ;; Defined at:
 18807 ;;		line 450 in file "mcc_generated_files/i2c_master.c"
 18808 ;; Parameters:    Size  Location     Type
 18809 ;;		None
 18810 ;; Auto vars:     Size  Location     Type
 18811 ;;		None
 18812 ;; Return value:  Size  Location     Type
 18813 ;;                  1    wreg      enum E2863
 18814 ;; Registers used:
 18815 ;;		wreg, cstack
 18816 ;; Tracked objects:
 18817 ;;		On entry : 0/0
 18818 ;;		On exit  : 0/0
 18819 ;;		Unchanged: 0/0
 18820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18825 ;;Total ram usage:        0 bytes
 18826 ;; Hardware stack levels used: 1
 18827 ;; Hardware stack levels required when called: 1
 18828 ;; This function calls:
 18829 ;;		i2_I2C_MasterEnableRestart
 18830 ;; This function is called by:
 18831 ;;		i2_I2C_DO_TX
 18832 ;; This function uses a non-reentrant model
 18833 ;;
 18834                           
 18835                           	psect	text141
 18836  006372                     __ptext141:
 18837                           	callstack 0
 18838  006372                     i2_I2C_DO_SEND_RESTART_READ:
 18839                           	callstack 9
 18840  006372                     
 18841                           ;mcc_generated_files/i2c_master.c: 452:     I2C_MasterEnableRestart();
 18842  006372  ECEB  F031         	call	i2_I2C_MasterEnableRestart	;wreg free
 18843  006376                     
 18844                           ;mcc_generated_files/i2c_master.c: 453:     return I2C_SEND_ADR_READ;
 18845  006376  0E01               	movlw	1
 18846  006378  0012               	return		;funcret
 18847  00637A                     __end_ofi2_I2C_DO_SEND_RESTART_READ:
 18848                           	callstack 0
 18849                           
 18850 ;; *************** function i2_I2C_DO_RCEN *****************
 18851 ;; Defined at:
 18852 ;;		line 402 in file "mcc_generated_files/i2c_master.c"
 18853 ;; Parameters:    Size  Location     Type
 18854 ;;		None
 18855 ;; Auto vars:     Size  Location     Type
 18856 ;;		None
 18857 ;; Return value:  Size  Location     Type
 18858 ;;                  1    wreg      enum E2863
 18859 ;; Registers used:
 18860 ;;		wreg, cstack
 18861 ;; Tracked objects:
 18862 ;;		On entry : 0/0
 18863 ;;		On exit  : 0/0
 18864 ;;		Unchanged: 0/0
 18865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18870 ;;Total ram usage:        0 bytes
 18871 ;; Hardware stack levels used: 1
 18872 ;; Hardware stack levels required when called: 1
 18873 ;; This function calls:
 18874 ;;		i2_I2C_MasterStartRx
 18875 ;; This function is called by:
 18876 ;; This function uses a non-reentrant model
 18877 ;;
 18878                           
 18879                           	psect	text142
 18880  006312                     __ptext142:
 18881                           	callstack 0
 18882  006312                     i2_I2C_DO_RCEN:
 18883                           	callstack 10
 18884  006312                     
 18885                           ;mcc_generated_files/i2c_master.c: 404:     I2C_Status.addressNackCheck = 0;
 18886  006312  0100               	movlb	0	; () banked
 18887  006314  91EB               	bcf	(_I2C_Status+35)& (0+255),0,b
 18888  006316                     
 18889                           ; BSR set to: 0
 18890                           ;mcc_generated_files/i2c_master.c: 405:     I2C_MasterStartRx();
 18891  006316  ECE3  F031         	call	i2_I2C_MasterStartRx	;wreg free
 18892  00631A                     
 18893                           ;mcc_generated_files/i2c_master.c: 406:     return I2C_RX;
 18894  00631A  0E04               	movlw	4
 18895  00631C  0012               	return		;funcret
 18896  00631E                     __end_ofi2_I2C_DO_RCEN:
 18897                           	callstack 0
 18898                           
 18899 ;; *************** function i2_I2C_DO_RX *****************
 18900 ;; Defined at:
 18901 ;;		line 378 in file "mcc_generated_files/i2c_master.c"
 18902 ;; Parameters:    Size  Location     Type
 18903 ;;		None
 18904 ;; Auto vars:     Size  Location     Type
 18905 ;;		None
 18906 ;; Return value:  Size  Location     Type
 18907 ;;                  1    wreg      enum E2863
 18908 ;; Registers used:
 18909 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 18910 ;; Tracked objects:
 18911 ;;		On entry : 0/0
 18912 ;;		On exit  : 0/0
 18913 ;;		Unchanged: 0/0
 18914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18917 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18918 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18919 ;;Total ram usage:        2 bytes
 18920 ;; Hardware stack levels used: 1
 18921 ;; Hardware stack levels required when called: 3
 18922 ;; This function calls:
 18923 ;;		Absolute function
 18924 ;;		i2_I2C_CallbackReturnReset
 18925 ;;		i2_I2C_CallbackReturnStop
 18926 ;;		i2_I2C_DO_RX_NACK_RESTART
 18927 ;;		i2_I2C_DO_RX_NACK_STOP
 18928 ;;		i2_I2C_MasterGetRxData
 18929 ;;		i2_I2C_MasterSendAck
 18930 ;;		i2_rd1RegCompleteHandler
 18931 ;;		i2_rd2RegCompleteHandler
 18932 ;;		i2_rdBlkRegCompleteHandler
 18933 ;;		i2_wr1RegCompleteHandler
 18934 ;;		i2_wr2RegCompleteHandler
 18935 ;; This function is called by:
 18936 ;; This function uses a non-reentrant model
 18937 ;;
 18938                           
 18939                           	psect	text143
 18940  00472A                     __ptext143:
 18941                           	callstack 0
 18942  00472A                     i2_I2C_DO_RX:
 18943                           	callstack 8
 18944  00472A                     
 18945                           ;mcc_generated_files/i2c_master.c: 380:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
 18946  00472A  ECE1  F031         	call	i2_I2C_MasterGetRxData	;wreg free
 18947  00472E  C0E5  FFD9         	movff	_I2C_Status+29,fsr2l
 18948  004732  C0E6  FFDA         	movff	_I2C_Status+30,fsr2h
 18949  004736  6EDF               	movwf	indf2,c
 18950  004738  0100               	movlb	0	; () banked
 18951  00473A  4BE5               	infsnz	(_I2C_Status+29)& (0+255),f,b
 18952  00473C  2BE6               	incf	(_I2C_Status+30)& (0+255),f,b
 18953  00473E                     
 18954                           ; BSR set to: 0
 18955                           ;mcc_generated_files/i2c_master.c: 381:     if(--I2C_Status.data_length)
 18956  00473E  07E7               	decf	(_I2C_Status+31)& (0+255),f,b
 18957  004740  A0D8               	btfss	status,0,c
 18958  004742  07E8               	decf	(_I2C_Status+32)& (0+255),f,b
 18959  004744  51E7               	movf	(_I2C_Status+31)& (0+255),w,b
 18960  004746  11E8               	iorwf	(_I2C_Status+32)& (0+255),w,b
 18961  004748  B4D8               	btfsc	status,2,c
 18962  00474A  EFA9  F023         	goto	i2u850_41
 18963  00474E  EFAB  F023         	goto	i2u850_40
 18964  004752                     i2u850_41:
 18965  004752  EFB0  F023         	goto	i2l1244
 18966  004756                     i2u850_40:
 18967  004756                     
 18968                           ; BSR set to: 0
 18969                           ;mcc_generated_files/i2c_master.c: 382:     {;mcc_generated_files/i2c_master.c: 383:    
      +                               I2C_MasterSendAck();
 18970  004756  ECC7  F031         	call	i2_I2C_MasterSendAck	;wreg free
 18971  00475A                     
 18972                           ;mcc_generated_files/i2c_master.c: 384:         return I2C_RCEN;
 18973  00475A  0E05               	movlw	5
 18974  00475C  EFE7  F023         	goto	i2l1245
 18975  004760                     i2l1244:
 18976                           
 18977                           ; BSR set to: 0
 18978                           ;mcc_generated_files/i2c_master.c: 387:     {;mcc_generated_files/i2c_master.c: 388:    
      +                               I2C_Status.bufferFree = 1;
 18979  004760  87EB               	bsf	(_I2C_Status+35)& (0+255),3,b
 18980                           
 18981                           ;mcc_generated_files/i2c_master.c: 389:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 18982  004762  EFBB  F023         	goto	i2l10679
 18983  004766                     i2l10669:
 18984                           
 18985                           ;mcc_generated_files/i2c_master.c: 393:                 return I2C_DO_RX_NACK_RESTART();
 18986  004766  ECA1  F031         	call	i2_I2C_DO_RX_NACK_RESTART	;wreg free
 18987  00476A  EFE7  F023         	goto	i2l1245
 18988  00476E                     i2l10673:
 18989                           
 18990                           ;mcc_generated_files/i2c_master.c: 397:                 return I2C_DO_RX_NACK_STOP();
 18991  00476E  ECA5  F031         	call	i2_I2C_DO_RX_NACK_STOP	;wreg free
 18992  004772  EFE7  F023         	goto	i2l1245
 18993  004776                     i2l10679:
 18994                           
 18995                           ; BSR set to: 0
 18996  004776  C0D4  F00A         	movff	_I2C_Status+12,i2rd1RegCompleteHandler@ptr
 18997  00477A  C0D5  F00B         	movff	_I2C_Status+13,i2rd1RegCompleteHandler@ptr+1
 18998  00477E  D802               	call	i2u851_48
 18999  004780  EFCB  F023         	goto	i2u851_49
 19000  004784                     i2u851_48:
 19001  004784  0005               	push	
 19002  004786  6EFA               	movwf	pclath,c
 19003  004788  51C8               	movf	_I2C_Status& (0+255),w,b
 19004  00478A  6EFD               	movwf	tosl,c
 19005  00478C  51C9               	movf	(_I2C_Status+1)& (0+255),w,b
 19006  00478E  6EFE               	movwf	tosh,c
 19007  004790  6AFF               	clrf	tosu,c
 19008  004792  50FA               	movf	pclath,w,c
 19009  004794  0012               	return		;indir
 19010  004796                     i2u851_49:
 19011  004796  6E0C               	movwf	??i2_I2C_DO_RX^0,c
 19012  004798  6A0D               	clrf	(??i2_I2C_DO_RX+1)^0,c
 19013                           
 19014                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19015                           ; Switch size 1, requested type "simple"
 19016                           ; Number of cases is 1, Range of values is 0 to 0
 19017                           ; switch strategies available:
 19018                           ; Name         Instructions Cycles
 19019                           ; simple_byte            4     3 (average)
 19020                           ;	Chosen strategy is simple_byte
 19021  00479A  500D               	movf	(??i2_I2C_DO_RX+1)^0,w,c
 19022  00479C  0A00               	xorlw	0	; case 0
 19023  00479E  B4D8               	btfsc	status,2,c
 19024  0047A0  EFD4  F023         	goto	i2l13677
 19025  0047A4  EFB7  F023         	goto	i2l10673
 19026  0047A8                     i2l13677:
 19027                           
 19028                           ; Switch size 1, requested type "simple"
 19029                           ; Number of cases is 4, Range of values is 1 to 4
 19030                           ; switch strategies available:
 19031                           ; Name         Instructions Cycles
 19032                           ; simple_byte           13     7 (average)
 19033                           ;	Chosen strategy is simple_byte
 19034  0047A8  500C               	movf	??i2_I2C_DO_RX^0,w,c
 19035  0047AA  0A01               	xorlw	1	; case 1
 19036  0047AC  B4D8               	btfsc	status,2,c
 19037  0047AE  EFB7  F023         	goto	i2l10673
 19038  0047B2  0A03               	xorlw	3	; case 2
 19039  0047B4  B4D8               	btfsc	status,2,c
 19040  0047B6  EFB3  F023         	goto	i2l10669
 19041  0047BA  0A01               	xorlw	1	; case 3
 19042  0047BC  B4D8               	btfsc	status,2,c
 19043  0047BE  EFB3  F023         	goto	i2l10669
 19044  0047C2  0A07               	xorlw	7	; case 4
 19045  0047C4  B4D8               	btfsc	status,2,c
 19046  0047C6  EFB7  F023         	goto	i2l10673
 19047  0047CA  EFB7  F023         	goto	i2l10673
 19048  0047CE                     i2l1245:
 19049  0047CE  0012               	return		;funcret
 19050  0047D0                     __end_ofi2_I2C_DO_RX:
 19051                           	callstack 0
 19052                           
 19053 ;; *************** function i2_I2C_DO_TX *****************
 19054 ;; Defined at:
 19055 ;;		line 354 in file "mcc_generated_files/i2c_master.c"
 19056 ;; Parameters:    Size  Location     Type
 19057 ;;		None
 19058 ;; Auto vars:     Size  Location     Type
 19059 ;;		None
 19060 ;; Return value:  Size  Location     Type
 19061 ;;                  1    wreg      enum E2863
 19062 ;; Registers used:
 19063 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 19064 ;; Tracked objects:
 19065 ;;		On entry : 0/0
 19066 ;;		On exit  : 0/0
 19067 ;;		Unchanged: 0/0
 19068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19071 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19072 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19073 ;;Total ram usage:        2 bytes
 19074 ;; Hardware stack levels used: 1
 19075 ;; Hardware stack levels required when called: 3
 19076 ;; This function calls:
 19077 ;;		Absolute function
 19078 ;;		i2_I2C_CallbackReturnReset
 19079 ;;		i2_I2C_CallbackReturnStop
 19080 ;;		i2_I2C_DO_SEND_RESTART_READ
 19081 ;;		i2_I2C_DO_SEND_RESTART_WRITE
 19082 ;;		i2_I2C_DO_SEND_STOP
 19083 ;;		i2_I2C_MasterIsNack
 19084 ;;		i2_I2C_MasterSendTxData
 19085 ;;		i2_rd1RegCompleteHandler
 19086 ;;		i2_rd2RegCompleteHandler
 19087 ;;		i2_rdBlkRegCompleteHandler
 19088 ;;		i2_wr1RegCompleteHandler
 19089 ;;		i2_wr2RegCompleteHandler
 19090 ;; This function is called by:
 19091 ;; This function uses a non-reentrant model
 19092 ;;
 19093                           
 19094                           	psect	text144
 19095  004182                     __ptext144:
 19096                           	callstack 0
 19097  004182                     i2_I2C_DO_TX:
 19098                           	callstack 8
 19099  004182                     
 19100                           ;mcc_generated_files/i2c_master.c: 356:     if(I2C_MasterIsNack())
 19101  004182  EC06  F031         	call	i2_I2C_MasterIsNack	;wreg free
 19102  004186  0900               	iorlw	0
 19103  004188  B4D8               	btfsc	status,2,c
 19104  00418A  EFC9  F020         	goto	i2u847_41
 19105  00418E  EFCB  F020         	goto	i2u847_40
 19106  004192                     i2u847_41:
 19107  004192  EF06  F021         	goto	i2l1228
 19108  004196                     i2u847_40:
 19109  004196  EFD9  F020         	goto	i2l10639
 19110  00419A                     i2l10625:
 19111                           
 19112                           ;mcc_generated_files/i2c_master.c: 361:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
 19113  00419A  ECB9  F031         	call	i2_I2C_DO_SEND_RESTART_READ	;wreg free
 19114  00419E  EF22  F021         	goto	i2l1231
 19115  0041A2                     i2l10629:
 19116                           
 19117                           ;mcc_generated_files/i2c_master.c: 363:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
 19118  0041A2  ECB5  F031         	call	i2_I2C_DO_SEND_RESTART_WRITE	;wreg free
 19119  0041A6  EF22  F021         	goto	i2l1231
 19120  0041AA                     i2l10633:
 19121                           
 19122                           ;mcc_generated_files/i2c_master.c: 367:                 return I2C_DO_SEND_STOP();
 19123  0041AA  ECAD  F031         	call	i2_I2C_DO_SEND_STOP	;wreg free
 19124  0041AE  EF22  F021         	goto	i2l1231
 19125  0041B2                     i2l10639:
 19126  0041B2  C0DA  F00A         	movff	_I2C_Status+18,i2rd1RegCompleteHandler@ptr
 19127  0041B6  C0DB  F00B         	movff	_I2C_Status+19,i2rd1RegCompleteHandler@ptr+1
 19128  0041BA  D802               	call	i2u848_48
 19129  0041BC  EFEA  F020         	goto	i2u848_49
 19130  0041C0                     i2u848_48:
 19131  0041C0  0005               	push	
 19132  0041C2  6EFA               	movwf	pclath,c
 19133  0041C4  0100               	movlb	0	; () banked
 19134  0041C6  51CE               	movf	(_I2C_Status+6)& (0+255),w,b
 19135  0041C8  6EFD               	movwf	tosl,c
 19136  0041CA  51CF               	movf	(_I2C_Status+7)& (0+255),w,b
 19137  0041CC  6EFE               	movwf	tosh,c
 19138  0041CE  6AFF               	clrf	tosu,c
 19139  0041D0  50FA               	movf	pclath,w,c
 19140  0041D2  0012               	return		;indir
 19141  0041D4                     i2u848_49:
 19142  0041D4  6E0C               	movwf	??i2_I2C_DO_TX^0,c
 19143  0041D6  6A0D               	clrf	(??i2_I2C_DO_TX+1)^0,c
 19144                           
 19145                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19146                           ; Switch size 1, requested type "simple"
 19147                           ; Number of cases is 1, Range of values is 0 to 0
 19148                           ; switch strategies available:
 19149                           ; Name         Instructions Cycles
 19150                           ; simple_byte            4     3 (average)
 19151                           ;	Chosen strategy is simple_byte
 19152  0041D8  500D               	movf	(??i2_I2C_DO_TX+1)^0,w,c
 19153  0041DA  0A00               	xorlw	0	; case 0
 19154  0041DC  B4D8               	btfsc	status,2,c
 19155  0041DE  EFF3  F020         	goto	i2l13679
 19156  0041E2  EFD5  F020         	goto	i2l10633
 19157  0041E6                     i2l13679:
 19158                           
 19159                           ; Switch size 1, requested type "simple"
 19160                           ; Number of cases is 4, Range of values is 1 to 4
 19161                           ; switch strategies available:
 19162                           ; Name         Instructions Cycles
 19163                           ; simple_byte           13     7 (average)
 19164                           ;	Chosen strategy is simple_byte
 19165  0041E6  500C               	movf	??i2_I2C_DO_TX^0,w,c
 19166  0041E8  0A01               	xorlw	1	; case 1
 19167  0041EA  B4D8               	btfsc	status,2,c
 19168  0041EC  EFD5  F020         	goto	i2l10633
 19169  0041F0  0A03               	xorlw	3	; case 2
 19170  0041F2  B4D8               	btfsc	status,2,c
 19171  0041F4  EFCD  F020         	goto	i2l10625
 19172  0041F8  0A01               	xorlw	1	; case 3
 19173  0041FA  B4D8               	btfsc	status,2,c
 19174  0041FC  EFD1  F020         	goto	i2l10629
 19175  004200  0A07               	xorlw	7	; case 4
 19176  004202  B4D8               	btfsc	status,2,c
 19177  004204  EFD5  F020         	goto	i2l10633
 19178  004208  EFD5  F020         	goto	i2l10633
 19179  00420C                     i2l1228:
 19180                           
 19181                           ;mcc_generated_files/i2c_master.c: 371:     {;mcc_generated_files/i2c_master.c: 372:    
      +                               I2C_Status.addressNackCheck = 0;
 19182  00420C  0100               	movlb	0	; () banked
 19183  00420E  91EB               	bcf	(_I2C_Status+35)& (0+255),0,b
 19184  004210                     
 19185                           ; BSR set to: 0
 19186                           ;mcc_generated_files/i2c_master.c: 373:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
 19187  004210  C0E5  FFD9         	movff	_I2C_Status+29,fsr2l
 19188  004214  C0E6  FFDA         	movff	_I2C_Status+30,fsr2h
 19189  004218  4BE5               	infsnz	(_I2C_Status+29)& (0+255),f,b
 19190  00421A  2BE6               	incf	(_I2C_Status+30)& (0+255),f,b
 19191  00421C  50DF               	movf	indf2,w,c
 19192  00421E  ECBD  F031         	call	i2_I2C_MasterSendTxData
 19193  004222                     
 19194                           ;mcc_generated_files/i2c_master.c: 374:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
 19195  004222  0100               	movlb	0	; () banked
 19196  004224  07E7               	decf	(_I2C_Status+31)& (0+255),f,b
 19197  004226  A0D8               	btfss	status,0,c
 19198  004228  07E8               	decf	(_I2C_Status+32)& (0+255),f,b
 19199  00422A  51E7               	movf	(_I2C_Status+31)& (0+255),w,b
 19200  00422C  11E8               	iorwf	(_I2C_Status+32)& (0+255),w,b
 19201  00422E  A4D8               	btfss	status,2,c
 19202  004230  EF1C  F021         	goto	i2u849_41
 19203  004234  EF1E  F021         	goto	i2u849_40
 19204  004238                     i2u849_41:
 19205  004238  EF21  F021         	goto	i2l10647
 19206  00423C                     i2u849_40:
 19207  00423C                     
 19208                           ; BSR set to: 0
 19209  00423C  0E06               	movlw	6
 19210  00423E  EF22  F021         	goto	i2l1231
 19211  004242                     i2l10647:
 19212                           
 19213                           ; BSR set to: 0
 19214  004242  0E03               	movlw	3
 19215  004244                     i2l1231:
 19216  004244  0012               	return		;funcret
 19217  004246                     __end_ofi2_I2C_DO_TX:
 19218                           	callstack 0
 19219                           
 19220 ;; *************** function i2_I2C_DO_SEND_ADR_WRITE *****************
 19221 ;; Defined at:
 19222 ;;		line 347 in file "mcc_generated_files/i2c_master.c"
 19223 ;; Parameters:    Size  Location     Type
 19224 ;;		None
 19225 ;; Auto vars:     Size  Location     Type
 19226 ;;		None
 19227 ;; Return value:  Size  Location     Type
 19228 ;;                  1    wreg      enum E2863
 19229 ;; Registers used:
 19230 ;;		wreg, status,2, cstack
 19231 ;; Tracked objects:
 19232 ;;		On entry : 0/0
 19233 ;;		On exit  : 0/0
 19234 ;;		Unchanged: 0/0
 19235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19240 ;;Total ram usage:        0 bytes
 19241 ;; Hardware stack levels used: 1
 19242 ;; Hardware stack levels required when called: 1
 19243 ;; This function calls:
 19244 ;;		i2_I2C_MasterSendTxData
 19245 ;; This function is called by:
 19246 ;; This function uses a non-reentrant model
 19247 ;;
 19248                           
 19249                           	psect	text145
 19250  0062F8                     __ptext145:
 19251                           	callstack 0
 19252  0062F8                     i2_I2C_DO_SEND_ADR_WRITE:
 19253                           	callstack 10
 19254  0062F8                     
 19255                           ;mcc_generated_files/i2c_master.c: 349:     I2C_Status.addressNackCheck = 1;
 19256  0062F8  0100               	movlb	0	; () banked
 19257  0062FA  81EB               	bsf	(_I2C_Status+35)& (0+255),0,b
 19258  0062FC                     
 19259                           ; BSR set to: 0
 19260                           ;mcc_generated_files/i2c_master.c: 350:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress));
 19261  0062FC  51E4               	movf	(_I2C_Status+28)& (0+255),w,b
 19262  0062FE  ECBD  F031         	call	i2_I2C_MasterSendTxData
 19263  006302                     
 19264                           ;mcc_generated_files/i2c_master.c: 351:     return I2C_TX;
 19265  006302  0E03               	movlw	3
 19266  006304  0012               	return		;funcret
 19267  006306                     __end_ofi2_I2C_DO_SEND_ADR_WRITE:
 19268                           	callstack 0
 19269                           
 19270 ;; *************** function i2_I2C_DO_SEND_ADR_READ *****************
 19271 ;; Defined at:
 19272 ;;		line 340 in file "mcc_generated_files/i2c_master.c"
 19273 ;; Parameters:    Size  Location     Type
 19274 ;;		None
 19275 ;; Auto vars:     Size  Location     Type
 19276 ;;		None
 19277 ;; Return value:  Size  Location     Type
 19278 ;;                  1    wreg      enum E2863
 19279 ;; Registers used:
 19280 ;;		wreg, status,2, status,0, cstack
 19281 ;; Tracked objects:
 19282 ;;		On entry : 0/0
 19283 ;;		On exit  : 0/0
 19284 ;;		Unchanged: 0/0
 19285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19290 ;;Total ram usage:        0 bytes
 19291 ;; Hardware stack levels used: 1
 19292 ;; Hardware stack levels required when called: 1
 19293 ;; This function calls:
 19294 ;;		i2_I2C_MasterSendTxData
 19295 ;; This function is called by:
 19296 ;; This function uses a non-reentrant model
 19297 ;;
 19298                           
 19299                           	psect	text146
 19300  0062BE                     __ptext146:
 19301                           	callstack 0
 19302  0062BE                     i2_I2C_DO_SEND_ADR_READ:
 19303                           	callstack 10
 19304  0062BE                     
 19305                           ;mcc_generated_files/i2c_master.c: 342:     I2C_Status.addressNackCheck = 1;
 19306  0062BE  0100               	movlb	0	; () banked
 19307  0062C0  81EB               	bsf	(_I2C_Status+35)& (0+255),0,b
 19308  0062C2                     
 19309                           ; BSR set to: 0
 19310                           ;mcc_generated_files/i2c_master.c: 343:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress| 1));
 19311  0062C2  51E4               	movf	(_I2C_Status+28)& (0+255),w,b
 19312  0062C4  0901               	iorlw	1
 19313  0062C6  ECBD  F031         	call	i2_I2C_MasterSendTxData
 19314  0062CA                     
 19315                           ;mcc_generated_files/i2c_master.c: 344:     return I2C_RCEN;
 19316  0062CA  0E05               	movlw	5
 19317  0062CC  0012               	return		;funcret
 19318  0062CE                     __end_ofi2_I2C_DO_SEND_ADR_READ:
 19319                           	callstack 0
 19320                           
 19321 ;; *************** function i2_I2C_DO_IDLE *****************
 19322 ;; Defined at:
 19323 ;;		line 333 in file "mcc_generated_files/i2c_master.c"
 19324 ;; Parameters:    Size  Location     Type
 19325 ;;		None
 19326 ;; Auto vars:     Size  Location     Type
 19327 ;;		None
 19328 ;; Return value:  Size  Location     Type
 19329 ;;                  1    wreg      enum E2863
 19330 ;; Registers used:
 19331 ;;		wreg, status,2
 19332 ;; Tracked objects:
 19333 ;;		On entry : 0/0
 19334 ;;		On exit  : 0/0
 19335 ;;		Unchanged: 0/0
 19336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19341 ;;Total ram usage:        0 bytes
 19342 ;; Hardware stack levels used: 1
 19343 ;; This function calls:
 19344 ;;		Nothing
 19345 ;; This function is called by:
 19346 ;; This function uses a non-reentrant model
 19347 ;;
 19348                           
 19349                           	psect	text147
 19350  00631E                     __ptext147:
 19351                           	callstack 0
 19352  00631E                     i2_I2C_DO_IDLE:
 19353                           	callstack 11
 19354  00631E                     
 19355                           ;mcc_generated_files/i2c_master.c: 335:     I2C_Status.busy = 0;
 19356  00631E  0100               	movlb	0	; () banked
 19357  006320  93EB               	bcf	(_I2C_Status+35)& (0+255),1,b
 19358  006322                     
 19359                           ; BSR set to: 0
 19360                           ;mcc_generated_files/i2c_master.c: 336:     I2C_Status.error = I2C_NOERR;
 19361  006322  0E00               	movlw	0
 19362  006324  6FEA               	movwf	(_I2C_Status+34)& (0+255),b
 19363  006326                     
 19364                           ; BSR set to: 0
 19365                           ;mcc_generated_files/i2c_master.c: 337:     return I2C_RESET;
 19366  006326  0E0E               	movlw	14
 19367  006328                     
 19368                           ; BSR set to: 0
 19369  006328  0012               	return		;funcret
 19370  00632A                     __end_ofi2_I2C_DO_IDLE:
 19371                           	callstack 0
 19372                           
 19373 ;; *************** function i2_I2C_DO_TX_EMPTY *****************
 19374 ;; Defined at:
 19375 ;;		line 409 in file "mcc_generated_files/i2c_master.c"
 19376 ;; Parameters:    Size  Location     Type
 19377 ;;		None
 19378 ;; Auto vars:     Size  Location     Type
 19379 ;;		None
 19380 ;; Return value:  Size  Location     Type
 19381 ;;                  1    wreg      enum E2863
 19382 ;; Registers used:
 19383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 19384 ;; Tracked objects:
 19385 ;;		On entry : 0/0
 19386 ;;		On exit  : 0/0
 19387 ;;		Unchanged: 0/0
 19388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19391 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19392 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19393 ;;Total ram usage:        2 bytes
 19394 ;; Hardware stack levels used: 1
 19395 ;; Hardware stack levels required when called: 3
 19396 ;; This function calls:
 19397 ;;		Absolute function
 19398 ;;		i2_I2C_CallbackReturnReset
 19399 ;;		i2_I2C_CallbackReturnStop
 19400 ;;		i2_I2C_DO_SEND_RESTART
 19401 ;;		i2_I2C_DO_SEND_STOP
 19402 ;;		i2_I2C_MasterSetIrq
 19403 ;;		i2_rd1RegCompleteHandler
 19404 ;;		i2_rd2RegCompleteHandler
 19405 ;;		i2_rdBlkRegCompleteHandler
 19406 ;;		i2_wr1RegCompleteHandler
 19407 ;;		i2_wr2RegCompleteHandler
 19408 ;; This function is called by:
 19409 ;; This function uses a non-reentrant model
 19410 ;;
 19411                           
 19412                           	psect	text148
 19413  004D14                     __ptext148:
 19414                           	callstack 0
 19415  004D14                     i2_I2C_DO_TX_EMPTY:
 19416                           	callstack 8
 19417  004D14                     
 19418                           ;mcc_generated_files/i2c_master.c: 411:     I2C_Status.bufferFree = 1;
 19419  004D14  0100               	movlb	0	; () banked
 19420  004D16  87EB               	bsf	(_I2C_Status+35)& (0+255),3,b
 19421                           
 19422                           ;mcc_generated_files/i2c_master.c: 412:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 19423  004D18  EF9B  F026         	goto	i2l10703
 19424  004D1C                     i2l10687:
 19425                           
 19426                           ;mcc_generated_files/i2c_master.c: 416:             return I2C_DO_SEND_RESTART();
 19427  004D1C  ECB1  F031         	call	i2_I2C_DO_SEND_RESTART	;wreg free
 19428  004D20  EFC7  F026         	goto	i2l1262
 19429  004D24                     i2l10691:
 19430                           
 19431                           ;mcc_generated_files/i2c_master.c: 418:             I2C_MasterSetIrq();
 19432  004D24  ECDF  F031         	call	i2_I2C_MasterSetIrq	;wreg free
 19433  004D28                     
 19434                           ;mcc_generated_files/i2c_master.c: 419:             return I2C_TX;
 19435  004D28  0E03               	movlw	3
 19436  004D2A  EFC7  F026         	goto	i2l1262
 19437  004D2E                     i2l10697:
 19438                           
 19439                           ;mcc_generated_files/i2c_master.c: 422:             return I2C_DO_SEND_STOP();
 19440  004D2E  ECAD  F031         	call	i2_I2C_DO_SEND_STOP	;wreg free
 19441  004D32  EFC7  F026         	goto	i2l1262
 19442  004D36                     i2l10703:
 19443                           
 19444                           ; BSR set to: 0
 19445  004D36  C0D4  F00A         	movff	_I2C_Status+12,i2rd1RegCompleteHandler@ptr
 19446  004D3A  C0D5  F00B         	movff	_I2C_Status+13,i2rd1RegCompleteHandler@ptr+1
 19447  004D3E  D802               	call	i2u852_48
 19448  004D40  EFAB  F026         	goto	i2u852_49
 19449  004D44                     i2u852_48:
 19450  004D44  0005               	push	
 19451  004D46  6EFA               	movwf	pclath,c
 19452  004D48  51C8               	movf	_I2C_Status& (0+255),w,b
 19453  004D4A  6EFD               	movwf	tosl,c
 19454  004D4C  51C9               	movf	(_I2C_Status+1)& (0+255),w,b
 19455  004D4E  6EFE               	movwf	tosh,c
 19456  004D50  6AFF               	clrf	tosu,c
 19457  004D52  50FA               	movf	pclath,w,c
 19458  004D54  0012               	return		;indir
 19459  004D56                     i2u852_49:
 19460  004D56  6E0C               	movwf	??i2_I2C_DO_TX_EMPTY^0,c
 19461  004D58  6A0D               	clrf	(??i2_I2C_DO_TX_EMPTY+1)^0,c
 19462                           
 19463                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19464                           ; Switch size 1, requested type "simple"
 19465                           ; Number of cases is 1, Range of values is 0 to 0
 19466                           ; switch strategies available:
 19467                           ; Name         Instructions Cycles
 19468                           ; simple_byte            4     3 (average)
 19469                           ;	Chosen strategy is simple_byte
 19470  004D5A  500D               	movf	(??i2_I2C_DO_TX_EMPTY+1)^0,w,c
 19471  004D5C  0A00               	xorlw	0	; case 0
 19472  004D5E  B4D8               	btfsc	status,2,c
 19473  004D60  EFB4  F026         	goto	i2l13681
 19474  004D64  EF97  F026         	goto	i2l10697
 19475  004D68                     i2l13681:
 19476                           
 19477                           ; Switch size 1, requested type "simple"
 19478                           ; Number of cases is 4, Range of values is 1 to 4
 19479                           ; switch strategies available:
 19480                           ; Name         Instructions Cycles
 19481                           ; simple_byte           13     7 (average)
 19482                           ;	Chosen strategy is simple_byte
 19483  004D68  500C               	movf	??i2_I2C_DO_TX_EMPTY^0,w,c
 19484  004D6A  0A01               	xorlw	1	; case 1
 19485  004D6C  B4D8               	btfsc	status,2,c
 19486  004D6E  EF97  F026         	goto	i2l10697
 19487  004D72  0A03               	xorlw	3	; case 2
 19488  004D74  B4D8               	btfsc	status,2,c
 19489  004D76  EF8E  F026         	goto	i2l10687
 19490  004D7A  0A01               	xorlw	1	; case 3
 19491  004D7C  B4D8               	btfsc	status,2,c
 19492  004D7E  EF8E  F026         	goto	i2l10687
 19493  004D82  0A07               	xorlw	7	; case 4
 19494  004D84  B4D8               	btfsc	status,2,c
 19495  004D86  EF92  F026         	goto	i2l10691
 19496  004D8A  EF97  F026         	goto	i2l10697
 19497  004D8E                     i2l1262:
 19498  004D8E  0012               	return		;funcret
 19499  004D90                     __end_ofi2_I2C_DO_TX_EMPTY:
 19500                           	callstack 0
 19501                           
 19502 ;; *************** function i2_I2C_MasterSetIrq *****************
 19503 ;; Defined at:
 19504 ;;		line 645 in file "mcc_generated_files/i2c_master.c"
 19505 ;; Parameters:    Size  Location     Type
 19506 ;;		None
 19507 ;; Auto vars:     Size  Location     Type
 19508 ;;		None
 19509 ;; Return value:  Size  Location     Type
 19510 ;;                  1    wreg      void 
 19511 ;; Registers used:
 19512 ;;		None
 19513 ;; Tracked objects:
 19514 ;;		On entry : 0/0
 19515 ;;		On exit  : 0/0
 19516 ;;		Unchanged: 0/0
 19517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19522 ;;Total ram usage:        0 bytes
 19523 ;; Hardware stack levels used: 1
 19524 ;; This function calls:
 19525 ;;		Nothing
 19526 ;; This function is called by:
 19527 ;;		i2_I2C_DO_TX_EMPTY
 19528 ;; This function uses a non-reentrant model
 19529 ;;
 19530                           
 19531                           	psect	text149
 19532  0063BE                     __ptext149:
 19533                           	callstack 0
 19534  0063BE                     i2_I2C_MasterSetIrq:
 19535                           	callstack 10
 19536  0063BE                     
 19537                           ;mcc_generated_files/i2c_master.c: 647:     PIR1bits.SSPIF = 1;
 19538  0063BE  869E               	bsf	158,3,c	;volatile
 19539  0063C0  0012               	return		;funcret
 19540  0063C2                     __end_ofi2_I2C_MasterSetIrq:
 19541                           	callstack 0
 19542                           
 19543 ;; *************** function i2_I2C_MasterIsNack *****************
 19544 ;; Defined at:
 19545 ;;		line 598 in file "mcc_generated_files/i2c_master.c"
 19546 ;; Parameters:    Size  Location     Type
 19547 ;;		None
 19548 ;; Auto vars:     Size  Location     Type
 19549 ;;		None
 19550 ;; Return value:  Size  Location     Type
 19551 ;;                  1    wreg      _Bool 
 19552 ;; Registers used:
 19553 ;;		wreg
 19554 ;; Tracked objects:
 19555 ;;		On entry : 0/0
 19556 ;;		On exit  : 0/0
 19557 ;;		Unchanged: 0/0
 19558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19563 ;;Total ram usage:        0 bytes
 19564 ;; Hardware stack levels used: 1
 19565 ;; This function calls:
 19566 ;;		Nothing
 19567 ;; This function is called by:
 19568 ;;		i2_I2C_MasterFsm
 19569 ;;		i2_I2C_DO_TX
 19570 ;; This function uses a non-reentrant model
 19571 ;;
 19572                           
 19573                           	psect	text150
 19574  00620C                     __ptext150:
 19575                           	callstack 0
 19576  00620C                     i2_I2C_MasterIsNack:
 19577                           	callstack 11
 19578  00620C                     
 19579                           ;mcc_generated_files/i2c_master.c: 600:     return SSPCON2bits.ACKSTAT;
 19580  00620C  BCC5               	btfsc	197,6,c	;volatile
 19581  00620E  EF0B  F031         	goto	i2u841_41
 19582  006212  EF0E  F031         	goto	i2u841_40
 19583  006216                     i2u841_41:
 19584  006216  0E01               	movlw	1
 19585  006218  EF0F  F031         	goto	i2u841_46
 19586  00621C                     i2u841_40:
 19587  00621C  0E00               	movlw	0
 19588  00621E                     i2u841_46:
 19589  00621E  0012               	return		;funcret
 19590  006220                     __end_ofi2_I2C_MasterIsNack:
 19591                           	callstack 0
 19592                           
 19593 ;; *************** function i2_I2C_MasterSendTxData *****************
 19594 ;; Defined at:
 19595 ;;		line 568 in file "mcc_generated_files/i2c_master.c"
 19596 ;; Parameters:    Size  Location     Type
 19597 ;;  data            1    wreg     unsigned char 
 19598 ;; Auto vars:     Size  Location     Type
 19599 ;;  data            1    0[COMRAM] unsigned char 
 19600 ;; Return value:  Size  Location     Type
 19601 ;;                  1    wreg      void 
 19602 ;; Registers used:
 19603 ;;		wreg
 19604 ;; Tracked objects:
 19605 ;;		On entry : 0/0
 19606 ;;		On exit  : 0/0
 19607 ;;		Unchanged: 0/0
 19608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19610 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19612 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19613 ;;Total ram usage:        1 bytes
 19614 ;; Hardware stack levels used: 1
 19615 ;; This function calls:
 19616 ;;		Nothing
 19617 ;; This function is called by:
 19618 ;;		i2_I2C_DO_SEND_ADR_READ
 19619 ;;		i2_I2C_DO_SEND_ADR_WRITE
 19620 ;;		i2_I2C_DO_TX
 19621 ;; This function uses a non-reentrant model
 19622 ;;
 19623                           
 19624                           	psect	text151
 19625  00637A                     __ptext151:
 19626                           	callstack 0
 19627  00637A                     i2_I2C_MasterSendTxData:
 19628                           	callstack 10
 19629                           
 19630                           ;incstack = 0
 19631                           ;i2I2C_MasterSendTxData@data stored from wreg
 19632  00637A  6E01               	movwf	i2I2C_MasterSendTxData@data^0,c
 19633  00637C                     
 19634                           ;mcc_generated_files/i2c_master.c: 568: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 569: {;mcc_generated_files/i2c_
      +                          master.c: 570:     SSPBUF = data;
 19635  00637C  C001  FFC9         	movff	i2I2C_MasterSendTxData@data,4041	;volatile
 19636  006380  0012               	return		;funcret
 19637  006382                     __end_ofi2_I2C_MasterSendTxData:
 19638                           	callstack 0
 19639                           
 19640 ;; *************** function i2_I2C_MasterSendAck *****************
 19641 ;; Defined at:
 19642 ;;		line 603 in file "mcc_generated_files/i2c_master.c"
 19643 ;; Parameters:    Size  Location     Type
 19644 ;;		None
 19645 ;; Auto vars:     Size  Location     Type
 19646 ;;		None
 19647 ;; Return value:  Size  Location     Type
 19648 ;;                  1    wreg      void 
 19649 ;; Registers used:
 19650 ;;		None
 19651 ;; Tracked objects:
 19652 ;;		On entry : 0/0
 19653 ;;		On exit  : 0/0
 19654 ;;		Unchanged: 0/0
 19655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19660 ;;Total ram usage:        0 bytes
 19661 ;; Hardware stack levels used: 1
 19662 ;; This function calls:
 19663 ;;		Nothing
 19664 ;; This function is called by:
 19665 ;;		i2_I2C_DO_RX
 19666 ;;		i2_I2C_DO_RX_ACK
 19667 ;; This function uses a non-reentrant model
 19668 ;;
 19669                           
 19670                           	psect	text152
 19671  00638E                     __ptext152:
 19672                           	callstack 0
 19673  00638E                     i2_I2C_MasterSendAck:
 19674                           	callstack 10
 19675  00638E                     
 19676                           ;mcc_generated_files/i2c_master.c: 605:     SSPCON2bits.ACKDT = 0;
 19677  00638E  9AC5               	bcf	197,5,c	;volatile
 19678                           
 19679                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKEN = 1;
 19680  006390  88C5               	bsf	197,4,c	;volatile
 19681  006392  0012               	return		;funcret
 19682  006394                     __end_ofi2_I2C_MasterSendAck:
 19683                           	callstack 0
 19684                           
 19685 ;; *************** function i2_I2C_MasterGetRxData *****************
 19686 ;; Defined at:
 19687 ;;		line 563 in file "mcc_generated_files/i2c_master.c"
 19688 ;; Parameters:    Size  Location     Type
 19689 ;;		None
 19690 ;; Auto vars:     Size  Location     Type
 19691 ;;		None
 19692 ;; Return value:  Size  Location     Type
 19693 ;;                  1    wreg      unsigned char 
 19694 ;; Registers used:
 19695 ;;		wreg, status,2
 19696 ;; Tracked objects:
 19697 ;;		On entry : 0/0
 19698 ;;		On exit  : 0/0
 19699 ;;		Unchanged: 0/0
 19700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19705 ;;Total ram usage:        0 bytes
 19706 ;; Hardware stack levels used: 1
 19707 ;; This function calls:
 19708 ;;		Nothing
 19709 ;; This function is called by:
 19710 ;;		i2_I2C_DO_RX
 19711 ;; This function uses a non-reentrant model
 19712 ;;
 19713                           
 19714                           	psect	text153
 19715  0063C2                     __ptext153:
 19716                           	callstack 0
 19717  0063C2                     i2_I2C_MasterGetRxData:
 19718                           	callstack 10
 19719  0063C2                     
 19720                           ;mcc_generated_files/i2c_master.c: 565:     return SSPBUF;
 19721  0063C2  50C9               	movf	201,w,c	;volatile
 19722  0063C4  0012               	return		;funcret
 19723  0063C6                     __end_ofi2_I2C_MasterGetRxData:
 19724                           	callstack 0
 19725                           
 19726 ;; *************** function i2_I2C_MasterSendNack *****************
 19727 ;; Defined at:
 19728 ;;		line 609 in file "mcc_generated_files/i2c_master.c"
 19729 ;; Parameters:    Size  Location     Type
 19730 ;;		None
 19731 ;; Auto vars:     Size  Location     Type
 19732 ;;		None
 19733 ;; Return value:  Size  Location     Type
 19734 ;;                  1    wreg      void 
 19735 ;; Registers used:
 19736 ;;		None
 19737 ;; Tracked objects:
 19738 ;;		On entry : 0/0
 19739 ;;		On exit  : 0/0
 19740 ;;		Unchanged: 0/0
 19741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19746 ;;Total ram usage:        0 bytes
 19747 ;; Hardware stack levels used: 1
 19748 ;; This function calls:
 19749 ;;		Nothing
 19750 ;; This function is called by:
 19751 ;;		i2_I2C_DO_RX_NACK_STOP
 19752 ;;		i2_I2C_DO_RX_NACK_RESTART
 19753 ;; This function uses a non-reentrant model
 19754 ;;
 19755                           
 19756                           	psect	text154
 19757  006394                     __ptext154:
 19758                           	callstack 0
 19759  006394                     i2_I2C_MasterSendNack:
 19760                           	callstack 10
 19761  006394                     
 19762                           ;mcc_generated_files/i2c_master.c: 611:     SSPCON2bits.ACKDT = 1;
 19763  006394  8AC5               	bsf	197,5,c	;volatile
 19764                           
 19765                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKEN = 1;
 19766  006396  88C5               	bsf	197,4,c	;volatile
 19767  006398  0012               	return		;funcret
 19768  00639A                     __end_ofi2_I2C_MasterSendNack:
 19769                           	callstack 0
 19770                           
 19771 ;; *************** function i2_I2C_MasterStartRx *****************
 19772 ;; Defined at:
 19773 ;;		line 583 in file "mcc_generated_files/i2c_master.c"
 19774 ;; Parameters:    Size  Location     Type
 19775 ;;		None
 19776 ;; Auto vars:     Size  Location     Type
 19777 ;;		None
 19778 ;; Return value:  Size  Location     Type
 19779 ;;                  1    wreg      void 
 19780 ;; Registers used:
 19781 ;;		None
 19782 ;; Tracked objects:
 19783 ;;		On entry : 0/0
 19784 ;;		On exit  : 0/0
 19785 ;;		Unchanged: 0/0
 19786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19791 ;;Total ram usage:        0 bytes
 19792 ;; Hardware stack levels used: 1
 19793 ;; This function calls:
 19794 ;;		Nothing
 19795 ;; This function is called by:
 19796 ;;		i2_I2C_DO_RCEN
 19797 ;; This function uses a non-reentrant model
 19798 ;;
 19799                           
 19800                           	psect	text155
 19801  0063C6                     __ptext155:
 19802                           	callstack 0
 19803  0063C6                     i2_I2C_MasterStartRx:
 19804                           	callstack 10
 19805  0063C6                     
 19806                           ;mcc_generated_files/i2c_master.c: 585:     SSPCON2bits.RCEN = 1;
 19807  0063C6  86C5               	bsf	197,3,c	;volatile
 19808  0063C8  0012               	return		;funcret
 19809  0063CA                     __end_ofi2_I2C_MasterStartRx:
 19810                           	callstack 0
 19811                           
 19812 ;; *************** function i2_I2C_CallbackReturnReset *****************
 19813 ;; Defined at:
 19814 ;;		line 525 in file "mcc_generated_files/i2c_master.c"
 19815 ;; Parameters:    Size  Location     Type
 19816 ;;  funPtr          2    9[COMRAM] PTR void 
 19817 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 19818 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 19819 ;; Auto vars:     Size  Location     Type
 19820 ;;		None
 19821 ;; Return value:  Size  Location     Type
 19822 ;;                  1    wreg      enum E360
 19823 ;; Registers used:
 19824 ;;		wreg
 19825 ;; Tracked objects:
 19826 ;;		On entry : 0/0
 19827 ;;		On exit  : 0/0
 19828 ;;		Unchanged: 0/0
 19829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19830 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19833 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19834 ;;Total ram usage:        2 bytes
 19835 ;; Hardware stack levels used: 1
 19836 ;; This function calls:
 19837 ;;		Nothing
 19838 ;; This function is called by:
 19839 ;;		i2_I2C_Open
 19840 ;;		i2_I2C_DO_TX
 19841 ;;		i2_I2C_DO_RX
 19842 ;;		i2_I2C_DO_TX_EMPTY
 19843 ;;		i2_I2C_DO_ADDRESS_NACK
 19844 ;;		_I2C_DO_TX
 19845 ;;		_I2C_DO_RX
 19846 ;;		_I2C_DO_TX_EMPTY
 19847 ;;		_I2C_DO_ADDRESS_NACK
 19848 ;;		_I2C_DO_RX_EMPTY
 19849 ;; This function uses a non-reentrant model
 19850 ;;
 19851                           
 19852                           	psect	text156
 19853  0063CA                     __ptext156:
 19854                           	callstack 0
 19855  0063CA                     i2_I2C_CallbackReturnReset:
 19856                           	callstack 10
 19857  0063CA                     
 19858                           ;mcc_generated_files/i2c_master.c: 525: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 526: {;mcc_generated_files/i2c_master.c: 527:  
      +                             return I2C_RESET_LINK;
 19859  0063CA  0E05               	movlw	5
 19860  0063CC  0012               	return		;funcret
 19861  0063CE                     __end_ofi2_I2C_CallbackReturnReset:
 19862                           	callstack 0
 19863                           
 19864 ;; *************** function i2_I2C_CallbackReturnStop *****************
 19865 ;; Defined at:
 19866 ;;		line 520 in file "mcc_generated_files/i2c_master.c"
 19867 ;; Parameters:    Size  Location     Type
 19868 ;;  funPtr          2    9[COMRAM] PTR void 
 19869 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 19870 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 19871 ;; Auto vars:     Size  Location     Type
 19872 ;;		None
 19873 ;; Return value:  Size  Location     Type
 19874 ;;                  1    wreg      enum E360
 19875 ;; Registers used:
 19876 ;;		wreg
 19877 ;; Tracked objects:
 19878 ;;		On entry : 0/0
 19879 ;;		On exit  : 0/0
 19880 ;;		Unchanged: 0/0
 19881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19882 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19885 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19886 ;;Total ram usage:        2 bytes
 19887 ;; Hardware stack levels used: 1
 19888 ;; This function calls:
 19889 ;;		Nothing
 19890 ;; This function is called by:
 19891 ;;		i2_I2C_Open
 19892 ;;		i2_I2C_SetCallback
 19893 ;;		i2_I2C_DO_TX
 19894 ;;		i2_I2C_DO_RX
 19895 ;;		i2_I2C_DO_TX_EMPTY
 19896 ;;		i2_I2C_DO_ADDRESS_NACK
 19897 ;;		_I2C_DO_TX
 19898 ;;		_I2C_DO_RX
 19899 ;;		_I2C_DO_TX_EMPTY
 19900 ;;		_I2C_DO_ADDRESS_NACK
 19901 ;;		_I2C_DO_RX_EMPTY
 19902 ;; This function uses a non-reentrant model
 19903 ;;
 19904                           
 19905                           	psect	text157
 19906  0063CE                     __ptext157:
 19907                           	callstack 0
 19908  0063CE                     i2_I2C_CallbackReturnStop:
 19909                           	callstack 10
 19910  0063CE                     
 19911                           ;mcc_generated_files/i2c_master.c: 520: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 521: {;mcc_generated_files/i2c_master.c: 522:   
      +                            return I2C_STOP;
 19912  0063CE  0E01               	movlw	1
 19913  0063D0  0012               	return		;funcret
 19914  0063D2                     __end_ofi2_I2C_CallbackReturnStop:
 19915                           	callstack 0
 19916                           
 19917 ;; *************** function i2_rdBlkRegCompleteHandler *****************
 19918 ;; Defined at:
 19919 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
 19920 ;; Parameters:    Size  Location     Type
 19921 ;;  ptr             2    9[COMRAM] PTR void 
 19922 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 19923 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 19924 ;; Auto vars:     Size  Location     Type
 19925 ;;		None
 19926 ;; Return value:  Size  Location     Type
 19927 ;;                  1    wreg      enum E360
 19928 ;; Registers used:
 19929 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19930 ;; Tracked objects:
 19931 ;;		On entry : 0/0
 19932 ;;		On exit  : 0/0
 19933 ;;		Unchanged: 0/0
 19934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19935 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19938 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19939 ;;Total ram usage:        2 bytes
 19940 ;; Hardware stack levels used: 1
 19941 ;; Hardware stack levels required when called: 2
 19942 ;; This function calls:
 19943 ;;		i2_I2C_SetBuffer
 19944 ;;		i2_I2C_SetDataCompleteCallback
 19945 ;; This function is called by:
 19946 ;;		i2_I2C_DO_TX
 19947 ;;		i2_I2C_DO_RX
 19948 ;;		i2_I2C_DO_TX_EMPTY
 19949 ;;		i2_I2C_DO_ADDRESS_NACK
 19950 ;;		_I2C_DO_TX
 19951 ;;		_I2C_DO_RX
 19952 ;;		_I2C_DO_TX_EMPTY
 19953 ;;		_I2C_DO_ADDRESS_NACK
 19954 ;;		_I2C_DO_RX_EMPTY
 19955 ;; This function uses a non-reentrant model
 19956 ;;
 19957                           
 19958                           	psect	text158
 19959  005A86                     __ptext158:
 19960                           	callstack 0
 19961  005A86                     i2_rdBlkRegCompleteHandler:
 19962                           	callstack 8
 19963  005A86                     
 19964                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
 19965  005A86  EE20 F002          	lfsr	2,2
 19966  005A8A  500A               	movf	i2rdBlkRegCompleteHandler@ptr^0,w,c
 19967  005A8C  26D9               	addwf	fsr2l,f,c
 19968  005A8E  500B               	movf	(i2rdBlkRegCompleteHandler@ptr+1)^0,w,c
 19969  005A90  22DA               	addwfc	fsr2h,f,c
 19970  005A92  CFDE F001          	movff	postinc2,i2I2C_SetBuffer@buffer
 19971  005A96  CFDD F002          	movff	postdec2,i2I2C_SetBuffer@buffer+1
 19972  005A9A  C00A  FFD9         	movff	i2rdBlkRegCompleteHandler@ptr,fsr2l
 19973  005A9E  C00B  FFDA         	movff	i2rdBlkRegCompleteHandler@ptr+1,fsr2h
 19974  005AA2  CFDE F003          	movff	postinc2,i2I2C_SetBuffer@bufferSize
 19975  005AA6  CFDD F004          	movff	postdec2,i2I2C_SetBuffer@bufferSize+1
 19976  005AAA  ECE6  F02F         	call	i2_I2C_SetBuffer	;wreg free
 19977  005AAE                     
 19978                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 19979  005AAE  0E00               	movlw	0
 19980  005AB0  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
 19981  005AB2  0E00               	movlw	0
 19982  005AB4  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
 19983  005AB6  0E00               	movlw	0
 19984  005AB8  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
 19985  005ABA  0E00               	movlw	0
 19986  005ABC  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
 19987  005ABE  ECC5  F030         	call	i2_I2C_SetDataCompleteCallback	;wreg free
 19988  005AC2                     
 19989                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
 19990  005AC2  0E02               	movlw	2
 19991  005AC4  0012               	return		;funcret
 19992  005AC6                     __end_ofi2_rdBlkRegCompleteHandler:
 19993                           	callstack 0
 19994                           
 19995 ;; *************** function i2_wr1RegCompleteHandler *****************
 19996 ;; Defined at:
 19997 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
 19998 ;; Parameters:    Size  Location     Type
 19999 ;;  ptr             2    9[COMRAM] PTR void 
 20000 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 20001 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 20002 ;; Auto vars:     Size  Location     Type
 20003 ;;		None
 20004 ;; Return value:  Size  Location     Type
 20005 ;;                  1    wreg      enum E360
 20006 ;; Registers used:
 20007 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20008 ;; Tracked objects:
 20009 ;;		On entry : 0/0
 20010 ;;		On exit  : 0/0
 20011 ;;		Unchanged: 0/0
 20012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20013 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20016 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20017 ;;Total ram usage:        2 bytes
 20018 ;; Hardware stack levels used: 1
 20019 ;; Hardware stack levels required when called: 2
 20020 ;; This function calls:
 20021 ;;		i2_I2C_SetBuffer
 20022 ;;		i2_I2C_SetDataCompleteCallback
 20023 ;; This function is called by:
 20024 ;;		i2_I2C_Write1ByteRegister
 20025 ;;		i2_I2C_DO_TX
 20026 ;;		i2_I2C_DO_RX
 20027 ;;		i2_I2C_DO_TX_EMPTY
 20028 ;;		i2_I2C_DO_ADDRESS_NACK
 20029 ;;		_I2C_DO_TX
 20030 ;;		_I2C_DO_RX
 20031 ;;		_I2C_DO_TX_EMPTY
 20032 ;;		_I2C_DO_ADDRESS_NACK
 20033 ;;		_I2C_DO_RX_EMPTY
 20034 ;; This function uses a non-reentrant model
 20035 ;;
 20036                           
 20037                           	psect	text159
 20038  005E2A                     __ptext159:
 20039                           	callstack 0
 20040  005E2A                     i2_wr1RegCompleteHandler:
 20041                           	callstack 8
 20042  005E2A                     
 20043                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
 20044  005E2A  C00A  F001         	movff	i2wr1RegCompleteHandler@ptr,i2I2C_SetBuffer@buffer
 20045  005E2E  C00B  F002         	movff	i2wr1RegCompleteHandler@ptr+1,i2I2C_SetBuffer@buffer+1
 20046  005E32  0E00               	movlw	0
 20047  005E34  6E04               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
 20048  005E36  0E01               	movlw	1
 20049  005E38  6E03               	movwf	i2I2C_SetBuffer@bufferSize^0,c
 20050  005E3A  ECE6  F02F         	call	i2_I2C_SetBuffer	;wreg free
 20051  005E3E                     
 20052                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 20053  005E3E  0E00               	movlw	0
 20054  005E40  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
 20055  005E42  0E00               	movlw	0
 20056  005E44  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
 20057  005E46  0E00               	movlw	0
 20058  005E48  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
 20059  005E4A  0E00               	movlw	0
 20060  005E4C  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
 20061  005E4E  ECC5  F030         	call	i2_I2C_SetDataCompleteCallback	;wreg free
 20062  005E52                     
 20063                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
 20064  005E52  0E04               	movlw	4
 20065  005E54  0012               	return		;funcret
 20066  005E56                     __end_ofi2_wr1RegCompleteHandler:
 20067                           	callstack 0
 20068                           
 20069 ;; *************** function i2_rd2RegCompleteHandler *****************
 20070 ;; Defined at:
 20071 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
 20072 ;; Parameters:    Size  Location     Type
 20073 ;;  ptr             2    9[COMRAM] PTR void 
 20074 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 20075 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 20076 ;; Auto vars:     Size  Location     Type
 20077 ;;		None
 20078 ;; Return value:  Size  Location     Type
 20079 ;;                  1    wreg      enum E360
 20080 ;; Registers used:
 20081 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20082 ;; Tracked objects:
 20083 ;;		On entry : 0/0
 20084 ;;		On exit  : 0/0
 20085 ;;		Unchanged: 0/0
 20086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20087 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20090 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20091 ;;Total ram usage:        2 bytes
 20092 ;; Hardware stack levels used: 1
 20093 ;; Hardware stack levels required when called: 2
 20094 ;; This function calls:
 20095 ;;		i2_I2C_SetBuffer
 20096 ;;		i2_I2C_SetDataCompleteCallback
 20097 ;; This function is called by:
 20098 ;;		i2_I2C_DO_TX
 20099 ;;		i2_I2C_DO_RX
 20100 ;;		i2_I2C_DO_TX_EMPTY
 20101 ;;		i2_I2C_DO_ADDRESS_NACK
 20102 ;;		_I2C_DO_TX
 20103 ;;		_I2C_DO_RX
 20104 ;;		_I2C_DO_TX_EMPTY
 20105 ;;		_I2C_DO_ADDRESS_NACK
 20106 ;;		_I2C_DO_RX_EMPTY
 20107 ;; This function uses a non-reentrant model
 20108 ;;
 20109                           
 20110                           	psect	text160
 20111  005E56                     __ptext160:
 20112                           	callstack 0
 20113  005E56                     i2_rd2RegCompleteHandler:
 20114                           	callstack 8
 20115  005E56                     
 20116                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
 20117  005E56  C00A  F001         	movff	i2rd2RegCompleteHandler@ptr,i2I2C_SetBuffer@buffer
 20118  005E5A  C00B  F002         	movff	i2rd2RegCompleteHandler@ptr+1,i2I2C_SetBuffer@buffer+1
 20119  005E5E  0E00               	movlw	0
 20120  005E60  6E04               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
 20121  005E62  0E02               	movlw	2
 20122  005E64  6E03               	movwf	i2I2C_SetBuffer@bufferSize^0,c
 20123  005E66  ECE6  F02F         	call	i2_I2C_SetBuffer	;wreg free
 20124  005E6A                     
 20125                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 20126  005E6A  0E00               	movlw	0
 20127  005E6C  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
 20128  005E6E  0E00               	movlw	0
 20129  005E70  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
 20130  005E72  0E00               	movlw	0
 20131  005E74  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
 20132  005E76  0E00               	movlw	0
 20133  005E78  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
 20134  005E7A  ECC5  F030         	call	i2_I2C_SetDataCompleteCallback	;wreg free
 20135  005E7E                     
 20136                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
 20137  005E7E  0E02               	movlw	2
 20138  005E80  0012               	return		;funcret
 20139  005E82                     __end_ofi2_rd2RegCompleteHandler:
 20140                           	callstack 0
 20141                           
 20142 ;; *************** function i2_rd1RegCompleteHandler *****************
 20143 ;; Defined at:
 20144 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
 20145 ;; Parameters:    Size  Location     Type
 20146 ;;  ptr             2    9[COMRAM] PTR void 
 20147 ;;		 -> i2I2C_Write1ByteRegister@data(1), i2I2C_Read1ByteRegister@returnValue(1), I2C_ReadDataBlock@bufferBlock(4), I2C_
      +Write2ByteRegister@data(2), 
 20148 ;;		 -> I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@returnValue(2), I2C_Read1ByteRegister@returnValue(1), NULL
      +(0), 
 20149 ;; Auto vars:     Size  Location     Type
 20150 ;;		None
 20151 ;; Return value:  Size  Location     Type
 20152 ;;                  1    wreg      enum E360
 20153 ;; Registers used:
 20154 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20155 ;; Tracked objects:
 20156 ;;		On entry : 0/0
 20157 ;;		On exit  : 0/0
 20158 ;;		Unchanged: 0/0
 20159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20160 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20163 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20164 ;;Total ram usage:        2 bytes
 20165 ;; Hardware stack levels used: 1
 20166 ;; Hardware stack levels required when called: 2
 20167 ;; This function calls:
 20168 ;;		i2_I2C_SetBuffer
 20169 ;;		i2_I2C_SetDataCompleteCallback
 20170 ;; This function is called by:
 20171 ;;		i2_I2C_Read1ByteRegister
 20172 ;;		i2_I2C_DO_TX
 20173 ;;		i2_I2C_DO_RX
 20174 ;;		i2_I2C_DO_TX_EMPTY
 20175 ;;		i2_I2C_DO_ADDRESS_NACK
 20176 ;;		_I2C_DO_TX
 20177 ;;		_I2C_DO_RX
 20178 ;;		_I2C_DO_TX_EMPTY
 20179 ;;		_I2C_DO_ADDRESS_NACK
 20180 ;;		_I2C_DO_RX_EMPTY
 20181 ;; This function uses a non-reentrant model
 20182 ;;
 20183                           
 20184                           	psect	text161
 20185  005E82                     __ptext161:
 20186                           	callstack 0
 20187  005E82                     i2_rd1RegCompleteHandler:
 20188                           	callstack 8
 20189  005E82                     
 20190                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
 20191  005E82  C00A  F001         	movff	i2rd1RegCompleteHandler@ptr,i2I2C_SetBuffer@buffer
 20192  005E86  C00B  F002         	movff	i2rd1RegCompleteHandler@ptr+1,i2I2C_SetBuffer@buffer+1
 20193  005E8A  0E00               	movlw	0
 20194  005E8C  6E04               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
 20195  005E8E  0E01               	movlw	1
 20196  005E90  6E03               	movwf	i2I2C_SetBuffer@bufferSize^0,c
 20197  005E92  ECE6  F02F         	call	i2_I2C_SetBuffer	;wreg free
 20198  005E96                     
 20199                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 20200  005E96  0E00               	movlw	0
 20201  005E98  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
 20202  005E9A  0E00               	movlw	0
 20203  005E9C  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
 20204  005E9E  0E00               	movlw	0
 20205  005EA0  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
 20206  005EA2  0E00               	movlw	0
 20207  005EA4  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
 20208  005EA6  ECC5  F030         	call	i2_I2C_SetDataCompleteCallback	;wreg free
 20209  005EAA                     
 20210                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
 20211  005EAA  0E02               	movlw	2
 20212  005EAC  0012               	return		;funcret
 20213  005EAE                     __end_ofi2_rd1RegCompleteHandler:
 20214                           	callstack 0
 20215                           
 20216 ;; *************** function i2_wr2RegCompleteHandler *****************
 20217 ;; Defined at:
 20218 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
 20219 ;; Parameters:    Size  Location     Type
 20220 ;;  ptr             2    9[COMRAM] PTR void 
 20221 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 20222 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 20223 ;; Auto vars:     Size  Location     Type
 20224 ;;		None
 20225 ;; Return value:  Size  Location     Type
 20226 ;;                  1    wreg      enum E360
 20227 ;; Registers used:
 20228 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20229 ;; Tracked objects:
 20230 ;;		On entry : 0/0
 20231 ;;		On exit  : 0/0
 20232 ;;		Unchanged: 0/0
 20233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20234 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20237 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20238 ;;Total ram usage:        2 bytes
 20239 ;; Hardware stack levels used: 1
 20240 ;; Hardware stack levels required when called: 2
 20241 ;; This function calls:
 20242 ;;		i2_I2C_SetBuffer
 20243 ;;		i2_I2C_SetDataCompleteCallback
 20244 ;; This function is called by:
 20245 ;;		i2_I2C_DO_TX
 20246 ;;		i2_I2C_DO_RX
 20247 ;;		i2_I2C_DO_TX_EMPTY
 20248 ;;		i2_I2C_DO_ADDRESS_NACK
 20249 ;;		_I2C_DO_TX
 20250 ;;		_I2C_DO_RX
 20251 ;;		_I2C_DO_TX_EMPTY
 20252 ;;		_I2C_DO_ADDRESS_NACK
 20253 ;;		_I2C_DO_RX_EMPTY
 20254 ;; This function uses a non-reentrant model
 20255 ;;
 20256                           
 20257                           	psect	text162
 20258  005EAE                     __ptext162:
 20259                           	callstack 0
 20260  005EAE                     i2_wr2RegCompleteHandler:
 20261                           	callstack 8
 20262  005EAE                     
 20263                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
 20264  005EAE  C00A  F001         	movff	i2wr2RegCompleteHandler@ptr,i2I2C_SetBuffer@buffer
 20265  005EB2  C00B  F002         	movff	i2wr2RegCompleteHandler@ptr+1,i2I2C_SetBuffer@buffer+1
 20266  005EB6  0E00               	movlw	0
 20267  005EB8  6E04               	movwf	(i2I2C_SetBuffer@bufferSize+1)^0,c
 20268  005EBA  0E02               	movlw	2
 20269  005EBC  6E03               	movwf	i2I2C_SetBuffer@bufferSize^0,c
 20270  005EBE  ECE6  F02F         	call	i2_I2C_SetBuffer	;wreg free
 20271  005EC2                     
 20272                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 20273  005EC2  0E00               	movlw	0
 20274  005EC4  6E06               	movwf	i2I2C_SetDataCompleteCallback@cb^0,c
 20275  005EC6  0E00               	movlw	0
 20276  005EC8  6E07               	movwf	(i2I2C_SetDataCompleteCallback@cb+1)^0,c
 20277  005ECA  0E00               	movlw	0
 20278  005ECC  6E08               	movwf	i2I2C_SetDataCompleteCallback@ptr^0,c
 20279  005ECE  0E00               	movlw	0
 20280  005ED0  6E09               	movwf	(i2I2C_SetDataCompleteCallback@ptr+1)^0,c
 20281  005ED2  ECC5  F030         	call	i2_I2C_SetDataCompleteCallback	;wreg free
 20282  005ED6                     
 20283                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
 20284  005ED6  0E04               	movlw	4
 20285  005ED8  0012               	return		;funcret
 20286  005EDA                     __end_ofi2_wr2RegCompleteHandler:
 20287                           	callstack 0
 20288                           
 20289 ;; *************** function i2_I2C_SetDataCompleteCallback *****************
 20290 ;; Defined at:
 20291 ;;		line 273 in file "mcc_generated_files/i2c_master.c"
 20292 ;; Parameters:    Size  Location     Type
 20293 ;;  cb              2    5[COMRAM] PTR FTN(PTR void ,)enum 
 20294 ;;		 -> i2_rd1RegCompleteHandler(1), i2_wr1RegCompleteHandler(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), 
 20295 ;;		 -> wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), Absolute function(1), 
 20296 ;;  ptr             2    7[COMRAM] PTR void 
 20297 ;;		 -> i2I2C_Write1ByteRegister@data(1), i2I2C_Read1ByteRegister@returnValue(1), I2C_ReadDataBlock@bufferBlock(4), I2C_
      +Write2ByteRegister@data(2), 
 20298 ;;		 -> I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@returnValue(2), I2C_Read1ByteRegister@returnValue(1), NULL
      +(0), 
 20299 ;; Auto vars:     Size  Location     Type
 20300 ;;		None
 20301 ;; Return value:  Size  Location     Type
 20302 ;;                  1    wreg      void 
 20303 ;; Registers used:
 20304 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20305 ;; Tracked objects:
 20306 ;;		On entry : 0/0
 20307 ;;		On exit  : 0/0
 20308 ;;		Unchanged: 0/0
 20309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20310 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20313 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20314 ;;Total ram usage:        4 bytes
 20315 ;; Hardware stack levels used: 1
 20316 ;; Hardware stack levels required when called: 1
 20317 ;; This function calls:
 20318 ;;		i2_I2C_SetCallback
 20319 ;; This function is called by:
 20320 ;;		i2_I2C_Read1ByteRegister
 20321 ;;		i2_I2C_Write1ByteRegister
 20322 ;;		i2_rd1RegCompleteHandler
 20323 ;;		i2_rd2RegCompleteHandler
 20324 ;;		i2_wr1RegCompleteHandler
 20325 ;;		i2_wr2RegCompleteHandler
 20326 ;;		i2_rdBlkRegCompleteHandler
 20327 ;; This function uses a non-reentrant model
 20328 ;;
 20329                           
 20330                           	psect	text163
 20331  00618A                     __ptext163:
 20332                           	callstack 0
 20333  00618A                     i2_I2C_SetDataCompleteCallback:
 20334                           	callstack 14
 20335  00618A                     
 20336                           ;mcc_generated_files/i2c_master.c: 273: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 274: {;mcc_generated_files/i2c_master.c
      +                          : 275:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
 20337  00618A  C006  F001         	movff	i2I2C_SetDataCompleteCallback@cb,i2I2C_SetCallback@cb
 20338  00618E  C007  F002         	movff	i2I2C_SetDataCompleteCallback@cb+1,i2I2C_SetCallback@cb+1
 20339  006192  C008  F003         	movff	i2I2C_SetDataCompleteCallback@ptr,i2I2C_SetCallback@ptr
 20340  006196  C009  F004         	movff	i2I2C_SetDataCompleteCallback@ptr+1,i2I2C_SetCallback@ptr+1
 20341  00619A  0E00               	movlw	0
 20342  00619C  EC42  F027         	call	i2_I2C_SetCallback
 20343  0061A0  0012               	return		;funcret
 20344  0061A2                     __end_ofi2_I2C_SetDataCompleteCallback:
 20345                           	callstack 0
 20346                           
 20347 ;; *************** function i2_I2C_SetCallback *****************
 20348 ;; Defined at:
 20349 ;;		line 298 in file "mcc_generated_files/i2c_master.c"
 20350 ;; Parameters:    Size  Location     Type
 20351 ;;  idx             1    wreg     enum E2881
 20352 ;;  cb              2    0[COMRAM] PTR FTN(PTR void ,)enum 
 20353 ;;		 -> i2_rd1RegCompleteHandler(1), i2_wr1RegCompleteHandler(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), 
 20354 ;;		 -> wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), Absolute function(1), 
 20355 ;;  ptr             2    2[COMRAM] PTR void 
 20356 ;;		 -> i2I2C_Write1ByteRegister@data(1), i2I2C_Read1ByteRegister@returnValue(1), I2C_ReadDataBlock@bufferBlock(4), I2C_
      +Write2ByteRegister@data(2), 
 20357 ;;		 -> I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@returnValue(2), I2C_Read1ByteRegister@returnValue(1), NULL
      +(0), 
 20358 ;; Auto vars:     Size  Location     Type
 20359 ;;  idx             1    4[COMRAM] enum E2881
 20360 ;; Return value:  Size  Location     Type
 20361 ;;                  1    wreg      void 
 20362 ;; Registers used:
 20363 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20364 ;; Tracked objects:
 20365 ;;		On entry : 0/0
 20366 ;;		On exit  : 0/0
 20367 ;;		Unchanged: 0/0
 20368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20369 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20370 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20372 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20373 ;;Total ram usage:        5 bytes
 20374 ;; Hardware stack levels used: 1
 20375 ;; This function calls:
 20376 ;;		Nothing
 20377 ;; This function is called by:
 20378 ;;		i2_I2C_SetDataCompleteCallback
 20379 ;;		i2_I2C_SetAddressNackCallback
 20380 ;; This function uses a non-reentrant model
 20381 ;;
 20382                           
 20383                           	psect	text164
 20384  004E84                     __ptext164:
 20385                           	callstack 0
 20386  004E84                     i2_I2C_SetCallback:
 20387                           	callstack 14
 20388                           
 20389                           ;incstack = 0
 20390                           ;i2I2C_SetCallback@idx stored from wreg
 20391  004E84  6E05               	movwf	i2I2C_SetCallback@idx^0,c
 20392  004E86                     
 20393                           ;mcc_generated_files/i2c_master.c: 298: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 299: {;mcc_generate
      +                          d_files/i2c_master.c: 300:     if(cb)
 20394  004E86  5001               	movf	i2I2C_SetCallback@cb^0,w,c
 20395  004E88  1002               	iorwf	(i2I2C_SetCallback@cb+1)^0,w,c
 20396  004E8A  B4D8               	btfsc	status,2,c
 20397  004E8C  EF4A  F027         	goto	i2u838_41
 20398  004E90  EF4C  F027         	goto	i2u838_40
 20399  004E94                     i2u838_41:
 20400  004E94  EF66  F027         	goto	i2l10455
 20401  004E98                     i2u838_40:
 20402  004E98                     
 20403                           ;mcc_generated_files/i2c_master.c: 301:     {;mcc_generated_files/i2c_master.c: 302:    
      +                               I2C_Status.callbackTable[idx] = cb;
 20404  004E98  5005               	movf	i2I2C_SetCallback@idx^0,w,c
 20405  004E9A  0D02               	mullw	2
 20406  004E9C  0EC8               	movlw	low _I2C_Status
 20407  004E9E  24F3               	addwf	243,w,c
 20408  004EA0  6ED9               	movwf	fsr2l,c
 20409  004EA2  0E00               	movlw	high _I2C_Status
 20410  004EA4  20F4               	addwfc	prodh,w,c
 20411  004EA6  6EDA               	movwf	fsr2h,c
 20412  004EA8  C001  FFDE         	movff	i2I2C_SetCallback@cb,postinc2
 20413  004EAC  C002  FFDD         	movff	i2I2C_SetCallback@cb+1,postdec2
 20414                           
 20415                           ;mcc_generated_files/i2c_master.c: 303:         I2C_Status.callbackPayload[idx] = ptr;
 20416  004EB0  5005               	movf	i2I2C_SetCallback@idx^0,w,c
 20417  004EB2  0D02               	mullw	2
 20418  004EB4  0ED4               	movlw	low (_I2C_Status+12)
 20419  004EB6  24F3               	addwf	243,w,c
 20420  004EB8  6ED9               	movwf	fsr2l,c
 20421  004EBA  0E00               	movlw	high (_I2C_Status+12)
 20422  004EBC  20F4               	addwfc	prodh,w,c
 20423  004EBE  6EDA               	movwf	fsr2h,c
 20424  004EC0  C003  FFDE         	movff	i2I2C_SetCallback@ptr,postinc2
 20425  004EC4  C004  FFDD         	movff	i2I2C_SetCallback@ptr+1,postdec2
 20426                           
 20427                           ;mcc_generated_files/i2c_master.c: 304:     }
 20428  004EC8  EF7E  F027         	goto	i2l1206
 20429  004ECC                     i2l10455:
 20430                           
 20431                           ;mcc_generated_files/i2c_master.c: 306:     {;mcc_generated_files/i2c_master.c: 307:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
 20432  004ECC  5005               	movf	i2I2C_SetCallback@idx^0,w,c
 20433  004ECE  0D02               	mullw	2
 20434  004ED0  0EC8               	movlw	low _I2C_Status
 20435  004ED2  24F3               	addwf	243,w,c
 20436  004ED4  6ED9               	movwf	fsr2l,c
 20437  004ED6  0E00               	movlw	high _I2C_Status
 20438  004ED8  20F4               	addwfc	prodh,w,c
 20439  004EDA  6EDA               	movwf	fsr2h,c
 20440  004EDC  0ECE               	movlw	low i2_I2C_CallbackReturnStop
 20441  004EDE  6EDE               	movwf	postinc2,c
 20442  004EE0  0E63               	movlw	high i2_I2C_CallbackReturnStop
 20443  004EE2  6EDD               	movwf	postdec2,c
 20444                           
 20445                           ;mcc_generated_files/i2c_master.c: 308:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
 20446  004EE4  5005               	movf	i2I2C_SetCallback@idx^0,w,c
 20447  004EE6  0D02               	mullw	2
 20448  004EE8  0ED4               	movlw	low (_I2C_Status+12)
 20449  004EEA  24F3               	addwf	243,w,c
 20450  004EEC  6ED9               	movwf	fsr2l,c
 20451  004EEE  0E00               	movlw	high (_I2C_Status+12)
 20452  004EF0  20F4               	addwfc	prodh,w,c
 20453  004EF2  6EDA               	movwf	fsr2h,c
 20454  004EF4  0E00               	movlw	0
 20455  004EF6  6EDE               	movwf	postinc2,c
 20456  004EF8  0E00               	movlw	0
 20457  004EFA  6EDD               	movwf	postdec2,c
 20458  004EFC                     i2l1206:
 20459  004EFC  0012               	return		;funcret
 20460  004EFE                     __end_ofi2_I2C_SetCallback:
 20461                           	callstack 0
 20462                           
 20463 ;; *************** function i2_I2C_SetBuffer *****************
 20464 ;; Defined at:
 20465 ;;		line 263 in file "mcc_generated_files/i2c_master.c"
 20466 ;; Parameters:    Size  Location     Type
 20467 ;;  buffer          2    0[COMRAM] PTR void 
 20468 ;;		 -> I2C_Read1ByteRegister@returnValue.data(3), I2C_Read2ByteRegister@returnValue.data(3), I2C_Write1ByteRegister@dat
      +a.data(3), I2C_Write2ByteRegister@data.data(3), 
 20469 ;;		 -> i2I2C_Write1ByteRegister@data(1), i2I2C_Write1ByteRegister@reg(1), i2I2C_Read1ByteRegister@returnValue(1), i2I2C
      +_Read1ByteRegister@reg(1), 
 20470 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), bufferBlock.data(3), I2C_Write2ByteRegister@reg(1), 
 20471 ;;		 -> I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegi
      +ster@reg(1), 
 20472 ;;		 -> I2C_Read2ByteRegister@returnValue(2), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), NULL(0
      +), 
 20473 ;;  bufferSize      2    2[COMRAM] unsigned int 
 20474 ;; Auto vars:     Size  Location     Type
 20475 ;;		None
 20476 ;; Return value:  Size  Location     Type
 20477 ;;                  1    wreg      void 
 20478 ;; Registers used:
 20479 ;;		wreg, status,2, status,0
 20480 ;; Tracked objects:
 20481 ;;		On entry : 0/0
 20482 ;;		On exit  : 0/0
 20483 ;;		Unchanged: 0/0
 20484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20485 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20488 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20489 ;;Total ram usage:        4 bytes
 20490 ;; Hardware stack levels used: 1
 20491 ;; This function calls:
 20492 ;;		Nothing
 20493 ;; This function is called by:
 20494 ;;		i2_I2C_Read1ByteRegister
 20495 ;;		i2_I2C_Write1ByteRegister
 20496 ;;		i2_rd1RegCompleteHandler
 20497 ;;		i2_rd2RegCompleteHandler
 20498 ;;		i2_wr1RegCompleteHandler
 20499 ;;		i2_wr2RegCompleteHandler
 20500 ;;		i2_rdBlkRegCompleteHandler
 20501 ;; This function uses a non-reentrant model
 20502 ;;
 20503                           
 20504                           	psect	text165
 20505  005FCC                     __ptext165:
 20506                           	callstack 0
 20507  005FCC                     i2_I2C_SetBuffer:
 20508                           	callstack 15
 20509  005FCC                     
 20510                           ;mcc_generated_files/i2c_master.c: 263: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 264: {;mcc_generated_files/i2c_master.c: 265:     
      +                          if(I2C_Status.bufferFree)
 20511  005FCC  0100               	movlb	0	; () banked
 20512  005FCE  A7EB               	btfss	(_I2C_Status+35)& (0+255),3,b
 20513  005FD0  EFEC  F02F         	goto	i2u839_41
 20514  005FD4  EFEE  F02F         	goto	i2u839_40
 20515  005FD8                     i2u839_41:
 20516  005FD8  EFF7  F02F         	goto	i2l1186
 20517  005FDC                     i2u839_40:
 20518  005FDC                     
 20519                           ; BSR set to: 0
 20520                           ;mcc_generated_files/i2c_master.c: 266:     {;mcc_generated_files/i2c_master.c: 267:    
      +                               I2C_Status.data_ptr = buffer;
 20521  005FDC  C001  F0E5         	movff	i2I2C_SetBuffer@buffer,_I2C_Status+29
 20522  005FE0  C002  F0E6         	movff	i2I2C_SetBuffer@buffer+1,_I2C_Status+30
 20523  005FE4                     
 20524                           ; BSR set to: 0
 20525                           ;mcc_generated_files/i2c_master.c: 268:         I2C_Status.data_length = bufferSize;
 20526  005FE4  C003  F0E7         	movff	i2I2C_SetBuffer@bufferSize,_I2C_Status+31
 20527  005FE8  C004  F0E8         	movff	i2I2C_SetBuffer@bufferSize+1,_I2C_Status+32
 20528  005FEC                     
 20529                           ; BSR set to: 0
 20530                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.bufferFree = 0;
 20531  005FEC  97EB               	bcf	(_I2C_Status+35)& (0+255),3,b
 20532  005FEE                     i2l1186:
 20533                           
 20534                           ; BSR set to: 0
 20535  005FEE  0012               	return		;funcret
 20536  005FF0                     __end_ofi2_I2C_SetBuffer:
 20537                           	callstack 0
 20538                           
 20539 ;; *************** function i2_I2C_MasterStop *****************
 20540 ;; Defined at:
 20541 ;;		line 593 in file "mcc_generated_files/i2c_master.c"
 20542 ;; Parameters:    Size  Location     Type
 20543 ;;		None
 20544 ;; Auto vars:     Size  Location     Type
 20545 ;;		None
 20546 ;; Return value:  Size  Location     Type
 20547 ;;                  1    wreg      void 
 20548 ;; Registers used:
 20549 ;;		None
 20550 ;; Tracked objects:
 20551 ;;		On entry : 0/0
 20552 ;;		On exit  : 0/0
 20553 ;;		Unchanged: 0/0
 20554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20559 ;;Total ram usage:        0 bytes
 20560 ;; Hardware stack levels used: 1
 20561 ;; This function calls:
 20562 ;;		Nothing
 20563 ;; This function is called by:
 20564 ;;		i2_I2C_DO_SEND_STOP
 20565 ;; This function uses a non-reentrant model
 20566 ;;
 20567                           
 20568                           	psect	text166
 20569  0063D2                     __ptext166:
 20570                           	callstack 0
 20571  0063D2                     i2_I2C_MasterStop:
 20572                           	callstack 9
 20573  0063D2                     
 20574                           ;mcc_generated_files/i2c_master.c: 595:     SSPCON2bits.PEN = 1;
 20575  0063D2  84C5               	bsf	197,2,c	;volatile
 20576  0063D4  0012               	return		;funcret
 20577  0063D6                     __end_ofi2_I2C_MasterStop:
 20578                           	callstack 0
 20579                           
 20580 ;; *************** function i2_I2C_MasterEnableRestart *****************
 20581 ;; Defined at:
 20582 ;;		line 573 in file "mcc_generated_files/i2c_master.c"
 20583 ;; Parameters:    Size  Location     Type
 20584 ;;		None
 20585 ;; Auto vars:     Size  Location     Type
 20586 ;;		None
 20587 ;; Return value:  Size  Location     Type
 20588 ;;                  1    wreg      void 
 20589 ;; Registers used:
 20590 ;;		None
 20591 ;; Tracked objects:
 20592 ;;		On entry : 0/0
 20593 ;;		On exit  : 0/0
 20594 ;;		Unchanged: 0/0
 20595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20600 ;;Total ram usage:        0 bytes
 20601 ;; Hardware stack levels used: 1
 20602 ;; This function calls:
 20603 ;;		Nothing
 20604 ;; This function is called by:
 20605 ;;		i2_I2C_DO_SEND_RESTART_READ
 20606 ;;		i2_I2C_DO_SEND_RESTART_WRITE
 20607 ;;		i2_I2C_DO_SEND_RESTART
 20608 ;; This function uses a non-reentrant model
 20609 ;;
 20610                           
 20611                           	psect	text167
 20612  0063D6                     __ptext167:
 20613                           	callstack 0
 20614  0063D6                     i2_I2C_MasterEnableRestart:
 20615                           	callstack 9
 20616  0063D6                     
 20617                           ;mcc_generated_files/i2c_master.c: 575:     SSPCON2bits.RSEN = 1;
 20618  0063D6  82C5               	bsf	197,1,c	;volatile
 20619  0063D8  0012               	return		;funcret
 20620  0063DA                     __end_ofi2_I2C_MasterEnableRestart:
 20621                           	callstack 0
 20622                           
 20623 ;; *************** function i2_I2C_MasterStart *****************
 20624 ;; Defined at:
 20625 ;;		line 588 in file "mcc_generated_files/i2c_master.c"
 20626 ;; Parameters:    Size  Location     Type
 20627 ;;		None
 20628 ;; Auto vars:     Size  Location     Type
 20629 ;;		None
 20630 ;; Return value:  Size  Location     Type
 20631 ;;                  1    wreg      void 
 20632 ;; Registers used:
 20633 ;;		None
 20634 ;; Tracked objects:
 20635 ;;		On entry : 0/0
 20636 ;;		On exit  : 0/0
 20637 ;;		Unchanged: 0/0
 20638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20643 ;;Total ram usage:        0 bytes
 20644 ;; Hardware stack levels used: 1
 20645 ;; This function calls:
 20646 ;;		Nothing
 20647 ;; This function is called by:
 20648 ;;		i2_I2C_MasterOperation
 20649 ;; This function uses a non-reentrant model
 20650 ;;
 20651                           
 20652                           	psect	text168
 20653  0063DA                     __ptext168:
 20654                           	callstack 0
 20655  0063DA                     i2_I2C_MasterStart:
 20656                           	callstack 13
 20657  0063DA                     
 20658                           ;mcc_generated_files/i2c_master.c: 590:     SSPCON2bits.SEN = 1;
 20659  0063DA  80C5               	bsf	197,0,c	;volatile
 20660  0063DC  0012               	return		;funcret
 20661  0063DE                     __end_ofi2_I2C_MasterStart:
 20662                           	callstack 0
 20663                           
 20664 ;; *************** function i2_I2C_Close *****************
 20665 ;; Defined at:
 20666 ;;		line 209 in file "mcc_generated_files/i2c_master.c"
 20667 ;; Parameters:    Size  Location     Type
 20668 ;;		None
 20669 ;; Auto vars:     Size  Location     Type
 20670 ;;  returnValue     1    0[COMRAM] enum E355
 20671 ;; Return value:  Size  Location     Type
 20672 ;;                  1    wreg      enum E355
 20673 ;; Registers used:
 20674 ;;		wreg, status,2, cstack
 20675 ;; Tracked objects:
 20676 ;;		On entry : 0/0
 20677 ;;		On exit  : 0/0
 20678 ;;		Unchanged: 0/0
 20679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20681 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20683 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20684 ;;Total ram usage:        1 bytes
 20685 ;; Hardware stack levels used: 1
 20686 ;; Hardware stack levels required when called: 1
 20687 ;; This function calls:
 20688 ;;		i2_I2C_MasterClearIrq
 20689 ;;		i2_I2C_MasterClose
 20690 ;;		i2_I2C_MasterDisableIrq
 20691 ;; This function is called by:
 20692 ;;		i2_I2C_Read1ByteRegister
 20693 ;;		i2_I2C_Write1ByteRegister
 20694 ;; This function uses a non-reentrant model
 20695 ;;
 20696                           
 20697                           	psect	text169
 20698  005EDA                     __ptext169:
 20699                           	callstack 0
 20700  005EDA                     i2_I2C_Close:
 20701                           	callstack 14
 20702  005EDA                     
 20703                           ;mcc_generated_files/i2c_master.c: 211:     i2c_error_t returnValue = I2C_BUSY;
 20704  005EDA  0E01               	movlw	1
 20705  005EDC  6E01               	movwf	i2I2C_Close@returnValue^0,c
 20706  005EDE                     
 20707                           ;mcc_generated_files/i2c_master.c: 212:     if(!I2C_Status.busy)
 20708  005EDE  0100               	movlb	0	; () banked
 20709  005EE0  B3EB               	btfsc	(_I2C_Status+35)& (0+255),1,b
 20710  005EE2  EF75  F02F         	goto	i2u517_41
 20711  005EE6  EF77  F02F         	goto	i2u517_40
 20712  005EEA                     i2u517_41:
 20713  005EEA  EF81  F02F         	goto	i2l7479
 20714  005EEE                     i2u517_40:
 20715  005EEE                     
 20716                           ; BSR set to: 0
 20717                           ;mcc_generated_files/i2c_master.c: 213:     {;mcc_generated_files/i2c_master.c: 214:    
      +                               I2C_Status.inUse = 0;
 20718  005EEE  95EB               	bcf	(_I2C_Status+35)& (0+255),2,b
 20719                           
 20720                           ;mcc_generated_files/i2c_master.c: 215:         I2C_Status.address = 0xff;
 20721  005EF0  69E4               	setf	(_I2C_Status+28)& (0+255),b
 20722  005EF2                     
 20723                           ; BSR set to: 0
 20724                           ;mcc_generated_files/i2c_master.c: 216:         I2C_MasterClearIrq();
 20725  005EF2  ECF3  F031         	call	i2_I2C_MasterClearIrq	;wreg free
 20726                           
 20727                           ;mcc_generated_files/i2c_master.c: 217:         I2C_MasterDisableIrq();
 20728  005EF6  ECEF  F031         	call	i2_I2C_MasterDisableIrq	;wreg free
 20729                           
 20730                           ;mcc_generated_files/i2c_master.c: 218:         I2C_MasterClose();
 20731  005EFA  ECF1  F031         	call	i2_I2C_MasterClose	;wreg free
 20732  005EFE                     
 20733                           ;mcc_generated_files/i2c_master.c: 219:         returnValue = I2C_Status.error;
 20734  005EFE  C0EA  F001         	movff	_I2C_Status+34,i2I2C_Close@returnValue
 20735  005F02                     i2l7479:
 20736                           
 20737                           ;mcc_generated_files/i2c_master.c: 221:     return returnValue;
 20738  005F02  5001               	movf	i2I2C_Close@returnValue^0,w,c
 20739  005F04  0012               	return		;funcret
 20740  005F06                     __end_ofi2_I2C_Close:
 20741                           	callstack 0
 20742                           
 20743 ;; *************** function i2_I2C_MasterDisableIrq *****************
 20744 ;; Defined at:
 20745 ;;		line 635 in file "mcc_generated_files/i2c_master.c"
 20746 ;; Parameters:    Size  Location     Type
 20747 ;;		None
 20748 ;; Auto vars:     Size  Location     Type
 20749 ;;		None
 20750 ;; Return value:  Size  Location     Type
 20751 ;;                  1    wreg      void 
 20752 ;; Registers used:
 20753 ;;		None
 20754 ;; Tracked objects:
 20755 ;;		On entry : 0/0
 20756 ;;		On exit  : 0/0
 20757 ;;		Unchanged: 0/0
 20758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20763 ;;Total ram usage:        0 bytes
 20764 ;; Hardware stack levels used: 1
 20765 ;; This function calls:
 20766 ;;		Nothing
 20767 ;; This function is called by:
 20768 ;;		i2_I2C_Close
 20769 ;; This function uses a non-reentrant model
 20770 ;;
 20771                           
 20772                           	psect	text170
 20773  0063DE                     __ptext170:
 20774                           	callstack 0
 20775  0063DE                     i2_I2C_MasterDisableIrq:
 20776                           	callstack 14
 20777  0063DE                     
 20778                           ;mcc_generated_files/i2c_master.c: 637:     PIE1bits.SSPIE = 0;
 20779  0063DE  969D               	bcf	157,3,c	;volatile
 20780  0063E0  0012               	return		;funcret
 20781  0063E2                     __end_ofi2_I2C_MasterDisableIrq:
 20782                           	callstack 0
 20783                           
 20784 ;; *************** function i2_I2C_MasterClose *****************
 20785 ;; Defined at:
 20786 ;;		line 557 in file "mcc_generated_files/i2c_master.c"
 20787 ;; Parameters:    Size  Location     Type
 20788 ;;		None
 20789 ;; Auto vars:     Size  Location     Type
 20790 ;;		None
 20791 ;; Return value:  Size  Location     Type
 20792 ;;                  1    wreg      void 
 20793 ;; Registers used:
 20794 ;;		None
 20795 ;; Tracked objects:
 20796 ;;		On entry : 0/0
 20797 ;;		On exit  : 0/0
 20798 ;;		Unchanged: 0/0
 20799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20804 ;;Total ram usage:        0 bytes
 20805 ;; Hardware stack levels used: 1
 20806 ;; This function calls:
 20807 ;;		Nothing
 20808 ;; This function is called by:
 20809 ;;		i2_I2C_Close
 20810 ;; This function uses a non-reentrant model
 20811 ;;
 20812                           
 20813                           	psect	text171
 20814  0063E2                     __ptext171:
 20815                           	callstack 0
 20816  0063E2                     i2_I2C_MasterClose:
 20817                           	callstack 14
 20818  0063E2                     
 20819                           ;mcc_generated_files/i2c_master.c: 560:     SSPCON1bits.SSPEN = 0;
 20820  0063E2  9AC6               	bcf	198,5,c	;volatile
 20821  0063E4  0012               	return		;funcret
 20822  0063E6                     __end_ofi2_I2C_MasterClose:
 20823                           	callstack 0
 20824                           
 20825 ;; *************** function i2_I2C_MasterClearIrq *****************
 20826 ;; Defined at:
 20827 ;;		line 640 in file "mcc_generated_files/i2c_master.c"
 20828 ;; Parameters:    Size  Location     Type
 20829 ;;		None
 20830 ;; Auto vars:     Size  Location     Type
 20831 ;;		None
 20832 ;; Return value:  Size  Location     Type
 20833 ;;                  1    wreg      void 
 20834 ;; Registers used:
 20835 ;;		None
 20836 ;; Tracked objects:
 20837 ;;		On entry : 0/0
 20838 ;;		On exit  : 0/0
 20839 ;;		Unchanged: 0/0
 20840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20845 ;;Total ram usage:        0 bytes
 20846 ;; Hardware stack levels used: 1
 20847 ;; This function calls:
 20848 ;;		Nothing
 20849 ;; This function is called by:
 20850 ;;		i2_I2C_Open
 20851 ;;		i2_I2C_Close
 20852 ;;		i2_I2C_MasterFsm
 20853 ;; This function uses a non-reentrant model
 20854 ;;
 20855                           
 20856                           	psect	text172
 20857  0063E6                     __ptext172:
 20858                           	callstack 0
 20859  0063E6                     i2_I2C_MasterClearIrq:
 20860                           	callstack 14
 20861  0063E6                     
 20862                           ;mcc_generated_files/i2c_master.c: 642:     PIR1bits.SSPIF = 0;
 20863  0063E6  969E               	bcf	158,3,c	;volatile
 20864  0063E8  0012               	return		;funcret
 20865  0063EA                     __end_ofi2_I2C_MasterClearIrq:
 20866                           	callstack 0
 20867                           
 20868 ;; *************** function _convert_int_to_BCD *****************
 20869 ;; Defined at:
 20870 ;;		line 50 in file "ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c"
 20871 ;; Parameters:    Size  Location     Type
 20872 ;;  int_num         1    wreg     unsigned char 
 20873 ;;  BCD_num         2    8[COMRAM] PTR unsigned char 
 20874 ;;		 -> RTC1307._Day(1), RTC1307._Month(1), RTC1307._Year(1), RTC1307._Minutes(1), 
 20875 ;;		 -> RTC1307._Hours(1), RTC1307(6), 
 20876 ;; Auto vars:     Size  Location     Type
 20877 ;;  int_num         1   10[COMRAM] unsigned char 
 20878 ;;  h_nipple        1   12[COMRAM] unsigned char 
 20879 ;;  l_nipple        1   11[COMRAM] unsigned char 
 20880 ;; Return value:  Size  Location     Type
 20881 ;;                  1    wreg      void 
 20882 ;; Registers used:
 20883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20884 ;; Tracked objects:
 20885 ;;		On entry : 0/0
 20886 ;;		On exit  : 0/0
 20887 ;;		Unchanged: 0/0
 20888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20889 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20890 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20892 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20893 ;;Total ram usage:        5 bytes
 20894 ;; Hardware stack levels used: 1
 20895 ;; Hardware stack levels required when called: 1
 20896 ;; This function calls:
 20897 ;;		___awdiv
 20898 ;;		___awmod
 20899 ;; This function is called by:
 20900 ;;		_APP_INT0_ISR
 20901 ;; This function uses a non-reentrant model
 20902 ;;
 20903                           
 20904                           	psect	text173
 20905  002DF8                     __ptext173:
 20906                           	callstack 0
 20907  002DF8                     _convert_int_to_BCD:
 20908                           	callstack 16
 20909                           
 20910                           ;incstack = 0
 20911                           ;convert_int_to_BCD@int_num stored from wreg
 20912  002DF8  6E0B               	movwf	convert_int_to_BCD@int_num^0,c
 20913  002DFA                     
 20914                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 51:     uint8 l_nipple,h_nipple;;ECUAL
      +                          /RealTimeClockDS1307/RealTimeClockDS1307.c: 52:     switch(int_num%10){
 20915  002DFA  EF23  F017         	goto	i2l8267
 20916  002DFE                     i2l8245:
 20917  002DFE  0E00               	movlw	0
 20918  002E00  6E0C               	movwf	convert_int_to_BCD@l_nipple^0,c
 20919  002E02  EF82  F017         	goto	i2l8291
 20920  002E06                     i2l8247:
 20921  002E06  0E01               	movlw	1
 20922  002E08  6E0C               	movwf	convert_int_to_BCD@l_nipple^0,c
 20923  002E0A  EF82  F017         	goto	i2l8291
 20924  002E0E                     i2l8249:
 20925  002E0E  0E02               	movlw	2
 20926  002E10  6E0C               	movwf	convert_int_to_BCD@l_nipple^0,c
 20927  002E12  EF82  F017         	goto	i2l8291
 20928  002E16                     i2l8251:
 20929  002E16  0E03               	movlw	3
 20930  002E18  6E0C               	movwf	convert_int_to_BCD@l_nipple^0,c
 20931  002E1A  EF82  F017         	goto	i2l8291
 20932  002E1E                     i2l8253:
 20933  002E1E  0E04               	movlw	4
 20934  002E20  6E0C               	movwf	convert_int_to_BCD@l_nipple^0,c
 20935  002E22  EF82  F017         	goto	i2l8291
 20936  002E26                     i2l8255:
 20937  002E26  0E05               	movlw	5
 20938  002E28  6E0C               	movwf	convert_int_to_BCD@l_nipple^0,c
 20939  002E2A  EF82  F017         	goto	i2l8291
 20940  002E2E                     i2l8257:
 20941  002E2E  0E06               	movlw	6
 20942  002E30  6E0C               	movwf	convert_int_to_BCD@l_nipple^0,c
 20943  002E32  EF82  F017         	goto	i2l8291
 20944  002E36                     i2l8259:
 20945  002E36  0E07               	movlw	7
 20946  002E38  6E0C               	movwf	convert_int_to_BCD@l_nipple^0,c
 20947  002E3A  EF82  F017         	goto	i2l8291
 20948  002E3E                     i2l8261:
 20949  002E3E  0E08               	movlw	8
 20950  002E40  6E0C               	movwf	convert_int_to_BCD@l_nipple^0,c
 20951  002E42  EF82  F017         	goto	i2l8291
 20952  002E46                     i2l8267:
 20953  002E46  C00B  F001         	movff	convert_int_to_BCD@int_num,___awmod@dividend
 20954  002E4A  6A02               	clrf	(___awmod@dividend+1)^0,c
 20955  002E4C  0E00               	movlw	0
 20956  002E4E  6E04               	movwf	(___awmod@divisor+1)^0,c
 20957  002E50  0E0A               	movlw	10
 20958  002E52  6E03               	movwf	___awmod@divisor^0,c
 20959  002E54  EC93  F022         	call	___awmod	;wreg free
 20960                           
 20961                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20962                           ; Switch size 1, requested type "simple"
 20963                           ; Number of cases is 1, Range of values is 0 to 0
 20964                           ; switch strategies available:
 20965                           ; Name         Instructions Cycles
 20966                           ; simple_byte            4     3 (average)
 20967                           ;	Chosen strategy is simple_byte
 20968  002E58  5002               	movf	(?___awmod+1)^0,w,c
 20969  002E5A  0A00               	xorlw	0	; case 0
 20970  002E5C  B4D8               	btfsc	status,2,c
 20971  002E5E  EF33  F017         	goto	i2l13683
 20972  002E62  EF82  F017         	goto	i2l8291
 20973  002E66                     i2l13683:
 20974                           
 20975                           ; Switch size 1, requested type "simple"
 20976                           ; Number of cases is 10, Range of values is 0 to 9
 20977                           ; switch strategies available:
 20978                           ; Name         Instructions Cycles
 20979                           ; simple_byte           31    16 (average)
 20980                           ;	Chosen strategy is simple_byte
 20981  002E66  5001               	movf	?___awmod^0,w,c
 20982  002E68  0A00               	xorlw	0	; case 0
 20983  002E6A  B4D8               	btfsc	status,2,c
 20984  002E6C  EFFF  F016         	goto	i2l8245
 20985  002E70  0A01               	xorlw	1	; case 1
 20986  002E72  B4D8               	btfsc	status,2,c
 20987  002E74  EF03  F017         	goto	i2l8247
 20988  002E78  0A03               	xorlw	3	; case 2
 20989  002E7A  B4D8               	btfsc	status,2,c
 20990  002E7C  EF07  F017         	goto	i2l8249
 20991  002E80  0A01               	xorlw	1	; case 3
 20992  002E82  B4D8               	btfsc	status,2,c
 20993  002E84  EF0B  F017         	goto	i2l8251
 20994  002E88  0A07               	xorlw	7	; case 4
 20995  002E8A  B4D8               	btfsc	status,2,c
 20996  002E8C  EF0F  F017         	goto	i2l8253
 20997  002E90  0A01               	xorlw	1	; case 5
 20998  002E92  B4D8               	btfsc	status,2,c
 20999  002E94  EF13  F017         	goto	i2l8255
 21000  002E98  0A03               	xorlw	3	; case 6
 21001  002E9A  B4D8               	btfsc	status,2,c
 21002  002E9C  EF17  F017         	goto	i2l8257
 21003  002EA0  0A01               	xorlw	1	; case 7
 21004  002EA2  B4D8               	btfsc	status,2,c
 21005  002EA4  EF1B  F017         	goto	i2l8259
 21006  002EA8  0A0F               	xorlw	15	; case 8
 21007  002EAA  B4D8               	btfsc	status,2,c
 21008  002EAC  EF1F  F017         	goto	i2l8261
 21009  002EB0  0A01               	xorlw	1	; case 9
 21010  002EB2  B4D8               	btfsc	status,2,c
 21011  002EB4  EF1F  F017         	goto	i2l8261
 21012  002EB8  EF82  F017         	goto	i2l8291
 21013  002EBC                     i2l8269:
 21014  002EBC  0E00               	movlw	0
 21015  002EBE  6E0D               	movwf	convert_int_to_BCD@h_nipple^0,c
 21016  002EC0  EFBD  F017         	goto	i2l8293
 21017  002EC4                     i2l8271:
 21018  002EC4  0E01               	movlw	1
 21019  002EC6  6E0D               	movwf	convert_int_to_BCD@h_nipple^0,c
 21020  002EC8  EFBD  F017         	goto	i2l8293
 21021  002ECC                     i2l8273:
 21022  002ECC  0E02               	movlw	2
 21023  002ECE  6E0D               	movwf	convert_int_to_BCD@h_nipple^0,c
 21024  002ED0  EFBD  F017         	goto	i2l8293
 21025  002ED4                     i2l8275:
 21026  002ED4  0E03               	movlw	3
 21027  002ED6  6E0D               	movwf	convert_int_to_BCD@h_nipple^0,c
 21028  002ED8  EFBD  F017         	goto	i2l8293
 21029  002EDC                     i2l8277:
 21030  002EDC  0E04               	movlw	4
 21031  002EDE  6E0D               	movwf	convert_int_to_BCD@h_nipple^0,c
 21032  002EE0  EFBD  F017         	goto	i2l8293
 21033  002EE4                     i2l8279:
 21034  002EE4  0E05               	movlw	5
 21035  002EE6  6E0D               	movwf	convert_int_to_BCD@h_nipple^0,c
 21036  002EE8  EFBD  F017         	goto	i2l8293
 21037  002EEC                     i2l8281:
 21038  002EEC  0E06               	movlw	6
 21039  002EEE  6E0D               	movwf	convert_int_to_BCD@h_nipple^0,c
 21040  002EF0  EFBD  F017         	goto	i2l8293
 21041  002EF4                     i2l8283:
 21042  002EF4  0E07               	movlw	7
 21043  002EF6  6E0D               	movwf	convert_int_to_BCD@h_nipple^0,c
 21044  002EF8  EFBD  F017         	goto	i2l8293
 21045  002EFC                     i2l8285:
 21046  002EFC  0E08               	movlw	8
 21047  002EFE  6E0D               	movwf	convert_int_to_BCD@h_nipple^0,c
 21048  002F00  EFBD  F017         	goto	i2l8293
 21049  002F04                     i2l8291:
 21050  002F04  C00B  F001         	movff	convert_int_to_BCD@int_num,___awdiv@dividend
 21051  002F08  6A02               	clrf	(___awdiv@dividend+1)^0,c
 21052  002F0A  0E00               	movlw	0
 21053  002F0C  6E04               	movwf	(___awdiv@divisor+1)^0,c
 21054  002F0E  0E0A               	movlw	10
 21055  002F10  6E03               	movwf	___awdiv@divisor^0,c
 21056  002F12  EC23  F021         	call	___awdiv	;wreg free
 21057                           
 21058                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21059                           ; Switch size 1, requested type "simple"
 21060                           ; Number of cases is 1, Range of values is 0 to 0
 21061                           ; switch strategies available:
 21062                           ; Name         Instructions Cycles
 21063                           ; simple_byte            4     3 (average)
 21064                           ;	Chosen strategy is simple_byte
 21065  002F16  5002               	movf	(?___awdiv+1)^0,w,c
 21066  002F18  0A00               	xorlw	0	; case 0
 21067  002F1A  B4D8               	btfsc	status,2,c
 21068  002F1C  EF92  F017         	goto	i2l13685
 21069  002F20  EFBD  F017         	goto	i2l8293
 21070  002F24                     i2l13685:
 21071                           
 21072                           ; Switch size 1, requested type "simple"
 21073                           ; Number of cases is 10, Range of values is 0 to 9
 21074                           ; switch strategies available:
 21075                           ; Name         Instructions Cycles
 21076                           ; simple_byte           31    16 (average)
 21077                           ;	Chosen strategy is simple_byte
 21078  002F24  5001               	movf	?___awdiv^0,w,c
 21079  002F26  0A00               	xorlw	0	; case 0
 21080  002F28  B4D8               	btfsc	status,2,c
 21081  002F2A  EF5E  F017         	goto	i2l8269
 21082  002F2E  0A01               	xorlw	1	; case 1
 21083  002F30  B4D8               	btfsc	status,2,c
 21084  002F32  EF62  F017         	goto	i2l8271
 21085  002F36  0A03               	xorlw	3	; case 2
 21086  002F38  B4D8               	btfsc	status,2,c
 21087  002F3A  EF66  F017         	goto	i2l8273
 21088  002F3E  0A01               	xorlw	1	; case 3
 21089  002F40  B4D8               	btfsc	status,2,c
 21090  002F42  EF6A  F017         	goto	i2l8275
 21091  002F46  0A07               	xorlw	7	; case 4
 21092  002F48  B4D8               	btfsc	status,2,c
 21093  002F4A  EF6E  F017         	goto	i2l8277
 21094  002F4E  0A01               	xorlw	1	; case 5
 21095  002F50  B4D8               	btfsc	status,2,c
 21096  002F52  EF72  F017         	goto	i2l8279
 21097  002F56  0A03               	xorlw	3	; case 6
 21098  002F58  B4D8               	btfsc	status,2,c
 21099  002F5A  EF76  F017         	goto	i2l8281
 21100  002F5E  0A01               	xorlw	1	; case 7
 21101  002F60  B4D8               	btfsc	status,2,c
 21102  002F62  EF7A  F017         	goto	i2l8283
 21103  002F66  0A0F               	xorlw	15	; case 8
 21104  002F68  B4D8               	btfsc	status,2,c
 21105  002F6A  EF7E  F017         	goto	i2l8285
 21106  002F6E  0A01               	xorlw	1	; case 9
 21107  002F70  B4D8               	btfsc	status,2,c
 21108  002F72  EF7E  F017         	goto	i2l8285
 21109  002F76  EFBD  F017         	goto	i2l8293
 21110  002F7A                     i2l8293:
 21111                           
 21112                           ;ECUAL/RealTimeClockDS1307/RealTimeClockDS1307.c: 76:     *BCD_num=(h_nipple<<4)|(l_nipp
      +                          le);
 21113  002F7A  380D               	swapf	convert_int_to_BCD@h_nipple^0,w,c
 21114  002F7C  0BF0               	andlw	240
 21115  002F7E  100C               	iorwf	convert_int_to_BCD@l_nipple^0,w,c
 21116  002F80  C009  FFD9         	movff	convert_int_to_BCD@BCD_num,fsr2l
 21117  002F84  C00A  FFDA         	movff	convert_int_to_BCD@BCD_num+1,fsr2h
 21118  002F88  6EDF               	movwf	indf2,c
 21119  002F8A  0012               	return		;funcret
 21120  002F8C                     __end_of_convert_int_to_BCD:
 21121                           	callstack 0
 21122                           
 21123 ;; *************** function ___awmod *****************
 21124 ;; Defined at:
 21125 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
 21126 ;; Parameters:    Size  Location     Type
 21127 ;;  dividend        2    0[COMRAM] int 
 21128 ;;  divisor         2    2[COMRAM] int 
 21129 ;; Auto vars:     Size  Location     Type
 21130 ;;  sign            1    5[COMRAM] unsigned char 
 21131 ;;  counter         1    4[COMRAM] unsigned char 
 21132 ;; Return value:  Size  Location     Type
 21133 ;;                  2    0[COMRAM] int 
 21134 ;; Registers used:
 21135 ;;		wreg, status,2, status,0
 21136 ;; Tracked objects:
 21137 ;;		On entry : 0/0
 21138 ;;		On exit  : 0/0
 21139 ;;		Unchanged: 0/0
 21140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21141 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21142 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21144 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21145 ;;Total ram usage:        6 bytes
 21146 ;; Hardware stack levels used: 1
 21147 ;; This function calls:
 21148 ;;		Nothing
 21149 ;; This function is called by:
 21150 ;;		_convert_int_to_BCD
 21151 ;; This function uses a non-reentrant model
 21152 ;;
 21153                           
 21154                           	psect	text174
 21155  004526                     __ptext174:
 21156                           	callstack 0
 21157  004526                     ___awmod:
 21158                           	callstack 16
 21159  004526  0E00               	movlw	0
 21160  004528  6E06               	movwf	___awmod@sign^0,c
 21161  00452A  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
 21162  00452C  EF9C  F022         	goto	i2u596_40
 21163  004530  EF9A  F022         	goto	i2u596_41
 21164  004534                     i2u596_41:
 21165  004534  EFA2  F022         	goto	i2l8001
 21166  004538                     i2u596_40:
 21167  004538  6C01               	negf	___awmod@dividend^0,c
 21168  00453A  1E02               	comf	(___awmod@dividend+1)^0,f,c
 21169  00453C  B0D8               	btfsc	status,0,c
 21170  00453E  2A02               	incf	(___awmod@dividend+1)^0,f,c
 21171  004540  0E01               	movlw	1
 21172  004542  6E06               	movwf	___awmod@sign^0,c
 21173  004544                     i2l8001:
 21174  004544  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
 21175  004546  EFA9  F022         	goto	i2u597_40
 21176  00454A  EFA7  F022         	goto	i2u597_41
 21177  00454E                     i2u597_41:
 21178  00454E  EFAD  F022         	goto	i2l8005
 21179  004552                     i2u597_40:
 21180  004552  6C03               	negf	___awmod@divisor^0,c
 21181  004554  1E04               	comf	(___awmod@divisor+1)^0,f,c
 21182  004556  B0D8               	btfsc	status,0,c
 21183  004558  2A04               	incf	(___awmod@divisor+1)^0,f,c
 21184  00455A                     i2l8005:
 21185  00455A  5003               	movf	___awmod@divisor^0,w,c
 21186  00455C  1004               	iorwf	(___awmod@divisor+1)^0,w,c
 21187  00455E  B4D8               	btfsc	status,2,c
 21188  004560  EFB4  F022         	goto	i2u598_41
 21189  004564  EFB6  F022         	goto	i2u598_40
 21190  004568                     i2u598_41:
 21191  004568  EFDA  F022         	goto	i2l8021
 21192  00456C                     i2u598_40:
 21193  00456C  0E01               	movlw	1
 21194  00456E  6E05               	movwf	___awmod@counter^0,c
 21195  004570  EFBE  F022         	goto	i2l8011
 21196  004574                     i2l8009:
 21197  004574  90D8               	bcf	status,0,c
 21198  004576  3603               	rlcf	___awmod@divisor^0,f,c
 21199  004578  3604               	rlcf	(___awmod@divisor+1)^0,f,c
 21200  00457A  2A05               	incf	___awmod@counter^0,f,c
 21201  00457C                     i2l8011:
 21202  00457C  AE04               	btfss	(___awmod@divisor+1)^0,7,c
 21203  00457E  EFC3  F022         	goto	i2u599_41
 21204  004582  EFC5  F022         	goto	i2u599_40
 21205  004586                     i2u599_41:
 21206  004586  EFBA  F022         	goto	i2l8009
 21207  00458A                     i2u599_40:
 21208  00458A                     i2l8013:
 21209  00458A  5003               	movf	___awmod@divisor^0,w,c
 21210  00458C  5C01               	subwf	___awmod@dividend^0,w,c
 21211  00458E  5004               	movf	(___awmod@divisor+1)^0,w,c
 21212  004590  5802               	subwfb	(___awmod@dividend+1)^0,w,c
 21213  004592  A0D8               	btfss	status,0,c
 21214  004594  EFCE  F022         	goto	i2u600_41
 21215  004598  EFD0  F022         	goto	i2u600_40
 21216  00459C                     i2u600_41:
 21217  00459C  EFD4  F022         	goto	i2l8017
 21218  0045A0                     i2u600_40:
 21219  0045A0  5003               	movf	___awmod@divisor^0,w,c
 21220  0045A2  5E01               	subwf	___awmod@dividend^0,f,c
 21221  0045A4  5004               	movf	(___awmod@divisor+1)^0,w,c
 21222  0045A6  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
 21223  0045A8                     i2l8017:
 21224  0045A8  90D8               	bcf	status,0,c
 21225  0045AA  3204               	rrcf	(___awmod@divisor+1)^0,f,c
 21226  0045AC  3203               	rrcf	___awmod@divisor^0,f,c
 21227  0045AE  2E05               	decfsz	___awmod@counter^0,f,c
 21228  0045B0  EFC5  F022         	goto	i2l8013
 21229  0045B4                     i2l8021:
 21230  0045B4  5006               	movf	___awmod@sign^0,w,c
 21231  0045B6  B4D8               	btfsc	status,2,c
 21232  0045B8  EFE0  F022         	goto	i2u601_41
 21233  0045BC  EFE2  F022         	goto	i2u601_40
 21234  0045C0                     i2u601_41:
 21235  0045C0  EFE6  F022         	goto	i2l8025
 21236  0045C4                     i2u601_40:
 21237  0045C4  6C01               	negf	___awmod@dividend^0,c
 21238  0045C6  1E02               	comf	(___awmod@dividend+1)^0,f,c
 21239  0045C8  B0D8               	btfsc	status,0,c
 21240  0045CA  2A02               	incf	(___awmod@dividend+1)^0,f,c
 21241  0045CC                     i2l8025:
 21242  0045CC  C001  F001         	movff	___awmod@dividend,?___awmod
 21243  0045D0  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
 21244  0045D4  0012               	return		;funcret
 21245  0045D6                     __end_of___awmod:
 21246                           	callstack 0
 21247                           
 21248 ;; *************** function ___awdiv *****************
 21249 ;; Defined at:
 21250 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
 21251 ;; Parameters:    Size  Location     Type
 21252 ;;  dividend        2    0[COMRAM] int 
 21253 ;;  divisor         2    2[COMRAM] int 
 21254 ;; Auto vars:     Size  Location     Type
 21255 ;;  quotient        2    6[COMRAM] int 
 21256 ;;  sign            1    5[COMRAM] unsigned char 
 21257 ;;  counter         1    4[COMRAM] unsigned char 
 21258 ;; Return value:  Size  Location     Type
 21259 ;;                  2    0[COMRAM] int 
 21260 ;; Registers used:
 21261 ;;		wreg, status,2, status,0
 21262 ;; Tracked objects:
 21263 ;;		On entry : 0/0
 21264 ;;		On exit  : 0/0
 21265 ;;		Unchanged: 0/0
 21266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21267 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21268 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21270 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21271 ;;Total ram usage:        8 bytes
 21272 ;; Hardware stack levels used: 1
 21273 ;; This function calls:
 21274 ;;		Nothing
 21275 ;; This function is called by:
 21276 ;;		_convert_int_to_BCD
 21277 ;; This function uses a non-reentrant model
 21278 ;;
 21279                           
 21280                           	psect	text175
 21281  004246                     __ptext175:
 21282                           	callstack 0
 21283  004246                     ___awdiv:
 21284                           	callstack 16
 21285  004246  0E00               	movlw	0
 21286  004248  6E06               	movwf	___awdiv@sign^0,c
 21287  00424A  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
 21288  00424C  EF2C  F021         	goto	i2u590_40
 21289  004250  EF2A  F021         	goto	i2u590_41
 21290  004254                     i2u590_41:
 21291  004254  EF32  F021         	goto	i2l7957
 21292  004258                     i2u590_40:
 21293  004258  6C03               	negf	___awdiv@divisor^0,c
 21294  00425A  1E04               	comf	(___awdiv@divisor+1)^0,f,c
 21295  00425C  B0D8               	btfsc	status,0,c
 21296  00425E  2A04               	incf	(___awdiv@divisor+1)^0,f,c
 21297  004260  0E01               	movlw	1
 21298  004262  6E06               	movwf	___awdiv@sign^0,c
 21299  004264                     i2l7957:
 21300  004264  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
 21301  004266  EF39  F021         	goto	i2u591_40
 21302  00426A  EF37  F021         	goto	i2u591_41
 21303  00426E                     i2u591_41:
 21304  00426E  EF3F  F021         	goto	i2l7963
 21305  004272                     i2u591_40:
 21306  004272  6C01               	negf	___awdiv@dividend^0,c
 21307  004274  1E02               	comf	(___awdiv@dividend+1)^0,f,c
 21308  004276  B0D8               	btfsc	status,0,c
 21309  004278  2A02               	incf	(___awdiv@dividend+1)^0,f,c
 21310  00427A  0E01               	movlw	1
 21311  00427C  1A06               	xorwf	___awdiv@sign^0,f,c
 21312  00427E                     i2l7963:
 21313  00427E  0E00               	movlw	0
 21314  004280  6E08               	movwf	(___awdiv@quotient+1)^0,c
 21315  004282  0E00               	movlw	0
 21316  004284  6E07               	movwf	___awdiv@quotient^0,c
 21317  004286  5003               	movf	___awdiv@divisor^0,w,c
 21318  004288  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
 21319  00428A  B4D8               	btfsc	status,2,c
 21320  00428C  EF4A  F021         	goto	i2u592_41
 21321  004290  EF4C  F021         	goto	i2u592_40
 21322  004294                     i2u592_41:
 21323  004294  EF74  F021         	goto	i2l7985
 21324  004298                     i2u592_40:
 21325  004298  0E01               	movlw	1
 21326  00429A  6E05               	movwf	___awdiv@counter^0,c
 21327  00429C  EF54  F021         	goto	i2l7971
 21328  0042A0                     i2l7969:
 21329  0042A0  90D8               	bcf	status,0,c
 21330  0042A2  3603               	rlcf	___awdiv@divisor^0,f,c
 21331  0042A4  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
 21332  0042A6  2A05               	incf	___awdiv@counter^0,f,c
 21333  0042A8                     i2l7971:
 21334  0042A8  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
 21335  0042AA  EF59  F021         	goto	i2u593_41
 21336  0042AE  EF5B  F021         	goto	i2u593_40
 21337  0042B2                     i2u593_41:
 21338  0042B2  EF50  F021         	goto	i2l7969
 21339  0042B6                     i2u593_40:
 21340  0042B6                     i2l7973:
 21341  0042B6  90D8               	bcf	status,0,c
 21342  0042B8  3607               	rlcf	___awdiv@quotient^0,f,c
 21343  0042BA  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
 21344  0042BC  5003               	movf	___awdiv@divisor^0,w,c
 21345  0042BE  5C01               	subwf	___awdiv@dividend^0,w,c
 21346  0042C0  5004               	movf	(___awdiv@divisor+1)^0,w,c
 21347  0042C2  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
 21348  0042C4  A0D8               	btfss	status,0,c
 21349  0042C6  EF67  F021         	goto	i2u594_41
 21350  0042CA  EF69  F021         	goto	i2u594_40
 21351  0042CE                     i2u594_41:
 21352  0042CE  EF6E  F021         	goto	i2l7981
 21353  0042D2                     i2u594_40:
 21354  0042D2  5003               	movf	___awdiv@divisor^0,w,c
 21355  0042D4  5E01               	subwf	___awdiv@dividend^0,f,c
 21356  0042D6  5004               	movf	(___awdiv@divisor+1)^0,w,c
 21357  0042D8  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
 21358  0042DA  8007               	bsf	___awdiv@quotient^0,0,c
 21359  0042DC                     i2l7981:
 21360  0042DC  90D8               	bcf	status,0,c
 21361  0042DE  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
 21362  0042E0  3203               	rrcf	___awdiv@divisor^0,f,c
 21363  0042E2  2E05               	decfsz	___awdiv@counter^0,f,c
 21364  0042E4  EF5B  F021         	goto	i2l7973
 21365  0042E8                     i2l7985:
 21366  0042E8  5006               	movf	___awdiv@sign^0,w,c
 21367  0042EA  B4D8               	btfsc	status,2,c
 21368  0042EC  EF7A  F021         	goto	i2u595_41
 21369  0042F0  EF7C  F021         	goto	i2u595_40
 21370  0042F4                     i2u595_41:
 21371  0042F4  EF80  F021         	goto	i2l7989
 21372  0042F8                     i2u595_40:
 21373  0042F8  6C07               	negf	___awdiv@quotient^0,c
 21374  0042FA  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 21375  0042FC  B0D8               	btfsc	status,0,c
 21376  0042FE  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 21377  004300                     i2l7989:
 21378  004300  C007  F001         	movff	___awdiv@quotient,?___awdiv
 21379  004304  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 21380  004308  0012               	return		;funcret
 21381  00430A                     __end_of___awdiv:
 21382                           	callstack 0
 21383                           
 21384 ;; *************** function _EUSART_TX_ISR *****************
 21385 ;; Defined at:
 21386 ;;		line 266 in file "MCAL/USART/usart.c"
 21387 ;; Parameters:    Size  Location     Type
 21388 ;;		None
 21389 ;; Auto vars:     Size  Location     Type
 21390 ;;		None
 21391 ;; Return value:  Size  Location     Type
 21392 ;;                  1    wreg      void 
 21393 ;; Registers used:
 21394 ;;		None
 21395 ;; Tracked objects:
 21396 ;;		On entry : 0/0
 21397 ;;		On exit  : 0/0
 21398 ;;		Unchanged: 0/0
 21399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21404 ;;Total ram usage:        0 bytes
 21405 ;; Hardware stack levels used: 1
 21406 ;; This function calls:
 21407 ;;		Nothing
 21408 ;; This function is called by:
 21409 ;;		_InterruptManager
 21410 ;; This function uses a non-reentrant model
 21411 ;;
 21412                           
 21413                           	psect	text176
 21414  0063EA                     __ptext176:
 21415                           	callstack 0
 21416  0063EA                     _EUSART_TX_ISR:
 21417                           	callstack 19
 21418  0063EA                     
 21419                           ;MCAL/USART/usart.c: 268:     (PIE1bits.TXIE = 0);
 21420  0063EA  989D               	bcf	157,4,c	;volatile
 21421  0063EC  0012               	return		;funcret
 21422  0063EE                     __end_of_EUSART_TX_ISR:
 21423                           	callstack 0
 21424                           
 21425 ;; *************** function _EUSART_RX_ISR *****************
 21426 ;; Defined at:
 21427 ;;		line 276 in file "MCAL/USART/usart.c"
 21428 ;; Parameters:    Size  Location     Type
 21429 ;;		None
 21430 ;; Auto vars:     Size  Location     Type
 21431 ;;		None
 21432 ;; Return value:  Size  Location     Type
 21433 ;;                  1    wreg      void 
 21434 ;; Registers used:
 21435 ;;		wreg, status,2, status,0
 21436 ;; Tracked objects:
 21437 ;;		On entry : 0/0
 21438 ;;		On exit  : 0/0
 21439 ;;		Unchanged: 0/0
 21440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21445 ;;Total ram usage:        0 bytes
 21446 ;; Hardware stack levels used: 1
 21447 ;; This function calls:
 21448 ;;		Nothing
 21449 ;; This function is called by:
 21450 ;;		_InterruptManager
 21451 ;; This function uses a non-reentrant model
 21452 ;;
 21453                           
 21454                           	psect	text177
 21455  0063F2                     __ptext177:
 21456                           	callstack 0
 21457  0063F2                     _EUSART_RX_ISR:
 21458                           	callstack 19
 21459  0063F2  0012               	return		;funcret
 21460  0063F4                     __end_of_EUSART_RX_ISR:
 21461                           	callstack 0
 21462                           
 21463 ;; *************** function _ADC_ISR *****************
 21464 ;; Defined at:
 21465 ;;		line 322 in file "MCAL/ADC/adc.c"
 21466 ;; Parameters:    Size  Location     Type
 21467 ;;		None
 21468 ;; Auto vars:     Size  Location     Type
 21469 ;;		None
 21470 ;; Return value:  Size  Location     Type
 21471 ;;                  1    wreg      void 
 21472 ;; Registers used:
 21473 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 21474 ;; Tracked objects:
 21475 ;;		On entry : 0/0
 21476 ;;		On exit  : 0/0
 21477 ;;		Unchanged: 0/0
 21478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21483 ;;Total ram usage:        0 bytes
 21484 ;; Hardware stack levels used: 1
 21485 ;; Hardware stack levels required when called: 2
 21486 ;; This function calls:
 21487 ;;		Absolute function
 21488 ;;		_MY_ADC_ISR
 21489 ;; This function is called by:
 21490 ;;		_InterruptManager
 21491 ;; This function uses a non-reentrant model
 21492 ;;
 21493                           
 21494                           	psect	text178
 21495  005DA4                     __ptext178:
 21496                           	callstack 0
 21497  005DA4                     _ADC_ISR:
 21498                           	callstack 17
 21499  005DA4                     
 21500                           ;MCAL/ADC/adc.c: 324:     (PIR1bits.ADIF=0);;
 21501  005DA4  9C9E               	bcf	158,6,c	;volatile
 21502  005DA6                     
 21503                           ;MCAL/ADC/adc.c: 326:     if(ADC_InterruptHandler){ADC_InterruptHandler();}
 21504  005DA6  5039               	movf	_ADC_InterruptHandler^0,w,c
 21505  005DA8  103A               	iorwf	(_ADC_InterruptHandler+1)^0,w,c
 21506  005DAA  B4D8               	btfsc	status,2,c
 21507  005DAC  EFDA  F02E         	goto	i2u713_41
 21508  005DB0  EFDC  F02E         	goto	i2u713_40
 21509  005DB4                     i2u713_41:
 21510  005DB4  EFE8  F02E         	goto	i2l369
 21511  005DB8                     i2u713_40:
 21512  005DB8  D802               	call	i2u714_48
 21513  005DBA  EFE8  F02E         	goto	i2u714_49
 21514  005DBE                     i2u714_48:
 21515  005DBE  0005               	push	
 21516  005DC0  6EFA               	movwf	pclath,c
 21517  005DC2  5039               	movf	_ADC_InterruptHandler^0,w,c
 21518  005DC4  6EFD               	movwf	tosl,c
 21519  005DC6  503A               	movf	(_ADC_InterruptHandler+1)^0,w,c
 21520  005DC8  6EFE               	movwf	tosh,c
 21521  005DCA  6AFF               	clrf	tosu,c
 21522  005DCC  50FA               	movf	pclath,w,c
 21523  005DCE  0012               	return		;indir
 21524  005DD0                     i2u714_49:
 21525  005DD0                     i2l369:
 21526  005DD0  0012               	return		;funcret
 21527  005DD2                     __end_of_ADC_ISR:
 21528                           	callstack 0
 21529                           
 21530 ;; *************** function _MY_ADC_ISR *****************
 21531 ;; Defined at:
 21532 ;;		line 91 in file "app.c"
 21533 ;; Parameters:    Size  Location     Type
 21534 ;;		None
 21535 ;; Auto vars:     Size  Location     Type
 21536 ;;		None
 21537 ;; Return value:  Size  Location     Type
 21538 ;;                  1    wreg      void 
 21539 ;; Registers used:
 21540 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21541 ;; Tracked objects:
 21542 ;;		On entry : 0/0
 21543 ;;		On exit  : 0/0
 21544 ;;		Unchanged: 0/0
 21545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21550 ;;Total ram usage:        0 bytes
 21551 ;; Hardware stack levels used: 1
 21552 ;; Hardware stack levels required when called: 1
 21553 ;; This function calls:
 21554 ;;		_ADC_GetConversionResult
 21555 ;;		_EUSART_ASYNC_WriteByteNonBlocking
 21556 ;; This function is called by:
 21557 ;;		_ADC_ISR
 21558 ;; This function uses a non-reentrant model
 21559 ;;
 21560                           
 21561                           	psect	text179
 21562  006070                     __ptext179:
 21563                           	callstack 0
 21564  006070                     _MY_ADC_ISR:
 21565                           	callstack 17
 21566  006070                     
 21567                           ;app.c: 92:     ADC_GetConversionResult(&adc,&adc_value);
 21568  006070  0E7C               	movlw	low _adc
 21569  006072  6E01               	movwf	ADC_GetConversionResult@_adc^0,c
 21570  006074  0E01               	movlw	high _adc
 21571  006076  6E02               	movwf	(ADC_GetConversionResult@_adc+1)^0,c
 21572  006078  0E47               	movlw	low _adc_value
 21573  00607A  6E03               	movwf	ADC_GetConversionResult@conversion_result^0,c
 21574  00607C  0E00               	movlw	high _adc_value
 21575  00607E  6E04               	movwf	(ADC_GetConversionResult@conversion_result+1)^0,c
 21576  006080  EC85  F021         	call	_ADC_GetConversionResult	;wreg free
 21577  006084                     
 21578                           ;app.c: 93:     EUSART_ASYNC_WriteByteNonBlocking(adc_value);
 21579  006084  5047               	movf	_adc_value^0,w,c
 21580  006086  EC46  F030         	call	_EUSART_ASYNC_WriteByteNonBlocking
 21581  00608A  0012               	return		;funcret
 21582  00608C                     __end_of_MY_ADC_ISR:
 21583                           	callstack 0
 21584                           
 21585 ;; *************** function _EUSART_ASYNC_WriteByteNonBlocking *****************
 21586 ;; Defined at:
 21587 ;;		line 78 in file "MCAL/USART/usart.c"
 21588 ;; Parameters:    Size  Location     Type
 21589 ;;  _data           1    wreg     unsigned char 
 21590 ;; Auto vars:     Size  Location     Type
 21591 ;;  _data           1    0[COMRAM] unsigned char 
 21592 ;;  ret             1    0        unsigned char 
 21593 ;; Return value:  Size  Location     Type
 21594 ;;                  1    wreg      unsigned char 
 21595 ;; Registers used:
 21596 ;;		wreg, status,2
 21597 ;; Tracked objects:
 21598 ;;		On entry : 0/0
 21599 ;;		On exit  : 0/0
 21600 ;;		Unchanged: 0/0
 21601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21603 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21605 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21606 ;;Total ram usage:        1 bytes
 21607 ;; Hardware stack levels used: 1
 21608 ;; This function calls:
 21609 ;;		Nothing
 21610 ;; This function is called by:
 21611 ;;		_MY_ADC_ISR
 21612 ;; This function uses a non-reentrant model
 21613 ;;
 21614                           
 21615                           	psect	text180
 21616  00608C                     __ptext180:
 21617                           	callstack 0
 21618  00608C                     _EUSART_ASYNC_WriteByteNonBlocking:
 21619                           	callstack 17
 21620                           
 21621                           ;incstack = 0
 21622                           ;EUSART_ASYNC_WriteByteNonBlocking@_data stored from wreg
 21623  00608C  6E01               	movwf	EUSART_ASYNC_WriteByteNonBlocking@_data^0,c
 21624  00608E                     
 21625                           ;MCAL/USART/usart.c: 81:     if(1==TXSTAbits.TRMT){
 21626  00608E  A2AC               	btfss	172,1,c	;volatile
 21627  006090  EF4C  F030         	goto	i2u665_41
 21628  006094  EF4E  F030         	goto	i2u665_40
 21629  006098                     i2u665_41:
 21630  006098  EF53  F030         	goto	i2l8623
 21631  00609C                     i2u665_40:
 21632  00609C                     
 21633                           ;MCAL/USART/usart.c: 83:         (PIE1bits.TXIE = 1);
 21634  00609C  889D               	bsf	157,4,c	;volatile
 21635  00609E                     
 21636                           ;MCAL/USART/usart.c: 85:         TXREG=_data;
 21637  00609E  C001  FFAD         	movff	EUSART_ASYNC_WriteByteNonBlocking@_data,4013	;volatile
 21638  0060A2                     
 21639                           ;MCAL/USART/usart.c: 87:     }
 21640  0060A2  EF53  F030         	goto	i2l856
 21641  0060A6                     i2l8623:
 21642  0060A6                     i2l856:
 21643  0060A6  0012               	return		;funcret
 21644  0060A8                     __end_of_EUSART_ASYNC_WriteByteNonBlocking:
 21645                           	callstack 0
 21646                           
 21647 ;; *************** function _ADC_GetConversionResult *****************
 21648 ;; Defined at:
 21649 ;;		line 195 in file "MCAL/ADC/adc.c"
 21650 ;; Parameters:    Size  Location     Type
 21651 ;;  _adc            2    0[COMRAM] PTR const struct .
 21652 ;;		 -> adc(7), 
 21653 ;;  conversion_r    2    2[COMRAM] PTR unsigned short 
 21654 ;;		 -> adc_value(1), 
 21655 ;; Auto vars:     Size  Location     Type
 21656 ;;  ret             1    0        unsigned char 
 21657 ;; Return value:  Size  Location     Type
 21658 ;;                  1    wreg      unsigned char 
 21659 ;; Registers used:
 21660 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21661 ;; Tracked objects:
 21662 ;;		On entry : 0/0
 21663 ;;		On exit  : 0/0
 21664 ;;		Unchanged: 0/0
 21665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21666 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21668 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21669 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21670 ;;Total ram usage:        9 bytes
 21671 ;; Hardware stack levels used: 1
 21672 ;; This function calls:
 21673 ;;		Nothing
 21674 ;; This function is called by:
 21675 ;;		_MY_ADC_ISR
 21676 ;;		_ADC_GetConversion_Blocking
 21677 ;; This function uses a non-reentrant model
 21678 ;;
 21679                           
 21680                           	psect	text181
 21681  00430A                     __ptext181:
 21682                           	callstack 0
 21683  00430A                     _ADC_GetConversionResult:
 21684                           	callstack 17
 21685  00430A                     
 21686                           ;MCAL/ADC/adc.c: 198:     if((((void*)0)==_adc) || (((void*)0)==conversion_result)){
 21687  00430A  5001               	movf	ADC_GetConversionResult@_adc^0,w,c
 21688  00430C  1002               	iorwf	(ADC_GetConversionResult@_adc+1)^0,w,c
 21689  00430E  B4D8               	btfsc	status,2,c
 21690  004310  EF8C  F021         	goto	i2u638_41
 21691  004314  EF8E  F021         	goto	i2u638_40
 21692  004318                     i2u638_41:
 21693  004318  EF97  F021         	goto	i2l8355
 21694  00431C                     i2u638_40:
 21695  00431C  5003               	movf	ADC_GetConversionResult@conversion_result^0,w,c
 21696  00431E  1004               	iorwf	(ADC_GetConversionResult@conversion_result+1)^0,w,c
 21697  004320  A4D8               	btfss	status,2,c
 21698  004322  EF95  F021         	goto	i2u639_41
 21699  004326  EF97  F021         	goto	i2u639_40
 21700  00432A                     i2u639_41:
 21701  00432A  EF99  F021         	goto	i2l8357
 21702  00432E                     i2u639_40:
 21703  00432E                     i2l8355:
 21704                           
 21705                           ;MCAL/ADC/adc.c: 200:     }
 21706  00432E  EFE1  F021         	goto	i2l315
 21707  004332                     i2l8357:
 21708                           
 21709                           ;MCAL/ADC/adc.c: 202:         if(0x01U==_adc->result_format){
 21710  004332  EE20 F006          	lfsr	2,6
 21711  004336  5001               	movf	ADC_GetConversionResult@_adc^0,w,c
 21712  004338  26D9               	addwf	fsr2l,f,c
 21713  00433A  5002               	movf	(ADC_GetConversionResult@_adc+1)^0,w,c
 21714  00433C  22DA               	addwfc	fsr2h,f,c
 21715  00433E  A2DF               	btfss	indf2,1,c
 21716  004340  EFA4  F021         	goto	i2u640_41
 21717  004344  EFA6  F021         	goto	i2u640_40
 21718  004348                     i2u640_41:
 21719  004348  EFBA  F021         	goto	i2l8361
 21720  00434C                     i2u640_40:
 21721  00434C                     
 21722                           ;MCAL/ADC/adc.c: 203:             *conversion_result=(adc_result_t)(ADRESL+(ADRESH<<8));
 21723  00434C  50C4               	movf	196,w,c	;volatile
 21724  00434E  6E06               	movwf	(??_ADC_GetConversionResult+1)^0,c
 21725  004350  6A05               	clrf	??_ADC_GetConversionResult^0,c
 21726  004352  50C3               	movf	195,w,c	;volatile
 21727  004354  6E07               	movwf	(??_ADC_GetConversionResult+2)^0,c
 21728  004356  6A08               	clrf	(??_ADC_GetConversionResult+3)^0,c
 21729  004358  5005               	movf	??_ADC_GetConversionResult^0,w,c
 21730  00435A  2607               	addwf	(??_ADC_GetConversionResult+2)^0,f,c
 21731  00435C  5006               	movf	(??_ADC_GetConversionResult+1)^0,w,c
 21732  00435E  2208               	addwfc	(??_ADC_GetConversionResult+3)^0,f,c
 21733  004360  C003  FFD9         	movff	ADC_GetConversionResult@conversion_result,fsr2l
 21734  004364  C004  FFDA         	movff	ADC_GetConversionResult@conversion_result+1,fsr2h
 21735  004368  C007  FFDE         	movff	??_ADC_GetConversionResult+2,postinc2
 21736  00436C  C008  FFDD         	movff	??_ADC_GetConversionResult+3,postdec2
 21737                           
 21738                           ;MCAL/ADC/adc.c: 204:         }
 21739  004370  EFE1  F021         	goto	i2l8365
 21740  004374                     i2l8361:
 21741  004374  EE20 F006          	lfsr	2,6
 21742  004378  5001               	movf	ADC_GetConversionResult@_adc^0,w,c
 21743  00437A  26D9               	addwf	fsr2l,f,c
 21744  00437C  5002               	movf	(ADC_GetConversionResult@_adc+1)^0,w,c
 21745  00437E  22DA               	addwfc	fsr2h,f,c
 21746  004380  B2DF               	btfsc	indf2,1,c
 21747  004382  EFC5  F021         	goto	i2u641_41
 21748  004386  EFC7  F021         	goto	i2u641_40
 21749  00438A                     i2u641_41:
 21750  00438A  EFE1  F021         	goto	i2l8365
 21751  00438E                     i2u641_40:
 21752  00438E                     
 21753                           ;MCAL/ADC/adc.c: 206:             *conversion_result=(adc_result_t)((ADRESL+(ADRESH<<8))
      +                          >>6);
 21754  00438E  50C4               	movf	196,w,c	;volatile
 21755  004390  6E06               	movwf	(??_ADC_GetConversionResult+1)^0,c
 21756  004392  6A05               	clrf	??_ADC_GetConversionResult^0,c
 21757  004394  50C3               	movf	195,w,c	;volatile
 21758  004396  6E07               	movwf	(??_ADC_GetConversionResult+2)^0,c
 21759  004398  6A08               	clrf	(??_ADC_GetConversionResult+3)^0,c
 21760  00439A  5005               	movf	??_ADC_GetConversionResult^0,w,c
 21761  00439C  2607               	addwf	(??_ADC_GetConversionResult+2)^0,f,c
 21762  00439E  5006               	movf	(??_ADC_GetConversionResult+1)^0,w,c
 21763  0043A0  2208               	addwfc	(??_ADC_GetConversionResult+3)^0,f,c
 21764  0043A2  0E06               	movlw	6
 21765  0043A4  6E09               	movwf	(??_ADC_GetConversionResult+4)^0,c
 21766  0043A6                     i2u642_45:
 21767  0043A6  3408               	rlcf	(??_ADC_GetConversionResult+3)^0,w,c
 21768  0043A8  3208               	rrcf	(??_ADC_GetConversionResult+3)^0,f,c
 21769  0043AA  3207               	rrcf	(??_ADC_GetConversionResult+2)^0,f,c
 21770  0043AC  2E09               	decfsz	(??_ADC_GetConversionResult+4)^0,f,c
 21771  0043AE  EFD3  F021         	goto	i2u642_45
 21772  0043B2  C003  FFD9         	movff	ADC_GetConversionResult@conversion_result,fsr2l
 21773  0043B6  C004  FFDA         	movff	ADC_GetConversionResult@conversion_result+1,fsr2h
 21774  0043BA  C007  FFDE         	movff	??_ADC_GetConversionResult+2,postinc2
 21775  0043BE  C008  FFDD         	movff	??_ADC_GetConversionResult+3,postdec2
 21776  0043C2                     i2l8365:
 21777  0043C2                     i2l315:
 21778  0043C2  0012               	return		;funcret
 21779  0043C4                     __end_of_ADC_GetConversionResult:
 21780                           	callstack 0
 21781                           
 21782                           	psect	text182
 21783  000000                     __ptext182:
 21784                           	callstack 0
 21785  000000                     
 21786                           	psect	rparam
 21787  0000                     
 21788                           	psect	temp
 21789  000059                     btemp:
 21790                           	callstack 0
 21791  000059                     	ds	1
 21792  0000                     int$flags	set	btemp
 21793  0000                     wtemp8	set	btemp+1
 21794  0000                     ttemp5	set	btemp+1
 21795  0000                     ttemp6	set	btemp+4
 21796  0000                     ttemp7	set	btemp+8
 21797                           
 21798                           	psect	config
 21799                           
 21800                           ; Padding undefined space
 21801  300000                     	org	3145728
 21802  300000  FF                 	db	255
 21803                           
 21804                           ;Config register CONFIG1H @ 0x300001
 21805                           ;	Oscillator Selection bits
 21806                           ;	OSC = HS, HS oscillator
 21807                           ;	Fail-Safe Clock Monitor Enable bit
 21808                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 21809                           ;	Internal/External Oscillator Switchover bit
 21810                           ;	IESO = OFF, Oscillator Switchover mode disabled
 21811  300001                     	org	3145729
 21812  300001  02                 	db	2
 21813                           
 21814                           ;Config register CONFIG2L @ 0x300002
 21815                           ;	Power-up Timer Enable bit
 21816                           ;	PWRT = OFF, PWRT disabled
 21817                           ;	Brown-out Reset Enable bits
 21818                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
 21819                           ;	Brown Out Reset Voltage bits
 21820                           ;	BORV = 1, 
 21821  300002                     	org	3145730
 21822  300002  09                 	db	9
 21823                           
 21824                           ;Config register CONFIG2H @ 0x300003
 21825                           ;	Watchdog Timer Enable bit
 21826                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 21827                           ;	Watchdog Timer Postscale Select bits
 21828                           ;	WDTPS = 32768, 1:32768
 21829  300003                     	org	3145731
 21830  300003  1E                 	db	30
 21831                           
 21832                           ; Padding undefined space
 21833  300004                     	org	3145732
 21834  300004  FF                 	db	255
 21835                           
 21836                           ;Config register CONFIG3H @ 0x300005
 21837                           ;	CCP2 MUX bit
 21838                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 21839                           ;	PORTB A/D Enable bit
 21840                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 21841                           ;	Low-Power Timer1 Oscillator Enable bit
 21842                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 21843                           ;	MCLR Pin Enable bit
 21844                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 21845  300005                     	org	3145733
 21846  300005  81                 	db	129
 21847                           
 21848                           ;Config register CONFIG4L @ 0x300006
 21849                           ;	Stack Full/Underflow Reset Enable bit
 21850                           ;	STVREN = ON, Stack full/underflow will cause Reset
 21851                           ;	Single-Supply ICSP Enable bit
 21852                           ;	LVP = OFF, Single-Supply ICSP disabled
 21853                           ;	Extended Instruction Set Enable bit
 21854                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 21855                           ;	Background Debugger Enable bit
 21856                           ;	DEBUG = 0x1, unprogrammed default
 21857  300006                     	org	3145734
 21858  300006  81                 	db	129
 21859                           
 21860                           ; Padding undefined space
 21861  300007                     	org	3145735
 21862  300007  FF                 	db	255
 21863                           
 21864                           ;Config register CONFIG5L @ 0x300008
 21865                           ;	Code Protection bit
 21866                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 21867                           ;	Code Protection bit
 21868                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 21869                           ;	Code Protection bit
 21870                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 21871                           ;	Code Protection bit
 21872                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 21873  300008                     	org	3145736
 21874  300008  0F                 	db	15
 21875                           
 21876                           ;Config register CONFIG5H @ 0x300009
 21877                           ;	Boot Block Code Protection bit
 21878                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 21879                           ;	Data EEPROM Code Protection bit
 21880                           ;	CPD = OFF, Data EEPROM not code-protected
 21881  300009                     	org	3145737
 21882  300009  C0                 	db	192
 21883                           
 21884                           ;Config register CONFIG6L @ 0x30000A
 21885                           ;	Write Protection bit
 21886                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 21887                           ;	Write Protection bit
 21888                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 21889                           ;	Write Protection bit
 21890                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 21891                           ;	Write Protection bit
 21892                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 21893  30000A                     	org	3145738
 21894  30000A  0F                 	db	15
 21895                           
 21896                           ;Config register CONFIG6H @ 0x30000B
 21897                           ;	Configuration Register Write Protection bit
 21898                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 21899                           ;	Boot Block Write Protection bit
 21900                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 21901                           ;	Data EEPROM Write Protection bit
 21902                           ;	WRTD = OFF, Data EEPROM not write-protected
 21903  30000B                     	org	3145739
 21904  30000B  E0                 	db	224
 21905                           
 21906                           ;Config register CONFIG7L @ 0x30000C
 21907                           ;	Table Read Protection bit
 21908                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 21909                           ;	Table Read Protection bit
 21910                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 21911                           ;	Table Read Protection bit
 21912                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 21913                           ;	Table Read Protection bit
 21914                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 21915  30000C                     	org	3145740
 21916  30000C  0F                 	db	15
 21917                           
 21918                           ;Config register CONFIG7H @ 0x30000D
 21919                           ;	Boot Block Table Read Protection bit
 21920                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 21921  30000D                     	org	3145741
 21922  30000D  40                 	db	64
 21923                           tosu	equ	0xFFF
 21924                           tosh	equ	0xFFE
 21925                           tosl	equ	0xFFD
 21926                           stkptr	equ	0xFFC
 21927                           pclatu	equ	0xFFB
 21928                           pclath	equ	0xFFA
 21929                           pcl	equ	0xFF9
 21930                           tblptru	equ	0xFF8
 21931                           tblptrh	equ	0xFF7
 21932                           tblptrl	equ	0xFF6
 21933                           tablat	equ	0xFF5
 21934                           prodh	equ	0xFF4
 21935                           prodl	equ	0xFF3
 21936                           indf0	equ	0xFEF
 21937                           postinc0	equ	0xFEE
 21938                           postdec0	equ	0xFED
 21939                           preinc0	equ	0xFEC
 21940                           plusw0	equ	0xFEB
 21941                           fsr0h	equ	0xFEA
 21942                           fsr0l	equ	0xFE9
 21943                           wreg	equ	0xFE8
 21944                           indf1	equ	0xFE7
 21945                           postinc1	equ	0xFE6
 21946                           postdec1	equ	0xFE5
 21947                           preinc1	equ	0xFE4
 21948                           plusw1	equ	0xFE3
 21949                           fsr1h	equ	0xFE2
 21950                           fsr1l	equ	0xFE1
 21951                           bsr	equ	0xFE0
 21952                           indf2	equ	0xFDF
 21953                           postinc2	equ	0xFDE
 21954                           postdec2	equ	0xFDD
 21955                           preinc2	equ	0xFDC
 21956                           plusw2	equ	0xFDB
 21957                           fsr2h	equ	0xFDA
 21958                           fsr2l	equ	0xFD9
 21959                           status	equ	0xFD8

Data Sizes:
    Strings     72
    Constant    32
    Data        87
    BSS         158
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     48      88
    BANK0           128     72     128
    BANK1           256     36     185
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_DO_TX$4292$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    I2C_DO_RX$4298$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    I2C_DO_TX_EMPTY$4304$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    I2C_DO_RX_EMPTY$4310$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    I2C_DO_TX_EMPTY$4309	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    I2C_DO_TX_EMPTY$4304	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), Absolute function(), 

    I2C_DO_RX$4303	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    I2C_DO_RX$4298	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), Absolute function(), 

    I2C_DO_TX$4297	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    I2C_DO_TX$4292	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), Absolute function(), 

    I2C_MasterFsm$4291	const PTR FTN()enum E2863 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    S2353$0$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    I2C_SlaveWrColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_SlaveBusColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_SlaveAddrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_SlaveWrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_SlaveRdInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    MSSP_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 6
		 -> convert_uint16_to_string@Temp_String(COMRAM[6]), lcd_send_number_pos@number(BANK0[1]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S3762$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S3762$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 1
		 -> lcd_send_number_pos@number(BANK0[1]), lcd_send_number@number(COMRAM[1]), 

    memset@s	PTR unsigned char  size(2) Largest target is 1
		 -> lcd_send_number_pos@number(BANK0[1]), lcd_send_number@number(COMRAM[1]), 

    uart.EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    uart.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    uart.EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    uart.EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> MY_ADC_ISR(), 

    MY_INT2.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APP_INT2_ISR(), APP_INT1_ISR(), APP_INT0_ISR(), 

    MY_INT1.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APP_INT2_ISR(), APP_INT1_ISR(), APP_INT0_ISR(), 

    MY_INT0.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APP_INT2_ISR(), APP_INT1_ISR(), APP_INT0_ISR(), 

    I2C_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), Absolute function(), 

    I2C_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), Absolute function(), 

    I2C_SetBuffer@buffer	PTR void  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue.data(COMRAM[3]), I2C_Read2ByteRegister@returnValue.data(COMRAM[3]), I2C_Write1ByteRegister@data.data(COMRAM[3]), I2C_Write2ByteRegister@data.data(COMRAM[3]), 
		 -> i2I2C_Write1ByteRegister@data(COMRAM[1]), i2I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), 
		 -> bufferBlock.data(COMRAM[3]), I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@reg(BANK0[1]), 
		 -> I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_Read1ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    S2353$data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C_Write1ByteRegister@reg(BANK0[1]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    I2C_Status.data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> I2C_Read1ByteRegister@returnValue.data(COMRAM[3]), I2C_Read2ByteRegister@returnValue.data(COMRAM[3]), I2C_Write1ByteRegister@data.data(COMRAM[3]), I2C_Write2ByteRegister@data.data(COMRAM[3]), 
		 -> i2I2C_Write1ByteRegister@data(COMRAM[1]), i2I2C_Write1ByteRegister@reg(COMRAM[1]), i2I2C_Read1ByteRegister@returnValue(COMRAM[1]), i2I2C_Read1ByteRegister@reg(COMRAM[1]), 
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), bufferBlock.data(COMRAM[3]), I2C_Write2ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@reg(BANK0[1]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    S2353$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    I2C_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> i2I2C_Write1ByteRegister@data(COMRAM[1]), i2I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    S2353$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), Absolute function(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> i2_rd1RegCompleteHandler(), i2_rd2RegCompleteHandler(), i2_wr1RegCompleteHandler(), i2_wr2RegCompleteHandler(), 
		 -> i2_rdBlkRegCompleteHandler(), i2_I2C_CallbackReturnReset(), i2_I2C_CallbackReturnStop(), I2C_CallbackReturnReset(), 
		 -> I2C_CallbackReturnStop(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), Absolute function(), 

    i2c_fsmStateTable	const PTR FTN()enum E2863[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> i2I2C_Write1ByteRegister@data(COMRAM[1]), i2I2C_Read1ByteRegister@returnValue(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_Read1ByteRegister@returnValue(BANK0[1]), NULL(NULL[0]), 

    S2143$data	PTR unsigned char  size(2) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 0

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_ASYNC_RX_Init@_eusart.EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart.EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart.EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_RX_Init@_eusart	PTR const struct . size(2) Largest target is 16
		 -> uart(BANK1[16]), 

    EUSART_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> uart.EUSART_TxDefaultInterruptHandler(BANK1[2]), Absolute function(), 

    EUSART_ASYNC_TX_Init@_eusart.EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart.EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart.EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYNC_TX_Init@_eusart	PTR const struct . size(2) Largest target is 16
		 -> uart(BANK1[16]), 

    S1640$EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    S1640$EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    S1640$EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1640$EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart.EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Baud_Rate_Calculation@_eusart	PTR const struct . size(2) Largest target is 16
		 -> uart(BANK1[16]), 

    EUSART_ASYNC_Init@_eusart	PTR const struct . size(2) Largest target is 16
		 -> uart(BANK1[16]), 

    RBx_select_InterruptHandler@_interrupt.EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    RBx_select_InterruptHandler@_interrupt.EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_pin_init@_interrupt.EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_pin_init@_interrupt.EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    RB7_InterruptHandler_low	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB7_InterruptHandler_high	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHandler_low	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB6_InterruptHandler_high	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHandler_low	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB5_InterruptHandler_high	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHandler_low	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    RB4_InterruptHandler_high	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S1387$EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_init@_interrupt.EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    S1387$EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    interrupt_RBx_init@_interrupt.EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    INT2_set_InterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APP_INT2_ISR(), APP_INT1_ISR(), APP_INT0_ISR(), 

    INT1_set_InterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APP_INT2_ISR(), APP_INT1_ISR(), APP_INT0_ISR(), 

    INT0_set_InterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APP_INT2_ISR(), APP_INT1_ISR(), APP_INT0_ISR(), 

    INTx_select_InterruptHandler@_interrupt.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APP_INT2_ISR(), APP_INT1_ISR(), APP_INT0_ISR(), 

    INTx_select_InterruptHandler@_interrupt	PTR struct . size(2) Largest target is 6
		 -> MY_INT2(BANK1[6]), MY_INT1(BANK1[6]), MY_INT0(BANK1[6]), 

    interrupt_INTx_pin_init@_interrupt.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APP_INT2_ISR(), APP_INT1_ISR(), APP_INT0_ISR(), 

    interrupt_INTx_pin_init@_interrupt	PTR struct . size(2) Largest target is 6
		 -> MY_INT2(BANK1[6]), MY_INT1(BANK1[6]), MY_INT0(BANK1[6]), 

    interrupt_INTx_edge_init@_interrupt.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APP_INT2_ISR(), APP_INT1_ISR(), APP_INT0_ISR(), 

    interrupt_INTx_edge_init@_interrupt	PTR struct . size(2) Largest target is 6
		 -> MY_INT2(BANK1[6]), MY_INT1(BANK1[6]), MY_INT0(BANK1[6]), 

    interrupt_INTx_clear_flag@_interrupt.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APP_INT2_ISR(), APP_INT1_ISR(), APP_INT0_ISR(), 

    interrupt_INTx_clear_flag@_interrupt	PTR struct . size(2) Largest target is 6
		 -> MY_INT2(BANK1[6]), MY_INT1(BANK1[6]), MY_INT0(BANK1[6]), 

    interrupt_INTx_disable@_interrupt.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APP_INT2_ISR(), APP_INT1_ISR(), APP_INT0_ISR(), 

    interrupt_INTx_disable@_interrupt	PTR struct . size(2) Largest target is 6
		 -> MY_INT2(BANK1[6]), MY_INT1(BANK1[6]), MY_INT0(BANK1[6]), 

    S1234$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APP_INT2_ISR(), APP_INT1_ISR(), APP_INT0_ISR(), 

    interrupt_INTx_enable@_interrupt.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APP_INT2_ISR(), APP_INT1_ISR(), APP_INT0_ISR(), 

    interrupt_INTx_enable@_interrupt	PTR struct . size(2) Largest target is 6
		 -> MY_INT2(BANK1[6]), MY_INT1(BANK1[6]), MY_INT0(BANK1[6]), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APP_INT2_ISR(), APP_INT1_ISR(), APP_INT0_ISR(), Absolute function(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APP_INT2_ISR(), APP_INT1_ISR(), APP_INT0_ISR(), Absolute function(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> APP_INT2_ISR(), APP_INT1_ISR(), APP_INT0_ISR(), Absolute function(), 

    interrupt_INTx_init@_interrupt	PTR struct . size(2) Largest target is 6
		 -> MY_INT2(BANK1[6]), MY_INT1(BANK1[6]), MY_INT0(BANK1[6]), 

    gpio_pin_input_init@pin	PTR struct . size(2) Largest target is 6
		 -> MY_INT2(BANK1[6]), MY_INT1(BANK1[6]), MY_INT0(BANK1[6]), 

    gpio_pin_output_low_init@pin	PTR struct . size(2) Largest target is 6
		 -> buzzer(BANK0[2]), lcd.lcd_pins(COMRAM[4]), lcd(COMRAM[6]), 

    gpio_pin_logic_write@pin	PTR struct . size(2) Largest target is 6
		 -> buzzer(BANK0[2]), lcd.lcd_pins(COMRAM[4]), lcd(COMRAM[6]), 

    gpio_pin_direction_init@pin	PTR struct . size(2) Largest target is 6
		 -> MY_INT2(BANK1[6]), MY_INT1(BANK1[6]), MY_INT0(BANK1[6]), buzzer(BANK0[2]), 
		 -> lcd.lcd_pins(COMRAM[4]), lcd(COMRAM[6]), 

    portx	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRlllll[1]), PORTD(BITBIGSFRlllll[1]), PORTC(BITBIGSFRlllll[1]), PORTB(BITBIGSFRlllll[1]), 
		 -> PORTA(BITBIGSFRlllll[1]), 

    latx	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRllllh[1]), LATD(BITBIGSFRllllh[1]), LATC(BITBIGSFRllllh[1]), LATB(BITBIGSFRllllh[1]), 
		 -> LATA(BITBIGSFRlllll[1]), 

    trisx	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISD(ABS[1]), TRISC(ABS[1]), TRISB(ABS[1]), TRISE(ABS[1]), 
		 -> TRISA(BITBIGSFRlllll[1]), 

    ADC_StartConversion_Interrupt@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc(BANK1[7]), 

    ADC_GetConversionResult@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> MY_ADC_ISR(), 

    ADC_GetConversionResult@conversion_result	PTR unsigned short  size(2) Largest target is 1
		 -> adc_value(COMRAM[1]), 

    ADC_GetConversionResult@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc(BANK1[7]), 

    ADC_StartConversion@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc(BANK1[7]), 

    ADC_SelectChannel@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc(BANK1[7]), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> MY_ADC_ISR(), Absolute function(), 

    S454$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> MY_ADC_ISR(), 

    ADC_Init@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> MY_ADC_ISR(), 

    ADC_Init@_adc	PTR const struct . size(2) Largest target is 7
		 -> adc(BANK1[7]), 

    convert_int_to_BCD@BCD_num	PTR unsigned char  size(2) Largest target is 6
		 -> RTC1307._Day(COMRAM[1]), RTC1307._Month(COMRAM[1]), RTC1307._Year(COMRAM[1]), RTC1307._Minutes(COMRAM[1]), 
		 -> RTC1307._Hours(COMRAM[1]), RTC1307(COMRAM[6]), 

    convert_BCD_to_int@int_num	PTR unsigned char  size(2) Largest target is 1
		 -> seconds_counter(BANK0[1]), year_counter(COMRAM[1]), month_counter(COMRAM[1]), day_counter(COMRAM[1]), 
		 -> hours_counter(COMRAM[1]), minutes_counter(COMRAM[1]), 

    lcd_set_curser@lcd	PTR struct . size(2) Largest target is 6
		 -> lcd(COMRAM[6]), 

    lcd_send_enable@lcd	PTR struct . size(2) Largest target is 6
		 -> lcd(COMRAM[6]), 

    lcd_send_nbits@lcd	PTR struct . size(2) Largest target is 6
		 -> lcd(COMRAM[6]), 

    sp__memset	PTR void  size(2) Largest target is 1
		 -> lcd_send_number_pos@number(BANK0[1]), lcd_send_number@number(COMRAM[1]), 

    convert_uint8_to_string@str	PTR unsigned char  size(2) Largest target is 1
		 -> lcd_send_number_pos@number(BANK0[1]), 

    lcd_send_number_pos@lcd	PTR struct . size(2) Largest target is 6
		 -> lcd(COMRAM[6]), 

    lcd_send_string_pos@str	PTR unsigned char  size(2) Largest target is 12
		 -> STR_21(CODE[5]), STR_20(CODE[12]), STR_19(CODE[7]), STR_18(CODE[12]), 
		 -> STR_17(CODE[9]), STR_16(CODE[12]), STR_15(CODE[6]), STR_14(CODE[11]), 
		 -> STR_13(CODE[7]), STR_12(CODE[11]), STR_11(CODE[5]), STR_10(CODE[11]), 
		 -> STR_9(CODE[7]), STR_8(CODE[11]), STR_7(CODE[9]), STR_6(CODE[11]), 
		 -> STR_5(CODE[6]), STR_4(CODE[6]), lcd_send_number_pos@number(BANK0[1]), 

    lcd_send_string_pos@lcd	PTR struct . size(2) Largest target is 6
		 -> lcd(COMRAM[6]), 

    lcd_send_string@str	PTR unsigned char  size(2) Largest target is 12
		 -> STR_21(CODE[5]), STR_20(CODE[12]), STR_19(CODE[7]), STR_18(CODE[12]), 
		 -> STR_17(CODE[9]), STR_16(CODE[12]), STR_15(CODE[6]), STR_14(CODE[11]), 
		 -> STR_13(CODE[7]), STR_12(CODE[11]), STR_11(CODE[5]), STR_10(CODE[11]), 
		 -> STR_9(CODE[7]), STR_8(CODE[11]), STR_7(CODE[9]), STR_6(CODE[11]), 
		 -> STR_5(CODE[6]), STR_4(CODE[6]), lcd_send_number_pos@number(BANK0[1]), lcd_send_number@number(COMRAM[1]), 

    lcd_send_string@lcd	PTR struct . size(2) Largest target is 6
		 -> lcd(COMRAM[6]), 

    lcd_send_char_data_pos@lcd	PTR struct . size(2) Largest target is 6
		 -> lcd(COMRAM[6]), 

    lcd_send_char_data@lcd	PTR struct . size(2) Largest target is 6
		 -> lcd(COMRAM[6]), 

    lcd_send_command@lcd	PTR struct . size(2) Largest target is 6
		 -> lcd(COMRAM[6]), 

    lcd_init@lcd	PTR struct . size(2) Largest target is 6
		 -> lcd(COMRAM[6]), 

    buzzer_off@buzzer	PTR struct . size(2) Largest target is 2
		 -> buzzer(BANK0[2]), 

    buzzer_on@buzzer	PTR struct . size(2) Largest target is 2
		 -> buzzer(BANK0[2]), 

    buzzer_init@buzzer	PTR struct . size(2) Largest target is 2
		 -> buzzer(BANK0[2]), 


Critical Paths under _main in COMRAM

    _main->_I2C_Read1ByteRegister
    _main->_I2C_Write1ByteRegister
    _dtoa->___aodiv
    _dtoa->_pad
    _pad->_fputc
    _fputs->_fputc
    _abs->___aomod
    _lcd_send_char_data->_gpio_pin_logic_write
    _buzzer_on->_gpio_pin_logic_write
    _buzzer_off->_gpio_pin_logic_write
    _lcd_send_command->_gpio_pin_logic_write
    _lcd_send_nbits->_gpio_pin_logic_write
    _lcd_send_enable->_gpio_pin_logic_write
    _gpio_pin_input_init->_gpio_pin_direction_init
    _INTx_select_InterruptHandler->_INT0_set_InterruptHandler
    _INTx_select_InterruptHandler->_INT1_set_InterruptHandler
    _INTx_select_InterruptHandler->_INT2_set_InterruptHandler
    _gpio_pin_output_low_init->_gpio_pin_direction_init
    _gpio_pin_output_low_init->_gpio_pin_logic_write
    _EUSART_Baud_Rate_Calculation->___fltol
    ___fldiv->___xxtofl
    ___fladd->___xxtofl
    _ADC_Init->_adc_input_channel_port_configure
    _RealTimeClockDS1307_Get_Date_Time->_I2C_Read1ByteRegister
    _I2C_Read1ByteRegister->_I2C_SetAddressNackCallback
    _I2C_Read1ByteRegister->_I2C_SetDataCompleteCallback
    _I2C_Write1ByteRegister->_I2C_SetAddressNackCallback
    _I2C_Write1ByteRegister->_I2C_SetDataCompleteCallback
    _I2C_SetAddressNackCallback->_I2C_SetCallback
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback
    _ADC_StartConversion_Interrupt->_ADC_SelectChannel
    _ADC_SelectChannel->_adc_input_channel_port_configure

Critical Paths under _InterruptManager in COMRAM

    _APP_INT0_ISR->i2_RealTimeClockDS1307_Get_Date_Time
    i2_RealTimeClockDS1307_Get_Date_Time->i2_I2C_Read1ByteRegister
    i2_I2C_SetAddressNackCallback->i2_I2C_SetCallback
    i2_I2C_MasterWrite->i2_I2C_MasterOperation
    i2_I2C_Poller->i2_I2C_MasterFsm
    i2_I2C_MasterFsm->i2_I2C_DO_ADDRESS_NACK
    i2_I2C_MasterFsm->i2_I2C_DO_RX
    i2_I2C_MasterFsm->i2_I2C_DO_TX
    i2_I2C_MasterFsm->i2_I2C_DO_TX_EMPTY
    i2_I2C_DO_TX_EMPTY->i2_I2C_CallbackReturnReset
    i2_I2C_DO_TX_EMPTY->i2_I2C_CallbackReturnStop
    i2_I2C_DO_TX_EMPTY->i2_rd1RegCompleteHandler
    i2_I2C_DO_TX_EMPTY->i2_rd2RegCompleteHandler
    i2_I2C_DO_TX_EMPTY->i2_rdBlkRegCompleteHandler
    i2_I2C_DO_TX_EMPTY->i2_wr1RegCompleteHandler
    i2_I2C_DO_TX_EMPTY->i2_wr2RegCompleteHandler
    i2_I2C_DO_TX->i2_I2C_CallbackReturnReset
    i2_I2C_DO_TX->i2_I2C_CallbackReturnStop
    i2_I2C_DO_TX->i2_rd1RegCompleteHandler
    i2_I2C_DO_TX->i2_rd2RegCompleteHandler
    i2_I2C_DO_TX->i2_rdBlkRegCompleteHandler
    i2_I2C_DO_TX->i2_wr1RegCompleteHandler
    i2_I2C_DO_TX->i2_wr2RegCompleteHandler
    i2_I2C_DO_RX->i2_I2C_CallbackReturnReset
    i2_I2C_DO_RX->i2_I2C_CallbackReturnStop
    i2_I2C_DO_RX->i2_rd1RegCompleteHandler
    i2_I2C_DO_RX->i2_rd2RegCompleteHandler
    i2_I2C_DO_RX->i2_rdBlkRegCompleteHandler
    i2_I2C_DO_RX->i2_wr1RegCompleteHandler
    i2_I2C_DO_RX->i2_wr2RegCompleteHandler
    i2_I2C_DO_ADDRESS_NACK->i2_I2C_CallbackReturnReset
    i2_I2C_DO_ADDRESS_NACK->i2_I2C_CallbackReturnStop
    i2_I2C_DO_ADDRESS_NACK->i2_rd1RegCompleteHandler
    i2_I2C_DO_ADDRESS_NACK->i2_rd2RegCompleteHandler
    i2_I2C_DO_ADDRESS_NACK->i2_rdBlkRegCompleteHandler
    i2_I2C_DO_ADDRESS_NACK->i2_wr1RegCompleteHandler
    i2_I2C_DO_ADDRESS_NACK->i2_wr2RegCompleteHandler
    i2_wr2RegCompleteHandler->i2_I2C_SetDataCompleteCallback
    i2_wr1RegCompleteHandler->i2_I2C_SetDataCompleteCallback
    i2_rdBlkRegCompleteHandler->i2_I2C_SetDataCompleteCallback
    i2_rd2RegCompleteHandler->i2_I2C_SetDataCompleteCallback
    i2_rd1RegCompleteHandler->i2_I2C_SetDataCompleteCallback
    i2_I2C_SetDataCompleteCallback->i2_I2C_SetCallback
    _convert_int_to_BCD->___awdiv
    _MY_ADC_ISR->_ADC_GetConversionResult

Critical Paths under _main in BANK0

    _lcd_send_number_pos->_convert_uint8_to_string
    _lcd_send_string_pos->_lcd_set_curser
    _lcd_send_string->_lcd_send_char_data
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _abs->___aomod
    _lcd_send_char_data_pos->_lcd_set_curser
    _lcd_set_curser->_lcd_send_command
    _lcd_send_char_data->_lcd_send_nbits
    __Initialize->_EUSART_ASYNC_Init
    _lcd_init->_lcd_send_command
    _lcd_send_command->_lcd_send_nbits
    _interrupt_INTx_init->_interrupt_INTx_pin_init
    _interrupt_INTx_pin_init->_gpio_pin_input_init
    _buzzer_init->_gpio_pin_output_low_init
    _EUSART_ASYNC_Init->_EUSART_Baud_Rate_Calculation
    _EUSART_Baud_Rate_Calculation->___fladd
    ___fldiv->___xxtofl
    ___fladd->___fldiv
    _RealTimeClockDS1307_Get_Date_Time->_I2C_Read1ByteRegister
    _I2C_MasterWrite->_I2C_MasterOperation
    _I2C_Poller->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_lcd_send_number_pos
    _lcd_send_number_pos->_convert_uint8_to_string
    _convert_uint8_to_string->_sprintf
    _sprintf->_vfprintf

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  499030
                                             34 BANK1      2     2      0
      _ADC_StartConversion_Interrupt
              _I2C_Read1ByteRegister
             _I2C_Write1ByteRegister
  _RealTimeClockDS1307_Get_Date_Time
                        __Initialize
                         _buzzer_off
                          _buzzer_on
                 _convert_BCD_to_int
             _lcd_send_char_data_pos
                   _lcd_send_command
                _lcd_send_number_pos
                _lcd_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_send_number_pos                                  8     3      5   46211
                                             27 BANK1      7     2      5
            _convert_uint8_to_string
                _lcd_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_send_string_pos                                  9     3      6   30166
                                             23 BANK0      8     2      6
                    _lcd_send_string
                     _lcd_set_curser
 ---------------------------------------------------------------------------------
 (2) _lcd_send_string                                      7     3      4    9801
                                             15 BANK0      7     3      4
                 _lcd_send_char_data
 ---------------------------------------------------------------------------------
 (2) _convert_uint8_to_string                              4     2      2   10831
                                             71 BANK0      1     1      0
                                             25 BANK1      2     0      2
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             21    15      6    8777
                                              6 BANK1     19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    7931
                                             69 BANK0      2     2      0
                                              0 BANK1      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           42    36      6    7458
                                             53 BANK0     16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    5683
                                             17 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3417
                                             47 COMRAM     1     1      0
                                              7 BANK0     10     4      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     220
                                             38 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1537
                                              0 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1037
                                             38 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             40 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                             38 COMRAM     2     2      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     625
                                             38 COMRAM    10    10      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (3) _memset                                              12     6      6    1827
                                             38 COMRAM     8     2      6
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _lcd_send_char_data_pos                               8     3      5   24552
                                             23 BANK0      8     3      5
                 _lcd_send_char_data
                     _lcd_set_curser
 ---------------------------------------------------------------------------------
 (2) _lcd_set_curser                                       9     5      4   13218
                                             15 BANK0      8     4      4
                   _lcd_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_send_char_data                                   6     3      3    9234
                                              9 BANK0      6     3      3
               _gpio_pin_logic_write
                    _lcd_send_enable
                     _lcd_send_nbits
 ---------------------------------------------------------------------------------
 (1) _convert_BCD_to_int                                   7     5      2     586
                                             38 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _buzzer_on                                            4     2      2    2569
                                              0 BANK0      3     1      2
               _gpio_pin_logic_write
 ---------------------------------------------------------------------------------
 (1) _buzzer_off                                           4     2      2    2569
                                              0 BANK0      3     1      2
               _gpio_pin_logic_write
 ---------------------------------------------------------------------------------
 (1) __Initialize                                          0     0      0   35000
                           _ADC_Init
                  _EUSART_ASYNC_Init
                     _I2C_Initialize
                        _buzzer_init
                _interrupt_INTx_init
                           _lcd_init
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             8     6      2   16942
                                             15 BANK0      7     5      2
           _gpio_pin_output_low_init
                   _lcd_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_send_command                                     6     3      3   12474
                                              9 BANK0      6     3      3
               _gpio_pin_logic_write
                    _lcd_send_enable
                     _lcd_send_nbits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_nbits                                      10     7      3    3254
                                              0 BANK0      9     6      3
               _gpio_pin_logic_write
 ---------------------------------------------------------------------------------
 (4) _lcd_send_enable                                      4     2      2    2798
                                              0 BANK0      3     1      2
               _gpio_pin_logic_write
 ---------------------------------------------------------------------------------
 (2) _interrupt_INTx_init                                  3     1      2    3962
                                              8 BANK0      3     1      2
       _INTx_select_InterruptHandler
          _interrupt_INTx_clear_flag
             _interrupt_INTx_disable
           _interrupt_INTx_edge_init
              _interrupt_INTx_enable
            _interrupt_INTx_pin_init
 ---------------------------------------------------------------------------------
 (3) _interrupt_INTx_pin_init                              3     1      2    1494
                                              5 BANK0      3     1      2
                _gpio_pin_input_init
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_input_init                                  5     3      2    1302
                                              0 BANK0      5     3      2
            _gpio_pin_direction_init
 ---------------------------------------------------------------------------------
 (3) _interrupt_INTx_enable                                5     3      2     201
                                             38 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _interrupt_INTx_edge_init                             5     3      2     387
                                             38 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _interrupt_INTx_disable                               5     3      2     291
                                             38 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _interrupt_INTx_clear_flag                            5     3      2     201
                                             38 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _INTx_select_InterruptHandler                         5     3      2     870
                                             41 COMRAM     5     3      2
          _INT0_set_InterruptHandler
          _INT1_set_InterruptHandler
          _INT2_set_InterruptHandler
 ---------------------------------------------------------------------------------
 (4) _INT2_set_InterruptHandler                            3     1      2     192
                                             38 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _INT1_set_InterruptHandler                            3     1      2     192
                                             38 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) _INT0_set_InterruptHandler                            3     1      2     192
                                             38 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _buzzer_init                                          4     2      2    4085
                                              5 BANK0      3     1      2
           _gpio_pin_output_low_init
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_output_low_init                             5     3      2    3849
                                              0 BANK0      5     3      2
            _gpio_pin_direction_init
               _gpio_pin_logic_write
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_logic_write                                10     7      3    2333
                                             38 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_init                             10     7      3     893
                                             38 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_ASYNC_Init                                    3     1      2    9640
                                             59 BANK0      2     0      2
               _EUSART_ASYNC_RX_Init
               _EUSART_ASYNC_TX_Init
       _EUSART_Baud_Rate_Calculation
 ---------------------------------------------------------------------------------
 (3) _EUSART_Baud_Rate_Calculation                        12    10      2    9016
                                             47 BANK0     12    10      2
                            ___fladd
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     836
                                             38 COMRAM     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     381
                                             38 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    3263
                                              6 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    3942
                                             31 BANK0     16     8      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _EUSART_ASYNC_TX_Init                                 2     0      2     208
                                             38 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_ASYNC_RX_Init                                 2     0      2     186
                                             38 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             4     2      2     371
                                             41 COMRAM     3     1      2
   _adc_input_channel_port_configure
        _configure_voltage_reference
               _select_result_format
 ---------------------------------------------------------------------------------
 (3) _select_result_format                                 1     1      0      44
                                             38 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _configure_voltage_reference                          1     1      0      44
                                             38 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _RealTimeClockDS1307_Get_Date_Time                    6     0      6  114595
                                             10 BANK0      6     0      6
              _I2C_Read1ByteRegister
 ---------------------------------------------------------------------------------
 (2) _I2C_Read1ByteRegister                                3     2      1  114595
                                             47 COMRAM     1     0      1
                                              8 BANK0      2     2      0
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _I2C_Write1ByteRegister                               3     1      2  114771
                                             47 COMRAM     1     1      0
                                              8 BANK0      2     0      2
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_SetAddressNackCallback                           4     0      4    2259
                                             43 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_Open                                             2     2      0      68
                                             38 COMRAM     2     2      0
                 _I2C_MasterClearIrq
                     _I2C_MasterOpen
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterWrite                                      0     0      0  106225
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterOperation                                  2     2      0  106225
                                              6 BANK0      2     2      0
                    _I2C_MasterStart
                         _I2C_Poller
 ---------------------------------------------------------------------------------
 (5) _I2C_Poller                                           0     0      0  106157
                      _I2C_MasterFsm
             _I2C_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterWaitForEvent                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterFsm                                        2     2      0  106157
                                              4 BANK0      2     2      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX_EMPTY                                      2     2      0   26516
                                              2 BANK0      2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSetIrq                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX                                            2     2      0   26547
                                              2 BANK0      2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_WRITE                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_READ                             0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_WRITE                                0     0      0      31
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_READ                                 0     0      0      31
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendTxData                                 1     1      0      31
                                             38 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX                                            2     2      0   26516
                                              2 BANK0      2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendAck                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterStartRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_ADDRESS_NACK                                  2     2      0   26516
                                              2 BANK0      2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _wr2RegCompleteHandler                                2     0      2    5232
                                              0 BANK0      2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _wr1RegCompleteHandler                                2     0      2    5232
                                              0 BANK0      2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rdBlkRegCompleteHandler                              2     0      2    5263
                                              0 BANK0      2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd2RegCompleteHandler                                2     0      2    5232
                                              0 BANK0      2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd1RegCompleteHandler                                2     0      2    5407
                                              0 BANK0      2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_SetDataCompleteCallback                          4     0      4    2979
                                             43 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (4) _I2C_SetCallback                                      5     1      4    1117
                                             38 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _I2C_SetBuffer                                        4     0      4    2222
                                             38 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_STOP                                     0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterStop                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART                                  0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterEnableRestart                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnStop                               2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnReset                              2     0      2     150
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (21) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Close                                            1     1      0      37
                                             38 COMRAM     1     1      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion_Interrupt                        4     1      3     942
                                             46 COMRAM     1     1      0
                                              0 BANK0      3     0      3
                  _ADC_SelectChannel
                _ADC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADC_StartConversion                                  3     1      2     199
                                             38 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    5     2      3     417
                                             41 COMRAM     5     2      3
   _adc_input_channel_port_configure
 ---------------------------------------------------------------------------------
 (3) _adc_input_channel_port_configure                     3     3      0      22
                                             38 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 21
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _InterruptManager                                   12    12      0  204430
                                             26 COMRAM    12    12      0
                            _ADC_ISR
                      _EUSART_RX_ISR
                      _EUSART_TX_ISR
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
 ---------------------------------------------------------------------------------
 (12) _RB7_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _RB6_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _RB5_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _RB4_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _INT2_ISR                                            0     0      0   67926
                   Absolute function *
                       _APP_INT0_ISR *
                       _APP_INT1_ISR *
                       _APP_INT2_ISR *
 ---------------------------------------------------------------------------------
 (12) _INT1_ISR                                            0     0      0   67926
                   Absolute function *
                       _APP_INT0_ISR *
                       _APP_INT1_ISR *
                       _APP_INT2_ISR *
 ---------------------------------------------------------------------------------
 (12) _INT0_ISR                                            0     0      0   67926
                   Absolute function *
                       _APP_INT0_ISR *
                       _APP_INT1_ISR *
                       _APP_INT2_ISR *
 ---------------------------------------------------------------------------------
 (13) _APP_INT2_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _APP_INT1_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _APP_INT0_ISR                                        0     0      0   67926
                 _convert_int_to_BCD
           i2_I2C_Write1ByteRegister
i2_RealTimeClockDS1307_Get_Date_Time
 ---------------------------------------------------------------------------------
 (14) i2_RealTimeClockDS1307_Get_Date_Time                 6     0      6   33170
                                             20 COMRAM     6     0      6
            i2_I2C_Read1ByteRegister
 ---------------------------------------------------------------------------------
 (15) i2_I2C_Read1ByteRegister                             3     2      1   33170
                                             17 COMRAM     3     2      1
                        i2_I2C_Close
                  i2_I2C_MasterWrite
                         i2_I2C_Open
       i2_I2C_SetAddressNackCallback
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) i2_I2C_Write1ByteRegister                            3     1      2   33346
                                             17 COMRAM     3     1      2
                        i2_I2C_Close
                  i2_I2C_MasterWrite
                         i2_I2C_Open
       i2_I2C_SetAddressNackCallback
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (16) i2_I2C_SetAddressNackCallback                        4     0      4     559
                                              5 COMRAM     4     0      4
                  i2_I2C_SetCallback
 ---------------------------------------------------------------------------------
 (16) i2_I2C_Open                                          2     2      0      68
                                              0 COMRAM     2     2      0
               i2_I2C_MasterClearIrq
                   i2_I2C_MasterOpen
 ---------------------------------------------------------------------------------
 (17) i2_I2C_MasterOpen                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i2_I2C_MasterWrite                                   0     0      0   30685
              i2_I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (17) i2_I2C_MasterOperation                               2     2      0   30685
                                             15 COMRAM     2     2      0
                  i2_I2C_MasterStart
                       i2_I2C_Poller
 ---------------------------------------------------------------------------------
 (18) i2_I2C_Poller                                        0     0      0   30617
                    i2_I2C_MasterFsm
           i2_I2C_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (19) i2_I2C_MasterWaitForEvent                            0     0      0       0
 ---------------------------------------------------------------------------------
 (19) i2_I2C_MasterFsm                                     2     2      0   30617
                                             13 COMRAM     2     2      0
              i2_I2C_DO_ADDRESS_NACK *
                      i2_I2C_DO_IDLE *
                      i2_I2C_DO_RCEN *
                     i2_I2C_DO_RESET *
                        i2_I2C_DO_RX *
                    i2_I2C_DO_RX_ACK *
           i2_I2C_DO_RX_NACK_RESTART *
              i2_I2C_DO_RX_NACK_STOP *
             i2_I2C_DO_SEND_ADR_READ *
            i2_I2C_DO_SEND_ADR_WRITE *
              i2_I2C_DO_SEND_RESTART *
         i2_I2C_DO_SEND_RESTART_READ *
        i2_I2C_DO_SEND_RESTART_WRITE *
                 i2_I2C_DO_SEND_STOP *
                        i2_I2C_DO_TX *
                  i2_I2C_DO_TX_EMPTY *
               i2_I2C_MasterClearIrq
                 i2_I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (20) i2_I2C_DO_TX_EMPTY                                   2     2      0    7631
                                             11 COMRAM     2     2      0
                   Absolute function *
          i2_I2C_CallbackReturnReset *
           i2_I2C_CallbackReturnStop *
              i2_I2C_DO_SEND_RESTART
                 i2_I2C_DO_SEND_STOP
                 i2_I2C_MasterSetIrq
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (21) i2_I2C_MasterSetIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (20) i2_I2C_DO_TX                                         2     2      0    7662
                                             11 COMRAM     2     2      0
                   Absolute function *
          i2_I2C_CallbackReturnReset *
           i2_I2C_CallbackReturnStop *
         i2_I2C_DO_SEND_RESTART_READ
        i2_I2C_DO_SEND_RESTART_WRITE
                 i2_I2C_DO_SEND_STOP
                 i2_I2C_MasterIsNack
             i2_I2C_MasterSendTxData
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (20) i2_I2C_MasterIsNack                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (21) i2_I2C_DO_SEND_RESTART_WRITE                         0     0      0       0
          i2_I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (21) i2_I2C_DO_SEND_RESTART_READ                          0     0      0       0
          i2_I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (20) i2_I2C_DO_SEND_ADR_WRITE                             0     0      0      31
             i2_I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (20) i2_I2C_DO_SEND_ADR_READ                              0     0      0      31
             i2_I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (21) i2_I2C_MasterSendTxData                              1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (20) i2_I2C_DO_RX_ACK                                     0     0      0       0
                i2_I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (20) i2_I2C_DO_RX                                         2     2      0    7631
                                             11 COMRAM     2     2      0
                   Absolute function *
          i2_I2C_CallbackReturnReset *
           i2_I2C_CallbackReturnStop *
           i2_I2C_DO_RX_NACK_RESTART
              i2_I2C_DO_RX_NACK_STOP
              i2_I2C_MasterGetRxData
                i2_I2C_MasterSendAck
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (21) i2_I2C_MasterSendAck                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (21) i2_I2C_MasterGetRxData                               0     0      0       0
 ---------------------------------------------------------------------------------
 (20) i2_I2C_DO_RX_NACK_STOP                               0     0      0       0
               i2_I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (20) i2_I2C_DO_RX_NACK_RESTART                            0     0      0       0
               i2_I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (21) i2_I2C_MasterSendNack                                0     0      0       0
 ---------------------------------------------------------------------------------
 (20) i2_I2C_DO_RESET                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (20) i2_I2C_DO_RCEN                                       0     0      0       0
                i2_I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (21) i2_I2C_MasterStartRx                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (20) i2_I2C_DO_IDLE                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (20) i2_I2C_DO_ADDRESS_NACK                               2     2      0    7631
                                             11 COMRAM     2     2      0
                   Absolute function *
          i2_I2C_CallbackReturnReset *
           i2_I2C_CallbackReturnStop *
              i2_I2C_DO_SEND_RESTART
                 i2_I2C_DO_SEND_STOP
            i2_rd1RegCompleteHandler *
            i2_rd2RegCompleteHandler *
          i2_rdBlkRegCompleteHandler *
            i2_wr1RegCompleteHandler *
            i2_wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (21) i2_wr2RegCompleteHandler                             2     0      2    1492
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (21) i2_wr1RegCompleteHandler                             2     0      2    1492
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (21) i2_rdBlkRegCompleteHandler                           2     0      2    1523
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (21) i2_rd2RegCompleteHandler                             2     0      2    1492
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (21) i2_rd1RegCompleteHandler                             2     0      2    1632
                                              9 COMRAM     2     0      2
                    i2_I2C_SetBuffer
      i2_I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (16) i2_I2C_SetDataCompleteCallback                       4     0      4     909
                                              5 COMRAM     4     0      4
                  i2_I2C_SetCallback
 ---------------------------------------------------------------------------------
 (17) i2_I2C_SetCallback                                   5     1      4     357
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (16) i2_I2C_SetBuffer                                     4     0      4     552
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (21) i2_I2C_DO_SEND_STOP                                  0     0      0       0
                   i2_I2C_MasterStop
 ---------------------------------------------------------------------------------
 (22) i2_I2C_MasterStop                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (21) i2_I2C_DO_SEND_RESTART                               0     0      0       0
          i2_I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (22) i2_I2C_MasterEnableRestart                           0     0      0       0
 ---------------------------------------------------------------------------------
 (21) i2_I2C_CallbackReturnStop                            2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (21) i2_I2C_CallbackReturnReset                           2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) i2_I2C_MasterStart                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i2_I2C_Close                                         1     1      0      24
                                              0 COMRAM     1     1      0
               i2_I2C_MasterClearIrq
                  i2_I2C_MasterClose
             i2_I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (17) i2_I2C_MasterDisableIrq                              0     0      0       0
 ---------------------------------------------------------------------------------
 (17) i2_I2C_MasterClose                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) i2_I2C_MasterClearIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _convert_int_to_BCD                                  5     3      2    1410
                                              8 COMRAM     5     3      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (15) ___awmod                                             6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (15) ___awdiv                                             8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (12) _EUSART_TX_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_RX_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ADC_ISR                                             0     0      0     476
                   Absolute function *
                         _MY_ADC_ISR *
 ---------------------------------------------------------------------------------
 (13) _MY_ADC_ISR                                          0     0      0     476
            _ADC_GetConversionResult
  _EUSART_ASYNC_WriteByteNonBlocking
 ---------------------------------------------------------------------------------
 (14) _EUSART_ASYNC_WriteByteNonBlocking                   2     2      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (14) _ADC_GetConversionResult                            10     6      4     445
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (21) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 22
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_StartConversion_Interrupt
     _ADC_SelectChannel
       _adc_input_channel_port_configure
     _ADC_StartConversion
   _I2C_Read1ByteRegister
     _I2C_Close
       _I2C_MasterClearIrq
       _I2C_MasterClose
       _I2C_MasterDisableIrq
     _I2C_MasterWrite
       _I2C_MasterOperation
         _I2C_MasterStart
         _I2C_Poller
           _I2C_MasterFsm
             _I2C_DO_ADDRESS_NACK *
               Absolute function(Fake) *
               _I2C_CallbackReturnReset *
               _I2C_CallbackReturnStop *
               _I2C_DO_SEND_RESTART *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_STOP *
                 _I2C_MasterStop
               _rd1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rd2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
               _rdBlkRegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
               _wr1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
               _wr2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
             _I2C_DO_IDLE *
             _I2C_DO_RCEN *
               _I2C_MasterStartRx
             _I2C_DO_RESET *
             _I2C_DO_RX *
               Absolute function(Fake) *
               _I2C_CallbackReturnReset *
               _I2C_CallbackReturnStop *
               _I2C_DO_RX_NACK_RESTART *
                 _I2C_MasterSendNack
               _I2C_DO_RX_NACK_STOP *
                 _I2C_MasterSendNack
               _I2C_MasterGetRxData *
               _I2C_MasterSendAck *
               _rd1RegCompleteHandler *
               _rd2RegCompleteHandler *
               _rdBlkRegCompleteHandler *
               _wr1RegCompleteHandler *
               _wr2RegCompleteHandler *
             _I2C_DO_RX_ACK *
               _I2C_MasterSendAck
             _I2C_DO_RX_NACK_RESTART *
             _I2C_DO_RX_NACK_STOP *
             _I2C_DO_SEND_ADR_READ *
               _I2C_MasterSendTxData
             _I2C_DO_SEND_ADR_WRITE *
               _I2C_MasterSendTxData
             _I2C_DO_SEND_RESTART *
             _I2C_DO_SEND_RESTART_READ *
               _I2C_MasterEnableRestart
             _I2C_DO_SEND_RESTART_WRITE *
               _I2C_MasterEnableRestart
             _I2C_DO_SEND_STOP *
             _I2C_DO_TX *
               Absolute function(Fake) *
               _I2C_CallbackReturnReset *
               _I2C_CallbackReturnStop *
               _I2C_DO_SEND_RESTART_READ *
               _I2C_DO_SEND_RESTART_WRITE *
               _I2C_DO_SEND_STOP *
               _I2C_MasterIsNack *
               _I2C_MasterSendTxData *
               _rd1RegCompleteHandler *
               _rd2RegCompleteHandler *
               _rdBlkRegCompleteHandler *
               _wr1RegCompleteHandler *
               _wr2RegCompleteHandler *
             _I2C_DO_TX_EMPTY *
               Absolute function(Fake) *
               _I2C_CallbackReturnReset *
               _I2C_CallbackReturnStop *
               _I2C_DO_SEND_RESTART *
               _I2C_DO_SEND_STOP *
               _I2C_MasterSetIrq *
               _rd1RegCompleteHandler *
               _rd2RegCompleteHandler *
               _rdBlkRegCompleteHandler *
               _wr1RegCompleteHandler *
               _wr2RegCompleteHandler *
             _I2C_MasterClearIrq *
             _I2C_MasterIsNack *
           _I2C_MasterWaitForEvent
     _I2C_Open
       _I2C_MasterClearIrq
       _I2C_MasterOpen
     _I2C_SetAddressNackCallback
       _I2C_SetCallback
     _I2C_SetBuffer
     _I2C_SetDataCompleteCallback
   _I2C_Write1ByteRegister
     _I2C_Close
     _I2C_MasterWrite
     _I2C_Open
     _I2C_SetAddressNackCallback
     _I2C_SetBuffer
     _I2C_SetDataCompleteCallback
   _RealTimeClockDS1307_Get_Date_Time
     _I2C_Read1ByteRegister
   __Initialize
     _ADC_Init
       _adc_input_channel_port_configure
       _configure_voltage_reference
       _select_result_format
     _EUSART_ASYNC_Init
       _EUSART_ASYNC_RX_Init
       _EUSART_ASYNC_TX_Init
       _EUSART_Baud_Rate_Calculation
         ___fladd
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
         ___fltol
         ___xxtofl
     _I2C_Initialize
     _buzzer_init
       _gpio_pin_output_low_init
         _gpio_pin_direction_init
         _gpio_pin_logic_write
     _interrupt_INTx_init
       _INTx_select_InterruptHandler
         _INT0_set_InterruptHandler
         _INT1_set_InterruptHandler
         _INT2_set_InterruptHandler
       _interrupt_INTx_clear_flag
       _interrupt_INTx_disable
       _interrupt_INTx_edge_init
       _interrupt_INTx_enable
       _interrupt_INTx_pin_init
         _gpio_pin_input_init
           _gpio_pin_direction_init
     _lcd_init
       _gpio_pin_output_low_init
       _lcd_send_command
         _gpio_pin_logic_write
         _lcd_send_enable
           _gpio_pin_logic_write
         _lcd_send_nbits
           _gpio_pin_logic_write
   _buzzer_off
     _gpio_pin_logic_write
   _buzzer_on
     _gpio_pin_logic_write
   _convert_BCD_to_int
   _lcd_send_char_data_pos
     _lcd_send_char_data
       _gpio_pin_logic_write
       _lcd_send_enable
       _lcd_send_nbits
     _lcd_set_curser
       _lcd_send_command
   _lcd_send_command
   _lcd_send_number_pos
     _convert_uint8_to_string
       _memset
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                 _strlen
             _fputc
     _lcd_send_string_pos
       _lcd_send_string
         _lcd_send_char_data
       _lcd_set_curser
   _lcd_send_string_pos

 _InterruptManager (ROOT)
   _ADC_ISR
     Absolute function(Fake) *
     _MY_ADC_ISR *
       _ADC_GetConversionResult
       _EUSART_ASYNC_WriteByteNonBlocking
   _EUSART_RX_ISR
   _EUSART_TX_ISR
   _INT0_ISR
     Absolute function(Fake) *
     _APP_INT0_ISR *
       _convert_int_to_BCD
         ___awdiv
         ___awmod
       i2_I2C_Write1ByteRegister
         i2_I2C_Close
           i2_I2C_MasterClearIrq
           i2_I2C_MasterClose
           i2_I2C_MasterDisableIrq
         i2_I2C_MasterWrite
           i2_I2C_MasterOperation
             i2_I2C_MasterStart
             i2_I2C_Poller
               i2_I2C_MasterFsm
                 i2_I2C_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   i2_I2C_CallbackReturnReset *
                   i2_I2C_CallbackReturnStop *
                   i2_I2C_DO_SEND_RESTART *
                     i2_I2C_MasterEnableRestart
                   i2_I2C_DO_SEND_STOP *
                     i2_I2C_MasterStop
                   i2_rd1RegCompleteHandler *
                     i2_I2C_SetBuffer
                     i2_I2C_SetDataCompleteCallback
                       i2_I2C_SetCallback
                   i2_rd2RegCompleteHandler *
                     i2_I2C_SetBuffer
                     i2_I2C_SetDataCompleteCallback
                   i2_rdBlkRegCompleteHandler *
                     i2_I2C_SetBuffer
                     i2_I2C_SetDataCompleteCallback
                   i2_wr1RegCompleteHandler *
                     i2_I2C_SetBuffer
                     i2_I2C_SetDataCompleteCallback
                   i2_wr2RegCompleteHandler *
                     i2_I2C_SetBuffer
                     i2_I2C_SetDataCompleteCallback
                 i2_I2C_DO_IDLE *
                 i2_I2C_DO_RCEN *
                   i2_I2C_MasterStartRx
                 i2_I2C_DO_RESET *
                 i2_I2C_DO_RX *
                   Absolute function(Fake) *
                   i2_I2C_CallbackReturnReset *
                   i2_I2C_CallbackReturnStop *
                   i2_I2C_DO_RX_NACK_RESTART *
                     i2_I2C_MasterSendNack
                   i2_I2C_DO_RX_NACK_STOP *
                     i2_I2C_MasterSendNack
                   i2_I2C_MasterGetRxData *
                   i2_I2C_MasterSendAck *
                   i2_rd1RegCompleteHandler *
                   i2_rd2RegCompleteHandler *
                   i2_rdBlkRegCompleteHandler *
                   i2_wr1RegCompleteHandler *
                   i2_wr2RegCompleteHandler *
                 i2_I2C_DO_RX_ACK *
                   i2_I2C_MasterSendAck
                 i2_I2C_DO_RX_NACK_RESTART *
                 i2_I2C_DO_RX_NACK_STOP *
                 i2_I2C_DO_SEND_ADR_READ *
                   i2_I2C_MasterSendTxData
                 i2_I2C_DO_SEND_ADR_WRITE *
                   i2_I2C_MasterSendTxData
                 i2_I2C_DO_SEND_RESTART *
                 i2_I2C_DO_SEND_RESTART_READ *
                   i2_I2C_MasterEnableRestart
                 i2_I2C_DO_SEND_RESTART_WRITE *
                   i2_I2C_MasterEnableRestart
                 i2_I2C_DO_SEND_STOP *
                 i2_I2C_DO_TX *
                   Absolute function(Fake) *
                   i2_I2C_CallbackReturnReset *
                   i2_I2C_CallbackReturnStop *
                   i2_I2C_DO_SEND_RESTART_READ *
                   i2_I2C_DO_SEND_RESTART_WRITE *
                   i2_I2C_DO_SEND_STOP *
                   i2_I2C_MasterIsNack *
                   i2_I2C_MasterSendTxData *
                   i2_rd1RegCompleteHandler *
                   i2_rd2RegCompleteHandler *
                   i2_rdBlkRegCompleteHandler *
                   i2_wr1RegCompleteHandler *
                   i2_wr2RegCompleteHandler *
                 i2_I2C_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   i2_I2C_CallbackReturnReset *
                   i2_I2C_CallbackReturnStop *
                   i2_I2C_DO_SEND_RESTART *
                   i2_I2C_DO_SEND_STOP *
                   i2_I2C_MasterSetIrq *
                   i2_rd1RegCompleteHandler *
                   i2_rd2RegCompleteHandler *
                   i2_rdBlkRegCompleteHandler *
                   i2_wr1RegCompleteHandler *
                   i2_wr2RegCompleteHandler *
                 i2_I2C_MasterClearIrq *
                 i2_I2C_MasterIsNack *
               i2_I2C_MasterWaitForEvent
         i2_I2C_Open
           i2_I2C_MasterClearIrq
           i2_I2C_MasterOpen
         i2_I2C_SetAddressNackCallback
           i2_I2C_SetCallback
         i2_I2C_SetBuffer
         i2_I2C_SetDataCompleteCallback
       i2_RealTimeClockDS1307_Get_Date_Time
         i2_I2C_Read1ByteRegister
           i2_I2C_Close
           i2_I2C_MasterWrite
           i2_I2C_Open
           i2_I2C_SetAddressNackCallback
           i2_I2C_SetBuffer
           i2_I2C_SetDataCompleteCallback
     _APP_INT1_ISR *
     _APP_INT2_ISR *
   _INT1_ISR
     Absolute function(Fake) *
     _APP_INT0_ISR *
     _APP_INT1_ISR *
     _APP_INT2_ISR *
   _INT2_ISR
     Absolute function(Fake) *
     _APP_INT0_ISR *
     _APP_INT1_ISR *
     _APP_INT2_ISR *
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      46        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     24      B9       7       72.3%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     48      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     30      58       1       69.8%
BITBIGSFRhllh       26      0       0      38        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRllhlh       9      0       0      41        0.0%
BITBIGSFRllhhh       7      0       0      39        0.0%
BITBIGSFRllhhl       7      0       0      40        0.0%
BITBIGSFRlllhh       6      0       0      43        0.0%
BITBIGSFRllllh       4      0       0      44        0.0%
BITBIGSFRlllll       4      0       0      45        0.0%
BITBIGSFRllhll       2      0       0      42        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     191      20        0.0%
DATA                 0      0     191       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Mar 06 04:22:52 2024

                          ??_InterruptManager 001B                        ??_I2C_DO_SEND_ADR_READ 0027  
                lcd_send_char_data_pos@column 009A                            i2_I2C_MasterSetIrq 63BE  
                                ___fldiv@aexp 009E                                  ___fldiv@bexp 009D  
                                           _n 004F                                fp_i2_I2C_DO_RX 0000  
                              fp_i2_I2C_DO_TX 0000                                  ___fldiv@sign 0096  
                         i2_I2C_MasterSendAck 638E                   gpio_pin_output_low_init@pin 0080  
                 gpio_pin_output_low_init@ret 0084                       ??_I2C_DO_SEND_ADR_WRITE 0028  
                                 _SSPSTATbits 000FC7                                            l11 57F6  
                                          l21 574C                                            l16 56F4  
                                          l63 4A8E                                            l81 467C  
                                          l58 36E0                                            l75 4F74  
                                          l68 4A06                                            l92 4C96  
                                          l85 467E                                  ___awdiv@sign 0006  
                           i2_I2C_DO_TX_EMPTY 4D14                          ??i2_I2C_DO_SEND_STOP 0001  
                         ?i2_I2C_MasterIsNack 0001                           i2_I2C_MasterStartRx 63C6  
                       ??_I2C_DO_SEND_RESTART 0027                          i2_I2C_MasterSendNack 6394  
                          ?i2_I2C_DO_TX_EMPTY 0001                           ?i2_I2C_MasterSetIrq 0001  
                INT1_set_InterruptHandler@ret 0029                                           l130 57A2  
                                         l221 311C                                           l125 5896  
                                         l151 5640                                           l161 5442  
                                         l330 5B3A                                           l154 5B00  
                                         l281 3BCE                                           l417 3984  
                                         l194 54AA                                           l363 5CE2  
                                         l355 5DFC                                           l283 3C98  
                                         l436 3832                                           l349 3D70  
                                         l293 5B74                                           l365 5CE6  
                                         l359 5CCA                                           l471 569C  
                                         l296 5FC2                                           l704 4728  
                                         l297 5FC8                                           l457 513E  
                                         l641 4BB8                                           l298 5FCA  
                                         l714 5F58                                           l618 4E08  
                                         l643 4BC6                                           l900 4524  
                                         l652 5004                                           l644 4BD0  
                                         l709 5F82                                           l910 4862  
                                         l654 500E                                           l646 4C1A  
                                         l719 5F2E                                           l663 5076  
                                         l655 5014                                           l832 59D4  
                                         l665 5080                                           l657 505A  
                                         l834 5A00                                           l666 5086  
                                         l668 50CC                                           l693 5CB6  
                                         l688 3AB0                                           l953 4D12  
                                         l890 1BF2                                           l882 16F6  
                                         l971 52FE                                           l884 17B4  
                                         l885 1872                                           l886 1930  
                                         l887 19EE                                           l888 1AAA  
         __end_of_configure_voltage_reference 5CE8                   _configure_voltage_reference 5CB8  
                             ?_lcd_send_nbits 0080                              fp_i2_I2C_DO_IDLE 0000  
                   lcd_send_string_pos@column 009A                         i2_I2C_DO_ADDRESS_NACK 557A  
                            fp_i2_I2C_DO_RCEN 0000                                           _adc 017C  
                                         _abs 5A46                        ??_gpio_pin_logic_write 002A  
                                         _lcd 0050                                           _pad 40BA  
                             __end_of_ADC_ISR 5DD2                        fp__I2C_DO_RX_NACK_STOP 0000  
                   ?i2_I2C_MasterWaitForEvent 0001                        _I2C_MasterWaitForEvent 629E  
                                 lcd_init@lcd 008F                                   ?i2_I2C_Open 0001  
                                ___awmod@sign 0006                                           prod 000FF3  
                                         tosl 000FFD                                           wreg 000FE8  
                    ?i2_rd1RegCompleteHandler 000A                    __end_of_lcd_send_char_data 4A08  
                       _I2C_DO_RCEN$intlevel0 61C2                ?_ADC_StartConversion_Interrupt 0080  
                ??_I2C_SetAddressNackCallback 0030                     _RB5_InterruptHandler_high 00F2  
                         ??i2_I2C_DO_TX_EMPTY 000C                      ?i2_wr1RegCompleteHandler 000A  
                   ?i2_I2C_Write1ByteRegister 0012                        _I2C_Write1ByteRegister 5292  
                             ?_lcd_set_curser 008F                      ??_I2C_CallbackReturnStop 0030  
                                _I2C_DO_RESET 61A2                               __end_of_RB4_ISR 612A  
                             __end_of_RB5_ISR 6110                               __end_of_RB6_ISR 60F6  
                             __end_of_RB7_ISR 60DC                          ?i2_I2C_MasterSendAck 0001  
                                ___fltol@exp1 0030                        lcd_set_curser@gpio_ret 0095  
                                        l1010 5C4C                                          l1013 5C16  
                                        l1022 58E2                                          l1016 5BE0  
                                        l1019 5C82                                          ?_abs 0029  
                                        l1212 6050                       ??_rd2RegCompleteHandler 0030  
                                        l1301 61B6                                          l2101 1FCE  
                                        l1206 4E82                                          l1222 60C0  
                                        l2102 1FBC                                          l1231 3FEE  
                                        l1216 5220                                          l1225 6158  
                                        l2202 2C9A                                          l1331 63B8  
                                        l1315 62F6                                          l1219 61E2  
                                        l1307 51B0                                          l1163 48F0  
                                        l2131 22B0                                          l1340 63AC  
                                        l1228 3FB6                                          l1244 4404  
                                        l2140 22F6                                          l2300 2C3E  
                                        l1245 4474                                          l1173 5972  
                                        l2205 2DF6                                          l1318 62E8  
                                        l1334 63A0                                          l1262 4B16  
                                        l2142 236E                                          l2134 2274  
                                        l2222 341E                                          l1167 5E28  
                                        l2143 235C                                          l1159 61F6  
                                        l2311 5A7C                                          l1352 63A8  
                                        l1256 61CC                                          l1280 629C  
                                        l1328 6010                                          l2216 2D8E  
                                        l1361 638C                                          l1337 6338  
                                        l2129 2450                                          l2209 2D32  
                                        l1186 5FA6                                          l1346 63A4  
                                        l1426 5578                                          l2314 5A84  
                                        l2306 53D0                                          l1355 620A  
                                        l1283 628A                                          l1179 6330  
                                        l1195 6140                                          l2075 1DE4  
                                        l2307 53D8                                          l2235 5848  
                                        l1292 6254                                          l2092 1EFE  
                                        l2084 20B4                                          l2076 1DD2  
                                        l1349 63B0                                          l1189 6170  
                                        l2077 1D98                                          l1358 6386  
                                        l1382 639C                                          l1286 6278  
                                        l2326 40B8                                          l2334 592A  
                                        l2262 4100                                          l1295 6242  
                                        l2343 5BAA                                          l1376 63B4  
                                        l1289 6266                                          l1385 629E  
                                        l2337 63F0                                          l2265 4144  
                                        l2273 2838                                          l1529 15A4  
                                        l1298 6230                                          l1379 63BC  
                                        l2267 4180                                          l2275 2840  
                                        l1389 62AC                                          l1661 32A6  
                                        l2293 2A7A                                          l1674 3584  
                                        l1844 3BB6                                          ?_pad 0087  
                                        l8031 3AC8                                          l8041 3B18  
                                        l8051 3B42                                          l8043 3B1C  
                                        l8035 3ADC                                          l8061 3B6A  
                                        l8053 3B4C                                          l8045 3B2A  
                                        l8037 3B06                                          l8029 3AB2  
                                        l9101 3076                                          l8311 3CB2  
                                        l8303 3C9C                                          l8063 3B76  
                                        l8055 3B56                                          l8039 3B08  
                                        l9103 307E                                          l8321 3CD0  
                                        l8313 3CB8                                          l8305 3CA0  
                                        l8065 3B86                                          l9105 3086  
                                        l9113 309E                                          l8323 3CD6  
                                        l8315 3CBE                                          l8307 3CA6  
                                        l8331 3CEE                                          l8067 3B96  
                                        l9107 308E                                          l9115 310A  
                                        l8325 3CDC                                          l8317 3CC4  
                                        l8309 3CAC                                          l8341 5DEA  
                                        l8069 3BA6                                          l9109 3096  
                                        l8327 3CE2                                          l8319 3CCA  
                                        l8343 5DFA                                          l9071 2FA2  
                                        l8329 3CE8                                          l8345 5CBA  
                                        l8337 5DD4                                          l8601 480A  
                                        l9081 2FCA                                          l9073 2FAA  
                                        l9065 2F8E                                          l8347 5CD2  
                                        l8339 5DE4                                          l8611 4860  
                                        l8603 4824                                          l9091 304E  
                                        l9083 2FD2                                          l9075 2FB2  
                                        l9067 2F92                                          l8605 4826  
                                        l9093 3056                                          l9085 2FDA  
                                        l9077 2FBA                                          l9069 2F9A  
                                        l8607 4840                                          l9095 305E  
                                        l9079 2FC2                                          l8609 4846  
                                        l9097 3066                                          l9089 2FE2  
                                        l8571 4476                                          l9099 306E  
                                        l8821 3BB8                                          l8581 44CC  
                                        l8573 4490                                          l8831 3C3A  
                                        l8823 3BB8                                          l8591 4522  
                                        l8583 44E6                                          l8575 4492  
                                        l8841 3C52                                          l8833 3C3C  
                                        l8825 3BCA                                          l8593 47D0  
                                        l8585 44E8                                          l8577 44AC  
                                        l8851 5B3C                                          l8843 3C74  
                                        l8835 3C3E                                          l8827 3BD0  
                                        l8595 47EA                                          l8587 4502  
                                        l8579 44B4                                          l8907 61E4  
                                        l8861 5B6E                                          l8853 5B3C  
                                        l8845 3C96                                          l8837 3C40  
                                        l8829 3C28                                          l8597 47EC  
                                        l8589 4508                                          l8909 61F4  
                                        l8863 5B72                                          l8855 5B4E  
                                        l8871 5FBA                                          l8847 3C98  
                                        l8839 3C42                                          l8857 5B56  
                                        l8873 5FC4                                          l8859 5B68  
                                        l8867 5FA8                                          l8869 5FA8  
                                        STR_1 1066                                          STR_4 104F  
                                        STR_5 1055                                          STR_6 102D  
                                        STR_7 1038                                          STR_8 102D  
                                        STR_9 1048                  fp_i2_rdBlkRegCompleteHandler 0000  
                            ?_lcd_send_enable 0080                                          _LATA 000F89  
                                        _LATB 000F8A                                          _LATC 000F8B  
                                        _LATD 000F8C                                          _LATE 000F8D  
                                        u6020 3AC8                                          u6021 3AC4  
                                        u6030 3AFC                                          u6040 3B2A  
                                        u6041 3B26                                          u6050 3B3E  
                                        u6051 3B3A                                          u6035 3AF2  
                                        u6060 3B66                                          u6061 3B62  
                                        u6070 3B86                                          u6071 3B82  
                                        u6080 3B96                                          u6081 3B92  
                                        u6340 5DE4                                          u6341 5DE0  
                                        u6350 5DFA                                          u6351 5DF6  
                                        u6360 5CCA                                          u6600 47EA  
                                        u9000 282C                                          u6361 5CC6  
                                        u6601 47E6                                          u9001 2828  
                                        u6370 5CE2                                          u6610 4806  
                                        u9010 285A                                          u6371 5CDE  
                                        u6611 4802                                          u9011 2856  
                                        u6620 4824                                          u9100 2A2E  
                                        u9020 2868                                          u6621 4820  
                                        u9101 2A2A                                          u9021 2864  
                                        u6630 4840                                          u6550 4490  
                                        u9030 2996                                          u6631 483C  
                                        u6551 448C                                          u9031 2992  
                                        u8400 4E1E                                          u6640 4860  
                                        u6560 44AC                                          u9040 29B4  
                                        u8401 4E1A                                          u6641 485C  
                                        u6561 44A8                                          u9041 29B0  
                                        u9210 6050                                          u6570 44E6  
                                        u9050 29CE                                          u9211 604C  
                                        u6571 44E2                                          u9051 29CA  
                                        u8420 5F94                                          u6820 3BCA  
                                        u6580 4502                                          u9300 567C  
                                        u9140 563E                                          u9060 29E8  
                                        u9220 2AA2                                          u8421 5F90  
                                        u6821 3BC6                                          u6581 44FE  
                                        u9205 397C                                          u9301 5678  
                                        u9141 563A                                          u9061 29E4  
                                        u9221 2A9E                                          u6830 3C6E  
                                        u6590 4522                                          u9206 397E  
                                        u9150 3846                                          u9310 5F6C  
                                        u9134 5618                                          u8430 4002  
                                        u9070 29F6                                          u9230 2AEC  
                                        u6831 3C68                                          u6591 451E  
                                        u9151 3842                                          u9311 5F68  
                                        u9135 5614                                          u8431 3FFE  
                                        u9071 29F2                                          u9231 2AE8  
                                        u8600 3F3E                                          u6840 3C90  
                                        u9400 1C74                                          u9160 3868  
                                        u9320 5F42                                          u8440 4014  
                                        u9080 2A08                                          u9240 2B12  
                                        u8601 3F3A                                          u6841 3C8A  
                                        u9401 1C70                                          u9161 3864  
                                        u9321 5F3E                                          u8441 4010  
                                        u9081 2A04                                          u9241 2B0E  
                                        u6850 5B4E                                          u9410 1C8A  
                                        u9170 3878                                          u9330 5F18  
                                        u8450 403C                                          u9090 2A16  
                                        u9250 2BBA                                          u6851 5B4A  
                                        u9411 1C86                                          u9171 3874  
                                        u9331 5F14                                          u8451 4038  
                                        u9091 2A12                                          u9251 2BB6  
                                        u6860 5FBA                                          u8540 6208  
                                        u8620 3FE6                                          u9340 5FFE  
                                        u6836 3C70                                          u9500 1DC4  
                                        u9420 1C9C                                          u8700 31B2  
                                        u8460 4072                                          u6861 5FB6  
                                        u8541 6202                                          u8621 3FE2  
                                        u9341 5FFA                                          u9501 1DC0  
                                        u9421 1C98                                          u8701 31AE  
                                        u8461 406E                                          u8630 43FA  
                                        u9350 5944                                          u6846 3C92  
                                        u9510 1DE4                                          u9430 1CAC  
                                        u9270 4A24                                          u8710 31DC  
                                        u8550 592A                                          u8631 43F6  
                                        u9351 5940                                          u9511 1DE0  
                                        u9431 1CA8                                          u9271 4A20  
                                        u8711 31D8                                          u8551 5926  
                                        u9360 595A                                          u9600 1F24  
                                        u9520 1DF2                                          u9440 1CE8  
                                        u9184 38A0                                          u9280 499C  
                                        u8720 321C                                          u8560 5B9E  
                                        u8800 40C8                                          u9361 5956  
                                        u9601 1F20                                          u9521 1DEE  
                                        u9441 1CE4                                          u9185 389C  
                                        u9281 4998                                          u8721 3218  
                                        u8561 5B9A                                          u8801 40C4  
                                        u8546 620A                                          u8618 3F68  
                                        u9610 1F50                                          u9530 1E02  
                                        u9450 1CF6                                          u9370 1C10  
                                        u9194 3902                                          u9290 565A  
                                        u8730 3266                                          u8810 40EC  
                                        u8619 3F7C                                          u9611 1F4C  
                                        u9531 1DFE                                          u9451 1CF2  
                                        u9371 1C0C                                          u9195 38FE  
                                        u9291 5656                                          u8731 3262  
                                        u8811 40E8                                          u9700 2032  
                                        u9620 1F60                                          u9540 1E34  
                                        u9460 1D64                                          u9380 1C22  
                                        u8740 3434                                          u8820 4144  
                                        u9701 202E                                          u9621 1F5C  
                                        u9541 1E30                                          u9461 1D60  
                                        u9381 1C1E                                          u8741 3430  
                                        u8821 4140                                          u9710 2044  
                                        u9630 1F7C                                          u9550 1E42  
                                        u9470 1D7C                                          u9390 1C32  
                                        u8670 3132                                          u8750 3466  
                                        u8830 4152                                          u9711 2040  
                                        u9631 1F78                                          u9551 1E3E  
                                        u9471 1D76                                          u9391 1C2E  
                                        u8671 312E                                          u8751 3462  
                                        u8831 414E                                          u8648 4428  
                                        u8920 62AC                                          u9720 2054  
                                        u9640 1F8C                                          u9560 1E60  
                                        u9480 1D7E                                          u9800 214A  
                                        u8904 37B0                                          u8680 3164  
                                        u8760 34A4                                          u8840 5A60  
                                        u8649 443A                                          u8921 62A8  
                                        u9721 2050                                          u9641 1F88  
                                        u9561 1E5C                                          u9801 2146  
                                        u8905 37AC                                          u8681 3160  
                                        u8761 34A0                                          u8841 5A5C  
                                        u8658 4ACA                                          u8930 51C6  
                                        u9730 2074                                          u9650 1F9E  
                                        u9570 1E98                                          u9490 1DA6  
                                        u9810 215A                                          u8770 34CE  
                                        u8659 4ADC                                          u8931 51C2  
                                        u9731 2070                                          u9651 1F9A  
                                        u9571 1E94                                          u9491 1DA2  
                                        u9811 2156                                          u8915 382A  
                                        u8691 318E                                          u8771 34CA  
                                        u8668 5174                                          u8940 51DA  
                                        u9740 2086                                          u9660 1FB4  
                                        u9580 1EDE                                          u9900 2314  
                                        u9820 219A                                          u8916 382C  
                                        u8860 36F4                                          u8780 34FC  
                                        u8669 5186                                          u8941 51D6  
                                        u9741 2082                                          u9661 1FB0  
                                        u9581 1EDA                                          u9901 2310  
                                        u9821 2196                                          u8861 36F0  
                                        u8781 34F8                                          u9750 20A2  
                                        u9670 1FCA                                          u9590 1F14  
                                        u9910 2326                                          u9830 21DA  
                                        u8870 3716                                          u8790 3544  
                                        u9751 209E                                          u9671 1FC6  
                                        u9591 1F10                                          u9911 2322  
                                        u9831 21D6                                          u8871 3712  
                                        u8791 3540                                          u9680 1FDE  
                                        u9920 2354                                          u9840 2250  
                                        u9760 20D2                                          u8880 3726  
                                        u8960 27CA                                          u9681 1FDA  
                                        u9921 2350                                          u9841 224C  
                                        u9761 20CE                                          u8881 3722  
                                        u8961 27C4                                          u9690 1FF8  
                                        u9930 236A                                          u9850 2272  
                                        u9770 20E4                                          u8970 27CC  
                                        u9691 1FF4                                          u9931 2366  
                                        u9851 226E                                          u9771 20E0  
                                        u9940 237E                                          u9860 229C  
                                        u9780 20F4                                          u8980 27E2  
                                        u9941 237A                                          u9861 2298  
                                        u9781 20F0                                          u8981 27DE  
                                        u8958 520A                                          u9950 2398  
                                        u9870 22C0                                          u9790 2138  
                                        u8894 374E                                          u8990 2810  
                                        u8959 521C                                          u9951 2394  
                                        u9871 22BC                                          u9791 2134  
                                        u8895 374A                                          u8991 280C  
                                        u9960 23E0                                          u9880 22D6  
                                        u9961 23DC                                          u9881 22D2  
                                        u9970 2410                                          u9890 22F4  
                                        u9971 240C                                          u9891 22F0  
                                        u9980 243E                                          u9981 243A  
                                        u9990 2C56                                          u9991 2C52  
                                ?i2_I2C_DO_RX 0001                                  ?i2_I2C_DO_TX 0001  
                        ??i2_I2C_MasterIsNack 0001                       ??_wr2RegCompleteHandler 0030  
           __end_of_interrupt_INTx_clear_flag 50CE                          ?i2_I2C_MasterStartRx 0001  
                           fp_i2_I2C_DO_RESET 0000                                          abs@a 0029  
                                        _dbuf 012E                         i2_I2C_MasterOperation 5A02  
                                        _main 106A                                          _dtoa 2798  
                    ?_I2C_CallbackReturnReset 0080                                          _latx 0158  
                                ?i2_I2C_Close 0001                          ??i2_I2C_MasterSetIrq 0001  
                                        _prec 0031                                          _uart 016C  
                                        _nout 0112                                          pad@i 008D  
                                        pad@p 008B                                          fsr0h 000FEA  
                                        fsr1h 000FE2                                          indf0 000FEF  
                                        fsr2h 000FDA                                          fsr0l 000FE9  
                                        indf1 000FE7                                          indf2 000FDF  
                                        fsr1l 000FE1                                          pad@w 008F  
                                        fsr2l 000FD9                              __end_of_I2C_Open 48F2  
                    ?_gpio_pin_direction_init 0027                                          btemp 0059  
                    _RB4_InterruptHandler_low 00F4                         ?i2_I2C_MasterClearIrq 0001  
                            ?_lcd_send_string 008F                              __end_of_ADC_Init 3C9A  
                    _RB7_InterruptHandler_low 012A                                          prodh 000FF4  
                                        prodl 000FF3                                          start 000E  
                   i2I2C_MasterOperation@read 0010                               ___fldiv@new_exp 0097  
                   convert_BCD_to_int@BCD_num 002B                  fp__I2C_DO_SEND_RESTART_WRITE 0000  
                  i2rd1RegCompleteHandler@ptr 000A                  ??i2_I2C_DO_SEND_RESTART_READ 0001  
                                ___param_bank 000000                        convert_BCD_to_int@ones 002D  
                      convert_BCD_to_int@tens 002C                       _interrupt_INTx_pin_init 5C84  
                   __end_ofi2_I2C_DO_TX_EMPTY 4D90                 _I2C_DO_RX_NACK_STOP$intlevel0 623C  
                    _interrupt_INTx_edge_init 3986                                         ??_abs 002B  
                                       ??_pad 0030                              ?_I2C_MasterClose 0001  
                   ?_gpio_pin_output_low_init 0080                              __end_of_INT0_ISR 5DA4  
                 ??_INT2_set_InterruptHandler 0029                              __end_of_INT1_ISR 5D76  
                            __end_of_INT2_ISR 5D18                              ?_I2C_MasterStart 0001  
                               _I2C_DO_RX_ACK 6244                              ?_I2C_MasterWrite 0001  
                                       l11001 514E                                         l11003 5156  
                                       l11013 5166                                         l11021 3122  
                                       l11101 40C8                                         l11007 515E  
                                       l11031 3184                                         l11023 3132  
                                       l11111 4120                                         l11103 40DC  
                                       l11041 31CE                                         l11033 3188  
                                       l11025 3152                                         l11121 5A46  
                                       l11113 4126                                         l11105 40EC  
                                       l11201 2886                                         l12001 4676  
                                       l12011 32D2                                         l11051 323E  
                                       l11043 31DC                                         l11035 3194  
                                       l11027 3156                                         l11019 311E  
                                       l11123 5A60                                         l11115 4152  
                                       l11107 40F8                                         l11211 2996  
                                       l11203 2908                                         l11301 396C  
                                       l11141 3726                                         l11133 36E2  
                                       l12101 3986                                         l12021 337C  
                                       l12005 32A8                                         l11053 3250  
                                       l11045 31EE                                         l11037 31B2  
                                       l11029 3164                                         l11117 4166  
                                       l11109 410C                                         l11221 2A08  
                                       l11213 29B4                                         l11205 2910  
                                       l11303 397E                                         l11151 381A  
                                       l11143 372E                                         l11135 36E2  
                                       l12111 39C2                                         l12103 3986  
                                       l12031 3402                                         l12023 33A8  
                                       l12015 330A                                         l11047 321C  
                                       l11039 31BA                                         l11055 3256  
                                       l11071 3458                                         l11063 3420  
                                       l11231 2A42                                         l11223 2A16  
                                       l11215 29CE                                         l11207 2916  
                                       l11313 63AE                                         l11321 6040  
                                       l11305 3982                                         l11153 382C  
                                       l11145 3790                                         l11137 36F4  
                                       l12121 3A0A                                         l12113 39DE  
                                       l12105 3998                                         l12033 3408  
                                       l12017 3362                                         l12009 32C6  
                                       l11057 3266                                         l11049 323C  
                                       l11081 34C0                                         l11073 3466  
                                       l11065 3424                                         l10601 4072  
                                       l11225 2A1C                                         l11233 2A52  
                                       l11217 29E8                                         l11209 297A  
                                       l12041 5812                         ?i2_I2C_MasterSendNack 0001  
                                       l11171 51DA                                         l11315 6034  
                                       l11147 37EC                                         l11155 3830  
                                       l11139 3716                                         l12051 4FEA  
                                       l12131 3A4E                                         l12123 3A26  
                                       l12115 39E0                                         l12107 39A0  
                                       l12035 340C                                         l12027 33C2  
                                       l11059 3286                                         l11083 34CE  
                                       l11091 3534                                         l11075 3486  
                                       l11067 3434                                         l11227 2A2E  
                                       l11219 29F6                                         l11331 2AC6  
                                       l11323 2A7C                                         l12043 581A  
                                       l11173 51E0                                         l11165 51B2  
                                       l11317 6038                                         l12301 632A  
                                       l12221 17BA                                         l11149 37F0  
                                       l11501 5F2C                                         l12053 4FFC  
                                       l12133 3A6A                                         l12117 39E8  
                                       l12109 39BC                                         l12141 3A70  
                                       l12205 4BDA                                         l11261 55EE  
                                       l11421 4A12                                         l12029 33F6  
                                       l11093 3544                                         l11085 34FC  
                                       l11077 34A4                                         l11069 3454  
                                       l11229 2A3A                                         l11181 2802  
                                       l11341 2B94                                         l11333 2AEC  
                                       l11325 2AA2                                         l12045 5836  
                                       l12037 57F8                                         l13101 135E  
                                       l12311 5E16                                         l11167 51B6  
                                       l11319 603C                                         l12231 198E  
                                       l12223 1812                                         l12215 16E0  
                                       l12055 5006                                         l12127 3A2C  
                                       l12119 3A04                                         l12143 3AAE  
                                       l12207 4C18                                         l12151 5C84  
                                       l11271 5AC6                                         l11263 562A  
                                       l11423 4A24                                         l11095 3564  
                                       l11087 351C                                         l11079 34AC  
                                       l11191 285A                                         l11183 2810  
                                       l11175 2798                                         l11343 2BBA  
                                       l11351 2BEA                                         l11335 2B12  
                                       l11327 2AB0                                         l12039 580A  
                                       l13111 13D6                                         l13103 137C  
                                       l13031 106E                                         l11513 63B2  
                                       l12313 5E22                                         l12305 5DFE  
                                       l10473 4E0C                                         l11169 51C6  
                                       l11521 5944                                         l11505 5FF0  
                                       l11601 1D16                                         l12233 19F2  
                                       l12225 1878                                         l12217 16FC  
                                       l12241 1B66                                         l12081 5078  
                                       l12065 501A                                         l12049 4FEA  
                                       l12129 3A48                                         l12153 5C84  
                                       l11273 5ACC                                         l11265 562E  
                                       l11425 4A2C                                         l11441 4A00  
                                       l11433 4980                                         l11089 352E  
                                       l11193 2868                                         l11185 2812  
                                       l11177 27B8                                         l11353 2BF8  
                                       l11345 2BC8                                         l11337 2B5C  
                                       l11329 2AC2                                         l12401 4C4A  
                                       l13121 1442                                         l13113 13F4  
                                       l13105 1396                                         l13041 10C6  
                                       l13033 107C                                         l11515 63B6  
                                       l12315 5E26                                         l12307 5E02  
                                       l10475 4E1E                                         l10803 6382  
                                       l10811 623C                                         l11531 5966  
                                       l11523 5946                                         l11507 5FFE  
                                       l12251 4866                                         l11611 1D2A  
                                       l11603 1D1A                                         l12235 1A4A  
                                       l12227 18D0                                         l12243 1BBC  
                                       l12219 1754                                         l11291 3878  
                                       l11283 3834                                         l12171 46B4  
                                       l12163 4680                                         l12091 508C  
                                       l12075 505C                                         l12067 5058  
                                       l11451 565A                                         l12155 5C98  
                                       l11275 5AE0                                         l11267 563E  
                                       l11259 55E0                                         l11427 4A88  
                                       l11419 4A08                                         l11443 4A04  
                                       l11435 498A                                         l11099 40BA  
                                       l11195 286E                                         l11187 282C  
                                       l11179 27E2                                         l11347 2BDC  
                                       l12411 4C96                                         l12403 4C5A  
                                       l13123 1452                                         l13131 14AC  
                                       l13115 1412                                         l13107 13B4  
                                       l13051 1130                                         l13043 10D8  
                                       l13035 108A                                         l12309 5E12  
                                       l10581 5F9C                                         l10477 4E52  
                                       l10901 3F52                                         l10821 6276  
                                       l10813 6240                                         l10805 622A  
                                       l11533 596A                                         l11525 594A  
                                       l11517 5930                                         l11509 600E  
                                       l12261 4882                                         l12253 486A  
                                       l11701 1F90                                         l11621 1D64  
                                       l11613 1D2E                                         l11605 1D1E  
                                       l11541 1C02                                         l12237 1AAE  
                                       l12229 1936                                         l11293 3880  
                                       l11285 3834                                         l12341 57AA  
                                       l12173 46CE                                         l12181 4726  
                                       l12165 4680                                         l12093 50CA  
                                       l12077 505C                                         l11453 567C  
                                       l12157 5CA0                                         l11277 5AE8  
                                       l11429 4A8C                                         l11437 499C  
                                       l11197 2876                                         l11189 2848  
                                       l11357 2C06                                         l12421 576A  
                                       l12405 4C6A                                         l13133 14BE  
                                       l13125 1470                                         l13109 13C6  
                                       l13061 119A                                         l13053 114A  
                                       l13045 10EA                                         l13037 10A4  
                                       l13029 106A                                         l10583 5FA4  
                                       l10575 615A                                         l10735 5C22  
                                       l10743 5BEC                                         l10751 5BB6  
                                       l10831 62E6                                         l10911 3FCC  
                                       l10807 622E                                         l11527 595A  
                                       l11535 596E                                         l11519 5936  
                                       l12271 489A                                         l12263 4884  
                                       l12255 487A                                         l12431 4CBA  
                                       l11711 1FEA                                         l11703 1F9E  
                                       l11631 1DB6                                         l11623 1D80  
                                       l11615 1D32                                         l11607 1D22  
                                       l11551 1C42                                         l11543 1C10  
                                       l12239 1B06                                         l11295 38E2  
                                       l11287 3846                                         l12343 57BC  
                                       l11471 5F7C                                         l11463 5F5A  
                                       l12167 4692                                         l12079 506E  
                                       l12191 4B9E                                         l11455 5684  
                                       l11447 5642                                         l12159 5CB4  
                                       l11279 5AFE                                         l12511 56B6  
                                       l11439 49A4                                         l10591 3FF0  
                                       l11199 2880                                         l11359 2C2C  
                                       l12423 5786                                         l12415 5752  
                                       l12407 4C6E                                         l13151 1586  
                                       l13135 14CE                                         l13143 1528  
                                       l13127 148E                                         l13119 1430  
                                       l13071 1214                                         l13063 11B4  
                                       l13055 1158                                         l13047 1108  
                                       l13039 10B6                                         l10585 63AA  
                                       l10577 5F84                                         l10761 5C6C  
                                       l10737 5C36                                         l10745 5C00  
                                       l10753 5BCA                                         l10817 63A2  
                                       l10825 639A                                         l10913 3FE6  
                                       l11529 5962                                         l12281 48C2  
                                       l12273 48A2                                         l12265 4888  
                                       l12257 487E                                         l12601 5294  
                                       l12441 4D0E                                         l12433 4CCE  
                                       l11721 2054                                         l11713 1FF8  
                                       l11705 1FB4                                         l11641 1E02  
                                       l11633 1DC4                                         l11625 1D90  
                                       l11609 1D26                                         l11617 1D36  
                                       l11561 1C74                                         l11553 1C44  
                                       l11545 1C12                                         l11801 2208  
                                       l11297 393E                                         l11289 3868  
                                       l12345 57C0                                         l11473 5F80  
                                       l11465 5F5A                                         l11481 5F42  
                                       l12169 469A                                         l12193 4BB0  
                                       l11457 5694                                         l11449 5648  
                                       l12361 35CA                                         l12353 3586  
                                       l12521 56F6                                         l12513 56BA  
                                       l10593 4002                                         l10841 590A  
                                       l12417 5752                                         l12409 4C82  
                                       l13161 15D8                                         l13145 153A  
                                       l13137 14EC                                         l13081 127E  
                                       l13073 1222                                         l13065 11D2  
                                       l13057 1172                                         l13049 1116  
                                       l10587 63A6                                         l10579 5F94  
                                       l10763 5C80                                         l10739 5C4A  
                                       l10747 5C14                                         l10755 5BDE  
                                       l10771 58E0                                         l10827 62F4  
                                       l10915 3FEC                                         l10907 3F5A  
                                       l10931 43FE                                         l10923 43CE  
                                       l10819 6272                                         l12291 48E6  
                                       l12283 48CA                                         l12275 48AA  
                                       l12267 4890                                         l12259 4880  
                                       l12611 52E6                                         l12603 5294  
                                       l12435 4CE2                                         l12427 4C9C  
                                       l11731 208E                                         l11723 2074  
                                       l11715 2032                                         l11651 1E42  
                                       l11635 1DC6                                         l11627 1DA6  
                                       l11619 1D3A                                         l11571 1C9C  
                                       l11563 1C76                                         l11547 1C22  
                                       l11555 1C4C                                         l11539 1BF4  
                                       l11811 2250                                         l11803 2218  
                                       l11299 3942                                         l12347 57CC  
                                       l12339 57A4                                         l11467 5F6C  
                                       l11483 5F4A                                         l11491 5F06  
                                       l12179 46E8                                         l12195 4BBE  
                                       l11459 569A                                         l12451 4DA8  
                                       l12371 3614                                         l12363 35D2  
                                       l12355 3590                                         l12531 574C  
                                       l12523 56FC                                         l12515 56CA  
                                       l12507 569E                                         l10595 4014  
                                       l10835 58E4                                         l10843 5B76  
                                       l12419 5766                                         l13171 162A  
                                       l13163 15F6                                         l13147 154A  
                                       l13139 150A                                         l13155 15A8  
                                       l13091 12E6                                         l13083 1298  
                                       l13075 123C                                         l13067 11E0  
                                       l13059 118C                                         l10589 6388  
                                       l10909 3FBA                                         l10941 4412  
                                       l10925 43DC                                         l10781 6296  
                                       l12293 48EA                                         l12285 48D2  
                                       l12277 48B2                                         l12269 4892  
                                       l12613 52EA                                         l12605 52AA  
                                       l12437 4CF6                                         l12429 4CA2  
                                       l11733 2094                                         l11725 2078  
                                       l11709 1FDE                                         l11717 2034  
                                       l11661 1E6C                                         l11653 1E4E  
                                       l11645 1E16                                         l11637 1DD0  
                                       l11629 1DB2                                         l11581 1CD6  
                                       l11573 1CAC                                         l11565 1C7C  
                                       l11557 1C5C                                         l11549 1C32  
                                       l11821 229E                                         l11813 2264  
                                       l11805 2228                                         l11741 20B6  
                                       l11901 2D28                                         l12461 59BC  
                                       l12349 57F6                                         l11469 5F74  
                                       l11485 5F52                                         l11477 5F30  
                                       l11493 5F06                                         l12189 4B9E  
                                       l12453 4DD8                                         l12445 4D90  
                                       l12381 3686                                         l12373 3626  
                                       l12365 35EE                                         l12357 35A2  
                                       l12621 5534                                         l12525 570E  
                                       l12517 56F4                                         l12509 56A4  
                                       l12541 4F2A                                         l10597 401E  
                                       l10837 58F2                                         l10845 5B82  
                                       l13173 163A                                         l13181 167A  
                                       l13157 15B8                                         l13149 1568  
                                       l13085 12AC                                         l13077 1256  
                                       l13069 11FA                                         l13093 130E  
                                       l10863 63BA                                         l10759 5C58  
                                       l10767 58A2                                         l10775 61F8  
                                       l10927 43E2                                         l10783 629A  
                                       l12287 48DA                                         l12279 48BA  
                                       l12295 48EE                                         l12607 52BE  
                                       l12439 4CFA                                         l11735 20A2  
                                       l11727 2086                                         l11719 2044  
                                       l11671 1EDE                                         l11655 1E52  
                                       l11647 1E26                                         l11639 1DF2  
                                       l11663 1E72                                         l11591 1D02  
                                       l11583 1CE8                                         l11575 1CBC  
                                       l11567 1C8A                                         l11559 1C62  
                                       l11831 22E6                                         l11823 22AE  
                                       l11815 2272                                         l11807 2238  
                                       l11751 20F4                                         l11743 20C4  
                                       l11911 2D9E                                         l11903 2D64  
                                       l12471 5A00                                         l12463 59BC  
                                       l11487 5F56                                         l11479 5F30  
                                       l11495 5F18                                         l12455 4DE8  
                                       l12447 4D90                                         l12391 36E0  
                                       l12383 3698                                         l12375 364A  
                                       l12367 35F2                                         l12359 35A6  
                                       l12623 5542                                         l12615 5514  
                                       l12527 5712                                         l12543 4F3A  
                                       l12535 4EFE                                         l10599 403C  
                                       l10839 5904                                         l10847 5B86  
                                       l13183 168C                                         l13175 1658  
                                       l13159 15C8                                         l13095 1320  
                                       l13087 12BE                                         l13079 1264  
                                       l10769 58CC                                         l10961 4A9A  
                                       l10865 61D8                                         l10873 60B2  
                                       l10881 614C                                         l10937 440A  
                                       l10929 43FA                                         l10953 61C2  
                                       l10793 6260                                         l12289 48E2  
                                       l12609 52D2                                         l11737 20A4  
                                       l11729 208C                                         l11681 1F38  
                                       l11665 1E98                                         l11673 1EEE  
                                       l11657 1E60                                         l11649 1E34  
                                       l11593 1D06                                         l11585 1CF6  
                                       l11577 1CBE                                         l11569 1C8C  
                                       l11841 2326                                         l11833 22F4  
                                       l11825 22C0                                         l11817 227E  
                                       l11809 2240                                         l11761 2124  
                                       l11753 2104                                         l11745 20D2  
                                       l11921 2DE6                                         l11913 2DA2  
                                       l11905 2D70                                         l12465 59D0  
                                       l11497 5F20                                         l12457 4DF8  
                                       l12449 4DA4                                         l12385 36AA  
                                       l12377 3662                                         l12369 3602  
                                       l12625 5550                                         l12617 5518  
                                       l12529 5722                                         l12545 4F42  
                                       l12537 4F08                                         l10849 5B9E  
                                       l12561 5878                                         l12553 584A  
                                       l13185 169C                                         l13169 1618  
                                       l13097 1330                                         l13089 12CC  
                                       l12571 5B02                                         l10779 6334  
                                       l10963 4AA2                                         l10867 61DC  
                                       l10875 60B6                                         l10883 6150  
                                       l10947 441A                                         l10955 61C6  
                                       l10787 6284                                         l10795 6264  
                                       l12299 612A                                         l11691 1F68  
                                       l11683 1F42                                         l11675 1F14  
                                       l11667 1ECC                                         l11659 1E62  
                                       l11595 1D0A                                         l11587 1CFA  
                                       l11579 1CC6                                         l11851 2398  
                                       l11843 2354                                         l11827 22D6  
                                       l11835 2306                                         l11819 229C  
                                       l11771 215A                                         l11763 212A  
                                       l11755 2106                                         l11747 20D4  
                                       l11915 2DC6                                         l11907 2D7E  
                                       l12467 59DA                                         l11499 5F28  
                                       l12387 36BC                                         l12379 3674  
                                       l12627 555E                                         l12619 5526  
                                       l12547 4F6E                                         l12539 4F1A  
                                       l11931 53B2                                         l12395 4C1C  
                                       l12555 5854                                         l13187 16BA  
                                       l13099 1340                                         l12573 5B02  
                                       l10973 4AB4                                         l10869 61E0  
                                       l10877 60BE                                         l10885 6156  
                                       l10893 3F42                                         l10957 61CA  
                                       l10789 6288                                         l12565 5444  
                                       l11693 1F6C                                         l11685 1F50  
                                       l11677 1F24                                         l11669 1ECE  
                                       l11597 1D0E                                         l11589 1CFE  
                                       l11861 2410                                         l11853 23C2  
                                       l11837 2314                                         l11829 22DC  
                                       l11781 219A                                         l11773 216A  
                                       l11765 2138                                         l11749 20E4  
                                       l11757 210E                                         l11917 2DD6  
                                       l11909 2D9C                                         l12469 59FE  
                                       l12389 36CE                                         l12629 556A  
                                       l12549 4F72                                         l11925 536E  
                                       l12397 4C26                                         l12557 5866  
                                       l12575 5B16                                         l10799 639E  
                                       l10967 4AAA                                         l10991 61AC  
                                       l12567 5498                                         l11695 1F7C  
                                       l11687 1F52                                         l11599 1D12  
                                       l11871 2446                                         l11863 242C  
                                       l11847 237E                                         l11855 23C6  
                                       l11839 2318                                         l11783 21AA  
                                       l11791 21CA                                         l11775 216C  
                                       l11767 213A                                         l11759 211E  
                                       l11919 2DE4                                         l11951 50CE  
                                       l11927 5376                                         l12399 4C38  
                                       l12559 586A                                         l12577 5B1A  
                                       l10969 4AAE                                         l10897 3F4A  
                                       l10889 3F2A                                         l10985 624E  
                                       l10993 61B0                                         l11689 1F60  
                                       l11697 1F7E                                         l11865 2430  
                                       l11857 23E0                                         l11849 238A  
                                       l11793 21DA                                         l11785 21B2  
                                       l11769 214A                                         l11777 2174  
                                       l11881 2C56                                         l11961 5138  
                                       l11953 50D4                                         l11929 5384  
                                       l12579 5B3A                                         l10979 4ABC  
                                       l10987 6252                                         l10995 61B4  
                                       l11699 1F8C                                         l11867 243E  
                                       l11859 23F6                                         l11795 21DA  
                                       l11787 21B6                                         l11779 2184  
                                       l11891 2CD4                                         l11883 2C64  
                                       l11963 513C                                         l11955 50E6  
                                       l13651 3A90                                         l13643 542A  
                                       l11971 53EA                                         l11869 2444  
                                       l11893 2CDC                                         l11885 2CAA  
                                       l13661 3956                                         l11957 5108  
                                       l13653 503A                                         l13645 2FF8  
                                       l11973 5400                                         l13671 4AF0  
                                       l10999 514A                                         l11799 21EE  
                                       l11895 2CE8                                         l11887 2CC0  
                                       l11879 2C44                                         l13663 1B86  
                                       l11959 5110                                         l13655 50AC  
                                       l13647 30B4                                         l11967 53DA  
                                       l11991 45F2                                         l13673 3D02  
                                       l13665 519A                                         l11897 2D1A  
                                       l13657 4708                                         l13649 4BFA  
                                       l11977 5416                                         l11969 53E4  
                                       l11993 4604                                         l13667 444E  
                                       l11899 2D1C                                         l13659 3804  
                                       l11979 5440                                         l11995 460C  
                                       l11987 45D6                                         l13669 3F90  
                                       l11997 463E                                         l11989 45E0  
                                       l11999 4644                                 _EUSART_RX_ISR 63F2  
                               ___fltol@sign1 002F                        i2_I2C_MasterSendTxData 637A  
                               _EUSART_TX_ISR 63EA                               __end_of___aodiv 32A8  
                             __end_of___fladd 20B6                                         ?_main 0001  
                                       ?_dtoa 0091                               __end_of___aomod 3586  
                             __end_of___fldiv 2452                               __end_of___awdiv 430A  
                                       STR_10 102D                                         STR_11 1061  
                                       STR_12 102D                                         STR_20 1021  
                                       STR_21 1061                                         STR_13 1041  
                                       STR_14 102D                                         STR_15 105B  
                                       STR_16 1021                                         STR_17 1038  
                                       STR_18 1021                                         STR_19 1048  
                             __end_of___awmod 45D6                               __end_of___fltol 3BB8  
                                       u10000 2C64                                         u10001 2C60  
                                       u10010 2CC0                                         u10011 2CBC  
                                       u10020 2D16                                         u10021 2D12  
                                       u10030 2D60                                         u10031 2D5C  
                                       u10040 2D7E                                         u10120 50E6  
                                       u10200 3306                                         u10041 2D7A  
                                       u10121 50E2                                         u10201 3302  
                                       u10050 2D8E                                         u10130 5108  
                                       u10210 3378                                         u10051 2D8A  
                                       u10131 5104                                         u10211 3374  
                                       u10060 2D9C                                         u10300 3A26  
                                       u10220 33BE                                         u10140 45F2  
                                       u10061 2D98                                         u10301 3A22  
                                       u10221 33BA                                         u10141 45EE  
                                       u10070 2DD6                                         u10310 3A48  
                                       u10230 341E                                         u10150 4604  
                                       u10071 2DD2                                         u10311 3A44  
                                       u10231 341A                                         u10151 4600  
                                       u10080 2DE4                                         u10240 4FFC  
                                       u10320 3A6A                                         u10160 4636  
                                       u10081 2DE0                                         u10241 4FF8  
                                       u10321 3A66                                         u10410 57BC  
                                       u10250 506E                                         u10330 5C98  
                                       u10090 53D0                                         u10170 4666  
                                       u10411 57B8                                         u10251 506A  
                                       u10331 5C94                                         u10091 53CC  
                                       u10500 4CBA                                         u10420 57F2  
                                       u10340 4692                                         u10260 3998  
                                       u10180 4676                                         u10501 4CB6  
                                       u10421 57EC                                         u10341 468E  
                                       u10261 3994                                         u10181 4672  
                                       u10510 4D0E                                         u10270 39BC  
                                       u10350 4BB0                                         u10430 35A2  
                                       u10190 32C2                                         u10511 4D0A  
                                       u10271 39B8                                         u10351 4BAC  
                                       u10431 359E                                         u10191 32BE  
                                       u10167 462C                         _I2C_Read1ByteRegister 4C98  
                                       u10360 487A                                         u10280 39DE  
                                       u10520 4DA4                                         u10440 3602  
                                       u10600 5748                                         u10361 4876  
                                       u10281 39DA                                         u10521 4DA0  
                                       u10441 35FE                                         u10601 5742  
                                       u10177 465C                                         u10370 5E12  
                                       u10530 59D0                                         u10426 57F4  
                                       u10290 3A04                                         u10610 4F1A  
                                       u10450 4C38                                         u10371 5E0E  
                                       u10531 59CC                                         u10291 3A00  
                                       u10611 4F16                                         u10451 4C34  
                                       u10620 4F2A                                         u10460 4C4A  
                                       u11500 12AC                               ___awdiv@divisor 0003  
                                       u10621 4F26                                         u10461 4C46  
                                       u11501 12A8                                         u10606 574A  
                                       u10630 4F3A                                         u10470 4C5A  
                                       u11510 12BE                                         u10631 4F36  
                                       u10471 4C56                                         u11511 12BA  
                                       u10480 4C6A                                         u10640 5866  
                                       u11600 162A                                         u11520 1320  
                                       u10481 4C66                                         u10641 5862  
                                       u11601 1626                                         u11521 131C  
                                       u10730 52AA                                         u10570 56B6  
                                       u10490 5766                                         u11610 168C  
                                       u11530 1330                                         u10731 52A6  
                                       u10651 54A2                                         u10571 56B2  
                                       u10491 5762                                         u11611 1688  
                                       u11531 132C                                         u10660 5B16  
                                       u10740 52FE                                         u10580 56F0  
                                       u11540 13C6                                         u10661 5B12  
                                       u10741 52FA                                         u10581 56EA  
                                       u11541 13C2                                         u10590 570E  
                                       u11550 1442                                         u10591 570A  
                                       u11551 143E                                         u11560 14BE  
                                       u11480 10C6                                         u11561 14BA  
                                       u11481 10C2                                         u10586 56F2  
                                       u11570 153A                                         u11707 5AE2  
                                       u11571 1536                                         u11491 10D0  
                                       u11627 1096                                         u11580 15B8  
                                       u11581 15B4                                         u11637 128A  
                                       u11590 15C8                                         u11591 15C4  
                                       u11647 12D8                                         u11657 1300  
                                       u11667 13A2                                         u11677 360A  
                                       u11687 362E                                         u11697 3656  
                                       i2l315 43C2                                         i2l248 2F8A  
                                       i2l194 5512                                         i2l622 5DA2  
                                       i2l630 5D16                                         i2l369 5DD0  
                                       i2l561 2764                                         i2l626 5D74  
                                       i2l732 6128                                         i2l740 610E  
                                       i2l920 63F2                                         i2l914 63EC  
                                       i2l748 60F4                                         i2l756 60DA  
                                       i2l856 60A6                                         i2l953 4FE8  
                                       i2l971 536C                               ___awdiv@counter 0005  
                                       _RCREG 000FAE                             ?_lcd_send_command 0089  
                                vfpfcnvrt@fmt 00B7                                         _SPBRG 000FAF  
                                       _PORTA 000F80                                         _PORTB 000F81  
                                       _PORTC 000F82                                         _PORTD 000F83  
                                       _PORTE 000F84                             ??_I2C_DO_TX_EMPTY 0082  
                                       _TRISA 000F92                                         _TRISB 000F93  
                                       _TRISC 000F94                                         _TRISD 000F95  
                                       _TRISE 000F96                                         _TXREG 000FAD  
                      gpio_pin_input_init@pin 0080                        gpio_pin_input_init@ret 0084  
                          ??_lcd_send_command 0031                             __end_of_I2C_DO_RX 4476  
                           __end_of_I2C_DO_TX 3FF0                        lcd_send_string@lcd_ret 0094  
                     ??i2_I2C_DO_SEND_RESTART 0001                                         _flags 0033  
                       ??i2_I2C_MasterSendAck 0001                                         _fputc 3FF0  
                           __end_of_I2C_Close 5E2A                                         _fputs 58E4  
             INTx_select_InterruptHandler@ret 002E                            fp_i2_I2C_DO_RX_ACK 0000  
            i2I2C_MasterOperation@returnValue 0011                I2C_MasterOperation@returnValue 0087  
                                       pad@fp 0087                                         _width 0114  
                                       _portx 014E                                         _putch 63F0  
                                       dtoa@d 0093                                         dtoa@i 00B3  
                                       dtoa@n 00AB                                         dtoa@p 00A5  
                                       dtoa@s 00A9                                         _trisx 0162  
                                       dtoa@w 00A7                    ?i2_I2C_MasterEnableRestart 0001  
                     _I2C_MasterEnableRestart 63AA                           _I2C_DO_RX$intlevel0 43CE  
          _I2C_DO_SEND_RESTART_READ$intlevel0 6296                                         pclath 000FFA  
                                       pclatu 000FFB                                 ?i2_I2C_Poller 0001  
                                       tablat 000FF5                              ?_I2C_SetCallback 0027  
                       ??i2_I2C_MasterStartRx 0001           __end_ofi2_I2C_DO_SEND_RESTART_WRITE 6372  
                 i2_I2C_DO_SEND_RESTART_WRITE 636A                                   ?_MY_ADC_ISR 0001  
                I2C_SetAddressNackCallback@cb 002C                                         plusw0 000FEB  
                                       plusw2 000FDB                            _convert_BCD_to_int 2F8C  
                                       ttemp5 005A                                         ttemp6 005D  
                                       ttemp7 0061                                         status 000FD8  
                                       wtemp8 005A                               __end_of_sprintf 584A  
                           ?_I2C_DO_SEND_STOP 0001                        ?i2_I2C_MasterGetRxData 0001  
                               i2_I2C_DO_IDLE 631E                         i2_I2C_DO_RX_NACK_STOP 634A  
                               i2_I2C_DO_RCEN 6312                                  ?_buzzer_init 0085  
                          ??_I2C_DO_SEND_STOP 0027                      fp__rd1RegCompleteHandler 0000  
                             __initialization 4B18                           ?_convert_BCD_to_int 0027  
                       i2I2C_SetBuffer@buffer 0001                                  __end_of_main 16E0  
                                __end_of_dtoa 2A7C                      fp__wr1RegCompleteHandler 0000  
                   convert_BCD_to_int@int_num 0027          __end_of_INTx_select_InterruptHandler 472A  
                _INTx_select_InterruptHandler 4680                     ?_I2C_DO_SEND_RESTART_READ 0001  
                  ?_INT1_set_InterruptHandler 0027                                ?_I2C_DO_RX_ACK 0001  
                                   ??_ADC_ISR 000A                                ?_EUSART_RX_ISR 0001  
                        __end_of_APP_INT0_ISR 3F20                          __end_of_APP_INT1_ISR 3E4A  
                        __end_of_APP_INT2_ISR 5D48                                ?_EUSART_TX_ISR 0001  
             __end_ofi2_rd1RegCompleteHandler 5EAE                        ?i2_I2C_DO_ADDRESS_NACK 0001  
                                      ??_main 01B7                                        ??_dtoa 009B  
                           ?_I2C_MasterIsNack 0001                     lcd_send_nbits@pin_counter 0088  
        __end_ofi2_I2C_SetAddressNackCallback 618A                  i2_I2C_SetAddressNackCallback 6172  
                               __activetblptr 000003               __end_ofi2_wr1RegCompleteHandler 5E56  
                                   ??_RB4_ISR 0001                                 ??__Initialize 0031  
                           ?_I2C_MasterSetIrq 0001                                     ??_RB5_ISR 0001  
                                   ??_RB6_ISR 0001                                     ??_RB7_ISR 0001  
                          ??_I2C_MasterIsNack 0027                    i2wr1RegCompleteHandler@ptr 000A  
                        ??_convert_BCD_to_int 0029                   _I2C_SlaveRdInterruptHandler 0126  
                          ??_I2C_MasterSetIrq 0027                   _I2C_SlaveWrInterruptHandler 0124  
                  _EUSART_OverrunErrorHandler 0116                       lcd_send_enable@gpio_ret 0082  
             __end_of_I2C_CallbackReturnReset 62EA                                        ?_fputc 0027  
                                      ?_fputs 0080                                        _ADRESH 000FC4  
                                      _ADRESL 000FC3                              ___awdiv@dividend 0001  
                    ??i2_I2C_DO_SEND_ADR_READ 0001                 I2C_SetDataCompleteCallback@cb 002C  
             i2I2C_SetDataCompleteCallback@cb 0006                                        ?_putch 0001  
                              ??i2_I2C_Poller 0010                     _INT2_set_InterruptHandler 5F06  
                           _EUSART_ASYNC_Init 59BC                                  ??_I2C_Poller 0030  
                      lcd_send_string_pos@lcd 0097                        _lcd_send_char_data_pos 4EFE  
                                      i2l1010 5EAC                           _I2C_DO_TX$intlevel0 3F2A  
                                      i2l1013 5E80                                        i2l1022 5AC4  
                                      i2l1016 5E54                                        i2l1019 5ED8  
                                      i2l1212 606E                                        i2l1301 6310  
                                      i2l1206 4EFC                                        i2l1222 62CC  
                                      i2l1231 4244                                        i2l1216 5290  
                                      i2l1225 6304                                        i2l1331 63E4  
                                      i2l1315 63D0                                        i2l1219 6328  
                                      i2l1307 55DE                                        i2l1163 497E  
                                      i2l1340 63D8                                        i2l1228 420C  
                                      i2l1244 4760                                        i2l1245 47CE  
                                      i2l1173 5A44                                        i2l1318 63CC  
                                      i2l1334 63C4                                        i2l1262 4D8E  
                                      i2l1510 3E48                                        i2l1167 5F04  
                                      i2l1352 63D4                                        i2l1256 631C  
                                      i2l1280 6378                                        i2l1328 6032  
                                      i2l1361 6398                                        i2l1337 6380  
                                      i2l1186 5FEE                                        i2l1346 63C8  
                                      i2l1514 5D46                                        i2l1355 621E  
                                      i2l1283 6370                                        i2l1179 6340  
                                      i2l1195 6188                                        i2l1292 6358  
                                      i2l1517 608A                                        i2l1349 63DC  
                                      i2l1189 61A0                        lcd_send_string_pos@row 0099  
                                      i2l1358 6392                                        i2l1382 63C0  
                                      i2l1286 6368                                        i2l1295 6350  
                                      i2l1376 63E0                                        i2l1289 6360  
                                      i2l1385 62AE                                        i2l1298 6348  
                                      i2l1379 63E8                                        i2l1389 62BC  
                                      i2l1493 3F1E                        lcd_send_string_pos@str 009B  
                      lcd_send_number@counter 003E                                        i2l1791 45D4  
                      ?i2_I2C_MasterOperation 0001                                        i2l1778 4308  
                                      i2l8001 4544                                        i2l8011 457C  
                                      i2l8003 4552                                        i2l8013 458A  
                                      i2l8021 45B4                                        i2l8005 455A  
                                      i2l8023 45C4                                        i2l8015 45A0  
                                      i2l8007 456C                                        i2l7311 63E2  
                                      i2l7303 6012                                        i2l8025 45CC  
                                      i2l8017 45A8                                        i2l8009 4574  
                                      i2l7313 63DE                                        i2l7305 6020  
                                      i2l8019 45AE                                        i2l7307 6030  
                                      i2l6621 6322                                        i2l7175 63DA  
                                      i2l6623 6326                                        i2l6711 631A  
                                      i2l9201 63EA                                        i2l8251 2E16  
                                      i2l8243 2DFA                                        i2l6619 631E  
                                      i2l6707 6312                                        i2l9141 5DB8  
                                      i2l9205 63F2                                        i2l8261 2E3E  
                                      i2l8253 2E1E                                        i2l8245 2DFE  
                                      i2l6709 6316                                        i2l8351 430A  
                                      i2l8271 2EC4                                        i2l8255 2E26  
                                      i2l8247 2E06                                        i2l7471 5EDE  
                                      i2l8361 4374                                        i2l8353 431C  
                                      i2l9137 5DA4                                        i2l8281 2EEC  
                                      i2l8273 2ECC                                        i2l8257 2E2E  
                                      i2l8249 2E0E                                        i2l7473 5EEE  
                                      i2l6745 6306                                        i2l9161 6112  
                                      i2l8363 438E                                        i2l8355 432E  
                                      i2l9139 5DA6                                        i2l8283 2EF4  
                                      i2l8275 2ED4                                        i2l8259 2E36  
                                      i2l8291 2F04                                        i2l8267 2E46  
                                      i2l7475 5EF2                                        i2l6579 63C6  
                                      i2l6587 63BE                                        i2l6747 630A  
                                      i2l9163 6114                                        i2l9171 60F8  
                                      i2l8365 43C2                                        i2l8357 4332  
                                      i2l8349 430A                                        i2l8621 60A2  
                                      i2l8613 608E                                        i2l8285 2EFC  
                                      i2l8277 2EDC                                        i2l8293 2F7A  
                                      i2l8269 2EBC                                        i2l6773 63E6  
                                      i2l7477 5EFE                                        i2l7469 5EDA  
                                      i2l6749 630E                                        i2l9173 60FA  
                                      i2l9181 60DE                                        i2l8359 434C  
                                      i2l8623 60A6                                        i2l8615 608E  
                                      i2l8279 2EE4                                        i2l7479 5F02  
                                      i2l9167 6128                                        i2l9183 60E0  
                                      i2l9191 60C4                                        i2l8617 609C  
                                      i2l9177 610E                                        i2l9193 60C6  
                                      i2l8619 609E                                        i2l9187 60F4  
                                      i2l9197 60DA                                        i2l7951 424A  
                                      i2l7961 427A                                        i2l7953 4258  
                                      i2l7971 42A8                                        i2l7963 427E  
                                      i2l7955 4260                                        i2l7981 42DC  
                                      i2l7973 42B6                                        i2l7965 4286  
                                      i2l7957 4264                                        i2l7949 4246  
                                      i2l7983 42E2                                        i2l7975 42BC  
                                      i2l7967 4298                                        i2l7959 4272  
                                      i2l8951 3D9C                                        i2l8943 3D72  
                                      i2l7977 42D2                                        i2l7969 42A0  
                                      i2l7985 42E8                                        i2l7993 4526  
                                      i2l8961 3DDA                                        i2l8953 3DAE  
                                      i2l8945 3D82                                        i2l7987 42F8  
                                      i2l7979 42DA                                        i2l7995 452A  
                                      i2l8971 3E08                                        i2l8963 3DDC  
                                      i2l8955 3DB0                                        i2l8947 3D84  
                                      i2l7989 4300                                        i2l7997 4538  
                                      i2l8981 3E44                                        i2l8973 3E18  
                                      i2l8965 3DEC                                        i2l8957 3DC0  
                                      i2l8949 3D94                                        i2l7999 4540  
                                      i2l8991 5D3A                                        i2l8983 5D18  
                                      i2l8975 3E20                                        i2l8967 3DF4  
                                      i2l8959 3DC8             __end_ofi2_I2C_MasterEnableRestart 63DA  
                                      i2l8993 5D3E                                        i2l8985 5D1E  
                                      i2l8977 3E32                                        i2l8969 3E06  
                                      i2l8995 5D42                                        i2l8987 5D20  
                                      i2l8979 3E34                                        i2l8997 6070  
                                      i2l8989 5D32                                        i2l8999 6084  
                      ??i2_I2C_MasterClearIrq 0001                                        _SPBRGH 000FB0  
                      _I2C_DO_RESET$intlevel0 61AC                              buzzer_off@buzzer 0080  
                          ?_EUSART_ASYNC_Init 00BB                                ?i2_I2C_DO_IDLE 0001  
                                      _SSPADD 000FC8                                ?i2_I2C_DO_RCEN 0001  
                                      _SSPBUF 000FC9   __end_ofi2_RealTimeClockDS1307_Get_Date_Time 5514  
   __end_of_RealTimeClockDS1307_Get_Date_Time 54AC           ??_RealTimeClockDS1307_Get_Date_Time 0031  
       ??i2_RealTimeClockDS1307_Get_Date_Time 001B          ?i2_RealTimeClockDS1307_Get_Date_Time 0015  
          ?_RealTimeClockDS1307_Get_Date_Time 008A           i2_RealTimeClockDS1307_Get_Date_Time 54AC  
           _RealTimeClockDS1307_Get_Date_Time 5444                              __end_of___xxtofl 2DF8  
             _I2C_DO_SEND_ADR_WRITE$intlevel0 614C                     ??_interrupt_INTx_pin_init 0031  
                         _I2C_MasterGetRxData 639E                                  vfprintf@cfmt 00C5  
                         ??_EUSART_ASYNC_Init 0031                              __end_of_lcd_init 36E2  
                  _I2C_DO_SEND_STOP$intlevel0 6260                                     ??___aodiv 0027  
                                   ??___fladd 00A7                                     ??___aomod 0027  
                                   ??___fldiv 008E                                 _I2C_MasterFsm 51B2  
                                   ??___awdiv 0005                                     ??___awmod 0005  
                                   ??___fltol 002B                     interrupt_INTx_disable@ret 002B  
                      ??i2_I2C_MasterSendNack 0001                                        _memset 32A8  
           __end_of_INT1_set_InterruptHandler 5F5A                                        _buzzer 00FE  
                                      clear_0 4B76                                        clear_1 4B82  
                                      clear_2 4B8E                             I2C_SetCallback@cb 0027  
               ?_INTx_select_InterruptHandler 002A                              ___awdiv@quotient 0007  
                     fp__I2C_DO_SEND_ADR_READ 0000                               ___awmod@divisor 0003  
                     lcd_send_string@gpio_ret 0093                        ?_I2C_Read1ByteRegister 0030  
                                      isa$std 000001                               ___awmod@counter 0005  
                                      pad@buf 0089                                 _I2C_SetBuffer 5F84  
                                      dtoa@fp 0091                            __end_of_I2C_Poller 6052  
                                      _strlen 5B76                  __end_of_I2C_MasterDisableIrq 63B6  
                  ??i2_I2C_DO_RX_NACK_RESTART 0001                   __end_of_lcd_send_number_pos 5898  
                                      fputc@c 0027                _I2C_DO_SEND_ADR_READ$intlevel0 60B2  
                                      fputs@c 0084                           _I2C_DO_ADDRESS_NACK 5140  
                                      fputs@i 0085                                  __pdataCOMRAM 004B  
                                      fputs@s 0080                          ?_I2C_MasterGetRxData 0001  
                                   ?_I2C_Open 0001            __end_of_I2C_SetAddressNackCallback 6142  
               ?i2_I2C_SetAddressNackCallback 0006                    _I2C_SetAddressNackCallback 612A  
                                   ?_ADC_Init 002A                                  __mediumconst 0000  
                                      tblptrh 000FF7                                        tblptrl 000FF6  
                                      tblptru 000FF8                     ??_I2C_MasterEnableRestart 0027  
                   __end_of_EUSART_ASYNC_Init 5A02                                        putch@c 0001  
                            __end_of_vfprintf 53DA     INT2_set_InterruptHandler@InterruptHandler 0027  
   INT1_set_InterruptHandler@InterruptHandler 0027     INT0_set_InterruptHandler@InterruptHandler 0027  
                                   ??_sprintf 0031                  __end_of_EUSART_ASYNC_RX_Init 4864  
                __end_of_EUSART_ASYNC_TX_Init 4526                           __end_of__Initialize 557A  
                __end_of_select_result_format 5DFE                       ?i2_I2C_MasterDisableIrq 0001  
                                ___xxtofl@arg 0082                                i2_I2C_DO_RESET 6306  
                                ___xxtofl@exp 0081                                  ___xxtofl@val 0027  
                     _convert_uint8_to_string 574E                                    __accesstop 0080  
                     __end_of__initialization 4B94                        ?i2_I2C_DO_RX_NACK_STOP 0001  
                            i2_I2C_MasterOpen 6012                        lcd_send_number_pos@lcd 01B0  
                                   ?_INT0_ISR 0001                              i2_I2C_MasterStop 63D2  
                                   ?_INT1_ISR 0001                 _I2C_DO_ADDRESS_NACK$intlevel0 514A  
                                   ?_INT2_ISR 0001                        lcd_send_number_pos@num 01B4  
                      lcd_send_number_pos@row 01B2                           _I2C_MasterOperation 592C  
           interrupt_INTx_pin_init@_interrupt 0085                             ??i2_I2C_DO_RX_ACK 0001  
                               ___rparam_used 000001                          ?_I2C_DO_ADDRESS_NACK 0001  
           _rdBlkRegCompleteHandler$intlevel0 58A2                          lcd_set_curser@column 0092  
                                  ___fltol@f1 0027            __end_ofi2_I2C_DO_SEND_RESTART_READ 637A  
                  i2_I2C_DO_SEND_RESTART_READ 6372                         _interrupt_INTx_enable 4B9E  
                  convert_uint8_to_string@str 01AE                    ?i2_rdBlkRegCompleteHandler 000A  
                     _rdBlkRegCompleteHandler 5898                    fp__rdBlkRegCompleteHandler 0000  
                           RB5_ISR@RB5_Source 0001              __end_ofi2_I2C_MasterWaitForEvent 62BE  
                              __pcstackCOMRAM 0001                                ?_I2C_MasterFsm 0001  
                             ??_I2C_DO_RX_ACK 0027                                  __pidataBANK0 63EE  
                                __pidataBANK1 5974                     ?i2_I2C_CallbackReturnStop 000A  
                      _I2C_CallbackReturnStop 62EA                               ??_EUSART_RX_ISR 0001  
                  i2I2C_Read1ByteRegister@reg 0012                               ??_EUSART_TX_ISR 0001  
                            ??_lcd_send_nbits 0083                                 __end_of_fputc 40BA  
                               __end_of_fputs 592C              __end_ofi2_I2C_Write1ByteRegister 536E  
                               __end_of_putch 63F2                                ?_I2C_SetBuffer 0027  
                     ?_I2C_MasterWaitForEvent 0001                       i2_I2C_Read1ByteRegister 4F76  
                 __end_of_lcd_send_string_pos 4C98                   lcd_send_string_pos@gpio_ret 009D  
               __end_of_I2C_DO_SEND_ADR_WRITE 615A                    ?_I2C_DO_SEND_RESTART_WRITE 0001  
                        ?_I2C_MasterOperation 0001                      ??_interrupt_INTx_disable 0029  
                            ??_lcd_set_curser 0093                       _ADC_GetConversionResult 430A  
                       ??_I2C_MasterGetRxData 0027               __end_of_interrupt_INTx_pin_init 5CB8  
                     ?_I2C_Write1ByteRegister 0088                                  ??i2_I2C_Open 0001  
                                  ??_I2C_Open 0027                                    ??_ADC_Init 002C  
                        ADC_SelectChannel@ret 002E                    __end_of_I2C_MasterClearIrq 63BE  
                    interrupt_INTx_enable@ret 002B                __end_ofi2_I2C_MasterDisableIrq 63E2  
                      __end_ofi2_I2C_DO_RESET 6312                                       ??_fputc 002B  
                                     ??_fputs 0030                                       ??_putch 0027  
                           _I2C_MasterSendAck 6382                               ??i2_I2C_DO_IDLE 0001  
                      ADC_StartConversion@ret 0029                                    __pbssBANK0 00C8  
                                  __pbssBANK1 0100                               ??i2_I2C_DO_RCEN 0001  
                       lcd_send_char_data@lcd 0089                                 ??_I2C_DO_IDLE 0027  
                       lcd_send_char_data@ret 008E                                 ??_I2C_DO_RCEN 0027  
               __end_of_rd2RegCompleteHandler 5C18                            lcd_send_enable@lcd 0080  
                __end_of_I2C_MasterSendTxData 633A                            ?_I2C_MasterSendAck 0001  
                       _INT0_InterruptHandler 0037                                    ??_INT0_ISR 001B  
                           _I2C_MasterStartRx 63A2                                    ??_INT1_ISR 001B  
                                  ??_INT2_ISR 001B                  fp_i2_I2C_CallbackReturnReset 0000  
                interrupt_INTx_clear_flag@ret 002B                    ??_interrupt_INTx_edge_init 0029  
                       ??_I2C_DO_ADDRESS_NACK 0082                 __end_of_wr2RegCompleteHandler 5C84  
                          _lcd_send_char_data 4980                           _I2C_DO_RX_NACK_STOP 6232  
                       _rd1RegCompleteHandler 5C18                            ?_I2C_MasterStartRx 0001  
                  __end_of_I2C_MasterSendNack 638E                      ?i2_I2C_DO_SEND_ADR_WRITE 0001  
                       _wr1RegCompleteHandler 5BAC               _rd1RegCompleteHandler$intlevel0 5C22  
             _wr1RegCompleteHandler$intlevel0 5BB6                           ??_I2C_MasterSendAck 0027  
                    rd1RegCompleteHandler@ptr 0080             __end_ofi2_rdBlkRegCompleteHandler 5AC6  
                          __end_ofi2_I2C_Open 4980                   __end_of_I2C_DO_SEND_RESTART 627A  
                             _I2C_DO_TX_EMPTY 4A90                           I2C_SetBuffer@buffer 0027  
                INT0_set_InterruptHandler@ret 0029                        interrupt_INTx_init@ret 008A  
                             _minutes_counter 0049                           ?_lcd_send_char_data 0089  
                     ?i2_I2C_MasterSendTxData 0001                __end_of_I2C_MasterWaitForEvent 62AE  
                         ??_I2C_MasterStartRx 0027                                       _ADC_ISR 5DA4  
                        __end_ofi2_I2C_Poller 6070                   EUSART_ASYNC_TX_Init@_eusart 0027  
                                     ?_memset 0027                       _I2C_DO_RX_ACK$intlevel0 624E  
                       ??_I2C_MasterOperation 0030                I2C_SetDataCompleteCallback@ptr 002E  
            i2I2C_SetDataCompleteCallback@ptr 0008                __end_of_I2C_Write1ByteRegister 5300  
                                     ?_strlen 0027                             RB7_ISR@RB7_Source 0001  
                    ??_I2C_DO_RX_NACK_RESTART 0027                fp_i2_I2C_DO_SEND_RESTART_WRITE 0000  
           __end_of_I2C_DO_SEND_RESTART_WRITE 628C                          ?_I2C_DO_RX_NACK_STOP 0001  
                                     i2l11131 605E                                       i2l11125 6052  
                                     i2l10503 5EAE                                       i2l10511 5A86  
                                     i2l11127 6056                                       i2l10505 5EC2  
                                     i2l10513 5AAE                                       i2l10521 6376  
                                     i2l11129 605A                                       i2l11241 5A18  
                                     i2l11401 4968                                       i2l10451 4E86  
                                     i2l10507 5ED6                                       i2l10515 5AC2  
                                     i2l10531 6362                                       i2l11251 5A3A  
                                     i2l11243 5A1A                                       i2l11403 4970  
                                     i2l10461 5FE4                                       i2l10453 4E98  
                                     i2l10605 62BE                                       i2l10613 62F8  
                                     i2l10621 4182                                       i2l10525 636A  
                                     i2l10533 6366                                       i2l11253 5A3E  
                                     i2l11245 5A1E                                       i2l11237 5A04  
                                     i2l11413 633A                                       i2l11405 4974  
                                     i2l10463 5FEC                                       i2l10455 4ECC  
                                     i2l10471 6394                                       i2l10703 4D36  
                                     i2l10607 62C2                                       i2l10615 62FC  
                                     i2l10519 6372                                       i2l10527 636E  
                                     i2l10711 6356                                       i2l10543 634A  
                                     i2l10551 6346                                       i2l11247 5A2E  
                                     i2l11255 5A42                                       i2l11239 5A08  
                                     i2l11407 4978                                       i2l10457 5FCC  
                                     i2l10465 618A                                       i2l10481 5E96  
                                     i2l10609 62CA                                       i2l10617 6302  
                                     i2l10641 4210                                       i2l10633 41AA  
                                     i2l10625 419A                                       i2l10537 635A  
                                     i2l10545 634E                                       i2l11249 5A36  
                                     i2l11409 497C                                       i2l11417 6172  
                                     i2l12321 5500                                       i2l10467 63D6  
                                     i2l10459 5FDC                                       i2l10483 5EAA  
                                     i2l10491 5E7E                                       i2l10555 63CE  
                                     i2l10563 63C2                                       i2l10643 4222  
                                     i2l10539 635E                                       i2l10723 558E  
                                     i2l10715 557A                                       i2l11371 490C  
                                     i2l12331 532C                                       i2l10469 63D2  
                                     i2l10573 638E                                       i2l10645 423C  
                                     i2l10629 41A2                                       i2l10661 4756  
                                     i2l10709 6352                                       i2l10549 6342  
                                     i2l10717 557E                                       i2l11381 491E  
                                     i2l11373 490E                                       i2l11365 48F4  
                                     i2l12333 5340                                       i2l12325 5302  
                                     i2l12501 3EF4                                       i2l10479 5E82  
                                     i2l10487 5E56                                       i2l10495 5E2A  
                                     i2l10559 63CA                                       i2l10567 637C  
                                     i2l10647 4242                                       i2l10639 41B2  
                                     i2l10663 475A                                       i2l10655 472A  
                                     i2l10719 5586                                       i2l11391 4940  
                                     i2l11383 4920                                       i2l11375 4910  
                                     i2l11367 48F8                                       i2l12335 5354  
                                     i2l12327 5302                                       i2l12319 54AC  
                                     i2l12503 3F02                                       i2l10489 5E6A  
                                     i2l10497 5E3E                                       i2l10569 620C  
                                     i2l10673 476E                                       i2l10657 4738  
                                     i2l10729 5596                                       i2l11393 4948  
                                     i2l11385 4928                                       i2l11377 4912  
                                     i2l11369 4908                                       i2l12337 5358  
                                     i2l12329 5318                                       i2l12505 3F10  
                                     i2l10499 5E52                                       i2l10691 4D24  
                                     i2l10659 473E                                       i2l11395 4950  
                                     i2l11387 4930                                       i2l11379 4916  
                                     i2l10693 4D28                                       i2l10685 4D14  
                                     i2l10669 4766                                       i2l10861 5250  
                                     i2l10853 5222                                       i2l11397 4958  
                                     i2l11389 4938                                       i2l10687 4D1C  
                                     i2l10679 4776                                       i2l10855 5226  
                                     i2l11399 4960                                       i2l10697 4D2E  
                                     i2l10857 5236                                       i2l12481 3E6E  
                                     i2l12801 257A                                       i2l10859 524A  
                                     i2l12491 3EAE                                       i2l12483 3E80  
                                     i2l12475 3E4A                                       i2l12803 2588  
                                     i2l12811 25B0                                       _RB4_ISR 6110  
                                     i2l11941 4FBA                                       i2l11933 4F78  
                                     i2l12493 3EBC                                       i2l12485 3E84  
                                     i2l12477 3E5A                                       i2l12821 25EE  
                                     i2l12813 25BE                                       i2l12805 2596  
                                     i2l11943 4FCE                                       i2l11935 4F7C  
                                     i2l12495 3ECA                                       i2l12487 3E92  
                                     i2l12479 3E6C                                       i2l12583 5D76  
                                     i2l12591 5D4A                                       i2l12831 262E  
                                     i2l12815 25CC                                       i2l12823 25F4  
                                     i2l12807 25A6                                       i2l11945 4FD2  
                                     i2l11937 4F92                                       i2l12497 3ED8  
                                     i2l12489 3EA0                                       i2l12585 5D78  
                                     i2l12593 5D5C                                       i2l12841 2662  
                                     i2l12833 2632                                       i2l12825 2602  
                                     i2l12817 25DA                                       i2l12809 25AA  
                                     i2l12761 24A0                                       i2l11947 4FE6  
                                     i2l11939 4FA6                                       i2l12499 3EE6  
                                     i2l12587 5D8A                                       i2l12595 5CE8  
                                     i2l12851 2698                                       i2l12843 2672  
                                     i2l12827 2610                                       i2l12835 2638  
                                     i2l12819 25EA                                       i2l12771 24D2  
                                     i2l12763 24A4                                       i2l12589 5D48  
                                     i2l12597 5CEA                                       i2l12861 26CE  
                                     i2l12853 26A6                                       i2l12845 2676  
                                     i2l12837 2646                                       i2l12829 261E  
                                     i2l12781 250E                                       i2l12773 24E0  
                                     i2l12765 24B2                                       i2l12757 2484  
                                     i2l12599 5CFE                                       i2l12863 26DC  
                                     i2l12871 2704                                       i2l12855 26B6  
                                     i2l12839 2654                                       i2l12847 267C  
                                     i2l12791 2544                                       i2l12783 251E  
                                     i2l12775 24E4                                       i2l12767 24C0  
                                     i2l12759 2492                                       i2l13681 4D68  
                                     i2l12881 2740                                       i2l12873 2712  
                                     i2l12865 26EA                                       i2l12857 26BA  
                                     i2l12849 268A                                       i2l12793 2552  
                                     i2l12785 2522                                       i2l12777 24F2  
                                     i2l12769 24C4                                       i2l13683 2E66  
                                     i2l13675 55C8                                       i2l12883 2744  
                                     i2l12875 2720                                       i2l12867 26FA  
                                     i2l12859 26C0                                       i2l12795 2562  
                                     i2l12779 2500                                       i2l12787 2528  
                                     _RB5_ISR 60F6                                       i2l13685 2F24  
                                     i2l13677 47A8                                       i2l12885 2752  
                                     i2l12877 2724                                       i2l12869 26FE  
                                     i2l12797 2566                                       i2l12789 2536  
                                     i2l13679 41E6                                       i2l12887 2760  
                                     i2l12879 2732                                       i2l12799 256C  
      INTx_select_InterruptHandler@_interrupt 002A                                       _RB6_ISR 60DC  
                                     _RB7_ISR 60C2                                     ?___xxtofl 0027  
                            lcd_send_number@i 003F                                   __Initialize 5514  
              ??_INTx_select_InterruptHandler 002C                             buzzer_on@gpio_ret 0082  
                                     _RTC1307 0041                      ?i2_rd2RegCompleteHandler 000A  
                             _seconds_counter 00FC                     __end_of_I2C_MasterSendAck 6388  
                   _RB6_InterruptHandler_high 00EE                      ?i2_wr2RegCompleteHandler 000A  
                        ??_lcd_send_char_data 0031                     ??_convert_uint8_to_string 0031  
                                     _SSPCON1 000FC6                                       _SSPCON2 000FC5  
                             ?i2_I2C_DO_RESET 0001           _I2C_DO_SEND_RESTART_WRITE$intlevel0 6284  
                                     _MY_INT0 018F                                     ?_lcd_init 008F  
                                     _MY_INT1 0189                                       _MY_INT2 0183  
                                     _SSPSTAT 000FC7                ??i2_I2C_SetAddressNackCallback 000A  
                     ??i2_I2C_MasterGetRxData 0001                     __end_of_I2C_MasterStartRx 63A6  
                        I2C_Close@returnValue 0027                  ?_I2C_SetDataCompleteCallback 002C  
               __end_ofi2_I2C_DO_SEND_RESTART 636A                   ??i2_I2C_MasterEnableRestart 0001  
                                   _I2C_DO_RX 43C4                                     _I2C_DO_TX 3F20  
                           ??i2_I2C_MasterFsm 000E              __end_of_I2C_DO_SEND_RESTART_READ 629E  
                                ??_MY_ADC_ISR 000A                  I2C_Read1ByteRegister@address 0088  
                                _APP_INT0_ISR 3E4A                                  _APP_INT1_ISR 3D72  
                                _APP_INT2_ISR 5D18                                     _I2C_Close 5DFE  
                  interrupt_INTx_pin_init@ret 0087                     ??_rdBlkRegCompleteHandler 0030  
                      ?_interrupt_INTx_enable 0027                    ?_interrupt_INTx_clear_flag 0027  
                    _RB6_InterruptHandler_low 00EC                 lcd_send_nbits@data_or_command 0082  
                        _I2C_MasterDisableIrq 63B2                             ??i2_I2C_SetBuffer 0005  
                             ??_I2C_MasterFsm 0084                                     _ALARM_RTC 0100  
                        _ADC_InterruptHandler 0039                                       __Hparam 0000  
                                ADC_Init@_adc 002A                                       __Lparam 0000  
                         __end_of_I2C_DO_IDLE 61E4                    i2rd2RegCompleteHandler@ptr 000A  
              __end_ofi2_I2C_MasterSendTxData 6382                           __end_of_I2C_DO_RCEN 61CE  
                                     ___aodiv 311E                     ??i2_I2C_Read1ByteRegister 0013  
                                     ___fladd 1BF4                                       ___aomod 3420  
                                     ___fldiv 20B6                                       ___awdiv 4246  
                                     ___awmod 4526                                       ___fltol 3AB2  
                     ??i2_I2C_DO_ADDRESS_NACK 000C                               ??_I2C_SetBuffer 002B  
                      i2_I2C_DO_SEND_ADR_READ 62BE             _EUSART_Baud_Rate_Calculation$4290 00B7  
                                   ?_vfprintf 0195                       I2C_SetBuffer@bufferSize 0029  
                                __psmallconst 1000                   ??_INT1_set_InterruptHandler 0029  
              i2I2C_SetAddressNackCallback@cb 0006                          _EUSART_ASYNC_RX_Init 47D0  
                   ??_ADC_GetConversionResult 0005                             buzzer_init@buzzer 0085  
                              _I2C_MasterOpen 5FF0                          _EUSART_ASYNC_TX_Init 4476  
                    i2_I2C_MasterWaitForEvent 62AE                                       __pcinit 4B18  
                              _I2C_MasterStop 63A6                                _I2C_Initialize 61E4  
               gpio_pin_logic_write@pin_logic 0029                          _select_result_format 5DD2  
                                     __ramtop 1000                         i2I2C_Open@returnValue 0002  
                                     __ptext0 106A                                       __ptext1 584A  
                                     __ptext2 4C1C                                       __ptext3 45D6  
                                     __ptext4 574E                                       __ptext5 57F8  
                                     __ptext6 536E                                       __ptext7 2A7C  
                                     __ptext8 2798                                       __ptext9 40BA  
                       ??_I2C_DO_RX_NACK_STOP 0027                   __end_ofi2_I2C_MasterSendAck 6394  
                          __end_of_MY_ADC_ISR 608C                      i2_I2C_Write1ByteRegister 5300  
                         _gpio_pin_input_init 5642                                    ??___xxtofl 002B  
                            ___awmod@dividend 0001                                    _buzzer_off 56F6  
                          I2C_SetCallback@idx 002B               i2I2C_CallbackReturnReset@funPtr 000A  
               I2C_CallbackReturnReset@funPtr 0080                            I2C_SetCallback@ptr 0029  
                    wr1RegCompleteHandler@ptr 0080                   __end_ofi2_I2C_MasterStartRx 63CA  
                   I2C_Write1ByteRegister@reg 0088                      fp__I2C_DO_SEND_ADR_WRITE 0000  
                  __end_of_convert_int_to_BCD 2F8C                       ?_lcd_send_char_data_pos 0097  
  EUSART_Baud_Rate_Calculation@Baud_Rate_Temp 00B3                             __end_of_buzzer_on 56F6  
   __end_of_EUSART_ASYNC_WriteByteNonBlocking 60A8           ??_EUSART_ASYNC_WriteByteNonBlocking 0001  
          ?_EUSART_ASYNC_WriteByteNonBlocking 0001             _EUSART_ASYNC_WriteByteNonBlocking 608C  
                     ??i2_I2C_MasterOperation 0010                          fp_i2_I2C_DO_TX_EMPTY 0000  
                                     _sprintf 57F8                                    ??_lcd_init 0091  
                             lcd_init@lcd_ret 0095              _I2C_CallbackReturnStop$intlevel0 62F4  
                              __pintcode_body 2452                          end_of_initialization 4B94  
                i2rdBlkRegCompleteHandler@ptr 000A                                    ?_I2C_DO_RX 0001  
                                  ?_I2C_DO_TX 0001                                       fputc@fp 0029  
             __end_ofi2_I2C_DO_SEND_ADR_WRITE 6306                                       memset@c 0029  
                                     memset@k 0080                                       memset@n 002B  
                                     memset@s 0082                                    ?_I2C_Close 0001  
                                     int_func 2452                                       fputs@fp 0082  
                      ?_rd1RegCompleteHandler 0080                       __end_of_I2C_DO_TX_EMPTY 4B18  
                                   i2u1010_40 4F92                                     i2u1010_41 4F8E  
                                   i2u1011_40 4FE6                                     i2u1011_41 4FE2  
                                   i2u1100_40 2544                                     i2u1100_41 2540  
                                   i2u1101_40 2552                                     i2u1101_41 254E  
                                   i2u1110_40 25EA                                     i2u1102_40 2562  
                                   i2u1110_41 25E6                                     i2u1102_41 255E  
                                   i2u1111_40 2602                                     i2u1103_40 257A  
                                   i2u1111_41 25FE                                     i2u1103_41 2576  
                                   i2u1040_40 536C                                     i2u1120_40 2698  
                                   i2u1112_40 2610                                     i2u1104_40 2588  
                                   i2u1040_41 5368                                     i2u1120_41 2694  
                                   i2u1112_41 260C                                     i2u1104_41 2584  
                                   i2u1121_40 26A6                                     i2u1113_40 261E  
                                   i2u1105_40 2596                                     i2u1121_41 26A2  
                                   i2u1113_41 261A                                     i2u1105_41 2592  
                                   i2u1130_40 2740                                     i2u1122_40 26B6  
                                   i2u1114_40 262E                                     i2u1106_40 25A6  
                                   i2u1130_41 273C                                     i2u1122_41 26B2  
                                   i2u1114_41 262A                                     i2u1106_41 25A2  
                                   i2u1131_40 2752                                     i2u1123_40 26CE  
                                   i2u1115_40 2646                                     i2u1107_40 25BE  
                                   i2u1131_41 274E                                     i2u1123_41 26CA  
                                   i2u1115_41 2642                                     i2u1107_41 25BA  
                                   i2u1132_40 2760                                     i2u1124_40 26DC  
                                   i2u1116_40 2654                                     i2u1108_40 25CC  
                                   i2u1132_41 275C                                     i2u1124_41 26D8  
                                   i2u1116_41 2650                                     i2u1108_41 25C8  
                                   i2u1125_40 26EA                                     i2u1117_40 2662  
                                   i2u1109_40 25DA                                     i2u1125_41 26E6  
                                   i2u1117_41 265E                                     i2u1109_41 25D6  
                                   i2u1054_40 3E5A                                     i2u1126_40 26FA  
                                   i2u1118_40 2672                                     i2u1038_41 550A  
                                   i2u1054_41 3E56                                     i2u1126_41 26F6  
                                   i2u1118_41 266E                                     i2u1039_40 5318  
                                   i2u1070_48 5D62                                     i2u1071_40 5CFE  
                                   i2u1127_40 2712                                     i2u1119_40 268A  
                                   i2u1039_41 5314                                     i2u1055_41 3E64  
                                   i2u1070_49 5D74                                     i2u1071_41 5CFA  
                                   i2u1127_41 270E                                     i2u1119_41 2686  
                                   i2u1056_40 3E80                                     i2u1128_40 2720  
                                   i2u1056_41 3E7C                                     i2u1128_41 271C  
                                   i2u1072_48 5D04                                     i2u1129_40 2732  
                                   i2u1072_49 5D16                                     i2u1129_41 272E  
                                   i2u1090_40 24A0                                     i2u1090_41 249C  
                                   i2u1067_40 5D8A                                     i2u1091_40 24B2  
                                   i2u1067_41 5D86                                     i2u1091_41 24AE  
                                   i2u1092_40 24C0                         ?_I2C_MasterDisableIrq 0001  
                                   i2u1092_41 24BC                                     i2u1068_48 5D90  
                                   i2u1069_40 5D5C                                     i2u1093_40 24D2  
                                   i2u1068_49 5DA2                                     i2u1069_41 5D58  
                                   i2u1093_41 24CE                                     i2u1094_40 24E0  
                                   i2u1094_41 24DC                                     i2u1095_40 24F2  
                                   i2u1095_41 24EE                                     i2u1096_40 2500  
                                   i2u1096_41 24FC                                     i2u1097_40 250E  
                                   i2u1089_40 2492                                     i2u1097_41 250A  
                                   i2u1089_41 248E                                     i2u1098_40 251E  
                                   i2u1098_41 251A                          ?_gpio_pin_input_init 0080  
                                   i2u1099_40 2536                                     i2u1099_41 2532  
                      ?_wr1RegCompleteHandler 0080                      fp__rd2RegCompleteHandler 0000  
                    _gpio_pin_output_low_init 50CE                             __end_of_vfpfcnvrt 2C40  
                                   _RCSTAbits 000FAB               __end_of_convert_uint8_to_string 57A4  
                                     postdec1 000FE5                                       postdec2 000FDD  
                     ??_I2C_Read1ByteRegister 0031                        __end_of_I2C_MasterOpen 6012  
                    fp__wr2RegCompleteHandler 0000                                       postinc0 000FEE  
                                     postinc1 000FE6                                       postinc2 000FDE  
                      __end_of_I2C_MasterStop 63AA                        __end_of_I2C_Initialize 61F8  
                  ?_INT0_set_InterruptHandler 0027                         ?_EUSART_ASYNC_RX_Init 0027  
                   i2_I2C_MasterEnableRestart 63D6                                    ??_vfprintf 0031  
                   fp__I2C_CallbackReturnStop 0000                         ?_EUSART_ASYNC_TX_Init 0027  
                       ?_select_result_format 0001                                       strlen@a 0029  
                                     strlen@s 0027              ADC_StartConversion_Interrupt@ret 002F  
             __end_ofi2_rd2RegCompleteHandler 5E82                         _INT1_InterruptHandler 0035  
                    __end_ofi2_I2C_MasterOpen 6034                                     _PORTBbits 000F81  
                    __end_ofi2_I2C_MasterStop 63D6               __end_of_rdBlkRegCompleteHandler 58E4  
                  i2I2C_MasterSendTxData@data 0001                          _I2C_MasterSendTxData 6332  
                             fp__I2C_DO_RESET 0000                              _InterruptManager 0008  
             __end_ofi2_wr2RegCompleteHandler 5EDA                                   ___fladd@grs 00AE  
              __end_of_lcd_send_char_data_pos 4F76                          lcd_init@pins_counter 0094  
               _I2C_DO_SEND_RESTART$intlevel0 6272                                 ___xxtofl@sign 0080  
                 ?_I2C_SetAddressNackCallback 002C                    i2wr2RegCompleteHandler@ptr 000A  
                                   _TRISCbits 000F94                             i2_I2C_MasterClose 63E2  
                             i2_I2C_DO_RX_ACK 6352                           _ADC_StartConversion 5FA8  
                           i2I2C_Open@address 0001                                   ___fldiv@grs 0099  
                                 ___fldiv@rem 0092                             i2_I2C_MasterStart 63DA  
                           i2_I2C_MasterWrite 633A                            lcd_send_string@lcd 008F  
                     ??i2_I2C_DO_RX_NACK_STOP 0001                            lcd_send_string@ret 0095  
                          lcd_send_string@str 0091                            ?i2_I2C_MasterClose 0001  
                   _INT1_set_InterruptHandler 5F30              __end_ofi2_I2C_CallbackReturnStop 63D2  
                          ?i2_I2C_MasterStart 0001                            ?i2_I2C_MasterWrite 0001  
            gpio_pin_output_low_init@gpio_ret 0083                         lcd_set_curser@lcd_ret 0096  
                                 _I2C_DO_IDLE 61CE              __end_of_interrupt_INTx_edge_init 3AB2  
                                 _I2C_DO_RCEN 61B8                       i2_rd1RegCompleteHandler 5E82  
                  rdBlkRegCompleteHandler@ptr 0080                    fp_i2_rd1RegCompleteHandler 0000  
                               _hours_counter 0048                 I2C_Write1ByteRegister@address 0030  
             i2I2C_Write1ByteRegister@address 0014                         ??_gpio_pin_input_init 0082  
                                   _TXSTAbits 000FAC                        _interrupt_INTx_disable 4FEA  
                         ??i2_I2C_MasterClose 0001                       i2_wr1RegCompleteHandler 5E2A  
                  fp_i2_wr1RegCompleteHandler 0000                       ?_I2C_CallbackReturnStop 0080  
                         ??i2_I2C_MasterStart 0001                      fp_i2_I2C_DO_SEND_RESTART 0000  
                 ?i2_I2C_DO_SEND_RESTART_READ 0001                      _I2C_DO_SEND_RESTART_READ 628C  
                         ??i2_I2C_MasterWrite 0012                   fp__I2C_DO_SEND_RESTART_READ 0000  
                        ?_ADC_StartConversion 0027                   ??i2_rdBlkRegCompleteHandler 000C  
                           i2_I2C_SetCallback 4E84                  I2C_CallbackReturnStop@funPtr 0080  
                             ?_I2C_MasterOpen 0001                      EUSART_ASYNC_Init@_eusart 00BB  
                             ?_I2C_MasterStop 0001                               ?_I2C_Initialize 0001  
               convert_uint16_to_string@F3167 010C                    ?i2_I2C_CallbackReturnReset 000A  
                     _I2C_CallbackReturnReset 62DC                      I2C_Read1ByteRegister@reg 0030  
                  fp__I2C_CallbackReturnReset 0000                       _gpio_pin_direction_init 3834  
                          ?i2_I2C_SetCallback 0001                                   vfpfcnvrt@ap 00B9  
                                 vfpfcnvrt@fp 00B5                                   vfpfcnvrt@ll 00BD  
           __end_of_INT0_set_InterruptHandler 5F84               ??i2_I2C_SetDataCompleteCallback 000A  
                                 _BAUDCONbits 000FB8                             ??_lcd_send_enable 0031  
                               __pidataCOMRAM 62CE       adc_input_channel_port_configure@channel 0029  
           ADC_StartConversion_Interrupt@_adc 0080                         ?_I2C_MasterSendTxData 0001  
                              __end_of_memset 3420                   ??_I2C_DO_SEND_RESTART_WRITE 0027  
                   __end_ofi2_I2C_MasterClose 63E6                  ?_configure_voltage_reference 0001  
                           ??_lcd_send_string 0031                           ??i2_I2C_SetCallback 0005  
                              __end_of_strlen 5BAC                           start_initialization 4B18  
                                 ?_buzzer_off 0080                     __end_ofi2_I2C_MasterStart 63DE  
                   __end_ofi2_I2C_MasterWrite 6342           EUSART_Baud_Rate_Calculation@_eusart 00AF  
                         _interrupt_INTx_init 4D90                                   __end_of_abs 5A86  
                                 __end_of_pad 4182                                 ?_I2C_DO_RESET 0001  
                  convert_int_to_BCD@h_nipple 000D           interrupt_INTx_clear_flag@_interrupt 0027  
    ADC_GetConversionResult@conversion_result 0003                                 ??i2_I2C_DO_RX 000C  
                               ??i2_I2C_DO_TX 000C                                   ??_I2C_DO_RX 0082  
                                 ??_I2C_DO_TX 0082                      ?_interrupt_INTx_pin_init 0085  
                           ??_I2C_MasterClose 0027                    convert_int_to_BCD@l_nipple 000C  
                                i2_I2C_Poller 6052          __end_of_EUSART_Baud_Rate_Calculation 1BF4  
                _EUSART_Baud_Rate_Calculation 16E0                                 ??i2_I2C_Close 0001  
                      ??_I2C_MasterDisableIrq 0027                                   ??_I2C_Close 0027  
                           ??_I2C_MasterStart 0027                     _EUSART_RxInterruptHandler 011A  
                           ??_I2C_MasterWrite 0030                              _lcd_send_command 4A08  
              __end_of_I2C_CallbackReturnStop 62F8                     ?i2_I2C_DO_RX_NACK_RESTART 0001  
                      _I2C_DO_RX_NACK_RESTART 6220                              ?_I2C_DO_TX_EMPTY 0001  
                 gpio_pin_input_init@gpio_ret 0083                               buzzer_on@buzzer 0080  
                          _I2C_MasterClearIrq 63BA                         ADC_SelectChannel@_adc 002A  
        ADC_StartConversion_Interrupt@channel 0082                         lcd_send_number@number 004A  
                   __end_ofi2_I2C_SetCallback 4EFE                                 fp__MY_ADC_ISR 0000  
               lcd_send_char_data_pos@lcd_ret 009D                         ??_ADC_StartConversion 0029  
                        ?_interrupt_INTx_init 0088                                   vfprintf@fmt 0197  
                  _EUSART_FramingErrorHandler 0118                        ??_EUSART_ASYNC_RX_Init 0029  
                      ??_EUSART_ASYNC_TX_Init 0029                        ??_select_result_format 0027  
                         ?_I2C_MasterClearIrq 0001                   __end_of_I2C_MasterGetRxData 63A2  
                   lcd_send_number_pos@column 01B3                                   __pdataBANK0 00FE  
                                 __pdataBANK1 014E                         __end_of_I2C_DO_RX_ACK 6256  
           __end_ofi2_I2C_CallbackReturnReset 63CE                                      ?_ADC_ISR 0001  
                                    ??_memset 002D                     fp_i2_I2C_DO_SEND_ADR_READ 0000  
                       __end_of_EUSART_RX_ISR 63F4                         __end_of_EUSART_TX_ISR 63EE  
                   lcd_send_number_pos@number 00FD                              _I2C_DO_SEND_STOP 6256  
                                  memset@dest 0027                             ??_I2C_SetCallback 002B  
                     __end_ofi2_I2C_DO_RX_ACK 635A                           I2C_Open@returnValue 0028  
                     ADC_StartConversion@_adc 0027                            _I2C_MasterSendNack 6388  
                                    ??_strlen 0029                      ?_I2C_MasterEnableRestart 0001  
                                   ___fladd@a 00A3                                     ___fladd@b 009F  
                           _i2c_fsmStateTable 1001                        fp__I2C_DO_SEND_RESTART 0000  
                             i2_I2C_MasterFsm 5222                                     ___fldiv@a 008A  
                                   ___fldiv@b 0086                              ??i2_I2C_DO_RESET 0001  
                                    ?_RB4_ISR 0001                                      ?_RB5_ISR 0001  
                 lcd_send_number_pos@gpio_ret 01B5                                      ?_RB6_ISR 0001  
                       _I2C_DO_SEND_ADR_WRITE 6142                                      ?_RB7_ISR 0001  
                                ?__Initialize 0001                                   __pbssCOMRAM 0031  
                      lcd_send_char_data@data 008B                     lcd_send_char_data@lcd_ret 008D  
                   i2_rdBlkRegCompleteHandler 5A86                                 __pcstackBANK0 0080  
                               __pcstackBANK1 0195                 ??_configure_voltage_reference 0027  
                              ??_I2C_DO_RESET 0027                              ___aodiv@dividend 0080  
                         ?_I2C_MasterSendNack 0001                  convert_uint8_to_string@value 00C7  
                  lcd_send_string_pos@lcd_ret 009E                               i2_I2C_SetBuffer 5FCC  
                                   _adc_value 0047                  __end_of_I2C_DO_SEND_ADR_READ 60C2  
                        ??_I2C_MasterClearIrq 0027                   __end_of_I2C_DO_ADDRESS_NACK 51B2  
                 ADC_GetConversionResult@_adc 0001                     ??i2_rd1RegCompleteHandler 000C  
                     ??_interrupt_INTx_enable 0029                           buzzer_init@gpio_ret 0087  
                   ??i2_wr1RegCompleteHandler 000C                              _I2C_MasterIsNack 61F8  
                 lcd_send_custom_char@counter 0040                 __end_ofi2_I2C_MasterGetRxData 63C6  
                ?i2_I2C_DO_SEND_RESTART_WRITE 0001                     _I2C_DO_SEND_RESTART_WRITE 627A  
                       __end_ofi2_I2C_DO_IDLE 632A                         _INT2_InterruptHandler 00F8  
                       __end_ofi2_I2C_DO_RCEN 631E                              _I2C_MasterSetIrq 639A  
               ?_EUSART_Baud_Rate_Calculation 00AF                 interrupt_INTx_init@_interrupt 0088  
                               ??_buzzer_init 0031                   ??_interrupt_INTx_clear_flag 0029  
                       _rd2RegCompleteHandler 5BE2                      i2_I2C_CallbackReturnStop 63CE  
           select_result_format@result_format 0027                    ??i2_I2C_MasterWaitForEvent 0001  
                 fp_i2_I2C_CallbackReturnStop 0000                         ??_interrupt_INTx_init 0031  
                __end_of_gpio_pin_logic_write 3834                           __end_ofi2_I2C_DO_RX 47D0  
                         __end_ofi2_I2C_DO_TX 4246                       ?i2_I2C_DO_SEND_ADR_READ 0001  
                       _wr2RegCompleteHandler 5C4E                     ??_I2C_CallbackReturnReset 0030  
                                   _dtoa$3844 00A3                                   _day_counter 0058  
                   ??_gpio_pin_direction_init 002A                   __end_of_I2C_MasterOperation 5974  
                        ??_I2C_MasterSendNack 0027                      rd2RegCompleteHandler@ptr 0080  
                         __end_ofi2_I2C_Close 5F06                                     __pintcode 0008  
    __end_of_adc_input_channel_port_configure 3D72            ??_adc_input_channel_port_configure 0027  
           ?_adc_input_channel_port_configure 0001              _adc_input_channel_port_configure 3C9A  
                           _ADC_SelectChannel 5B3C                    ??i2_I2C_Write1ByteRegister 0014  
                                    ?___aodiv 0080                                      ?___fladd 009F  
                                    ?___aomod 0080                                      ?___fldiv 0086  
                                    ?___awdiv 0001                                     __ptext100 63A6  
                                   __ptext101 63AA                                     __ptext110 3C9A  
                                   __ptext102 63AE                              ___aodiv@quotient 0029  
                                   __ptext103 5DFE                                     __ptext120 3E4A  
                                   __ptext112 60C2                                     __ptext104 63B2  
                                   __ptext121 5D18                                     __ptext113 60DC  
                                   __ptext105 63B6                                     __ptext130 6052  
                                   __ptext122 54AC                                     __ptext114 60F6  
                                   __ptext106 63BA                                     __ptext131 62AE  
                                   __ptext123 4F76                                     __ptext115 6110  
                                   __ptext107 5B02                                     __ptext140 636A  
                                   __ptext132 5222                                     __ptext124 5300  
                                   __ptext116 5CE8                                     __ptext108 5FA8  
                                   __ptext141 6372                    __end_ofi2_I2C_DO_SEND_STOP 6362  
                                   __ptext133 557A                                     __ptext125 6172  
                                   __ptext117 5D48                                     __ptext109 5B3C  
                                   __ptext150 620C                                     __ptext142 6312  
                                   __ptext134 6306                                     __ptext126 48F2  
                                   __ptext118 5D76                                     __ptext151 637A  
                                   __ptext143 472A                                     __ptext135 6342  
                                   __ptext127 6012                                     __ptext119 3D72  
                                   __ptext160 5E56                                     __ptext152 638E  
                                   __ptext144 4182                                     __ptext136 634A  
                                   __ptext128 633A                                     __ptext161 5E82  
                                   __ptext153 63C2                                     __ptext145 62F8  
                                   __ptext137 6352                                     __ptext129 5A02  
                                   __ptext170 63DE                                     __ptext162 5EAE  
                                   __ptext154 6394                                     __ptext146 62BE  
                                   __ptext138 635A                                     __ptext171 63E2  
                                   __ptext163 618A                                     __ptext155 63C6  
                                   __ptext147 631E                                     __ptext139 6362  
                                   __ptext180 608C                                     __ptext172 63E6  
                                   __ptext164 4E84                                     __ptext156 63CA  
                                   __ptext148 4D14                                     __ptext181 430A  
                                   __ptext173 2DF8                                     __ptext165 5FCC  
                                   __ptext157 63CE                                     __ptext149 63BE  
                                   __ptext182 0000                                     __ptext174 4526  
                                   __ptext166 63D2                                     __ptext158 5A86  
                                   __ptext175 4246                                     __ptext167 63D6  
                                   __ptext159 5E2A                                     __ptext176 63EA  
                                   __ptext168 63DA                                     __ptext177 63F2  
                                   __ptext169 5EDA                                     __ptext178 5DA4  
                                   __ptext179 6070                                      ?___awmod 0001  
                                    ?___fltol 0027                 fp_i2_I2C_DO_SEND_RESTART_READ 0000  
              i2I2C_Read1ByteRegister@address 0013                            ?_ADC_SelectChannel 002A  
                      ??_I2C_MasterSendTxData 0027                           lcd_send_command@lcd 0089  
                   __end_of_i2c_fsmStateTable 1021                           lcd_send_command@ret 008E  
               __end_ofi2_I2C_DO_ADDRESS_NACK 55E0                                  fp__I2C_DO_RX 0000  
                                fp__I2C_DO_TX 0000                     ?_interrupt_INTx_edge_init 0027  
                           lcd_send_nbits@lcd 0080                             lcd_send_nbits@ret 0087  
                                 __smallconst 1000  configure_voltage_reference@voltage_reference 0027  
       __end_ofi2_I2C_SetDataCompleteCallback 61A2                 i2_I2C_SetDataCompleteCallback 618A  
                     I2C_MasterOperation@read 0086                                      _I2C_Open 4864  
                         ??_ADC_SelectChannel 002D                                      _ADC_Init 3BB8  
                   _RB4_InterruptHandler_high 00F6                                  _mode_counter 00FB  
                INT2_set_InterruptHandler@ret 0029                     lcd_send_char_data_pos@lcd 0097  
                   _RB7_InterruptHandler_high 012C                     lcd_send_char_data_pos@ret 009E  
                   lcd_send_char_data_pos@row 0099                                      ?_sprintf 019B  
                  __end_ofi2_I2C_MasterIsNack 6220                       ??_rd1RegCompleteHandler 0030  
               __end_ofi2_I2C_MasterOperation 5A46                                 _month_counter 0057  
                  __end_ofi2_I2C_MasterSetIrq 63C2                    ??_gpio_pin_output_low_init 0082  
                     ??_wr1RegCompleteHandler 0030                                     _buzzer_on 569E  
          interrupt_INTx_edge_init@_interrupt 0027                                      _INT0_ISR 5D76  
                                    _INT1_ISR 5D48                                      _INT2_ISR 5CE8  
                                    _RB4_Flag 004E                                      _RB5_Flag 004D  
                       i2_I2C_DO_SEND_RESTART 6362                                      _RB6_Flag 004C  
                                    _RB7_Flag 004B                      _RB5_InterruptHandler_low 00F0  
                           RB4_ISR@RB4_Source 0001                      __end_of_InterruptManager 2798  
              __end_ofi2_I2C_DO_SEND_ADR_READ 62CE                                      _PIE1bits 000F9D  
               ??i2_I2C_DO_SEND_RESTART_WRITE 0001                            _convert_int_to_BCD 2DF8  
                   __end_of_ADC_SelectChannel 5B76                                      i2u502_40 6020  
                                    i2u502_41 601C                                      i2u600_40 45A0  
                                    i2u600_41 459C                                      i2u601_40 45C4  
                                    i2u601_41 45C0                                      _PIR1bits 000F9E  
                                    _PIR2bits 000FA1                                      i2u700_40 3E32  
                                    i2u700_41 3E2E                                      i2u517_40 5EEE  
                                    i2u701_40 3E44                                      i2u517_41 5EEA  
                                    i2u701_41 3E40                                      i2u702_40 5D32  
                                    i2u702_41 5D2E                                      i2u640_40 434C  
                                    i2u448_40 62BC                                      i2u640_41 4348  
                                    i2u448_41 62B8                                      i2u641_40 438E  
                                    i2u713_40 5DB8                                      i2u721_40 6124  
                                    i2u641_41 438A                                      i2u713_41 5DB4  
                                    i2u721_41 6120                                      i2u722_40 610A  
                                    i2u722_41 6106                                      i2u642_45 43A6  
                                    i2u714_48 5DBE                                      i2u723_40 60F0  
                                    i2u714_49 5DD0                                      i2u723_41 60EC  
                                    i2u724_40 60D6                                      i2u724_41 60D2  
                                    i2u638_40 431C                                      i2u590_40 4258  
                                    i2u638_41 4318                                      i2u590_41 4254  
                                    i2u639_40 432E                                      i2u591_40 4272  
                                    i2u911_40 5A18                                      i2u639_41 432A  
                                    i2u591_41 426E                                      i2u911_41 5A14  
                                    i2u592_40 4298                                      i2u912_40 5A2E  
                                    i2u592_41 4294                                      i2u912_41 5A2A  
                                    i2u665_40 609C                                      i2u593_40 42B6  
                                    i2u841_40 621C                                      i2u665_41 6098  
                                    i2u593_41 42B2                                      i2u841_41 6216  
                                    i2u841_46 621E                                      i2u594_40 42D2  
                                    i2u850_40 4756                                      i2u594_41 42CE  
                                    i2u850_41 4752                                      i2u595_40 42F8  
                                    i2u595_41 42F4                                      i2u596_40 4538  
                                    i2u851_48 4784                                      i2u692_40 3D82  
                                    i2u596_41 4534                                      i2u851_49 4796  
                                    i2u692_41 3D7E                            buzzer_off@gpio_ret 0082  
                                    i2u597_40 4552                                      i2u852_48 4D44  
                                    i2u693_40 3D94                                      i2u597_41 454E  
                                    i2u852_49 4D56                                      i2u693_41 3D90  
                                    i2u598_40 456C                                      i2u838_40 4E98  
                                    i2u853_48 55A4                                      i2u926_40 4908  
                                    i2u694_40 3DAE                                      i2u598_41 4568  
                                    i2u838_41 4E94                                      i2u853_49 55B6  
                                    i2u926_41 4904                                      i2u694_41 3DAA  
                                    i2u599_40 458A                                      i2u839_40 5FDC  
                                    i2u847_40 4196                                      i2u695_40 3DC0  
                                    i2u599_41 4586                                      i2u839_41 5FD8  
                                    i2u847_41 4192                                      i2u695_41 3DBC  
                                    i2u696_40 3DDA                                      i2u696_41 3DD6  
                                    i2u849_40 423C                                      i2u848_48 41C0  
                                    i2u857_40 5236                                      i2u697_40 3DEC  
                                    i2u849_41 4238                                      i2u848_49 41D4  
                                    i2u857_41 5232                                      i2u697_41 3DE8  
                                    i2u858_40 524A                                      i2u698_40 3E06  
                                    i2u858_41 5246                                      i2u698_41 3E02  
                                    i2u699_40 3E18                                      i2u699_41 3E14  
                                    i2u859_48 527A                                      i2u859_49 528C  
                                    i2u885_40 606E                                      i2u885_41 606A  
                       __end_of_I2C_MasterFsm 5222               ??_ADC_StartConversion_Interrupt 002F  
                 __end_of_I2C_DO_RX_NACK_STOP 6244               __end_of_I2C_MasterEnableRestart 63AE  
                     __end_ofi2_I2C_MasterFsm 5292                           __end_of_buzzer_init 57F8  
                         ?_convert_int_to_BCD 0009                                fp__I2C_DO_IDLE 0000  
                 ??_INT0_set_InterruptHandler 0029                                fp__I2C_DO_RCEN 0000  
               __end_of_I2C_Read1ByteRegister 4D14                                     _vfpfcnvrt 2A7C  
                 interrupt_INTx_edge_init@ret 002B                         __end_of_I2C_SetBuffer 5FA8  
                                  _ADCON0bits 000FC2                                    _ADCON1bits 000FC1  
                                  _ADCON2bits 000FC0                              ?i2_I2C_DO_RX_ACK 0001  
                      ?_I2C_DO_SEND_ADR_WRITE 0001                       __end_ofi2_I2C_SetBuffer 5FF0  
                   _interrupt_INTx_clear_flag 505C                             ?i2_I2C_MasterOpen 0001  
                           ?i2_I2C_MasterStop 0001                      ADC_SelectChannel@channel 002C  
                    ??i2_I2C_MasterDisableIrq 0001                      I2C_MasterSendTxData@data 0027  
                    ?_convert_uint8_to_string 01AE                            ??i2_I2C_MasterOpen 0001  
                          ??i2_I2C_MasterStop 0001               __end_of_gpio_pin_direction_init 3986  
                    wr2RegCompleteHandler@ptr 0080                                   _INTCON2bits 000FF1  
                                 _INTCON3bits 000FF0                          ??_convert_int_to_BCD 000B  
                  ??_I2C_DO_SEND_RESTART_READ 0027                                     copy_data0 4B2C  
                                   copy_data1 4B64                      ?_rdBlkRegCompleteHandler 0080  
                   i2I2C_SetBuffer@bufferSize 0003                       ?_interrupt_INTx_disable 0027  
                                  _I2C_Poller 6034                 __end_ofi2_I2C_DO_RX_NACK_STOP 6352  
                                  ?_buzzer_on 0080                                   i2_I2C_DO_RX 472A  
                                 i2_I2C_DO_TX 4182                                    _I2C_Status 00C8  
                                ?_I2C_DO_IDLE 0001                                  ?_I2C_DO_RCEN 0001  
            _RTC1307@RealTimeClockDS1307$F399 0106                        ?_rd2RegCompleteHandler 0080  
                                 i2_I2C_Close 5EDA               interrupt_INTx_enable@_interrupt 0027  
              lcd_send_char_data_pos@gpio_ret 009C                              ??_I2C_MasterOpen 0027  
                   _I2C_DO_TX_EMPTY$intlevel0 4A9A                               _lcd_send_enable 5AC6  
                i2I2C_Write1ByteRegister@data 0013                        ?_wr2RegCompleteHandler 0080  
                            ??_I2C_MasterStop 0027                      ??_I2C_MasterWaitForEvent 0027  
                            ??_I2C_Initialize 0027                      ?i2_I2C_Read1ByteRegister 0012  
                   fp__I2C_DO_RX_NACK_RESTART 0000               _wr2RegCompleteHandler$intlevel0 5C58  
             _rd2RegCompleteHandler$intlevel0 5BEC                                      __Hrparam 0000  
        gpio_pin_direction_init@pin_direction 0029              interrupt_INTx_disable@_interrupt 0027  
                                  vfprintf@ap 0199                                      __Lrparam 0000  
                                  vfprintf@fp 0195                      ?_ADC_GetConversionResult 0001  
      EUSART_ASYNC_WriteByteNonBlocking@_data 0001                          __end_of_I2C_DO_RESET 61B8  
              ??_EUSART_Baud_Rate_Calculation 00B1                      ??_I2C_Write1ByteRegister 0030  
                             _lcd_send_string 45D6                   EUSART_ASYNC_RX_Init@_eusart 0027  
                  lcd_send_number_pos@lcd_ret 01B6                      lcd_send_command@gpio_ret 008C  
                 ??i2_I2C_CallbackReturnReset 000C                             RB6_ISR@RB6_Source 0001  
                         _lcd_send_number_pos 584A                    ?_INT2_set_InterruptHandler 0027  
                        _I2C_DO_SEND_ADR_READ 60A8                 _I2C_SlaveAddrInterruptHandler 0122  
                  lcd_send_number_pos@counter 003C                          lcd_send_number_pos@i 003D  
                                  ?_vfpfcnvrt 00B5             _I2C_CallbackReturnReset$intlevel0 62E6  
                       fp_i2_I2C_DO_SEND_STOP 0000                               ___aodiv@divisor 0088  
                             ___aodiv@counter 0027            i2I2C_Read1ByteRegister@returnValue 0014  
            I2C_Read1ByteRegister@returnValue 0089                       i2_I2C_DO_SEND_ADR_WRITE 62F8  
                __end_ofi2_I2C_MasterClearIrq 63EA                    fp_i2_I2C_DO_SEND_ADR_WRITE 0000  
                    __end_of_lcd_send_command 4A90                               _I2C_MasterClose 63B6  
               I2C_SetAddressNackCallback@ptr 002E               i2I2C_SetAddressNackCallback@ptr 0008  
                  __end_of_convert_BCD_to_int 311E                                    sprintf@fmt 019D  
                             I2C_Open@address 0027                                      ___xxtofl 2C40  
                                ??_buzzer_off 0031              __end_ofi2_I2C_DO_RX_NACK_RESTART 634A  
              _I2C_SlaveWrColInterruptHandler 011E                           fp__I2C_DO_SEND_STOP 0000  
                        i2I2C_SetCallback@idx 0005                               _I2C_MasterStart 63AE  
                        i2I2C_SetCallback@ptr 0003                               _I2C_MasterWrite 632A  
                    fp_i2_I2C_DO_ADDRESS_NACK 0000                i2I2C_CallbackReturnStop@funPtr 000A  
                        _gpio_pin_logic_write 36E2                               fp__APP_INT0_ISR 0000  
                             fp__APP_INT1_ISR 0000                               fp__APP_INT2_ISR 0000  
                                    __ptext10 5B76                                      __ptext11 58E4  
                                    __ptext20 4980                                      __ptext12 3FF0  
                                    __ptext21 2F8C                                      __ptext13 63F0  
                                    __ptext30 5C84                                      __ptext22 569E  
                                    __ptext14 5A46                                      __ptext31 5642  
                                    __ptext23 56F6                                      __ptext15 3420  
                                    __ptext40 57A4                                      __ptext32 4B9E  
                                    __ptext24 5514                                      __ptext16 311E  
                                    __ptext41 50CE                                      __ptext33 3986  
                                    __ptext25 3586                                      __ptext17 32A8  
                                    __ptext50 1BF4                                      __ptext42 36E2  
                                    __ptext34 4FEA                                      __ptext26 4A08  
                                    __ptext18 4EFE                                      __ptext51 4476  
                                    __ptext43 3834                                      __ptext35 505C  
                                    __ptext27 55E0                                      __ptext19 53DA  
                                    __ptext60 4864                                      __ptext52 47D0  
                                    __ptext44 61E4                                      __ptext36 4680  
                                    __ptext28 5AC6                                      __ptext61 5FF0  
                                    __ptext53 3BB8                                      __ptext45 59BC  
                                    __ptext37 5F06                                      __ptext29 4D90  
                                    __ptext70 6232                                      __ptext62 632A  
                                    __ptext54 5DD2                                      __ptext46 16E0  
                                    __ptext38 5F30                                      __ptext71 6244  
                                    __ptext63 592C                                      __ptext55 5CB8  
                                    __ptext47 2C40                                      __ptext39 5F5A  
                                    __ptext80 60A8                                      __ptext72 6256  
                                    __ptext64 6034                                      __ptext56 5444  
                                    __ptext48 3AB2                                      __ptext81 61CE  
                                    __ptext73 6268                                      __ptext65 629E  
                                    __ptext57 4C98                                      __ptext49 20B6  
                                    __ptext90 62DC                                      __ptext82 4A90  
                                    __ptext74 627A                                      __ptext66 51B2  
                                    __ptext58 5292                                      __ptext91 62EA  
                                    __ptext83 639A                                      __ptext75 628C  
                                    __ptext67 5140                                      __ptext59 612A  
                                    __ptext92 5898                                      __ptext84 61F8  
                                    __ptext76 61B8                                      __ptext68 61A2  
                                    __ptext93 5BAC                                      __ptext85 6332  
                                    __ptext77 43C4                                      __ptext69 6220  
                                    __ptext94 5BE2                                      __ptext86 6382  
                                    __ptext78 3F20                                      __ptext95 5C18  
                                    __ptext87 639E                                      __ptext79 6142  
                                    __ptext96 5C4E                                      __ptext88 6388  
                                    __ptext97 615A                                      __ptext89 63A2  
                                    __ptext98 4E0A                                      __ptext99 5F84  
              __end_of_interrupt_INTx_disable 505C                   __end_of_gpio_pin_input_init 569E  
                                    _lcd_init 3586                     _INT0_set_InterruptHandler 5F5A  
         __end_of_I2C_SetDataCompleteCallback 6172                ?i2_I2C_SetDataCompleteCallback 0006  
                 _I2C_SetDataCompleteCallback 615A                          ?_lcd_send_number_pos 01B0  
                     ?_I2C_DO_RX_NACK_RESTART 0001                  __end_ofi2_I2C_MasterSendNack 639A  
                      ?i2_I2C_DO_SEND_RESTART 0001                      __end_of_I2C_DO_SEND_STOP 6268  
                    ??i2_I2C_MasterSendTxData 0001                       i2_rd2RegCompleteHandler 5E56  
                  fp_i2_rd2RegCompleteHandler 0000                    lcd_send_char_data@gpio_ret 008C  
            _I2C_DO_RX_NACK_RESTART$intlevel0 622A                       i2_wr2RegCompleteHandler 5EAE  
                  fp_i2_wr2RegCompleteHandler 0000                                   _buzzer_init 57A4  
                             _I2C_SetCallback 4E0A                 ??_I2C_SetDataCompleteCallback 0030  
                  I2C_Write1ByteRegister@data 0089                                      _temp_var 00FA  
                         _lcd_send_string_pos 4C1C                                      isa$xinst 000000  
                          __end_of_buzzer_off 574E                                      int$flags 0059  
                       ?_I2C_DO_SEND_ADR_READ 0001                              ?i2_I2C_MasterFsm 0001  
                                    _vfprintf 536E                                _option_counter 003B  
           __end_of_INT2_set_InterruptHandler 5F30                      __end_of_I2C_MasterIsNack 620C  
       __end_of_ADC_StartConversion_Interrupt 5B3C                 _ADC_StartConversion_Interrupt 5B02  
                            ___aomod@dividend 0080                      __end_of_I2C_MasterSetIrq 639E  
                            ?i2_I2C_SetBuffer 0001                              lcd_init@gpio_ret 0093  
                                  _INTCONbits 000FF2                                    i2_I2C_Open 48F2  
                 i2I2C_Write1ByteRegister@reg 0012                         ?_gpio_pin_logic_write 0027  
                              _lcd_send_nbits 55E0                          ?_lcd_send_string_pos 0097  
                     lcd_send_command@command 008B                       lcd_send_command@lcd_ret 008D  
              __end_of_I2C_DO_RX_NACK_RESTART 6232                    ??i2_I2C_CallbackReturnStop 000C  
                       ??_lcd_send_number_pos 0031                             lcd_set_curser@lcd 008F  
                     gpio_pin_logic_write@pin 0027                       gpio_pin_logic_write@ret 0030  
                   i2_I2C_CallbackReturnReset 63CA                             lcd_set_curser@row 0091  
            __end_of_gpio_pin_output_low_init 5140                       __end_of_lcd_send_enable 5B02  
                              _lcd_set_curser 53DA                                      intlevel2 0000  
                                 ?_I2C_Poller 0001                                     sprintf@ap 01A1  
             __end_ofi2_I2C_Read1ByteRegister 4FEA                           i2I2C_SetCallback@cb 0001  
                                 ??_buzzer_on 0031                                 ?_APP_INT0_ISR 0001  
                               ?_APP_INT1_ISR 0001                                 ?_APP_INT2_ISR 0001  
                 __end_of_ADC_StartConversion 5FCC               _I2C_SlaveBusColInterruptHandler 0120  
               __end_of_interrupt_INTx_enable 4C1C                     _EUSART_TxInterruptHandler 011C  
                     __end_of_lcd_send_string 4680               __end_of_ADC_GetConversionResult 43C4  
                         _I2C_DO_SEND_RESTART 6268                     convert_int_to_BCD@BCD_num 0009  
                      fp__I2C_DO_ADDRESS_NACK 0000                      fp_i2_I2C_DO_RX_NACK_STOP 0000  
                     __end_of_I2C_MasterClose 63BA                     ??i2_I2C_DO_SEND_ADR_WRITE 0001  
                          fp__I2C_DO_TX_EMPTY 0000                               ___aomod@divisor 0088  
                    ??_lcd_send_char_data_pos 0031                                   ??_vfpfcnvrt 00BB  
                     __end_of_I2C_MasterStart 63B2                               ___aomod@counter 0027  
                     __end_of_I2C_MasterWrite 6332                          ?_I2C_DO_SEND_RESTART 0001  
                                    sprintf@f 01A3                                      sprintf@s 019B  
                      __end_of_lcd_send_nbits 5642                         ??_lcd_send_string_pos 0031  
                       _I2C_DO_IDLE$intlevel0 61D8                            i2_I2C_DO_SEND_STOP 635A  
                                _year_counter 0056                                   _SSPCON1bits 000FC6  
                                 _SSPCON2bits 000FC5                        __end_of_lcd_set_curser 5444  
                  gpio_pin_direction_init@pin 0027                    gpio_pin_direction_init@ret 0030  
                               ___fladd@signs 00AB                        i2I2C_Close@returnValue 0001  
                   ??i2_rd2RegCompleteHandler 000C                      i2_I2C_DO_RX_NACK_RESTART 6342  
                              ??_APP_INT0_ISR 001B                   fp_i2_I2C_DO_RX_NACK_RESTART 0000  
                              ??_APP_INT1_ISR 0001                                  ___aodiv@sign 0028  
                              ??_APP_INT2_ISR 0001                       __end_of_I2C_SetCallback 4E84  
                 __end_of_interrupt_INTx_init 4E0A                     ??i2_wr2RegCompleteHandler 000C  
                         ?i2_I2C_DO_SEND_STOP 0001                                    _MY_ADC_ISR 6070  
               __end_of_rd1RegCompleteHandler 5C4E                              fp__I2C_DO_RX_ACK 0000  
                                ___fladd@aexp 00AC                                  ___fladd@bexp 00AD  
               __end_of_wr1RegCompleteHandler 5BE2                        i2_I2C_MasterDisableIrq 63DE  
                       _MSSP_InterruptHandler 0128                          i2_I2C_MasterClearIrq 63E6  
                       i2_I2C_MasterGetRxData 63C2                             ?_InterruptManager 0001  
                                ___aomod@sign 0028                            i2_I2C_MasterIsNack 620C  
                  lcd_send_char_data_pos@data 009B                     convert_int_to_BCD@int_num 000B  
